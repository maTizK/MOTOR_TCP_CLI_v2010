   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"W5200.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	xSemaphoreDMASPI,4,4
  20              		.section	.bss.xHigherPriorityTaskWoken,"aw",%nobits
  21              		.align	2
  24              	xHigherPriorityTaskWoken:
  25 0000 00000000 		.space	4
  26              		.comm	xSmphrUSART,4,4
  27              		.comm	motorHeartBeatHandle,4,4
  28              		.comm	motorHBHandle,4,4
  29              		.comm	QSpd_handle,4,4
  30              		.comm	QStatus_handle,4,4
  31              		.comm	socket_0,4,4
  32              		.comm	bufferTX,2000,4
  33              		.comm	bufferRX,2000,4
  34              		.comm	bufferRXidx,4,4
  35              		.comm	bufferTXidx,4,4
  36              		.comm	dat_lengthRX,4,4
  37              		.comm	dat_lengthTX,4,4
  38              		.comm	set_macTaskHandle,4,4
  39              		.section	.rodata.RAMSIZE_TABLE,"a",%progbits
  40              		.align	2
  43              	RAMSIZE_TABLE:
  44 0000 00000000 		.word	0
  45 0004 00000000 		.word	0
  46 0008 00200000 		.word	8192
  47 000c 08000000 		.word	8
  48 0010 00200000 		.word	8192
  49 0014 08000000 		.word	8
  50 0018 00100000 		.word	4096
  51 001c 04000000 		.word	4
  52 0020 00100000 		.word	4096
  53 0024 04000000 		.word	4
  54 0028 00080000 		.word	2048
  55 002c 02000000 		.word	2
  56 0030 00080000 		.word	2048
  57 0034 02000000 		.word	2
  58 0038 00080000 		.word	2048
  59 003c 02000000 		.word	2
  60 0040 00080000 		.word	2048
  61 0044 02000000 		.word	2
  62              		.section	.bss.socket_table,"aw",%nobits
  63              		.align	2
  66              	socket_table:
  67 0000 00000000 		.space	64
  67      00000000 
  67      00000000 
  67      00000000 
  67      00000000 
  68              		.section	.bss.socket_flg,"aw",%nobits
  69              		.align	2
  72              	socket_flg:
  73 0000 00000000 		.space	8
  73      00000000 
  74              		.section	.rodata.socket_open_status,"a",%progbits
  75              		.align	2
  78              	socket_open_status:
  79 0000 00       		.byte	0
  80 0001 13       		.byte	19
  81 0002 22       		.byte	34
  82 0003 32       		.byte	50
  83 0004 42       		.byte	66
  84 0005 5F       		.byte	95
  85 0006 0000     		.section	.rodata
  86              		.align	2
  87              	.LC0:
  88 0000 DD       		.byte	-35
  89 0001 AA       		.byte	-86
  90 0002 BB       		.byte	-69
  91 0003 CC       		.byte	-52
  92 0004 11       		.byte	17
  93 0005 22       		.byte	34
  94 0006 0000     		.align	2
  95              	.LC1:
  96 0008 C0       		.byte	-64
  97 0009 A8       		.byte	-88
  98 000a 00       		.byte	0
  99 000b 08       		.byte	8
 100              		.align	2
 101              	.LC2:
 102 000c FF       		.byte	-1
 103 000d FF       		.byte	-1
 104 000e FF       		.byte	-1
 105 000f 00       		.byte	0
 106              		.align	2
 107              	.LC3:
 108 0010 C0       		.byte	-64
 109 0011 A8       		.byte	-88
 110 0012 00       		.byte	0
 111 0013 01       		.byte	1
 112              		.section	.text.init_W5200,"ax",%progbits
 113              		.align	2
 114              		.global	init_W5200
 115              		.thumb
 116              		.thumb_func
 118              	init_W5200:
 119              	.LFB110:
 120              		.file 1 "App/STM32F4-Discovery/W5200.c"
   1:App/STM32F4-Discovery/W5200.c **** /* W5200 Device Driver */
   2:App/STM32F4-Discovery/W5200.c **** 
   3:App/STM32F4-Discovery/W5200.c **** // $Id: W5200.c 6548 2014-01-16 14:09:04Z svn $
   4:App/STM32F4-Discovery/W5200.c **** 
   5:App/STM32F4-Discovery/W5200.c **** // Copyright (C)2013-2014, Philip Munts, President, Munts AM Corp.
   6:App/STM32F4-Discovery/W5200.c **** // All rights reserved.
   7:App/STM32F4-Discovery/W5200.c **** //
   8:App/STM32F4-Discovery/W5200.c **** // Redistribution and use in source and binary forms, with or without
   9:App/STM32F4-Discovery/W5200.c **** // modification, are permitted provided that the following conditions are met:
  10:App/STM32F4-Discovery/W5200.c **** //
  11:App/STM32F4-Discovery/W5200.c **** // * Redistributions of source code must retain the above copyright notice,
  12:App/STM32F4-Discovery/W5200.c **** //   this list of conditions and the following disclaimer.
  13:App/STM32F4-Discovery/W5200.c **** //
  14:App/STM32F4-Discovery/W5200.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  15:App/STM32F4-Discovery/W5200.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  16:App/STM32F4-Discovery/W5200.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  17:App/STM32F4-Discovery/W5200.c **** // ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
  18:App/STM32F4-Discovery/W5200.c **** // LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  19:App/STM32F4-Discovery/W5200.c **** // CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  20:App/STM32F4-Discovery/W5200.c **** // SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  21:App/STM32F4-Discovery/W5200.c **** // INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  22:App/STM32F4-Discovery/W5200.c **** // CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  23:App/STM32F4-Discovery/W5200.c **** // ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  24:App/STM32F4-Discovery/W5200.c **** // POSSIBILITY OF SUCH DAMAGE.
  25:App/STM32F4-Discovery/W5200.c **** 
  26:App/STM32F4-Discovery/W5200.c **** /*! \file W5200.c
  27:App/STM32F4-Discovery/W5200.c ****  *  \brief File for W5200.c wiznet functions 
  28:App/STM32F4-Discovery/W5200.c ****  *  Wiznet control, creating and closing sockets, sending, receiving data via sockets, etc... \n
  29:App/STM32F4-Discovery/W5200.c ****  */
  30:App/STM32F4-Discovery/W5200.c **** 
  31:App/STM32F4-Discovery/W5200.c **** #include "W5200.h"
  32:App/STM32F4-Discovery/W5200.c **** 
  33:App/STM32F4-Discovery/W5200.c **** /* This table abstracts the W5200 RAM size configuration for 1 to 8 sockets. */
  34:App/STM32F4-Discovery/W5200.c **** /* We divide available RAM equally amoung the number of configured sockets.  */
  35:App/STM32F4-Discovery/W5200.c **** /* We don't try to give unequal amounts of RAM to different sockets.         */
  36:App/STM32F4-Discovery/W5200.c **** 
  37:App/STM32F4-Discovery/W5200.c **** 
  38:App/STM32F4-Discovery/W5200.c **** static const struct
  39:App/STM32F4-Discovery/W5200.c **** {
  40:App/STM32F4-Discovery/W5200.c ****   uint32_t SIZE;
  41:App/STM32F4-Discovery/W5200.c ****   uint32_t CONFIG;
  42:App/STM32F4-Discovery/W5200.c **** } RAMSIZE_TABLE[W5200_MAX_SOCKETS+1] =
  43:App/STM32F4-Discovery/W5200.c **** {
  44:App/STM32F4-Discovery/W5200.c ****   { 0,			0				},
  45:App/STM32F4-Discovery/W5200.c **** // Does not work => { W5200_RAMSIZE,	W5200_RAMSIZE_CONFIG_WHOLE	},
  46:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/2,	W5200_RAMSIZE_CONFIG_HALF	},
  47:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/2,	W5200_RAMSIZE_CONFIG_HALF	},
  48:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/4,	W5200_RAMSIZE_CONFIG_QUARTER	},
  49:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/4,	W5200_RAMSIZE_CONFIG_QUARTER	},
  50:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/8,	W5200_RAMSIZE_CONFIG_EIGHTH	},
  51:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/8,	W5200_RAMSIZE_CONFIG_EIGHTH	},
  52:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/8,	W5200_RAMSIZE_CONFIG_EIGHTH	},
  53:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/8,	W5200_RAMSIZE_CONFIG_EIGHTH	},
  54:App/STM32F4-Discovery/W5200.c **** };
  55:App/STM32F4-Discovery/W5200.c **** 
  56:App/STM32F4-Discovery/W5200.c **** /* This table holds precalculated TX and RX RAM base addresses for */
  57:App/STM32F4-Discovery/W5200.c **** /* each socket.                                                    */
  58:App/STM32F4-Discovery/W5200.c **** 
  59:App/STM32F4-Discovery/W5200.c **** 
  60:App/STM32F4-Discovery/W5200.c **** static struct
  61:App/STM32F4-Discovery/W5200.c **** {
  62:App/STM32F4-Discovery/W5200.c ****   uint32_t TX_RAM_base;
  63:App/STM32F4-Discovery/W5200.c ****   uint32_t RX_RAM_base;
  64:App/STM32F4-Discovery/W5200.c **** } socket_table[W5200_MAX_SOCKETS];
  65:App/STM32F4-Discovery/W5200.c **** 
  66:App/STM32F4-Discovery/W5200.c **** static uint8_t socket_flg[W5200_MAX_SOCKETS];
  67:App/STM32F4-Discovery/W5200.c **** 
  68:App/STM32F4-Discovery/W5200.c **** 
  69:App/STM32F4-Discovery/W5200.c **** const static	uint8_t	socket_open_status[] = {
  70:App/STM32F4-Discovery/W5200.c **** 			W5200_Sn_SR_SOCK_CLOSED,	// mode is CLOSE
  71:App/STM32F4-Discovery/W5200.c **** 			W5200_Sn_SR_SOCK_INIT,	// mode is TCP
  72:App/STM32F4-Discovery/W5200.c **** 			W5200_Sn_SR_SOCK_UDP,	// mode is UDP
  73:App/STM32F4-Discovery/W5200.c **** 			W5200_Sn_SR_SOCK_IPRAW,	// mode is IPRAW
  74:App/STM32F4-Discovery/W5200.c **** 			W5200_Sn_SR_SOCK_MACRAW,	// mode is MACRAW
  75:App/STM32F4-Discovery/W5200.c **** 			W5200_Sn_SR_SOCK_PPPOE,	// mode is PPPOE
  76:App/STM32F4-Discovery/W5200.c **** 		};
  77:App/STM32F4-Discovery/W5200.c **** 
  78:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
  79:App/STM32F4-Discovery/W5200.c **** //===	func 	init_W5200							 ===//
  80:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
  81:App/STM32F4-Discovery/W5200.c **** 
  82:App/STM32F4-Discovery/W5200.c **** void init_W5200(void)
  83:App/STM32F4-Discovery/W5200.c **** {
 121              		.loc 1 83 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 40
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125 0000 80B5     		push	{r7, lr}
 126              	.LCFI0:
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 7, -8
 129              		.cfi_offset 14, -4
 130 0002 8AB0     		sub	sp, sp, #40
 131              	.LCFI1:
 132              		.cfi_def_cfa_offset 48
 133 0004 00AF     		add	r7, sp, #0
 134              	.LCFI2:
 135              		.cfi_def_cfa_register 7
  84:App/STM32F4-Discovery/W5200.c **** 
  85:App/STM32F4-Discovery/W5200.c **** 	/*! Initialize Wiznet module - setup MAC address, ip address, gateway, subnet, 		etc..\n
  86:App/STM32F4-Discovery/W5200.c ****  	* - Default settings:
  87:App/STM32F4-Discovery/W5200.c **** 	 *  	
  88:App/STM32F4-Discovery/W5200.c **** 	 *  +	mac address : dd:aa:bb:cc:11:22
  89:App/STM32F4-Discovery/W5200.c **** 	 *  +	ip address :  192.168.0.8
  90:App/STM32F4-Discovery/W5200.c **** 	 *  +	subnet 	:     255.255.255.0
  91:App/STM32F4-Discovery/W5200.c **** 	 *  +	gateway :     192.168.0.254 
  92:App/STM32F4-Discovery/W5200.c **** 	 *  +	Ping 	:	enable 
  93:App/STM32F4-Discovery/W5200.c **** 	 *  +	timeout   :	200 mili sec. 
  94:App/STM32F4-Discovery/W5200.c **** 	 *  +	retry count :	3 
  95:App/STM32F4-Discovery/W5200.c **** 	 *  +	TX memory size : 2kB 
  96:App/STM32F4-Discovery/W5200.c **** 	 *  +	RX memory size : 2kB 
  97:App/STM32F4-Discovery/W5200.c **** 	 *  +	IT masking :    0xff
  98:App/STM32F4-Discovery/W5200.c ****  	*
  99:App/STM32F4-Discovery/W5200.c ****  	*
 100:App/STM32F4-Discovery/W5200.c **** 	 *\n Create and listen on socket '0', port 80. 
 101:App/STM32F4-Discovery/W5200.c **** 	 *
 102:App/STM32F4-Discovery/W5200.c **** 	 * */
 103:App/STM32F4-Discovery/W5200.c **** 
 104:App/STM32F4-Discovery/W5200.c **** 
 105:App/STM32F4-Discovery/W5200.c **** 	// mac address
 106:App/STM32F4-Discovery/W5200.c **** 	uint8_t address[6] =	{0xdd, 0xaa, 0xbb, 0xcc, 0x11, 0x22}; 
 136              		.loc 1 106 0
 137 0006 584A     		ldr	r2, .L4
 138 0008 07F11803 		add	r3, r7, #24
 139 000c 1068     		ldr	r0, [r2]	@ unaligned
 140 000e 1860     		str	r0, [r3]	@ unaligned
 141 0010 9288     		ldrh	r2, [r2, #4]	@ unaligned
 142 0012 9A80     		strh	r2, [r3, #4]	@ unaligned
 107:App/STM32F4-Discovery/W5200.c **** 	
 108:App/STM32F4-Discovery/W5200.c **** 	// ip 
 109:App/STM32F4-Discovery/W5200.c **** 	const  uint8_t ip[4] = {0xc0, 0xa8, 0x0, 0x08};
 143              		.loc 1 109 0
 144 0014 554A     		ldr	r2, .L4+4
 145 0016 07F11403 		add	r3, r7, #20
 146 001a 1068     		ldr	r0, [r2]	@ unaligned
 147 001c 1860     		str	r0, [r3]	@ unaligned
 110:App/STM32F4-Discovery/W5200.c **** 	// subnet 
 111:App/STM32F4-Discovery/W5200.c **** 	const uint8_t subnet[4] = {0xff,0xff,0xff,0x0};
 148              		.loc 1 111 0
 149 001e 544A     		ldr	r2, .L4+8
 150 0020 07F11003 		add	r3, r7, #16
 151 0024 1068     		ldr	r0, [r2]	@ unaligned
 152 0026 1860     		str	r0, [r3]	@ unaligned
 112:App/STM32F4-Discovery/W5200.c **** 	// gateway
 113:App/STM32F4-Discovery/W5200.c **** 	const uint8_t gw[4] = {0xc0, 0xa8, 0x0, 0x01};
 153              		.loc 1 113 0
 154 0028 524A     		ldr	r2, .L4+12
 155 002a 07F10C03 		add	r3, r7, #12
 156 002e 1068     		ldr	r0, [r2]	@ unaligned
 157 0030 1860     		str	r0, [r3]	@ unaligned
 114:App/STM32F4-Discovery/W5200.c **** 	
 115:App/STM32F4-Discovery/W5200.c **** 	portTickType xLastWakeTime;	
 116:App/STM32F4-Discovery/W5200.c **** 	
 117:App/STM32F4-Discovery/W5200.c **** 	xSemaphoreDMASPI = xSemaphoreCreateBinary();
 158              		.loc 1 117 0
 159 0032 0120     		movs	r0, #1
 160 0034 0021     		movs	r1, #0
 161 0036 0322     		movs	r2, #3
 162 0038 FFF7FEFF 		bl	xQueueGenericCreate
 163 003c 0246     		mov	r2, r0
 164 003e 4E4B     		ldr	r3, .L4+16
 165 0040 1A60     		str	r2, [r3]
 118:App/STM32F4-Discovery/W5200.c **** 
 119:App/STM32F4-Discovery/W5200.c **** //	vTaskSuspend(set_macTaskHandle);
 120:App/STM32F4-Discovery/W5200.c **** 	
 121:App/STM32F4-Discovery/W5200.c **** 	xLastWakeTime = xTaskGetTickCount();
 166              		.loc 1 121 0
 167 0042 FFF7FEFF 		bl	xTaskGetTickCount
 168 0046 0346     		mov	r3, r0
 169 0048 BB60     		str	r3, [r7, #8]
 122:App/STM32F4-Discovery/W5200.c **** 
 123:App/STM32F4-Discovery/W5200.c **** 	RESET_HIGH();
 170              		.loc 1 123 0
 171 004a 4C4B     		ldr	r3, .L4+20
 172 004c 4B4A     		ldr	r2, .L4+20
 173 004e 528B     		ldrh	r2, [r2, #26]	@ movhi
 174 0050 92B2     		uxth	r2, r2
 175 0052 42F02002 		orr	r2, r2, #32
 176 0056 92B2     		uxth	r2, r2
 177 0058 5A83     		strh	r2, [r3, #26]	@ movhi
 124:App/STM32F4-Discovery/W5200.c **** 	RESET_LOW();	
 178              		.loc 1 124 0
 179 005a 484B     		ldr	r3, .L4+20
 180 005c 474A     		ldr	r2, .L4+20
 181 005e 128B     		ldrh	r2, [r2, #24]	@ movhi
 182 0060 92B2     		uxth	r2, r2
 183 0062 42F02002 		orr	r2, r2, #32
 184 0066 92B2     		uxth	r2, r2
 185 0068 1A83     		strh	r2, [r3, #24]	@ movhi
 125:App/STM32F4-Discovery/W5200.c **** 
 126:App/STM32F4-Discovery/W5200.c **** 	vTaskDelay( 500/portTICK_RATE_MS );		
 186              		.loc 1 126 0
 187 006a 4FF4FA70 		mov	r0, #500
 188 006e FFF7FEFF 		bl	vTaskDelay
 127:App/STM32F4-Discovery/W5200.c **** 	const portTickType xFrequency = 1;
 189              		.loc 1 127 0
 190 0072 0123     		movs	r3, #1
 191 0074 3B62     		str	r3, [r7, #32]
 128:App/STM32F4-Discovery/W5200.c **** 	
 129:App/STM32F4-Discovery/W5200.c **** 	// ===================================================//
 130:App/STM32F4-Discovery/W5200.c **** 	//SW reset 
 131:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_MR, W5200_MR_RST);
 192              		.loc 1 131 0
 193 0076 0020     		movs	r0, #0
 194 0078 8021     		movs	r1, #128
 195 007a FFF7FEFF 		bl	spi_dma_sendByte
 132:App/STM32F4-Discovery/W5200.c **** 	// wait until reset complete
 133:App/STM32F4-Discovery/W5200.c **** 	uint8_t data = W5200_MR_RST; 
 196              		.loc 1 133 0
 197 007e 8023     		movs	r3, #128
 198 0080 FB71     		strb	r3, [r7, #7]
 134:App/STM32F4-Discovery/W5200.c **** 	while((data  && W5200_MR_RST) == W5200_MR_RST)
 199              		.loc 1 134 0
 200 0082 00BF     		nop
 135:App/STM32F4-Discovery/W5200.c **** 	{
 136:App/STM32F4-Discovery/W5200.c **** 		spi_dma_read(W5200_MR, 1);
 137:App/STM32F4-Discovery/W5200.c **** 		memcpy(&data, bufferRX+4, 1);
 138:App/STM32F4-Discovery/W5200.c **** 	}
 139:App/STM32F4-Discovery/W5200.c **** 		
 140:App/STM32F4-Discovery/W5200.c **** 	// PING enable, PPPoE disable 
 141:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_MR, 0);
 201              		.loc 1 141 0
 202 0084 0020     		movs	r0, #0
 203 0086 0021     		movs	r1, #0
 204 0088 FFF7FEFF 		bl	spi_dma_sendByte
 142:App/STM32F4-Discovery/W5200.c **** 	// all socket interrupts sets to nonmask. set '1' is interrupt enable. 
 143:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_IMR, 0xff);
 205              		.loc 1 143 0
 206 008c 1620     		movs	r0, #22
 207 008e FF21     		movs	r1, #255
 208 0090 FFF7FEFF 		bl	spi_dma_sendByte
 144:App/STM32F4-Discovery/W5200.c **** 	// IP-confilict, PPPoE Close are mask. set '0' interupt disable. 
 145:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_IMR2, 0);
 209              		.loc 1 145 0
 210 0094 3620     		movs	r0, #54
 211 0096 0021     		movs	r1, #0
 212 0098 FFF7FEFF 		bl	spi_dma_sendByte
 146:App/STM32F4-Discovery/W5200.c **** 	// set timeoput to 200msec
 147:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_RTR, 200);
 213              		.loc 1 147 0
 214 009c 1720     		movs	r0, #23
 215 009e C821     		movs	r1, #200
 216 00a0 FFF7FEFF 		bl	spi_dma_sendByte
 148:App/STM32F4-Discovery/W5200.c **** 	// set retry count register to 3rd
 149:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_RCR, 3);
 217              		.loc 1 149 0
 218 00a4 1920     		movs	r0, #25
 219 00a6 0321     		movs	r1, #3
 220 00a8 FFF7FEFF 		bl	spi_dma_sendByte
 150:App/STM32F4-Discovery/W5200.c **** 
 151:App/STM32F4-Discovery/W5200.c **** 	int n = 0; 
 221              		.loc 1 151 0
 222 00ac 0023     		movs	r3, #0
 223 00ae 7B62     		str	r3, [r7, #36]
 152:App/STM32F4-Discovery/W5200.c **** 
 153:App/STM32F4-Discovery/W5200.c **** 	for (n = 0; n < 8; n++)
 224              		.loc 1 153 0
 225 00b0 0023     		movs	r3, #0
 226 00b2 7B62     		str	r3, [r7, #36]
 227 00b4 2BE0     		b	.L2
 228              	.L3:
 154:App/STM32F4-Discovery/W5200.c **** 	{
 155:App/STM32F4-Discovery/W5200.c **** 		spi_dma_sendByte(W5200_Sn_RXMEM_SIZE(n), 0x2);
 229              		.loc 1 155 0 discriminator 2
 230 00b6 7B6A     		ldr	r3, [r7, #36]
 231 00b8 9BB2     		uxth	r3, r3
 232 00ba 1B02     		lsls	r3, r3, #8
 233 00bc 9BB2     		uxth	r3, r3
 234 00be 03F58043 		add	r3, r3, #16384
 235 00c2 1E33     		adds	r3, r3, #30
 236 00c4 9BB2     		uxth	r3, r3
 237 00c6 1846     		mov	r0, r3
 238 00c8 0221     		movs	r1, #2
 239 00ca FFF7FEFF 		bl	spi_dma_sendByte
 156:App/STM32F4-Discovery/W5200.c **** 		spi_dma_sendByte(W5200_Sn_TXMEM_SIZE(n),0x2);
 240              		.loc 1 156 0 discriminator 2
 241 00ce 7B6A     		ldr	r3, [r7, #36]
 242 00d0 9BB2     		uxth	r3, r3
 243 00d2 1B02     		lsls	r3, r3, #8
 244 00d4 9BB2     		uxth	r3, r3
 245 00d6 03F58043 		add	r3, r3, #16384
 246 00da 1F33     		adds	r3, r3, #31
 247 00dc 9BB2     		uxth	r3, r3
 248 00de 1846     		mov	r0, r3
 249 00e0 0221     		movs	r1, #2
 250 00e2 FFF7FEFF 		bl	spi_dma_sendByte
 157:App/STM32F4-Discovery/W5200.c **** 		spi_dma_sendByte(W5200_Sn_IMR(n), 0xff);	
 251              		.loc 1 157 0 discriminator 2
 252 00e6 7B6A     		ldr	r3, [r7, #36]
 253 00e8 9BB2     		uxth	r3, r3
 254 00ea 1B02     		lsls	r3, r3, #8
 255 00ec 9BB2     		uxth	r3, r3
 256 00ee 03F58043 		add	r3, r3, #16384
 257 00f2 2C33     		adds	r3, r3, #44
 258 00f4 9BB2     		uxth	r3, r3
 259 00f6 1846     		mov	r0, r3
 260 00f8 FF21     		movs	r1, #255
 261 00fa FFF7FEFF 		bl	spi_dma_sendByte
 158:App/STM32F4-Discovery/W5200.c **** 		socket_flg[n] = 0;
 262              		.loc 1 158 0 discriminator 2
 263 00fe 204A     		ldr	r2, .L4+24
 264 0100 7B6A     		ldr	r3, [r7, #36]
 265 0102 1344     		add	r3, r3, r2
 266 0104 0022     		movs	r2, #0
 267 0106 1A70     		strb	r2, [r3]
 153:App/STM32F4-Discovery/W5200.c **** 	for (n = 0; n < 8; n++)
 268              		.loc 1 153 0 discriminator 2
 269 0108 7B6A     		ldr	r3, [r7, #36]
 270 010a 0133     		adds	r3, r3, #1
 271 010c 7B62     		str	r3, [r7, #36]
 272              	.L2:
 153:App/STM32F4-Discovery/W5200.c **** 	for (n = 0; n < 8; n++)
 273              		.loc 1 153 0 is_stmt 0 discriminator 1
 274 010e 7B6A     		ldr	r3, [r7, #36]
 275 0110 072B     		cmp	r3, #7
 276 0112 D0DD     		ble	.L3
 159:App/STM32F4-Discovery/W5200.c **** 			
 160:App/STM32F4-Discovery/W5200.c **** 	}	
 161:App/STM32F4-Discovery/W5200.c **** 	// =========================================================//
 162:App/STM32F4-Discovery/W5200.c **** 		
 163:App/STM32F4-Discovery/W5200.c **** 	vTaskDelayUntil(&xLastWakeTime, 500/portTICK_RATE_MS );		
 277              		.loc 1 163 0 is_stmt 1
 278 0114 07F10803 		add	r3, r7, #8
 279 0118 1846     		mov	r0, r3
 280 011a 4FF4FA71 		mov	r1, #500
 281 011e FFF7FEFF 		bl	vTaskDelayUntil
 164:App/STM32F4-Discovery/W5200.c **** 
 165:App/STM32F4-Discovery/W5200.c **** 	W5200_configure_network(ip, subnet, gw);
 282              		.loc 1 165 0
 283 0122 07F11401 		add	r1, r7, #20
 284 0126 07F11002 		add	r2, r7, #16
 285 012a 07F10C03 		add	r3, r7, #12
 286 012e 0846     		mov	r0, r1
 287 0130 1146     		mov	r1, r2
 288 0132 1A46     		mov	r2, r3
 289 0134 FFF7FEFF 		bl	W5200_configure_network
 166:App/STM32F4-Discovery/W5200.c **** 	W5200_set_hardware_address(address);
 290              		.loc 1 166 0
 291 0138 07F11803 		add	r3, r7, #24
 292 013c 1846     		mov	r0, r3
 293 013e FFF7FEFF 		bl	W5200_set_hardware_address
 167:App/STM32F4-Discovery/W5200.c **** 	
 168:App/STM32F4-Discovery/W5200.c **** 	vTaskDelayUntil(&xLastWakeTime, 500/portTICK_RATE_MS );		
 294              		.loc 1 168 0
 295 0142 07F10803 		add	r3, r7, #8
 296 0146 1846     		mov	r0, r3
 297 0148 4FF4FA71 		mov	r1, #500
 298 014c FFF7FEFF 		bl	vTaskDelayUntil
 169:App/STM32F4-Discovery/W5200.c **** 	// end of initialization W5200 
 170:App/STM32F4-Discovery/W5200.c **** 	// delete task
 171:App/STM32F4-Discovery/W5200.c **** 
 172:App/STM32F4-Discovery/W5200.c **** 	// unblock set_macTask
 173:App/STM32F4-Discovery/W5200.c **** 	
 174:App/STM32F4-Discovery/W5200.c **** 	vTaskResume( set_macTaskHandle); 
 299              		.loc 1 174 0
 300 0150 0C4B     		ldr	r3, .L4+28
 301 0152 1B68     		ldr	r3, [r3]
 302 0154 1846     		mov	r0, r3
 303 0156 FFF7FEFF 		bl	vTaskResume
 175:App/STM32F4-Discovery/W5200.c **** 
 176:App/STM32F4-Discovery/W5200.c **** 	vTaskDelete ( NULL );
 304              		.loc 1 176 0
 305 015a 0020     		movs	r0, #0
 306 015c FFF7FEFF 		bl	vTaskDelete
 177:App/STM32F4-Discovery/W5200.c **** 	
 178:App/STM32F4-Discovery/W5200.c **** 	
 179:App/STM32F4-Discovery/W5200.c **** 	
 180:App/STM32F4-Discovery/W5200.c **** 	
 181:App/STM32F4-Discovery/W5200.c **** }
 307              		.loc 1 181 0
 308 0160 2837     		adds	r7, r7, #40
 309 0162 BD46     		mov	sp, r7
 310              		@ sp needed
 311 0164 80BD     		pop	{r7, pc}
 312              	.L5:
 313 0166 00BF     		.align	2
 314              	.L4:
 315 0168 00000000 		.word	.LC0
 316 016c 08000000 		.word	.LC1
 317 0170 0C000000 		.word	.LC2
 318 0174 10000000 		.word	.LC3
 319 0178 00000000 		.word	xSemaphoreDMASPI
 320 017c 00080240 		.word	1073874944
 321 0180 00000000 		.word	socket_flg
 322 0184 00000000 		.word	set_macTaskHandle
 323              		.cfi_endproc
 324              	.LFE110:
 326              		.section	.text.W5200_set_hardware_address,"ax",%progbits
 327              		.align	2
 328              		.global	W5200_set_hardware_address
 329              		.thumb
 330              		.thumb_func
 332              	W5200_set_hardware_address:
 333              	.LFB111:
 182:App/STM32F4-Discovery/W5200.c **** 
 183:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 184:App/STM32F4-Discovery/W5200.c **** //===	func W5200_set_hardware_address
 185:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 186:App/STM32F4-Discovery/W5200.c **** void  W5200_set_hardware_address(const macaddress_t address)
 187:App/STM32F4-Discovery/W5200.c **** {
 334              		.loc 1 187 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 8
 337              		@ frame_needed = 1, uses_anonymous_args = 0
 338 0000 80B5     		push	{r7, lr}
 339              	.LCFI3:
 340              		.cfi_def_cfa_offset 8
 341              		.cfi_offset 7, -8
 342              		.cfi_offset 14, -4
 343 0002 82B0     		sub	sp, sp, #8
 344              	.LCFI4:
 345              		.cfi_def_cfa_offset 16
 346 0004 00AF     		add	r7, sp, #0
 347              	.LCFI5:
 348              		.cfi_def_cfa_register 7
 349 0006 7860     		str	r0, [r7, #4]
 188:App/STM32F4-Discovery/W5200.c **** 
 189:App/STM32F4-Discovery/W5200.c **** 	/*! Function set wiznet register to address via SPI DMA
 190:App/STM32F4-Discovery/W5200.c **** 	 */
 191:App/STM32F4-Discovery/W5200.c **** 
 192:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send(W5200_SHAR, 6, address);
 350              		.loc 1 192 0
 351 0008 0920     		movs	r0, #9
 352 000a 0621     		movs	r1, #6
 353 000c 7A68     		ldr	r2, [r7, #4]
 354 000e FFF7FEFF 		bl	spi_dma_send
 193:App/STM32F4-Discovery/W5200.c **** }
 355              		.loc 1 193 0
 356 0012 0837     		adds	r7, r7, #8
 357 0014 BD46     		mov	sp, r7
 358              		@ sp needed
 359 0016 80BD     		pop	{r7, pc}
 360              		.cfi_endproc
 361              	.LFE111:
 363              		.section	.text.W5200_get_hardware_address,"ax",%progbits
 364              		.align	2
 365              		.global	W5200_get_hardware_address
 366              		.thumb
 367              		.thumb_func
 369              	W5200_get_hardware_address:
 370              	.LFB112:
 194:App/STM32F4-Discovery/W5200.c **** 
 195:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 196:App/STM32F4-Discovery/W5200.c **** //===	func W5200_get_hardware_address
 197:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 198:App/STM32F4-Discovery/W5200.c **** 
 199:App/STM32F4-Discovery/W5200.c **** 
 200:App/STM32F4-Discovery/W5200.c **** void  W5200_get_hardware_address(macaddress_t address)
 201:App/STM32F4-Discovery/W5200.c **** {
 371              		.loc 1 201 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 8
 374              		@ frame_needed = 1, uses_anonymous_args = 0
 375 0000 80B5     		push	{r7, lr}
 376              	.LCFI6:
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 7, -8
 379              		.cfi_offset 14, -4
 380 0002 82B0     		sub	sp, sp, #8
 381              	.LCFI7:
 382              		.cfi_def_cfa_offset 16
 383 0004 00AF     		add	r7, sp, #0
 384              	.LCFI8:
 385              		.cfi_def_cfa_register 7
 386 0006 7860     		str	r0, [r7, #4]
 202:App/STM32F4-Discovery/W5200.c **** 	/*! Function reads wiznet register mac address and copies it to address
 203:App/STM32F4-Discovery/W5200.c **** 	 * */
 204:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_SHAR, 6);
 387              		.loc 1 204 0
 388 0008 0920     		movs	r0, #9
 389 000a 0621     		movs	r1, #6
 390 000c FFF7FEFF 		bl	spi_dma_read
 205:App/STM32F4-Discovery/W5200.c **** 	memcpy(address, bufferRX+4, 6);
 391              		.loc 1 205 0
 392 0010 7868     		ldr	r0, [r7, #4]
 393 0012 0349     		ldr	r1, .L8
 394 0014 0622     		movs	r2, #6
 395 0016 FFF7FEFF 		bl	memcpy
 206:App/STM32F4-Discovery/W5200.c **** }
 396              		.loc 1 206 0
 397 001a 0837     		adds	r7, r7, #8
 398 001c BD46     		mov	sp, r7
 399              		@ sp needed
 400 001e 80BD     		pop	{r7, pc}
 401              	.L9:
 402              		.align	2
 403              	.L8:
 404 0020 04000000 		.word	bufferRX+4
 405              		.cfi_endproc
 406              	.LFE112:
 408              		.section	.text.W5200_configure_network,"ax",%progbits
 409              		.align	2
 410              		.global	W5200_configure_network
 411              		.thumb
 412              		.thumb_func
 414              	W5200_configure_network:
 415              	.LFB113:
 207:App/STM32F4-Discovery/W5200.c **** 
 208:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 209:App/STM32F4-Discovery/W5200.c **** //===	func W5200_configure network
 210:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 211:App/STM32F4-Discovery/W5200.c **** 
 212:App/STM32F4-Discovery/W5200.c **** 
 213:App/STM32F4-Discovery/W5200.c **** void  W5200_configure_network(const ipv4address_t address,
 214:App/STM32F4-Discovery/W5200.c ****                              const ipv4address_t subnet,
 215:App/STM32F4-Discovery/W5200.c ****                              const ipv4address_t gateway)
 216:App/STM32F4-Discovery/W5200.c **** {
 416              		.loc 1 216 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 16
 419              		@ frame_needed = 1, uses_anonymous_args = 0
 420 0000 80B5     		push	{r7, lr}
 421              	.LCFI9:
 422              		.cfi_def_cfa_offset 8
 423              		.cfi_offset 7, -8
 424              		.cfi_offset 14, -4
 425 0002 84B0     		sub	sp, sp, #16
 426              	.LCFI10:
 427              		.cfi_def_cfa_offset 24
 428 0004 00AF     		add	r7, sp, #0
 429              	.LCFI11:
 430              		.cfi_def_cfa_register 7
 431 0006 F860     		str	r0, [r7, #12]
 432 0008 B960     		str	r1, [r7, #8]
 433 000a 7A60     		str	r2, [r7, #4]
 217:App/STM32F4-Discovery/W5200.c **** 	/*! It configures ip, subnet and gateway */
 218:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send(W5200_SIPR, 4, address);
 434              		.loc 1 218 0
 435 000c 0F20     		movs	r0, #15
 436 000e 0421     		movs	r1, #4
 437 0010 FA68     		ldr	r2, [r7, #12]
 438 0012 FFF7FEFF 		bl	spi_dma_send
 219:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send(W5200_SUBR, 4, subnet);
 439              		.loc 1 219 0
 440 0016 0520     		movs	r0, #5
 441 0018 0421     		movs	r1, #4
 442 001a BA68     		ldr	r2, [r7, #8]
 443 001c FFF7FEFF 		bl	spi_dma_send
 220:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send(W5200_GAR, 4 , gateway);
 444              		.loc 1 220 0
 445 0020 0120     		movs	r0, #1
 446 0022 0421     		movs	r1, #4
 447 0024 7A68     		ldr	r2, [r7, #4]
 448 0026 FFF7FEFF 		bl	spi_dma_send
 221:App/STM32F4-Discovery/W5200.c **** }
 449              		.loc 1 221 0
 450 002a 1037     		adds	r7, r7, #16
 451 002c BD46     		mov	sp, r7
 452              		@ sp needed
 453 002e 80BD     		pop	{r7, pc}
 454              		.cfi_endproc
 455              	.LFE113:
 457              		.section	.text.W5200_get_ipaddress,"ax",%progbits
 458              		.align	2
 459              		.global	W5200_get_ipaddress
 460              		.thumb
 461              		.thumb_func
 463              	W5200_get_ipaddress:
 464              	.LFB114:
 222:App/STM32F4-Discovery/W5200.c **** 
 223:App/STM32F4-Discovery/W5200.c **** 
 224:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 225:App/STM32F4-Discovery/W5200.c **** //===	func  W5200_get_ipaddress
 226:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 227:App/STM32F4-Discovery/W5200.c **** 
 228:App/STM32F4-Discovery/W5200.c **** 
 229:App/STM32F4-Discovery/W5200.c **** 
 230:App/STM32F4-Discovery/W5200.c **** void  W5200_get_ipaddress(ipv4address_t address)
 231:App/STM32F4-Discovery/W5200.c **** {
 465              		.loc 1 231 0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 8
 468              		@ frame_needed = 1, uses_anonymous_args = 0
 469 0000 80B5     		push	{r7, lr}
 470              	.LCFI12:
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 7, -8
 473              		.cfi_offset 14, -4
 474 0002 82B0     		sub	sp, sp, #8
 475              	.LCFI13:
 476              		.cfi_def_cfa_offset 16
 477 0004 00AF     		add	r7, sp, #0
 478              	.LCFI14:
 479              		.cfi_def_cfa_register 7
 480 0006 7860     		str	r0, [r7, #4]
 232:App/STM32F4-Discovery/W5200.c **** 	 spi_dma_read(W5200_SIPR, 4);
 481              		.loc 1 232 0
 482 0008 0F20     		movs	r0, #15
 483 000a 0421     		movs	r1, #4
 484 000c FFF7FEFF 		bl	spi_dma_read
 233:App/STM32F4-Discovery/W5200.c **** 	memcpy(address, bufferRX+4, 4);
 485              		.loc 1 233 0
 486 0010 7868     		ldr	r0, [r7, #4]
 487 0012 0349     		ldr	r1, .L12
 488 0014 0422     		movs	r2, #4
 489 0016 FFF7FEFF 		bl	memcpy
 234:App/STM32F4-Discovery/W5200.c **** }
 490              		.loc 1 234 0
 491 001a 0837     		adds	r7, r7, #8
 492 001c BD46     		mov	sp, r7
 493              		@ sp needed
 494 001e 80BD     		pop	{r7, pc}
 495              	.L13:
 496              		.align	2
 497              	.L12:
 498 0020 04000000 		.word	bufferRX+4
 499              		.cfi_endproc
 500              	.LFE114:
 502              		.section	.text.get_CRStatus,"ax",%progbits
 503              		.align	2
 504              		.thumb
 505              		.thumb_func
 507              	get_CRStatus:
 508              	.LFB115:
 235:App/STM32F4-Discovery/W5200.c **** 
 236:App/STM32F4-Discovery/W5200.c **** 
 237:App/STM32F4-Discovery/W5200.c **** 
 238:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 239:App/STM32F4-Discovery/W5200.c **** //	INNER STATIC FUNCTIONS FOR WRITING AND READING STATUSES 
 240:App/STM32F4-Discovery/W5200.c **** //	needed by socket, connect, send, closesocket, recv functions 
 241:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 242:App/STM32F4-Discovery/W5200.c **** 
 243:App/STM32F4-Discovery/W5200.c **** 
 244:App/STM32F4-Discovery/W5200.c **** 
 245:App/STM32F4-Discovery/W5200.c **** static uint8_t get_CRStatus(uint8_t sck_fd)
 246:App/STM32F4-Discovery/W5200.c **** {
 509              		.loc 1 246 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 16
 512              		@ frame_needed = 1, uses_anonymous_args = 0
 513 0000 80B5     		push	{r7, lr}
 514              	.LCFI15:
 515              		.cfi_def_cfa_offset 8
 516              		.cfi_offset 7, -8
 517              		.cfi_offset 14, -4
 518 0002 84B0     		sub	sp, sp, #16
 519              	.LCFI16:
 520              		.cfi_def_cfa_offset 24
 521 0004 00AF     		add	r7, sp, #0
 522              	.LCFI17:
 523              		.cfi_def_cfa_register 7
 524 0006 0346     		mov	r3, r0
 525 0008 FB71     		strb	r3, [r7, #7]
 247:App/STM32F4-Discovery/W5200.c **** 	uint8_t var; 
 248:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_CR(sck_fd),1);
 526              		.loc 1 248 0
 527 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 528 000c 9BB2     		uxth	r3, r3
 529 000e 1B02     		lsls	r3, r3, #8
 530 0010 9BB2     		uxth	r3, r3
 531 0012 03F58043 		add	r3, r3, #16384
 532 0016 0133     		adds	r3, r3, #1
 533 0018 9BB2     		uxth	r3, r3
 534 001a 1846     		mov	r0, r3
 535 001c 0121     		movs	r1, #1
 536 001e FFF7FEFF 		bl	spi_dma_read
 249:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 1);
 537              		.loc 1 249 0
 538 0022 044B     		ldr	r3, .L16
 539 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 540 0026 FB73     		strb	r3, [r7, #15]
 250:App/STM32F4-Discovery/W5200.c **** 	return var;
 541              		.loc 1 250 0
 542 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 251:App/STM32F4-Discovery/W5200.c **** }
 543              		.loc 1 251 0
 544 002a 1846     		mov	r0, r3
 545 002c 1037     		adds	r7, r7, #16
 546 002e BD46     		mov	sp, r7
 547              		@ sp needed
 548 0030 80BD     		pop	{r7, pc}
 549              	.L17:
 550 0032 00BF     		.align	2
 551              	.L16:
 552 0034 04000000 		.word	bufferRX+4
 553              		.cfi_endproc
 554              	.LFE115:
 556              		.section	.text.get_SRStatus,"ax",%progbits
 557              		.align	2
 558              		.thumb
 559              		.thumb_func
 561              	get_SRStatus:
 562              	.LFB116:
 252:App/STM32F4-Discovery/W5200.c **** 
 253:App/STM32F4-Discovery/W5200.c **** 
 254:App/STM32F4-Discovery/W5200.c **** static uint8_t get_SRStatus(uint8_t sck_fd)
 255:App/STM32F4-Discovery/W5200.c **** {
 563              		.loc 1 255 0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 16
 566              		@ frame_needed = 1, uses_anonymous_args = 0
 567 0000 80B5     		push	{r7, lr}
 568              	.LCFI18:
 569              		.cfi_def_cfa_offset 8
 570              		.cfi_offset 7, -8
 571              		.cfi_offset 14, -4
 572 0002 84B0     		sub	sp, sp, #16
 573              	.LCFI19:
 574              		.cfi_def_cfa_offset 24
 575 0004 00AF     		add	r7, sp, #0
 576              	.LCFI20:
 577              		.cfi_def_cfa_register 7
 578 0006 0346     		mov	r3, r0
 579 0008 FB71     		strb	r3, [r7, #7]
 256:App/STM32F4-Discovery/W5200.c **** 	uint8_t var; 
 257:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_SR(sck_fd), 1);
 580              		.loc 1 257 0
 581 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 582 000c 9BB2     		uxth	r3, r3
 583 000e 1B02     		lsls	r3, r3, #8
 584 0010 9BB2     		uxth	r3, r3
 585 0012 03F58043 		add	r3, r3, #16384
 586 0016 0333     		adds	r3, r3, #3
 587 0018 9BB2     		uxth	r3, r3
 588 001a 1846     		mov	r0, r3
 589 001c 0121     		movs	r1, #1
 590 001e FFF7FEFF 		bl	spi_dma_read
 258:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 1);
 591              		.loc 1 258 0
 592 0022 044B     		ldr	r3, .L20
 593 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 594 0026 FB73     		strb	r3, [r7, #15]
 259:App/STM32F4-Discovery/W5200.c **** 	return var;
 595              		.loc 1 259 0
 596 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 260:App/STM32F4-Discovery/W5200.c **** }
 597              		.loc 1 260 0
 598 002a 1846     		mov	r0, r3
 599 002c 1037     		adds	r7, r7, #16
 600 002e BD46     		mov	sp, r7
 601              		@ sp needed
 602 0030 80BD     		pop	{r7, pc}
 603              	.L21:
 604 0032 00BF     		.align	2
 605              	.L20:
 606 0034 04000000 		.word	bufferRX+4
 607              		.cfi_endproc
 608              	.LFE116:
 610              		.section	.text.get_TXFSRStatus,"ax",%progbits
 611              		.align	2
 612              		.thumb
 613              		.thumb_func
 615              	get_TXFSRStatus:
 616              	.LFB117:
 261:App/STM32F4-Discovery/W5200.c **** 
 262:App/STM32F4-Discovery/W5200.c **** static uint16_t get_TXFSRStatus(uint8_t sck_fd)
 263:App/STM32F4-Discovery/W5200.c **** {
 617              		.loc 1 263 0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 16
 620              		@ frame_needed = 1, uses_anonymous_args = 0
 621 0000 80B5     		push	{r7, lr}
 622              	.LCFI21:
 623              		.cfi_def_cfa_offset 8
 624              		.cfi_offset 7, -8
 625              		.cfi_offset 14, -4
 626 0002 84B0     		sub	sp, sp, #16
 627              	.LCFI22:
 628              		.cfi_def_cfa_offset 24
 629 0004 00AF     		add	r7, sp, #0
 630              	.LCFI23:
 631              		.cfi_def_cfa_register 7
 632 0006 0346     		mov	r3, r0
 633 0008 FB71     		strb	r3, [r7, #7]
 264:App/STM32F4-Discovery/W5200.c **** 	uint8_t var[2]; 
 265:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_TX_FSR(sck_fd), 2);
 634              		.loc 1 265 0
 635 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 636 000c 9BB2     		uxth	r3, r3
 637 000e 1B02     		lsls	r3, r3, #8
 638 0010 9BB2     		uxth	r3, r3
 639 0012 03F58043 		add	r3, r3, #16384
 640 0016 2033     		adds	r3, r3, #32
 641 0018 9BB2     		uxth	r3, r3
 642 001a 1846     		mov	r0, r3
 643 001c 0221     		movs	r1, #2
 644 001e FFF7FEFF 		bl	spi_dma_read
 266:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 2);
 645              		.loc 1 266 0
 646 0022 084A     		ldr	r2, .L24
 647 0024 07F10C03 		add	r3, r7, #12
 648 0028 1288     		ldrh	r2, [r2]	@ unaligned
 649 002a 1A80     		strh	r2, [r3]	@ unaligned
 267:App/STM32F4-Discovery/W5200.c **** 	
 268:App/STM32F4-Discovery/W5200.c **** 	return ((var[0] << 8) | var[1] );
 650              		.loc 1 268 0
 651 002c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 652 002e 1B02     		lsls	r3, r3, #8
 653 0030 9AB2     		uxth	r2, r3
 654 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 655 0034 1343     		orrs	r3, r3, r2
 656 0036 9BB2     		uxth	r3, r3
 657 0038 9BB2     		uxth	r3, r3
 269:App/STM32F4-Discovery/W5200.c **** 	
 270:App/STM32F4-Discovery/W5200.c **** }
 658              		.loc 1 270 0
 659 003a 1846     		mov	r0, r3
 660 003c 1037     		adds	r7, r7, #16
 661 003e BD46     		mov	sp, r7
 662              		@ sp needed
 663 0040 80BD     		pop	{r7, pc}
 664              	.L25:
 665 0042 00BF     		.align	2
 666              	.L24:
 667 0044 04000000 		.word	bufferRX+4
 668              		.cfi_endproc
 669              	.LFE117:
 671              		.section	.text.get_TXWRStatus,"ax",%progbits
 672              		.align	2
 673              		.thumb
 674              		.thumb_func
 676              	get_TXWRStatus:
 677              	.LFB118:
 271:App/STM32F4-Discovery/W5200.c **** 
 272:App/STM32F4-Discovery/W5200.c **** static uint16_t get_TXWRStatus(uint8_t sck_fd)
 273:App/STM32F4-Discovery/W5200.c **** {
 678              		.loc 1 273 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 16
 681              		@ frame_needed = 1, uses_anonymous_args = 0
 682 0000 80B5     		push	{r7, lr}
 683              	.LCFI24:
 684              		.cfi_def_cfa_offset 8
 685              		.cfi_offset 7, -8
 686              		.cfi_offset 14, -4
 687 0002 84B0     		sub	sp, sp, #16
 688              	.LCFI25:
 689              		.cfi_def_cfa_offset 24
 690 0004 00AF     		add	r7, sp, #0
 691              	.LCFI26:
 692              		.cfi_def_cfa_register 7
 693 0006 0346     		mov	r3, r0
 694 0008 FB71     		strb	r3, [r7, #7]
 274:App/STM32F4-Discovery/W5200.c **** 	uint8_t var[2]; 
 275:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_TX_WR(sck_fd), 2 );
 695              		.loc 1 275 0
 696 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 697 000c 9BB2     		uxth	r3, r3
 698 000e 1B02     		lsls	r3, r3, #8
 699 0010 9BB2     		uxth	r3, r3
 700 0012 03F58043 		add	r3, r3, #16384
 701 0016 2433     		adds	r3, r3, #36
 702 0018 9BB2     		uxth	r3, r3
 703 001a 1846     		mov	r0, r3
 704 001c 0221     		movs	r1, #2
 705 001e FFF7FEFF 		bl	spi_dma_read
 276:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 2);
 706              		.loc 1 276 0
 707 0022 084A     		ldr	r2, .L28
 708 0024 07F10C03 		add	r3, r7, #12
 709 0028 1288     		ldrh	r2, [r2]	@ unaligned
 710 002a 1A80     		strh	r2, [r3]	@ unaligned
 277:App/STM32F4-Discovery/W5200.c **** 	
 278:App/STM32F4-Discovery/W5200.c **** 	return ((var[0] << 8) | var[1] );
 711              		.loc 1 278 0
 712 002c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 713 002e 1B02     		lsls	r3, r3, #8
 714 0030 9AB2     		uxth	r2, r3
 715 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 716 0034 1343     		orrs	r3, r3, r2
 717 0036 9BB2     		uxth	r3, r3
 718 0038 9BB2     		uxth	r3, r3
 279:App/STM32F4-Discovery/W5200.c **** 
 280:App/STM32F4-Discovery/W5200.c **** 	
 281:App/STM32F4-Discovery/W5200.c **** }
 719              		.loc 1 281 0
 720 003a 1846     		mov	r0, r3
 721 003c 1037     		adds	r7, r7, #16
 722 003e BD46     		mov	sp, r7
 723              		@ sp needed
 724 0040 80BD     		pop	{r7, pc}
 725              	.L29:
 726 0042 00BF     		.align	2
 727              	.L28:
 728 0044 04000000 		.word	bufferRX+4
 729              		.cfi_endproc
 730              	.LFE118:
 732              		.section	.text.get_TXRD,"ax",%progbits
 733              		.align	2
 734              		.thumb
 735              		.thumb_func
 737              	get_TXRD:
 738              	.LFB119:
 282:App/STM32F4-Discovery/W5200.c **** static uint16_t get_TXRD(uint8_t sck_fd)
 283:App/STM32F4-Discovery/W5200.c **** {
 739              		.loc 1 283 0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 16
 742              		@ frame_needed = 1, uses_anonymous_args = 0
 743 0000 80B5     		push	{r7, lr}
 744              	.LCFI27:
 745              		.cfi_def_cfa_offset 8
 746              		.cfi_offset 7, -8
 747              		.cfi_offset 14, -4
 748 0002 84B0     		sub	sp, sp, #16
 749              	.LCFI28:
 750              		.cfi_def_cfa_offset 24
 751 0004 00AF     		add	r7, sp, #0
 752              	.LCFI29:
 753              		.cfi_def_cfa_register 7
 754 0006 0346     		mov	r3, r0
 755 0008 FB71     		strb	r3, [r7, #7]
 284:App/STM32F4-Discovery/W5200.c **** 	uint8_t var[2]; 
 285:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_TX_RD(sck_fd), 2);
 756              		.loc 1 285 0
 757 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 758 000c 9BB2     		uxth	r3, r3
 759 000e 1B02     		lsls	r3, r3, #8
 760 0010 9BB2     		uxth	r3, r3
 761 0012 03F58043 		add	r3, r3, #16384
 762 0016 2233     		adds	r3, r3, #34
 763 0018 9BB2     		uxth	r3, r3
 764 001a 1846     		mov	r0, r3
 765 001c 0221     		movs	r1, #2
 766 001e FFF7FEFF 		bl	spi_dma_read
 286:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 2);
 767              		.loc 1 286 0
 768 0022 084A     		ldr	r2, .L32
 769 0024 07F10C03 		add	r3, r7, #12
 770 0028 1288     		ldrh	r2, [r2]	@ unaligned
 771 002a 1A80     		strh	r2, [r3]	@ unaligned
 287:App/STM32F4-Discovery/W5200.c **** 	
 288:App/STM32F4-Discovery/W5200.c **** 	return ((var[0] << 8) | var[1] );
 772              		.loc 1 288 0
 773 002c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 774 002e 1B02     		lsls	r3, r3, #8
 775 0030 9AB2     		uxth	r2, r3
 776 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 777 0034 1343     		orrs	r3, r3, r2
 778 0036 9BB2     		uxth	r3, r3
 779 0038 9BB2     		uxth	r3, r3
 289:App/STM32F4-Discovery/W5200.c **** 	
 290:App/STM32F4-Discovery/W5200.c **** }
 780              		.loc 1 290 0
 781 003a 1846     		mov	r0, r3
 782 003c 1037     		adds	r7, r7, #16
 783 003e BD46     		mov	sp, r7
 784              		@ sp needed
 785 0040 80BD     		pop	{r7, pc}
 786              	.L33:
 787 0042 00BF     		.align	2
 788              	.L32:
 789 0044 04000000 		.word	bufferRX+4
 790              		.cfi_endproc
 791              	.LFE119:
 793              		.section	.text.set_TXWR,"ax",%progbits
 794              		.align	2
 795              		.thumb
 796              		.thumb_func
 798              	set_TXWR:
 799              	.LFB120:
 291:App/STM32F4-Discovery/W5200.c **** 
 292:App/STM32F4-Discovery/W5200.c **** static void  set_TXWR(uint8_t sck_fd, uint16_t val)
 293:App/STM32F4-Discovery/W5200.c **** {
 800              		.loc 1 293 0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 8
 803              		@ frame_needed = 1, uses_anonymous_args = 0
 804 0000 80B5     		push	{r7, lr}
 805              	.LCFI30:
 806              		.cfi_def_cfa_offset 8
 807              		.cfi_offset 7, -8
 808              		.cfi_offset 14, -4
 809 0002 82B0     		sub	sp, sp, #8
 810              	.LCFI31:
 811              		.cfi_def_cfa_offset 16
 812 0004 00AF     		add	r7, sp, #0
 813              	.LCFI32:
 814              		.cfi_def_cfa_register 7
 815 0006 0246     		mov	r2, r0
 816 0008 0B46     		mov	r3, r1
 817 000a FA71     		strb	r2, [r7, #7]
 818 000c BB80     		strh	r3, [r7, #4]	@ movhi
 294:App/STM32F4-Discovery/W5200.c ****  	spi_dma_send2B(W5200_Sn_TX_WR(sck_fd), val);
 819              		.loc 1 294 0
 820 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 821 0010 9BB2     		uxth	r3, r3
 822 0012 1B02     		lsls	r3, r3, #8
 823 0014 9BB2     		uxth	r3, r3
 824 0016 03F58043 		add	r3, r3, #16384
 825 001a 2433     		adds	r3, r3, #36
 826 001c 9AB2     		uxth	r2, r3
 827 001e BB88     		ldrh	r3, [r7, #4]
 828 0020 1046     		mov	r0, r2
 829 0022 1946     		mov	r1, r3
 830 0024 FFF7FEFF 		bl	spi_dma_send2B
 295:App/STM32F4-Discovery/W5200.c **** }
 831              		.loc 1 295 0
 832 0028 0837     		adds	r7, r7, #8
 833 002a BD46     		mov	sp, r7
 834              		@ sp needed
 835 002c 80BD     		pop	{r7, pc}
 836              		.cfi_endproc
 837              	.LFE120:
 839 002e 00BF     		.section	.text.get_RXRSR,"ax",%progbits
 840              		.align	2
 841              		.thumb
 842              		.thumb_func
 844              	get_RXRSR:
 845              	.LFB121:
 296:App/STM32F4-Discovery/W5200.c **** 
 297:App/STM32F4-Discovery/W5200.c **** static uint16_t get_RXRSR(uint8_t sck_fd)
 298:App/STM32F4-Discovery/W5200.c **** {
 846              		.loc 1 298 0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 16
 849              		@ frame_needed = 1, uses_anonymous_args = 0
 850 0000 80B5     		push	{r7, lr}
 851              	.LCFI33:
 852              		.cfi_def_cfa_offset 8
 853              		.cfi_offset 7, -8
 854              		.cfi_offset 14, -4
 855 0002 84B0     		sub	sp, sp, #16
 856              	.LCFI34:
 857              		.cfi_def_cfa_offset 24
 858 0004 00AF     		add	r7, sp, #0
 859              	.LCFI35:
 860              		.cfi_def_cfa_register 7
 861 0006 0346     		mov	r3, r0
 862 0008 FB71     		strb	r3, [r7, #7]
 299:App/STM32F4-Discovery/W5200.c **** 	uint8_t var[2]; 
 300:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_RX_RSR(sck_fd), 2);
 863              		.loc 1 300 0
 864 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 865 000c 9BB2     		uxth	r3, r3
 866 000e 1B02     		lsls	r3, r3, #8
 867 0010 9BB2     		uxth	r3, r3
 868 0012 03F58043 		add	r3, r3, #16384
 869 0016 2633     		adds	r3, r3, #38
 870 0018 9BB2     		uxth	r3, r3
 871 001a 1846     		mov	r0, r3
 872 001c 0221     		movs	r1, #2
 873 001e FFF7FEFF 		bl	spi_dma_read
 301:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 2);
 874              		.loc 1 301 0
 875 0022 084A     		ldr	r2, .L37
 876 0024 07F10C03 		add	r3, r7, #12
 877 0028 1288     		ldrh	r2, [r2]	@ unaligned
 878 002a 1A80     		strh	r2, [r3]	@ unaligned
 302:App/STM32F4-Discovery/W5200.c **** 	
 303:App/STM32F4-Discovery/W5200.c **** 	return ((var[0] << 8) | var[1] );
 879              		.loc 1 303 0
 880 002c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 881 002e 1B02     		lsls	r3, r3, #8
 882 0030 9AB2     		uxth	r2, r3
 883 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 884 0034 1343     		orrs	r3, r3, r2
 885 0036 9BB2     		uxth	r3, r3
 886 0038 9BB2     		uxth	r3, r3
 304:App/STM32F4-Discovery/W5200.c **** 
 305:App/STM32F4-Discovery/W5200.c **** }
 887              		.loc 1 305 0
 888 003a 1846     		mov	r0, r3
 889 003c 1037     		adds	r7, r7, #16
 890 003e BD46     		mov	sp, r7
 891              		@ sp needed
 892 0040 80BD     		pop	{r7, pc}
 893              	.L38:
 894 0042 00BF     		.align	2
 895              	.L37:
 896 0044 04000000 		.word	bufferRX+4
 897              		.cfi_endproc
 898              	.LFE121:
 900              		.section	.text.get_RXRD,"ax",%progbits
 901              		.align	2
 902              		.thumb
 903              		.thumb_func
 905              	get_RXRD:
 906              	.LFB122:
 306:App/STM32F4-Discovery/W5200.c **** 
 307:App/STM32F4-Discovery/W5200.c **** static uint16_t get_RXRD(uint8_t sck_fd)
 308:App/STM32F4-Discovery/W5200.c **** {
 907              		.loc 1 308 0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 16
 910              		@ frame_needed = 1, uses_anonymous_args = 0
 911 0000 80B5     		push	{r7, lr}
 912              	.LCFI36:
 913              		.cfi_def_cfa_offset 8
 914              		.cfi_offset 7, -8
 915              		.cfi_offset 14, -4
 916 0002 84B0     		sub	sp, sp, #16
 917              	.LCFI37:
 918              		.cfi_def_cfa_offset 24
 919 0004 00AF     		add	r7, sp, #0
 920              	.LCFI38:
 921              		.cfi_def_cfa_register 7
 922 0006 0346     		mov	r3, r0
 923 0008 FB71     		strb	r3, [r7, #7]
 309:App/STM32F4-Discovery/W5200.c **** 	uint8_t var[2]; 
 310:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_RX_RD(sck_fd), 2 );
 924              		.loc 1 310 0
 925 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 926 000c 9BB2     		uxth	r3, r3
 927 000e 1B02     		lsls	r3, r3, #8
 928 0010 9BB2     		uxth	r3, r3
 929 0012 03F58043 		add	r3, r3, #16384
 930 0016 2833     		adds	r3, r3, #40
 931 0018 9BB2     		uxth	r3, r3
 932 001a 1846     		mov	r0, r3
 933 001c 0221     		movs	r1, #2
 934 001e FFF7FEFF 		bl	spi_dma_read
 311:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 2);
 935              		.loc 1 311 0
 936 0022 084A     		ldr	r2, .L41
 937 0024 07F10C03 		add	r3, r7, #12
 938 0028 1288     		ldrh	r2, [r2]	@ unaligned
 939 002a 1A80     		strh	r2, [r3]	@ unaligned
 312:App/STM32F4-Discovery/W5200.c **** 	
 313:App/STM32F4-Discovery/W5200.c **** 	return ((var[0] << 8) | var[1] );
 940              		.loc 1 313 0
 941 002c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 942 002e 1B02     		lsls	r3, r3, #8
 943 0030 9AB2     		uxth	r2, r3
 944 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 945 0034 1343     		orrs	r3, r3, r2
 946 0036 9BB2     		uxth	r3, r3
 947 0038 9BB2     		uxth	r3, r3
 314:App/STM32F4-Discovery/W5200.c **** }
 948              		.loc 1 314 0
 949 003a 1846     		mov	r0, r3
 950 003c 1037     		adds	r7, r7, #16
 951 003e BD46     		mov	sp, r7
 952              		@ sp needed
 953 0040 80BD     		pop	{r7, pc}
 954              	.L42:
 955 0042 00BF     		.align	2
 956              	.L41:
 957 0044 04000000 		.word	bufferRX+4
 958              		.cfi_endproc
 959              	.LFE122:
 961              		.section	.text.set_RXRD,"ax",%progbits
 962              		.align	2
 963              		.thumb
 964              		.thumb_func
 966              	set_RXRD:
 967              	.LFB123:
 315:App/STM32F4-Discovery/W5200.c **** 
 316:App/STM32F4-Discovery/W5200.c **** static void set_RXRD(uint8_t sck_fd, uint16_t val)
 317:App/STM32F4-Discovery/W5200.c **** {
 968              		.loc 1 317 0
 969              		.cfi_startproc
 970              		@ args = 0, pretend = 0, frame = 8
 971              		@ frame_needed = 1, uses_anonymous_args = 0
 972 0000 80B5     		push	{r7, lr}
 973              	.LCFI39:
 974              		.cfi_def_cfa_offset 8
 975              		.cfi_offset 7, -8
 976              		.cfi_offset 14, -4
 977 0002 82B0     		sub	sp, sp, #8
 978              	.LCFI40:
 979              		.cfi_def_cfa_offset 16
 980 0004 00AF     		add	r7, sp, #0
 981              	.LCFI41:
 982              		.cfi_def_cfa_register 7
 983 0006 0246     		mov	r2, r0
 984 0008 0B46     		mov	r3, r1
 985 000a FA71     		strb	r2, [r7, #7]
 986 000c BB80     		strh	r3, [r7, #4]	@ movhi
 318:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send2B(W5200_Sn_RX_RD(sck_fd), val);
 987              		.loc 1 318 0
 988 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 989 0010 9BB2     		uxth	r3, r3
 990 0012 1B02     		lsls	r3, r3, #8
 991 0014 9BB2     		uxth	r3, r3
 992 0016 03F58043 		add	r3, r3, #16384
 993 001a 2833     		adds	r3, r3, #40
 994 001c 9AB2     		uxth	r2, r3
 995 001e BB88     		ldrh	r3, [r7, #4]
 996 0020 1046     		mov	r0, r2
 997 0022 1946     		mov	r1, r3
 998 0024 FFF7FEFF 		bl	spi_dma_send2B
 319:App/STM32F4-Discovery/W5200.c **** }
 999              		.loc 1 319 0
 1000 0028 0837     		adds	r7, r7, #8
 1001 002a BD46     		mov	sp, r7
 1002              		@ sp needed
 1003 002c 80BD     		pop	{r7, pc}
 1004              		.cfi_endproc
 1005              	.LFE123:
 1007 002e 00BF     		.section	.text.write_memory,"ax",%progbits
 1008              		.align	2
 1009              		.global	write_memory
 1010              		.thumb
 1011              		.thumb_func
 1013              	write_memory:
 1014              	.LFB124:
 320:App/STM32F4-Discovery/W5200.c **** //===============================================================================================//
 321:App/STM32F4-Discovery/W5200.c **** //		func write_memory 
 322:App/STM32F4-Discovery/W5200.c **** //===============================================================================================//
 323:App/STM32F4-Discovery/W5200.c **** 
 324:App/STM32F4-Discovery/W5200.c **** 
 325:App/STM32F4-Discovery/W5200.c **** void write_memory(uint8_t sck_fd, uint16_t write_ptr, uint8_t *buf, uint16_t len)
 326:App/STM32F4-Discovery/W5200.c **** {
 1015              		.loc 1 326 0
 1016              		.cfi_startproc
 1017              		@ args = 0, pretend = 0, frame = 24
 1018              		@ frame_needed = 1, uses_anonymous_args = 0
 1019 0000 80B5     		push	{r7, lr}
 1020              	.LCFI42:
 1021              		.cfi_def_cfa_offset 8
 1022              		.cfi_offset 7, -8
 1023              		.cfi_offset 14, -4
 1024 0002 86B0     		sub	sp, sp, #24
 1025              	.LCFI43:
 1026              		.cfi_def_cfa_offset 32
 1027 0004 00AF     		add	r7, sp, #0
 1028              	.LCFI44:
 1029              		.cfi_def_cfa_register 7
 1030 0006 BA60     		str	r2, [r7, #8]
 1031 0008 0246     		mov	r2, r0
 1032 000a FA73     		strb	r2, [r7, #15]
 1033 000c 0A46     		mov	r2, r1	@ movhi
 1034 000e BA81     		strh	r2, [r7, #12]	@ movhi
 1035 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 327:App/STM32F4-Discovery/W5200.c **** 
 328:App/STM32F4-Discovery/W5200.c **** 	/*! 	\fn void write_memory(uint8_t sck_fd, uint16_t write_ptr, uint8_t *buf, uint16_t len)
 329:App/STM32F4-Discovery/W5200.c ****  	*	\brief write memory buffer to SPI line 
 330:App/STM32F4-Discovery/W5200.c ****  	*	\param sck_fd - socket file descriptor returned by function socket
 331:App/STM32F4-Discovery/W5200.c **** 		\param write_ptr - write pointer to memory 
 332:App/STM32F4-Discovery/W5200.c **** 		\param *buf - pointer to memory buffer 
 333:App/STM32F4-Discovery/W5200.c **** 		\param len - length of memory block 
 334:App/STM32F4-Discovery/W5200.c **** 	*/
 335:App/STM32F4-Discovery/W5200.c **** 	uint16_t	memory_addr, offset;
 336:App/STM32F4-Discovery/W5200.c **** 	uint16_t	upper_size, left_size;
 337:App/STM32F4-Discovery/W5200.c **** 
 338:App/STM32F4-Discovery/W5200.c **** 	// calculate offset address 
 339:App/STM32F4-Discovery/W5200.c **** 	offset = write_ptr & 0x07ff;
 1036              		.loc 1 339 0
 1037 0012 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1038 0014 C3F30A03 		ubfx	r3, r3, #0, #11
 1039 0018 FB82     		strh	r3, [r7, #22]	@ movhi
 340:App/STM32F4-Discovery/W5200.c **** 
 341:App/STM32F4-Discovery/W5200.c **** 	// calculate physical memory start address
 342:App/STM32F4-Discovery/W5200.c **** 	memory_addr = W5200_SOCKET_TX_BASE(sck_fd)  + offset;
 1040              		.loc 1 342 0
 1041 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1042 001c 9BB2     		uxth	r3, r3
 1043 001e DB00     		lsls	r3, r3, #3
 1044 0020 9BB2     		uxth	r3, r3
 1045 0022 1B02     		lsls	r3, r3, #8
 1046 0024 9AB2     		uxth	r2, r3
 1047 0026 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1048 0028 1344     		add	r3, r3, r2
 1049 002a 9BB2     		uxth	r3, r3
 1050 002c A3F50043 		sub	r3, r3, #32768
 1051 0030 BB82     		strh	r3, [r7, #20]	@ movhi
 343:App/STM32F4-Discovery/W5200.c **** 
 344:App/STM32F4-Discovery/W5200.c **** 	// if overflow socket TX memory ?
 345:App/STM32F4-Discovery/W5200.c **** 	if(offset + len > W5200_Sn_TXMEM_SIZE(sck_fd) +1 ){
 1052              		.loc 1 345 0
 1053 0032 FA8A     		ldrh	r2, [r7, #22]
 1054 0034 FB88     		ldrh	r3, [r7, #6]
 1055 0036 1A44     		add	r2, r2, r3
 1056 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1057 003a 1B02     		lsls	r3, r3, #8
 1058 003c 03F58043 		add	r3, r3, #16384
 1059 0040 2033     		adds	r3, r3, #32
 1060 0042 9A42     		cmp	r2, r3
 1061 0044 2ADD     		ble	.L45
 346:App/STM32F4-Discovery/W5200.c **** 
 347:App/STM32F4-Discovery/W5200.c **** 		// copy upper_size bytes
 348:App/STM32F4-Discovery/W5200.c **** 		upper_size = W5200_SOCKET_TX_BASE(sck_fd) - offset;
 1062              		.loc 1 348 0
 1063 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1064 0048 9BB2     		uxth	r3, r3
 1065 004a DB00     		lsls	r3, r3, #3
 1066 004c 9BB2     		uxth	r3, r3
 1067 004e 1B02     		lsls	r3, r3, #8
 1068 0050 9AB2     		uxth	r2, r3
 1069 0052 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1070 0054 D31A     		subs	r3, r2, r3
 1071 0056 9BB2     		uxth	r3, r3
 1072 0058 A3F50043 		sub	r3, r3, #32768
 1073 005c 7B82     		strh	r3, [r7, #18]	@ movhi
 349:App/STM32F4-Discovery/W5200.c **** 		spi_dma_send( memory_addr,upper_size, buf);
 1074              		.loc 1 349 0
 1075 005e BA8A     		ldrh	r2, [r7, #20]
 1076 0060 7B8A     		ldrh	r3, [r7, #18]
 1077 0062 1046     		mov	r0, r2
 1078 0064 1946     		mov	r1, r3
 1079 0066 BA68     		ldr	r2, [r7, #8]
 1080 0068 FFF7FEFF 		bl	spi_dma_send
 350:App/STM32F4-Discovery/W5200.c **** 		buf += upper_size;
 1081              		.loc 1 350 0
 1082 006c 7B8A     		ldrh	r3, [r7, #18]
 1083 006e BA68     		ldr	r2, [r7, #8]
 1084 0070 1344     		add	r3, r3, r2
 1085 0072 BB60     		str	r3, [r7, #8]
 351:App/STM32F4-Discovery/W5200.c **** 
 352:App/STM32F4-Discovery/W5200.c **** 		// copy left size bytes
 353:App/STM32F4-Discovery/W5200.c **** 		left_size = len - upper_size;
 1086              		.loc 1 353 0
 1087 0074 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1088 0076 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1089 0078 D31A     		subs	r3, r2, r3
 1090 007a 3B82     		strh	r3, [r7, #16]	@ movhi
 354:App/STM32F4-Discovery/W5200.c **** 		spi_dma_send( W5200_SOCKET_TX_BASE(sck_fd),
 1091              		.loc 1 354 0
 1092 007c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1093 007e 9BB2     		uxth	r3, r3
 1094 0080 DB00     		lsls	r3, r3, #3
 1095 0082 9BB2     		uxth	r3, r3
 1096 0084 1B02     		lsls	r3, r3, #8
 1097 0086 9BB2     		uxth	r3, r3
 1098 0088 A3F50043 		sub	r3, r3, #32768
 1099 008c 9AB2     		uxth	r2, r3
 1100 008e 3B8A     		ldrh	r3, [r7, #16]
 1101 0090 1046     		mov	r0, r2
 1102 0092 1946     		mov	r1, r3
 1103 0094 BA68     		ldr	r2, [r7, #8]
 1104 0096 FFF7FEFF 		bl	spi_dma_send
 1105 009a 06E0     		b	.L44
 1106              	.L45:
 355:App/STM32F4-Discovery/W5200.c **** 		left_size,  buf);
 356:App/STM32F4-Discovery/W5200.c **** 
 357:App/STM32F4-Discovery/W5200.c **** 	}else{
 358:App/STM32F4-Discovery/W5200.c **** 
 359:App/STM32F4-Discovery/W5200.c **** 		// copy len size bytes
 360:App/STM32F4-Discovery/W5200.c **** 		spi_dma_send( memory_addr,len,  buf);
 1107              		.loc 1 360 0
 1108 009c BA8A     		ldrh	r2, [r7, #20]
 1109 009e FB88     		ldrh	r3, [r7, #6]
 1110 00a0 1046     		mov	r0, r2
 1111 00a2 1946     		mov	r1, r3
 1112 00a4 BA68     		ldr	r2, [r7, #8]
 1113 00a6 FFF7FEFF 		bl	spi_dma_send
 1114              	.L44:
 361:App/STM32F4-Discovery/W5200.c **** 	}
 362:App/STM32F4-Discovery/W5200.c **** }
 1115              		.loc 1 362 0
 1116 00aa 1837     		adds	r7, r7, #24
 1117 00ac BD46     		mov	sp, r7
 1118              		@ sp needed
 1119 00ae 80BD     		pop	{r7, pc}
 1120              		.cfi_endproc
 1121              	.LFE124:
 1123              		.section	.text.read_memory,"ax",%progbits
 1124              		.align	2
 1125              		.global	read_memory
 1126              		.thumb
 1127              		.thumb_func
 1129              	read_memory:
 1130              	.LFB125:
 363:App/STM32F4-Discovery/W5200.c **** 
 364:App/STM32F4-Discovery/W5200.c **** 
 365:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 366:App/STM32F4-Discovery/W5200.c **** // 			func read_memory
 367:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 368:App/STM32F4-Discovery/W5200.c **** 
 369:App/STM32F4-Discovery/W5200.c **** 
 370:App/STM32F4-Discovery/W5200.c **** void	read_memory(uint8_t sck_fd, uint16_t read_ptr, uint8_t *buf, uint16_t len)
 371:App/STM32F4-Discovery/W5200.c **** {
 1131              		.loc 1 371 0
 1132              		.cfi_startproc
 1133              		@ args = 0, pretend = 0, frame = 24
 1134              		@ frame_needed = 1, uses_anonymous_args = 0
 1135 0000 80B5     		push	{r7, lr}
 1136              	.LCFI45:
 1137              		.cfi_def_cfa_offset 8
 1138              		.cfi_offset 7, -8
 1139              		.cfi_offset 14, -4
 1140 0002 86B0     		sub	sp, sp, #24
 1141              	.LCFI46:
 1142              		.cfi_def_cfa_offset 32
 1143 0004 00AF     		add	r7, sp, #0
 1144              	.LCFI47:
 1145              		.cfi_def_cfa_register 7
 1146 0006 BA60     		str	r2, [r7, #8]
 1147 0008 0246     		mov	r2, r0
 1148 000a FA73     		strb	r2, [r7, #15]
 1149 000c 0A46     		mov	r2, r1	@ movhi
 1150 000e BA81     		strh	r2, [r7, #12]	@ movhi
 1151 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 372:App/STM32F4-Discovery/W5200.c **** 	/*! 	\fn read_memory(uint8_t sck_fd, uint16_t read_ptr, uint8_t *buf, uint16_t len)
 373:App/STM32F4-Discovery/W5200.c ****  	*	\brief read memory buffer from SPI line 
 374:App/STM32F4-Discovery/W5200.c ****  	*	\param sck_fd - socket file descriptor returned by function socket
 375:App/STM32F4-Discovery/W5200.c **** 	*	\param write_ptr - read pointer to memory 
 376:App/STM32F4-Discovery/W5200.c **** 	*	\param *buf - pointer to memory buffer 
 377:App/STM32F4-Discovery/W5200.c **** 	*	\param len - length of memory block 
 378:App/STM32F4-Discovery/W5200.c **** 	*/
 379:App/STM32F4-Discovery/W5200.c **** 
 380:App/STM32F4-Discovery/W5200.c **** 	uint16_t	memory_addr, offset;
 381:App/STM32F4-Discovery/W5200.c **** 	uint16_t	upper_size, left_size;
 382:App/STM32F4-Discovery/W5200.c **** 
 383:App/STM32F4-Discovery/W5200.c **** 	// calculate offset address 
 384:App/STM32F4-Discovery/W5200.c **** 	offset = read_ptr & 0x07ff;
 1152              		.loc 1 384 0
 1153 0012 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1154 0014 C3F30A03 		ubfx	r3, r3, #0, #11
 1155 0018 FB82     		strh	r3, [r7, #22]	@ movhi
 385:App/STM32F4-Discovery/W5200.c **** 
 386:App/STM32F4-Discovery/W5200.c **** 	// calculate physical memory start address
 387:App/STM32F4-Discovery/W5200.c **** 	memory_addr = W5200_SOCKET_RX_BASE(sck_fd)  + offset;
 1156              		.loc 1 387 0
 1157 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1158 001c 9BB2     		uxth	r3, r3
 1159 001e DB00     		lsls	r3, r3, #3
 1160 0020 9BB2     		uxth	r3, r3
 1161 0022 1B02     		lsls	r3, r3, #8
 1162 0024 9AB2     		uxth	r2, r3
 1163 0026 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1164 0028 1344     		add	r3, r3, r2
 1165 002a 9BB2     		uxth	r3, r3
 1166 002c A3F58043 		sub	r3, r3, #16384
 1167 0030 BB82     		strh	r3, [r7, #20]	@ movhi
 388:App/STM32F4-Discovery/W5200.c **** 
 389:App/STM32F4-Discovery/W5200.c **** 	// if overflow socket RX memory ?
 390:App/STM32F4-Discovery/W5200.c **** 	if(offset + len > 0x0800){
 1168              		.loc 1 390 0
 1169 0032 FA8A     		ldrh	r2, [r7, #22]
 1170 0034 FB88     		ldrh	r3, [r7, #6]
 1171 0036 1344     		add	r3, r3, r2
 1172 0038 B3F5006F 		cmp	r3, #2048
 1173 003c 2FDD     		ble	.L48
 391:App/STM32F4-Discovery/W5200.c **** 
 392:App/STM32F4-Discovery/W5200.c **** 		// copy upper_size bytes
 393:App/STM32F4-Discovery/W5200.c **** 		upper_size = 0x0800 - offset;
 1174              		.loc 1 393 0
 1175 003e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1176 0040 C3F50063 		rsb	r3, r3, #2048
 1177 0044 7B82     		strh	r3, [r7, #18]	@ movhi
 394:App/STM32F4-Discovery/W5200.c **** 		spi_dma_read( memory_addr,upper_size);
 1178              		.loc 1 394 0
 1179 0046 BA8A     		ldrh	r2, [r7, #20]
 1180 0048 7B8A     		ldrh	r3, [r7, #18]
 1181 004a 1046     		mov	r0, r2
 1182 004c 1946     		mov	r1, r3
 1183 004e FFF7FEFF 		bl	spi_dma_read
 395:App/STM32F4-Discovery/W5200.c **** 		memcpy(buf, bufferRX+4, upper_size);
 1184              		.loc 1 395 0
 1185 0052 7B8A     		ldrh	r3, [r7, #18]
 1186 0054 B868     		ldr	r0, [r7, #8]
 1187 0056 1949     		ldr	r1, .L50
 1188 0058 1A46     		mov	r2, r3
 1189 005a FFF7FEFF 		bl	memcpy
 396:App/STM32F4-Discovery/W5200.c **** 
 397:App/STM32F4-Discovery/W5200.c **** 		buf += upper_size;
 1190              		.loc 1 397 0
 1191 005e 7B8A     		ldrh	r3, [r7, #18]
 1192 0060 BA68     		ldr	r2, [r7, #8]
 1193 0062 1344     		add	r3, r3, r2
 1194 0064 BB60     		str	r3, [r7, #8]
 398:App/STM32F4-Discovery/W5200.c **** 
 399:App/STM32F4-Discovery/W5200.c **** 		// copy left size bytes
 400:App/STM32F4-Discovery/W5200.c **** 		left_size = len - upper_size;
 1195              		.loc 1 400 0
 1196 0066 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1197 0068 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1198 006a D31A     		subs	r3, r2, r3
 1199 006c 3B82     		strh	r3, [r7, #16]	@ movhi
 401:App/STM32F4-Discovery/W5200.c **** 		spi_dma_read(W5200_SOCKET_RX_BASE(sck_fd), left_size);
 1200              		.loc 1 401 0
 1201 006e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1202 0070 9BB2     		uxth	r3, r3
 1203 0072 DB00     		lsls	r3, r3, #3
 1204 0074 9BB2     		uxth	r3, r3
 1205 0076 1B02     		lsls	r3, r3, #8
 1206 0078 9BB2     		uxth	r3, r3
 1207 007a A3F58043 		sub	r3, r3, #16384
 1208 007e 9AB2     		uxth	r2, r3
 1209 0080 3B8A     		ldrh	r3, [r7, #16]
 1210 0082 1046     		mov	r0, r2
 1211 0084 1946     		mov	r1, r3
 1212 0086 FFF7FEFF 		bl	spi_dma_read
 402:App/STM32F4-Discovery/W5200.c **** 		memcpy(buf+upper_size, bufferRX+4, left_size);
 1213              		.loc 1 402 0
 1214 008a 7B8A     		ldrh	r3, [r7, #18]
 1215 008c BA68     		ldr	r2, [r7, #8]
 1216 008e 1A44     		add	r2, r2, r3
 1217 0090 3B8A     		ldrh	r3, [r7, #16]
 1218 0092 1046     		mov	r0, r2
 1219 0094 0949     		ldr	r1, .L50
 1220 0096 1A46     		mov	r2, r3
 1221 0098 FFF7FEFF 		bl	memcpy
 1222 009c 0BE0     		b	.L47
 1223              	.L48:
 403:App/STM32F4-Discovery/W5200.c **** 	}else{
 404:App/STM32F4-Discovery/W5200.c **** 
 405:App/STM32F4-Discovery/W5200.c **** 		// copy len size bytes
 406:App/STM32F4-Discovery/W5200.c **** 		spi_dma_read( memory_addr,len);
 1224              		.loc 1 406 0
 1225 009e BA8A     		ldrh	r2, [r7, #20]
 1226 00a0 FB88     		ldrh	r3, [r7, #6]
 1227 00a2 1046     		mov	r0, r2
 1228 00a4 1946     		mov	r1, r3
 1229 00a6 FFF7FEFF 		bl	spi_dma_read
 407:App/STM32F4-Discovery/W5200.c **** 		memcpy(buf, bufferRX+4, len);
 1230              		.loc 1 407 0
 1231 00aa FB88     		ldrh	r3, [r7, #6]
 1232 00ac B868     		ldr	r0, [r7, #8]
 1233 00ae 0349     		ldr	r1, .L50
 1234 00b0 1A46     		mov	r2, r3
 1235 00b2 FFF7FEFF 		bl	memcpy
 1236              	.L47:
 408:App/STM32F4-Discovery/W5200.c **** 	}
 409:App/STM32F4-Discovery/W5200.c **** }
 1237              		.loc 1 409 0
 1238 00b6 1837     		adds	r7, r7, #24
 1239 00b8 BD46     		mov	sp, r7
 1240              		@ sp needed
 1241 00ba 80BD     		pop	{r7, pc}
 1242              	.L51:
 1243              		.align	2
 1244              	.L50:
 1245 00bc 04000000 		.word	bufferRX+4
 1246              		.cfi_endproc
 1247              	.LFE125:
 1249              		.section	.text.socket,"ax",%progbits
 1250              		.align	2
 1251              		.global	socket
 1252              		.thumb
 1253              		.thumb_func
 1255              	socket:
 1256              	.LFB126:
 410:App/STM32F4-Discovery/W5200.c **** 
 411:App/STM32F4-Discovery/W5200.c **** /*==========================================================================
 412:App/STM32F4-Discovery/W5200.c **** 	socket()	create socket, handle open
 413:App/STM32F4-Discovery/W5200.c **** 		ip_proto, RAW mode only.
 414:App/STM32F4-Discovery/W5200.c **** ===========================================================================*/
 415:App/STM32F4-Discovery/W5200.c **** 
 416:App/STM32F4-Discovery/W5200.c **** uint8_t	socket(uint8_t  mode, uint16_t  port, uint8_t ip_proto)
 417:App/STM32F4-Discovery/W5200.c **** {
 1257              		.loc 1 417 0
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 16
 1260              		@ frame_needed = 1, uses_anonymous_args = 0
 1261 0000 80B5     		push	{r7, lr}
 1262              	.LCFI48:
 1263              		.cfi_def_cfa_offset 8
 1264              		.cfi_offset 7, -8
 1265              		.cfi_offset 14, -4
 1266 0002 84B0     		sub	sp, sp, #16
 1267              	.LCFI49:
 1268              		.cfi_def_cfa_offset 24
 1269 0004 00AF     		add	r7, sp, #0
 1270              	.LCFI50:
 1271              		.cfi_def_cfa_register 7
 1272 0006 1346     		mov	r3, r2
 1273 0008 0246     		mov	r2, r0
 1274 000a FA71     		strb	r2, [r7, #7]
 1275 000c 0A46     		mov	r2, r1	@ movhi
 1276 000e BA80     		strh	r2, [r7, #4]	@ movhi
 1277 0010 BB71     		strb	r3, [r7, #6]
 418:App/STM32F4-Discovery/W5200.c **** 	uint8_t	sck_fd;
 419:App/STM32F4-Discovery/W5200.c **** 	uint8_t	stat;
 420:App/STM32F4-Discovery/W5200.c **** 
 421:App/STM32F4-Discovery/W5200.c **** 	// check free socket exists? 
 422:App/STM32F4-Discovery/W5200.c **** 	for(sck_fd = 0; sck_fd < W5200_MAX_SOCKETS; sck_fd++){
 1278              		.loc 1 422 0
 1279 0012 0023     		movs	r3, #0
 1280 0014 FB73     		strb	r3, [r7, #15]
 1281 0016 0CE0     		b	.L53
 1282              	.L56:
 423:App/STM32F4-Discovery/W5200.c **** 		if(socket_flg[sck_fd] == 0){
 1283              		.loc 1 423 0
 1284 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1285 001a 4C4A     		ldr	r2, .L68
 1286 001c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1287 001e 002B     		cmp	r3, #0
 1288 0020 04D1     		bne	.L54
 424:App/STM32F4-Discovery/W5200.c **** 			socket_flg[sck_fd] = 1;
 1289              		.loc 1 424 0
 1290 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1291 0024 494A     		ldr	r2, .L68
 1292 0026 0121     		movs	r1, #1
 1293 0028 D154     		strb	r1, [r2, r3]
 425:App/STM32F4-Discovery/W5200.c **** 			break;
 1294              		.loc 1 425 0
 1295 002a 05E0     		b	.L55
 1296              	.L54:
 422:App/STM32F4-Discovery/W5200.c **** 	for(sck_fd = 0; sck_fd < W5200_MAX_SOCKETS; sck_fd++){
 1297              		.loc 1 422 0
 1298 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1299 002e 0133     		adds	r3, r3, #1
 1300 0030 FB73     		strb	r3, [r7, #15]
 1301              	.L53:
 422:App/STM32F4-Discovery/W5200.c **** 	for(sck_fd = 0; sck_fd < W5200_MAX_SOCKETS; sck_fd++){
 1302              		.loc 1 422 0 is_stmt 0 discriminator 1
 1303 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1304 0034 072B     		cmp	r3, #7
 1305 0036 EFD9     		bls	.L56
 1306              	.L55:
 426:App/STM32F4-Discovery/W5200.c **** 		}
 427:App/STM32F4-Discovery/W5200.c **** 	}
 428:App/STM32F4-Discovery/W5200.c **** 	if(sck_fd >= W5200_MAX_SOCKETS) return -1;	// no more sockets.
 1307              		.loc 1 428 0 is_stmt 1
 1308 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1309 003a 072B     		cmp	r3, #7
 1310 003c 01D9     		bls	.L57
 1311              		.loc 1 428 0 is_stmt 0 discriminator 1
 1312 003e FF23     		movs	r3, #255
 1313 0040 7FE0     		b	.L67
 1314              	.L57:
 429:App/STM32F4-Discovery/W5200.c **** 	// check mode parameter
 430:App/STM32F4-Discovery/W5200.c **** 	if((mode & 0x0f) > W5200_MR_PPPOE_ENABLE) return -1;	// mode error.
 1315              		.loc 1 430 0 is_stmt 1
 1316 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1317 0044 03F00F03 		and	r3, r3, #15
 1318 0048 082B     		cmp	r3, #8
 1319 004a 01DD     		ble	.L59
 1320              		.loc 1 430 0 is_stmt 0 discriminator 1
 1321 004c FF23     		movs	r3, #255
 1322 004e 78E0     		b	.L67
 1323              	.L59:
 431:App/STM32F4-Discovery/W5200.c **** 	if(((mode & 0x0f) != W5200_Sn_MR_UDP) && (mode & W5200_Sn_MR_MULTI)) return -1; // MULTI is UDP on
 1324              		.loc 1 431 0 is_stmt 1
 1325 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1326 0052 03F00F03 		and	r3, r3, #15
 1327 0056 022B     		cmp	r3, #2
 1328 0058 05D0     		beq	.L60
 1329              		.loc 1 431 0 is_stmt 0 discriminator 1
 1330 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1331 005c 5BB2     		sxtb	r3, r3
 1332 005e 002B     		cmp	r3, #0
 1333 0060 01DA     		bge	.L60
 1334 0062 FF23     		movs	r3, #255
 1335 0064 6DE0     		b	.L67
 1336              	.L60:
 432:App/STM32F4-Discovery/W5200.c **** 	if(((mode & 0x0f) != W5200_Sn_MR_TCP) && (mode & W5200_Sn_MR_ND)) return -1; // ND is TCP only.
 1337              		.loc 1 432 0 is_stmt 1
 1338 0066 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1339 0068 03F00F03 		and	r3, r3, #15
 1340 006c 012B     		cmp	r3, #1
 1341 006e 06D0     		beq	.L61
 1342              		.loc 1 432 0 is_stmt 0 discriminator 1
 1343 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1344 0072 03F02003 		and	r3, r3, #32
 1345 0076 002B     		cmp	r3, #0
 1346 0078 01D0     		beq	.L61
 1347 007a FF23     		movs	r3, #255
 1348 007c 61E0     		b	.L67
 1349              	.L61:
 433:App/STM32F4-Discovery/W5200.c **** 
 434:App/STM32F4-Discovery/W5200.c **** 	// set MODE register
 435:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_MR(sck_fd) , mode);
 1350              		.loc 1 435 0 is_stmt 1
 1351 007e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1352 0080 9BB2     		uxth	r3, r3
 1353 0082 1B02     		lsls	r3, r3, #8
 1354 0084 9BB2     		uxth	r3, r3
 1355 0086 03F58043 		add	r3, r3, #16384
 1356 008a 9AB2     		uxth	r2, r3
 1357 008c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1358 008e 1046     		mov	r0, r2
 1359 0090 1946     		mov	r1, r3
 1360 0092 FFF7FEFF 		bl	spi_dma_sendByte
 436:App/STM32F4-Discovery/W5200.c **** 	//socket_mode[sck_fd] = mode & 0x0f;	// omitting ND/MULTICAST
 437:App/STM32F4-Discovery/W5200.c **** 	mode &= 0x0f;
 1361              		.loc 1 437 0
 1362 0096 FB79     		ldrb	r3, [r7, #7]
 1363 0098 03F00F03 		and	r3, r3, #15
 1364 009c FB71     		strb	r3, [r7, #7]
 438:App/STM32F4-Discovery/W5200.c **** 
 439:App/STM32F4-Discovery/W5200.c **** 	uint8_t prt[2];
 440:App/STM32F4-Discovery/W5200.c **** 
 441:App/STM32F4-Discovery/W5200.c **** 	// set PORT, PROTOCOL 
 442:App/STM32F4-Discovery/W5200.c **** 	switch(mode){
 1365              		.loc 1 442 0
 1366 009e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1367 00a0 012B     		cmp	r3, #1
 1368 00a2 29DB     		blt	.L62
 1369 00a4 022B     		cmp	r3, #2
 1370 00a6 02DD     		ble	.L63
 1371 00a8 032B     		cmp	r3, #3
 1372 00aa 18D0     		beq	.L64
 1373 00ac 24E0     		b	.L62
 1374              	.L63:
 443:App/STM32F4-Discovery/W5200.c **** 	case W5200_Sn_MR_TCP:
 444:App/STM32F4-Discovery/W5200.c **** 	case W5200_Sn_MR_UDP:
 445:App/STM32F4-Discovery/W5200.c **** 
 446:App/STM32F4-Discovery/W5200.c **** 		// split port for sending on two 8bits
 447:App/STM32F4-Discovery/W5200.c **** 		prt[0] = (port & 0xff00) >> 8;
 1375              		.loc 1 447 0
 1376 00ae BB88     		ldrh	r3, [r7, #4]
 1377 00b0 1B0A     		lsrs	r3, r3, #8
 1378 00b2 9BB2     		uxth	r3, r3
 1379 00b4 DBB2     		uxtb	r3, r3
 1380 00b6 3B73     		strb	r3, [r7, #12]
 448:App/STM32F4-Discovery/W5200.c **** 		prt[1] =  (port & 0x00ff);
 1381              		.loc 1 448 0
 1382 00b8 BB88     		ldrh	r3, [r7, #4]	@ movhi
 1383 00ba DBB2     		uxtb	r3, r3
 1384 00bc 7B73     		strb	r3, [r7, #13]
 449:App/STM32F4-Discovery/W5200.c **** 		spi_dma_send(W5200_Sn_PORT(sck_fd), 2 , prt);
 1385              		.loc 1 449 0
 1386 00be FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1387 00c0 9BB2     		uxth	r3, r3
 1388 00c2 1B02     		lsls	r3, r3, #8
 1389 00c4 9BB2     		uxth	r3, r3
 1390 00c6 03F58043 		add	r3, r3, #16384
 1391 00ca 0433     		adds	r3, r3, #4
 1392 00cc 9AB2     		uxth	r2, r3
 1393 00ce 07F10C03 		add	r3, r7, #12
 1394 00d2 1046     		mov	r0, r2
 1395 00d4 0221     		movs	r1, #2
 1396 00d6 1A46     		mov	r2, r3
 1397 00d8 FFF7FEFF 		bl	spi_dma_send
 450:App/STM32F4-Discovery/W5200.c **** 		
 451:App/STM32F4-Discovery/W5200.c **** 		break;
 1398              		.loc 1 451 0
 1399 00dc 0CE0     		b	.L62
 1400              	.L64:
 452:App/STM32F4-Discovery/W5200.c **** 	case W5200_Sn_MR_IPRAW:
 453:App/STM32F4-Discovery/W5200.c **** 		spi_dma_sendByte(W5200_Sn_PROTO(sck_fd), ip_proto);
 1401              		.loc 1 453 0
 1402 00de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1403 00e0 9BB2     		uxth	r3, r3
 1404 00e2 1B02     		lsls	r3, r3, #8
 1405 00e4 9BB2     		uxth	r3, r3
 1406 00e6 03F58043 		add	r3, r3, #16384
 1407 00ea 1433     		adds	r3, r3, #20
 1408 00ec 9AB2     		uxth	r2, r3
 1409 00ee BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1410 00f0 1046     		mov	r0, r2
 1411 00f2 1946     		mov	r1, r3
 1412 00f4 FFF7FEFF 		bl	spi_dma_sendByte
 1413              	.L62:
 454:App/STM32F4-Discovery/W5200.c **** 	}
 455:App/STM32F4-Discovery/W5200.c **** 
 456:App/STM32F4-Discovery/W5200.c **** 	// execute socket open
 457:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_CR(sck_fd), W5200_Sn_CR_OPEN);
 1414              		.loc 1 457 0
 1415 00f8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1416 00fa 9BB2     		uxth	r3, r3
 1417 00fc 1B02     		lsls	r3, r3, #8
 1418 00fe 9BB2     		uxth	r3, r3
 1419 0100 03F58043 		add	r3, r3, #16384
 1420 0104 0133     		adds	r3, r3, #1
 1421 0106 9BB2     		uxth	r3, r3
 1422 0108 1846     		mov	r0, r3
 1423 010a 0121     		movs	r1, #1
 1424 010c FFF7FEFF 		bl	spi_dma_sendByte
 458:App/STM32F4-Discovery/W5200.c **** 	// wait command complete.
 459:App/STM32F4-Discovery/W5200.c **** 	while(get_CRStatus(sck_fd)  != 0);	// 0 value is command complete. 
 1425              		.loc 1 459 0
 1426 0110 00BF     		nop
 1427              	.L65:
 1428              		.loc 1 459 0 is_stmt 0 discriminator 1
 1429 0112 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1430 0114 1846     		mov	r0, r3
 1431 0116 FFF7FEFF 		bl	get_CRStatus
 1432 011a 0346     		mov	r3, r0
 1433 011c 002B     		cmp	r3, #0
 1434 011e F8D1     		bne	.L65
 460:App/STM32F4-Discovery/W5200.c **** 
 461:App/STM32F4-Discovery/W5200.c **** 	// check status
 462:App/STM32F4-Discovery/W5200.c **** 	if(stat = get_SRStatus(sck_fd) != W5200_Sn_SR_SOCK_INIT) return -1;
 1435              		.loc 1 462 0 is_stmt 1
 1436 0120 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1437 0122 1846     		mov	r0, r3
 1438 0124 FFF7FEFF 		bl	get_SRStatus
 1439 0128 0346     		mov	r3, r0
 1440 012a 132B     		cmp	r3, #19
 1441 012c 0CBF     		ite	eq
 1442 012e 0023     		moveq	r3, #0
 1443 0130 0123     		movne	r3, #1
 1444 0132 DBB2     		uxtb	r3, r3
 1445 0134 BB73     		strb	r3, [r7, #14]
 1446 0136 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1447 0138 002B     		cmp	r3, #0
 1448 013a 01D0     		beq	.L66
 1449              		.loc 1 462 0 is_stmt 0 discriminator 1
 1450 013c FF23     		movs	r3, #255
 1451 013e 00E0     		b	.L67
 1452              	.L66:
 463:App/STM32F4-Discovery/W5200.c **** 
 464:App/STM32F4-Discovery/W5200.c **** 	// success return
 465:App/STM32F4-Discovery/W5200.c **** 	return sck_fd;
 1453              		.loc 1 465 0 is_stmt 1
 1454 0140 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1455              	.L67:
 466:App/STM32F4-Discovery/W5200.c **** }
 1456              		.loc 1 466 0
 1457 0142 1846     		mov	r0, r3
 1458 0144 1037     		adds	r7, r7, #16
 1459 0146 BD46     		mov	sp, r7
 1460              		@ sp needed
 1461 0148 80BD     		pop	{r7, pc}
 1462              	.L69:
 1463 014a 00BF     		.align	2
 1464              	.L68:
 1465 014c 00000000 		.word	socket_flg
 1466              		.cfi_endproc
 1467              	.LFE126:
 1469              		.section	.text.closesocket,"ax",%progbits
 1470              		.align	2
 1471              		.global	closesocket
 1472              		.thumb
 1473              		.thumb_func
 1475              	closesocket:
 1476              	.LFB127:
 467:App/STM32F4-Discovery/W5200.c **** 
 468:App/STM32F4-Discovery/W5200.c **** 
 469:App/STM32F4-Discovery/W5200.c **** /*==========================================================================
 470:App/STM32F4-Discovery/W5200.c **** 	closesocket()	socket handle close
 471:App/STM32F4-Discovery/W5200.c **** ===========================================================================*/
 472:App/STM32F4-Discovery/W5200.c **** 
 473:App/STM32F4-Discovery/W5200.c **** int	closesocket(int sck_fd)
 474:App/STM32F4-Discovery/W5200.c **** {
 1477              		.loc 1 474 0
 1478              		.cfi_startproc
 1479              		@ args = 0, pretend = 0, frame = 8
 1480              		@ frame_needed = 1, uses_anonymous_args = 0
 1481 0000 80B5     		push	{r7, lr}
 1482              	.LCFI51:
 1483              		.cfi_def_cfa_offset 8
 1484              		.cfi_offset 7, -8
 1485              		.cfi_offset 14, -4
 1486 0002 82B0     		sub	sp, sp, #8
 1487              	.LCFI52:
 1488              		.cfi_def_cfa_offset 16
 1489 0004 00AF     		add	r7, sp, #0
 1490              	.LCFI53:
 1491              		.cfi_def_cfa_register 7
 1492 0006 7860     		str	r0, [r7, #4]
 475:App/STM32F4-Discovery/W5200.c **** 	// check asign flag
 476:App/STM32F4-Discovery/W5200.c **** 	if(sck_fd < 0 || sck_fd >=W5200_MAX_SOCKETS||  socket_flg[sck_fd] != 1) return -1;
 1493              		.loc 1 476 0
 1494 0008 7B68     		ldr	r3, [r7, #4]
 1495 000a 002B     		cmp	r3, #0
 1496 000c 08DB     		blt	.L71
 1497              		.loc 1 476 0 is_stmt 0 discriminator 2
 1498 000e 7B68     		ldr	r3, [r7, #4]
 1499 0010 072B     		cmp	r3, #7
 1500 0012 05DC     		bgt	.L71
 1501              		.loc 1 476 0 discriminator 1
 1502 0014 184A     		ldr	r2, .L76
 1503 0016 7B68     		ldr	r3, [r7, #4]
 1504 0018 1344     		add	r3, r3, r2
 1505 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1506 001c 012B     		cmp	r3, #1
 1507 001e 02D0     		beq	.L72
 1508              	.L71:
 1509 0020 4FF0FF33 		mov	r3, #-1
 1510 0024 23E0     		b	.L73
 1511              	.L72:
 477:App/STM32F4-Discovery/W5200.c **** 
 478:App/STM32F4-Discovery/W5200.c **** 	// release socket
 479:App/STM32F4-Discovery/W5200.c **** 	socket_flg[sck_fd] = 0;
 1512              		.loc 1 479 0 is_stmt 1
 1513 0026 144A     		ldr	r2, .L76
 1514 0028 7B68     		ldr	r3, [r7, #4]
 1515 002a 1344     		add	r3, r3, r2
 1516 002c 0022     		movs	r2, #0
 1517 002e 1A70     		strb	r2, [r3]
 480:App/STM32F4-Discovery/W5200.c **** 	
 481:App/STM32F4-Discovery/W5200.c **** 	// execute socket close
 482:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_CR(sck_fd), W5200_Sn_CR_CLOSE);
 1518              		.loc 1 482 0
 1519 0030 7B68     		ldr	r3, [r7, #4]
 1520 0032 9BB2     		uxth	r3, r3
 1521 0034 1B02     		lsls	r3, r3, #8
 1522 0036 9BB2     		uxth	r3, r3
 1523 0038 03F58043 		add	r3, r3, #16384
 1524 003c 0133     		adds	r3, r3, #1
 1525 003e 9BB2     		uxth	r3, r3
 1526 0040 1846     		mov	r0, r3
 1527 0042 1021     		movs	r1, #16
 1528 0044 FFF7FEFF 		bl	spi_dma_sendByte
 483:App/STM32F4-Discovery/W5200.c **** 	// wait command complete.
 484:App/STM32F4-Discovery/W5200.c **** 	while(get_CRStatus(sck_fd)  != 0);	// 0 value is command complete. 
 1529              		.loc 1 484 0
 1530 0048 00BF     		nop
 1531              	.L74:
 1532              		.loc 1 484 0 is_stmt 0 discriminator 1
 1533 004a 7B68     		ldr	r3, [r7, #4]
 1534 004c DBB2     		uxtb	r3, r3
 1535 004e 1846     		mov	r0, r3
 1536 0050 FFF7FEFF 		bl	get_CRStatus
 1537 0054 0346     		mov	r3, r0
 1538 0056 002B     		cmp	r3, #0
 1539 0058 F7D1     		bne	.L74
 485:App/STM32F4-Discovery/W5200.c **** 
 486:App/STM32F4-Discovery/W5200.c **** 	// check status
 487:App/STM32F4-Discovery/W5200.c **** 	while( get_SRStatus(sck_fd) != W5200_Sn_SR_SOCK_CLOSED);
 1540              		.loc 1 487 0 is_stmt 1
 1541 005a 00BF     		nop
 1542              	.L75:
 1543              		.loc 1 487 0 is_stmt 0 discriminator 1
 1544 005c 7B68     		ldr	r3, [r7, #4]
 1545 005e DBB2     		uxtb	r3, r3
 1546 0060 1846     		mov	r0, r3
 1547 0062 FFF7FEFF 		bl	get_SRStatus
 1548 0066 0346     		mov	r3, r0
 1549 0068 002B     		cmp	r3, #0
 1550 006a F7D1     		bne	.L75
 488:App/STM32F4-Discovery/W5200.c **** 
 489:App/STM32F4-Discovery/W5200.c **** 	// close success
 490:App/STM32F4-Discovery/W5200.c **** 	return 0;
 1551              		.loc 1 490 0 is_stmt 1
 1552 006c 0023     		movs	r3, #0
 1553              	.L73:
 491:App/STM32F4-Discovery/W5200.c **** }
 1554              		.loc 1 491 0
 1555 006e 1846     		mov	r0, r3
 1556 0070 0837     		adds	r7, r7, #8
 1557 0072 BD46     		mov	sp, r7
 1558              		@ sp needed
 1559 0074 80BD     		pop	{r7, pc}
 1560              	.L77:
 1561 0076 00BF     		.align	2
 1562              	.L76:
 1563 0078 00000000 		.word	socket_flg
 1564              		.cfi_endproc
 1565              	.LFE127:
 1567              		.section	.text.connect,"ax",%progbits
 1568              		.align	2
 1569              		.global	connect
 1570              		.thumb
 1571              		.thumb_func
 1573              	connect:
 1574              	.LFB128:
 492:App/STM32F4-Discovery/W5200.c **** 
 493:App/STM32F4-Discovery/W5200.c **** 
 494:App/STM32F4-Discovery/W5200.c **** /*==========================================================================
 495:App/STM32F4-Discovery/W5200.c **** 	connect()	connect to remote host (TCP only)
 496:App/STM32F4-Discovery/W5200.c **** ===========================================================================*/
 497:App/STM32F4-Discovery/W5200.c **** 
 498:App/STM32F4-Discovery/W5200.c **** int	connect(uint8_t sck_fd, uint8_t *to_ip, uint16_t to_port)
 499:App/STM32F4-Discovery/W5200.c **** {
 1575              		.loc 1 499 0
 1576              		.cfi_startproc
 1577              		@ args = 0, pretend = 0, frame = 16
 1578              		@ frame_needed = 1, uses_anonymous_args = 0
 1579 0000 80B5     		push	{r7, lr}
 1580              	.LCFI54:
 1581              		.cfi_def_cfa_offset 8
 1582              		.cfi_offset 7, -8
 1583              		.cfi_offset 14, -4
 1584 0002 84B0     		sub	sp, sp, #16
 1585              	.LCFI55:
 1586              		.cfi_def_cfa_offset 24
 1587 0004 00AF     		add	r7, sp, #0
 1588              	.LCFI56:
 1589              		.cfi_def_cfa_register 7
 1590 0006 3960     		str	r1, [r7]
 1591 0008 1346     		mov	r3, r2
 1592 000a 0246     		mov	r2, r0
 1593 000c FA71     		strb	r2, [r7, #7]
 1594 000e BB80     		strh	r3, [r7, #4]	@ movhi
 500:App/STM32F4-Discovery/W5200.c **** 	uint8_t	status;
 501:App/STM32F4-Discovery/W5200.c **** 
 502:App/STM32F4-Discovery/W5200.c **** 	// check socket asign flag
 503:App/STM32F4-Discovery/W5200.c **** 	if(sck_fd < 0 || sck_fd >= W5200_MAX_SOCKETS ||  socket_flg[sck_fd] != 1) return -1;
 1595              		.loc 1 503 0
 1596 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1597 0012 072B     		cmp	r3, #7
 1598 0014 04D8     		bhi	.L79
 1599              		.loc 1 503 0 is_stmt 0 discriminator 2
 1600 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1601 0018 3A4A     		ldr	r2, .L89
 1602 001a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1603 001c 012B     		cmp	r3, #1
 1604 001e 02D0     		beq	.L80
 1605              	.L79:
 1606              		.loc 1 503 0 discriminator 1
 1607 0020 4FF0FF33 		mov	r3, #-1
 1608 0024 6AE0     		b	.L88
 1609              	.L80:
 504:App/STM32F4-Discovery/W5200.c **** 
 505:App/STM32F4-Discovery/W5200.c **** 	// check parameter
 506:App/STM32F4-Discovery/W5200.c **** 	if(to_ip == NULL || to_port == 0) return -1;
 1610              		.loc 1 506 0 is_stmt 1
 1611 0026 3B68     		ldr	r3, [r7]
 1612 0028 002B     		cmp	r3, #0
 1613 002a 02D0     		beq	.L82
 1614              		.loc 1 506 0 is_stmt 0 discriminator 2
 1615 002c BB88     		ldrh	r3, [r7, #4]
 1616 002e 002B     		cmp	r3, #0
 1617 0030 02D1     		bne	.L83
 1618              	.L82:
 1619              		.loc 1 506 0 discriminator 1
 1620 0032 4FF0FF33 		mov	r3, #-1
 1621 0036 61E0     		b	.L88
 1622              	.L83:
 507:App/STM32F4-Discovery/W5200.c **** 	if(get_SRStatus(sck_fd) !=  W5200_Sn_SR_SOCK_INIT) return -1;
 1623              		.loc 1 507 0 is_stmt 1
 1624 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1625 003a 1846     		mov	r0, r3
 1626 003c FFF7FEFF 		bl	get_SRStatus
 1627 0040 0346     		mov	r3, r0
 1628 0042 132B     		cmp	r3, #19
 1629 0044 02D0     		beq	.L84
 1630              		.loc 1 507 0 is_stmt 0 discriminator 1
 1631 0046 4FF0FF33 		mov	r3, #-1
 1632 004a 57E0     		b	.L88
 1633              	.L84:
 508:App/STM32F4-Discovery/W5200.c **** 	status = get_SRStatus(sck_fd);
 1634              		.loc 1 508 0 is_stmt 1
 1635 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1636 004e 1846     		mov	r0, r3
 1637 0050 FFF7FEFF 		bl	get_SRStatus
 1638 0054 0346     		mov	r3, r0
 1639 0056 FB73     		strb	r3, [r7, #15]
 509:App/STM32F4-Discovery/W5200.c **** 	
 510:App/STM32F4-Discovery/W5200.c **** 	// set IP/PORT
 511:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send(W5200_Sn_DIPR(sck_fd), 4, to_ip);
 1640              		.loc 1 511 0
 1641 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1642 005a 9BB2     		uxth	r3, r3
 1643 005c 1B02     		lsls	r3, r3, #8
 1644 005e 9BB2     		uxth	r3, r3
 1645 0060 03F58043 		add	r3, r3, #16384
 1646 0064 0C33     		adds	r3, r3, #12
 1647 0066 9BB2     		uxth	r3, r3
 1648 0068 1846     		mov	r0, r3
 1649 006a 0421     		movs	r1, #4
 1650 006c 3A68     		ldr	r2, [r7]
 1651 006e FFF7FEFF 		bl	spi_dma_send
 512:App/STM32F4-Discovery/W5200.c **** 	// split port for sending on two 8bits
 513:App/STM32F4-Discovery/W5200.c **** 	uint8_t prt[2];
 514:App/STM32F4-Discovery/W5200.c **** 		prt[0] = (to_port & 0xff00) >> 8;
 1652              		.loc 1 514 0
 1653 0072 BB88     		ldrh	r3, [r7, #4]
 1654 0074 1B0A     		lsrs	r3, r3, #8
 1655 0076 9BB2     		uxth	r3, r3
 1656 0078 DBB2     		uxtb	r3, r3
 1657 007a 3B73     		strb	r3, [r7, #12]
 515:App/STM32F4-Discovery/W5200.c **** 		prt[1] =  (to_port & 0x00ff);
 1658              		.loc 1 515 0
 1659 007c BB88     		ldrh	r3, [r7, #4]	@ movhi
 1660 007e DBB2     		uxtb	r3, r3
 1661 0080 7B73     		strb	r3, [r7, #13]
 516:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send(W5200_Sn_DPORT(sck_fd), 2 , prt);
 1662              		.loc 1 516 0
 1663 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1664 0084 9BB2     		uxth	r3, r3
 1665 0086 1B02     		lsls	r3, r3, #8
 1666 0088 9BB2     		uxth	r3, r3
 1667 008a 03F58043 		add	r3, r3, #16384
 1668 008e 1033     		adds	r3, r3, #16
 1669 0090 9AB2     		uxth	r2, r3
 1670 0092 07F10C03 		add	r3, r7, #12
 1671 0096 1046     		mov	r0, r2
 1672 0098 0221     		movs	r1, #2
 1673 009a 1A46     		mov	r2, r3
 1674 009c FFF7FEFF 		bl	spi_dma_send
 517:App/STM32F4-Discovery/W5200.c **** 	
 518:App/STM32F4-Discovery/W5200.c **** 	// CONNECT command
 519:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_CR(sck_fd), W5200_Sn_CR_CONNECT);
 1675              		.loc 1 519 0
 1676 00a0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1677 00a2 9BB2     		uxth	r3, r3
 1678 00a4 1B02     		lsls	r3, r3, #8
 1679 00a6 9BB2     		uxth	r3, r3
 1680 00a8 03F58043 		add	r3, r3, #16384
 1681 00ac 0133     		adds	r3, r3, #1
 1682 00ae 9BB2     		uxth	r3, r3
 1683 00b0 1846     		mov	r0, r3
 1684 00b2 0421     		movs	r1, #4
 1685 00b4 FFF7FEFF 		bl	spi_dma_sendByte
 520:App/STM32F4-Discovery/W5200.c **** 	while(get_CRStatus(sck_fd) != 0);	// command complete
 1686              		.loc 1 520 0
 1687 00b8 00BF     		nop
 1688              	.L85:
 1689              		.loc 1 520 0 is_stmt 0 discriminator 1
 1690 00ba FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1691 00bc 1846     		mov	r0, r3
 1692 00be FFF7FEFF 		bl	get_CRStatus
 1693 00c2 0346     		mov	r3, r0
 1694 00c4 002B     		cmp	r3, #0
 1695 00c6 F8D1     		bne	.L85
 521:App/STM32F4-Discovery/W5200.c **** 
 522:App/STM32F4-Discovery/W5200.c **** 	// check status
 523:App/STM32F4-Discovery/W5200.c **** 	while(status = get_SRStatus(sck_fd) !=  W5200_Sn_SR_SOCK_ESTABLISHED){
 1696              		.loc 1 523 0 is_stmt 1
 1697 00c8 09E0     		b	.L86
 1698              	.L87:
 524:App/STM32F4-Discovery/W5200.c **** 		if(status == W5200_Sn_SR_SOCK_CLOSED) {
 1699              		.loc 1 524 0
 1700 00ca FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1701 00cc 002B     		cmp	r3, #0
 1702 00ce 06D1     		bne	.L86
 525:App/STM32F4-Discovery/W5200.c **** 			socket_flg[sck_fd] = 0;
 1703              		.loc 1 525 0
 1704 00d0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1705 00d2 0C4A     		ldr	r2, .L89
 1706 00d4 0021     		movs	r1, #0
 1707 00d6 D154     		strb	r1, [r2, r3]
 526:App/STM32F4-Discovery/W5200.c **** 			return -1;
 1708              		.loc 1 526 0
 1709 00d8 4FF0FF33 		mov	r3, #-1
 1710 00dc 0EE0     		b	.L88
 1711              	.L86:
 523:App/STM32F4-Discovery/W5200.c **** 	while(status = get_SRStatus(sck_fd) !=  W5200_Sn_SR_SOCK_ESTABLISHED){
 1712              		.loc 1 523 0 discriminator 1
 1713 00de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1714 00e0 1846     		mov	r0, r3
 1715 00e2 FFF7FEFF 		bl	get_SRStatus
 1716 00e6 0346     		mov	r3, r0
 1717 00e8 172B     		cmp	r3, #23
 1718 00ea 0CBF     		ite	eq
 1719 00ec 0023     		moveq	r3, #0
 1720 00ee 0123     		movne	r3, #1
 1721 00f0 DBB2     		uxtb	r3, r3
 1722 00f2 FB73     		strb	r3, [r7, #15]
 1723 00f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1724 00f6 002B     		cmp	r3, #0
 1725 00f8 E7D1     		bne	.L87
 527:App/STM32F4-Discovery/W5200.c **** 		}
 528:App/STM32F4-Discovery/W5200.c **** 	}
 529:App/STM32F4-Discovery/W5200.c **** 
 530:App/STM32F4-Discovery/W5200.c **** 	
 531:App/STM32F4-Discovery/W5200.c **** 
 532:App/STM32F4-Discovery/W5200.c **** 	return 0;	// connect success complete
 1726              		.loc 1 532 0
 1727 00fa 0023     		movs	r3, #0
 1728              	.L88:
 533:App/STM32F4-Discovery/W5200.c **** }
 1729              		.loc 1 533 0
 1730 00fc 1846     		mov	r0, r3
 1731 00fe 1037     		adds	r7, r7, #16
 1732 0100 BD46     		mov	sp, r7
 1733              		@ sp needed
 1734 0102 80BD     		pop	{r7, pc}
 1735              	.L90:
 1736              		.align	2
 1737              	.L89:
 1738 0104 00000000 		.word	socket_flg
 1739              		.cfi_endproc
 1740              	.LFE128:
 1742              		.section	.text.send,"ax",%progbits
 1743              		.align	2
 1744              		.global	send
 1745              		.thumb
 1746              		.thumb_func
 1748              	send:
 1749              	.LFB129:
 534:App/STM32F4-Discovery/W5200.c **** 
 535:App/STM32F4-Discovery/W5200.c **** /*==========================================================================
 536:App/STM32F4-Discovery/W5200.c **** 	send()	send *buf to  (TCP only)
 537:App/STM32F4-Discovery/W5200.c **** ===========================================================================*/
 538:App/STM32F4-Discovery/W5200.c **** 
 539:App/STM32F4-Discovery/W5200.c **** int	send(uint8_t sck_fd, uint8_t *buf, uint16_t len, uint16_t flag)
 540:App/STM32F4-Discovery/W5200.c **** {
 1750              		.loc 1 540 0
 1751              		.cfi_startproc
 1752              		@ args = 0, pretend = 0, frame = 40
 1753              		@ frame_needed = 1, uses_anonymous_args = 0
 1754 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1755              	.LCFI57:
 1756              		.cfi_def_cfa_offset 28
 1757              		.cfi_offset 4, -28
 1758              		.cfi_offset 5, -24
 1759              		.cfi_offset 6, -20
 1760              		.cfi_offset 7, -16
 1761              		.cfi_offset 8, -12
 1762              		.cfi_offset 9, -8
 1763              		.cfi_offset 14, -4
 1764 0004 8BB0     		sub	sp, sp, #44
 1765              	.LCFI58:
 1766              		.cfi_def_cfa_offset 72
 1767 0006 00AF     		add	r7, sp, #0
 1768              	.LCFI59:
 1769              		.cfi_def_cfa_register 7
 1770 0008 B960     		str	r1, [r7, #8]
 1771 000a 0146     		mov	r1, r0
 1772 000c F973     		strb	r1, [r7, #15]
 1773 000e BA81     		strh	r2, [r7, #12]	@ movhi
 1774 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 541:App/STM32F4-Discovery/W5200.c **** 	uint16_t	send_size;
 542:App/STM32F4-Discovery/W5200.c **** 	uint16_t	write_ptr;
 543:App/STM32F4-Discovery/W5200.c **** 	uint16_t status = get_SRStatus(sck_fd);
 1775              		.loc 1 543 0
 1776 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1777 0014 1846     		mov	r0, r3
 1778 0016 FFF7FEFF 		bl	get_SRStatus
 1779 001a 0346     		mov	r3, r0
 1780 001c BB84     		strh	r3, [r7, #36]	@ movhi
 544:App/STM32F4-Discovery/W5200.c **** 	// check socket asign flag
 545:App/STM32F4-Discovery/W5200.c **** 	if(sck_fd < 0 || sck_fd >= W5200_MAX_SOCKETS ||  socket_flg[sck_fd] != 1) return -1;
 1781              		.loc 1 545 0
 1782 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1783 0020 072B     		cmp	r3, #7
 1784 0022 04D8     		bhi	.L92
 1785              		.loc 1 545 0 is_stmt 0 discriminator 2
 1786 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1787 0026 564A     		ldr	r2, .L103
 1788 0028 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1789 002a 012B     		cmp	r3, #1
 1790 002c 02D0     		beq	.L93
 1791              	.L92:
 1792              		.loc 1 545 0 discriminator 1
 1793 002e 4FF0FF33 		mov	r3, #-1
 1794 0032 A0E0     		b	.L94
 1795              	.L93:
 546:App/STM32F4-Discovery/W5200.c **** 
 547:App/STM32F4-Discovery/W5200.c **** 	// check parameter
 548:App/STM32F4-Discovery/W5200.c **** 	if(buf == NULL || len == 0) return -1;
 1796              		.loc 1 548 0 is_stmt 1
 1797 0034 BB68     		ldr	r3, [r7, #8]
 1798 0036 002B     		cmp	r3, #0
 1799 0038 02D0     		beq	.L95
 1800              		.loc 1 548 0 is_stmt 0 discriminator 2
 1801 003a BB89     		ldrh	r3, [r7, #12]
 1802 003c 002B     		cmp	r3, #0
 1803 003e 02D1     		bne	.L96
 1804              	.L95:
 1805              		.loc 1 548 0 discriminator 1
 1806 0040 4FF0FF33 		mov	r3, #-1
 1807 0044 97E0     		b	.L94
 1808              	.L96:
 549:App/STM32F4-Discovery/W5200.c **** 	
 550:App/STM32F4-Discovery/W5200.c **** 	// check status
 551:App/STM32F4-Discovery/W5200.c **** 	if(get_SRStatus(sck_fd) != W5200_Sn_SR_SOCK_ESTABLISHED) return 0; // closing or fin close wait.
 1809              		.loc 1 551 0 is_stmt 1
 1810 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1811 0048 1846     		mov	r0, r3
 1812 004a FFF7FEFF 		bl	get_SRStatus
 1813 004e 0346     		mov	r3, r0
 1814 0050 172B     		cmp	r3, #23
 1815 0052 01D0     		beq	.L97
 1816              		.loc 1 551 0 is_stmt 0 discriminator 1
 1817 0054 0023     		movs	r3, #0
 1818 0056 8EE0     		b	.L94
 1819              	.L97:
 552:App/STM32F4-Discovery/W5200.c **** 
 553:App/STM32F4-Discovery/W5200.c **** 	// check TX memory free size?
 554:App/STM32F4-Discovery/W5200.c **** 	while((send_size = get_TXFSRStatus(sck_fd)) == 0){
 1820              		.loc 1 554 0 is_stmt 1
 1821 0058 04E0     		b	.L98
 1822              	.L99:
 555:App/STM32F4-Discovery/W5200.c **** 		if(flag == 1) return 0;	// NONE BLOCKING
 1823              		.loc 1 555 0
 1824 005a FB88     		ldrh	r3, [r7, #6]
 1825 005c 012B     		cmp	r3, #1
 1826 005e 01D1     		bne	.L98
 1827              		.loc 1 555 0 is_stmt 0 discriminator 1
 1828 0060 0023     		movs	r3, #0
 1829 0062 88E0     		b	.L94
 1830              	.L98:
 554:App/STM32F4-Discovery/W5200.c **** 	while((send_size = get_TXFSRStatus(sck_fd)) == 0){
 1831              		.loc 1 554 0 is_stmt 1 discriminator 1
 1832 0064 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1833 0066 1846     		mov	r0, r3
 1834 0068 FFF7FEFF 		bl	get_TXFSRStatus
 1835 006c 0346     		mov	r3, r0
 1836 006e FB84     		strh	r3, [r7, #38]	@ movhi
 1837 0070 FB8C     		ldrh	r3, [r7, #38]
 1838 0072 002B     		cmp	r3, #0
 1839 0074 F1D0     		beq	.L99
 556:App/STM32F4-Discovery/W5200.c **** 	}
 557:App/STM32F4-Discovery/W5200.c **** 
 558:App/STM32F4-Discovery/W5200.c **** 	// get write pointer
 559:App/STM32F4-Discovery/W5200.c **** 	write_ptr = get_TXWRStatus(sck_fd);
 1840              		.loc 1 559 0
 1841 0076 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1842 0078 1846     		mov	r0, r3
 1843 007a FFF7FEFF 		bl	get_TXWRStatus
 1844 007e 0346     		mov	r3, r0
 1845 0080 7B84     		strh	r3, [r7, #34]	@ movhi
 560:App/STM32F4-Discovery/W5200.c **** 
 561:App/STM32F4-Discovery/W5200.c **** 	// check write length
 562:App/STM32F4-Discovery/W5200.c **** 	if(send_size > len) send_size = len;
 1846              		.loc 1 562 0
 1847 0082 FA8C     		ldrh	r2, [r7, #38]
 1848 0084 BB89     		ldrh	r3, [r7, #12]
 1849 0086 9A42     		cmp	r2, r3
 1850 0088 01D9     		bls	.L100
 1851              		.loc 1 562 0 is_stmt 0 discriminator 1
 1852 008a BB89     		ldrh	r3, [r7, #12]	@ movhi
 1853 008c FB84     		strh	r3, [r7, #38]	@ movhi
 1854              	.L100:
 563:App/STM32F4-Discovery/W5200.c **** 
 564:App/STM32F4-Discovery/W5200.c **** 	// data write to memory
 565:App/STM32F4-Discovery/W5200.c **** 	write_memory(sck_fd, write_ptr, buf, send_size);
 1855              		.loc 1 565 0 is_stmt 1
 1856 008e F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 1857 0090 7A8C     		ldrh	r2, [r7, #34]
 1858 0092 FB8C     		ldrh	r3, [r7, #38]
 1859 0094 0846     		mov	r0, r1
 1860 0096 1146     		mov	r1, r2
 1861 0098 BA68     		ldr	r2, [r7, #8]
 1862 009a FFF7FEFF 		bl	write_memory
 566:App/STM32F4-Discovery/W5200.c **** 
 567:App/STM32F4-Discovery/W5200.c **** 	// pointer update
 568:App/STM32F4-Discovery/W5200.c **** 	write_ptr += send_size;
 1863              		.loc 1 568 0
 1864 009e 7A8C     		ldrh	r2, [r7, #34]	@ movhi
 1865 00a0 FB8C     		ldrh	r3, [r7, #38]	@ movhi
 1866 00a2 1344     		add	r3, r3, r2
 1867 00a4 7B84     		strh	r3, [r7, #34]	@ movhi
 569:App/STM32F4-Discovery/W5200.c **** 	set_TXWR(sck_fd, write_ptr);
 1868              		.loc 1 569 0
 1869 00a6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1870 00a8 7B8C     		ldrh	r3, [r7, #34]
 1871 00aa 1046     		mov	r0, r2
 1872 00ac 1946     		mov	r1, r3
 1873 00ae FFF7FEFF 		bl	set_TXWR
 570:App/STM32F4-Discovery/W5200.c **** 		
 571:App/STM32F4-Discovery/W5200.c **** 	// test function 
 572:App/STM32F4-Discovery/W5200.c **** 	
 573:App/STM32F4-Discovery/W5200.c **** 
 574:App/STM32F4-Discovery/W5200.c **** 	uint16_t start = get_TXRD(sck_fd);
 1874              		.loc 1 574 0
 1875 00b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1876 00b4 1846     		mov	r0, r3
 1877 00b6 FFF7FEFF 		bl	get_TXRD
 1878 00ba 0346     		mov	r3, r0
 1879 00bc 3B84     		strh	r3, [r7, #32]	@ movhi
 575:App/STM32F4-Discovery/W5200.c **** 	uint16_t end   = get_TXWRStatus(sck_fd); 
 1880              		.loc 1 575 0
 1881 00be FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1882 00c0 1846     		mov	r0, r3
 1883 00c2 FFF7FEFF 		bl	get_TXWRStatus
 1884 00c6 0346     		mov	r3, r0
 1885 00c8 FB83     		strh	r3, [r7, #30]	@ movhi
 576:App/STM32F4-Discovery/W5200.c **** 	uint8_t data [write_ptr-start]; 	
 1886              		.loc 1 576 0
 1887 00ca 7A8C     		ldrh	r2, [r7, #34]
 1888 00cc 3B8C     		ldrh	r3, [r7, #32]
 1889 00ce D11A     		subs	r1, r2, r3
 1890 00d0 6B46     		mov	r3, sp
 1891 00d2 1E46     		mov	r6, r3
 1892 00d4 4B1E     		subs	r3, r1, #1
 1893 00d6 BB61     		str	r3, [r7, #24]
 1894 00d8 0B46     		mov	r3, r1
 1895 00da 1A46     		mov	r2, r3
 1896 00dc 4FF00003 		mov	r3, #0
 1897 00e0 4FEAC309 		lsl	r9, r3, #3
 1898 00e4 49EA5279 		orr	r9, r9, r2, lsr #29
 1899 00e8 4FEAC208 		lsl	r8, r2, #3
 1900 00ec 0B46     		mov	r3, r1
 1901 00ee 1A46     		mov	r2, r3
 1902 00f0 4FF00003 		mov	r3, #0
 1903 00f4 DD00     		lsls	r5, r3, #3
 1904 00f6 45EA5275 		orr	r5, r5, r2, lsr #29
 1905 00fa D400     		lsls	r4, r2, #3
 1906 00fc 0B46     		mov	r3, r1
 1907 00fe 0733     		adds	r3, r3, #7
 1908 0100 DB08     		lsrs	r3, r3, #3
 1909 0102 DB00     		lsls	r3, r3, #3
 1910 0104 ADEB030D 		sub	sp, sp, r3
 1911 0108 6B46     		mov	r3, sp
 1912 010a 0033     		adds	r3, r3, #0
 1913 010c 7B61     		str	r3, [r7, #20]
 577:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(start+0x8000, write_ptr-start );
 1914              		.loc 1 577 0
 1915 010e 3B8C     		ldrh	r3, [r7, #32]	@ movhi
 1916 0110 A3F50043 		sub	r3, r3, #32768
 1917 0114 9AB2     		uxth	r2, r3
 1918 0116 798C     		ldrh	r1, [r7, #34]	@ movhi
 1919 0118 3B8C     		ldrh	r3, [r7, #32]	@ movhi
 1920 011a CB1A     		subs	r3, r1, r3
 1921 011c 9BB2     		uxth	r3, r3
 1922 011e 1046     		mov	r0, r2
 1923 0120 1946     		mov	r1, r3
 1924 0122 FFF7FEFF 		bl	spi_dma_read
 578:App/STM32F4-Discovery/W5200.c **** 	memcpy(data, bufferRX +4, write_ptr-start);
 1925              		.loc 1 578 0
 1926 0126 7A69     		ldr	r2, [r7, #20]
 1927 0128 798C     		ldrh	r1, [r7, #34]
 1928 012a 3B8C     		ldrh	r3, [r7, #32]
 1929 012c CB1A     		subs	r3, r1, r3
 1930 012e 1046     		mov	r0, r2
 1931 0130 1449     		ldr	r1, .L103+4
 1932 0132 1A46     		mov	r2, r3
 1933 0134 FFF7FEFF 		bl	memcpy
 579:App/STM32F4-Discovery/W5200.c **** 
 580:App/STM32F4-Discovery/W5200.c **** 	
 581:App/STM32F4-Discovery/W5200.c **** 	// test function 
 582:App/STM32F4-Discovery/W5200.c **** 	
 583:App/STM32F4-Discovery/W5200.c **** 	// send command
 584:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_CR(sck_fd), W5200_Sn_CR_SEND);
 1934              		.loc 1 584 0
 1935 0138 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1936 013a 9BB2     		uxth	r3, r3
 1937 013c 1B02     		lsls	r3, r3, #8
 1938 013e 9BB2     		uxth	r3, r3
 1939 0140 03F58043 		add	r3, r3, #16384
 1940 0144 0133     		adds	r3, r3, #1
 1941 0146 9BB2     		uxth	r3, r3
 1942 0148 1846     		mov	r0, r3
 1943 014a 2021     		movs	r1, #32
 1944 014c FFF7FEFF 		bl	spi_dma_sendByte
 585:App/STM32F4-Discovery/W5200.c **** 	// wait command complete.
 586:App/STM32F4-Discovery/W5200.c **** 	while(get_CRStatus(sck_fd) != 0);	// 0 value is command complete. 
 1945              		.loc 1 586 0
 1946 0150 00BF     		nop
 1947              	.L101:
 1948              		.loc 1 586 0 is_stmt 0 discriminator 1
 1949 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1950 0154 1846     		mov	r0, r3
 1951 0156 FFF7FEFF 		bl	get_CRStatus
 1952 015a 0346     		mov	r3, r0
 1953 015c 002B     		cmp	r3, #0
 1954 015e F8D1     		bne	.L101
 587:App/STM32F4-Discovery/W5200.c **** 
 588:App/STM32F4-Discovery/W5200.c **** 	// wait sending complete
 589:App/STM32F4-Discovery/W5200.c **** 	while(get_TXRD(sck_fd) != write_ptr);
 1955              		.loc 1 589 0 is_stmt 1
 1956 0160 00BF     		nop
 1957              	.L102:
 1958              		.loc 1 589 0 is_stmt 0 discriminator 1
 1959 0162 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1960 0164 1846     		mov	r0, r3
 1961 0166 FFF7FEFF 		bl	get_TXRD
 1962 016a 0346     		mov	r3, r0
 1963 016c 7A8C     		ldrh	r2, [r7, #34]
 1964 016e 9A42     		cmp	r2, r3
 1965 0170 F7D1     		bne	.L102
 590:App/STM32F4-Discovery/W5200.c **** 
 591:App/STM32F4-Discovery/W5200.c **** 	return send_size;
 1966              		.loc 1 591 0 is_stmt 1
 1967 0172 FB8C     		ldrh	r3, [r7, #38]
 1968 0174 B546     		mov	sp, r6
 1969              	.L94:
 592:App/STM32F4-Discovery/W5200.c **** }
 1970              		.loc 1 592 0
 1971 0176 1846     		mov	r0, r3
 1972 0178 2C37     		adds	r7, r7, #44
 1973 017a BD46     		mov	sp, r7
 1974              		@ sp needed
 1975 017c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1976              	.L104:
 1977              		.align	2
 1978              	.L103:
 1979 0180 00000000 		.word	socket_flg
 1980 0184 04000000 		.word	bufferRX+4
 1981              		.cfi_endproc
 1982              	.LFE129:
 1984              		.section	.text.recv,"ax",%progbits
 1985              		.align	2
 1986              		.global	recv
 1987              		.thumb
 1988              		.thumb_func
 1990              	recv:
 1991              	.LFB130:
 593:App/STM32F4-Discovery/W5200.c **** 
 594:App/STM32F4-Discovery/W5200.c **** /*==========================================================================
 595:App/STM32F4-Discovery/W5200.c **** 	recv()	receiving data from remote terminal (TCP)
 596:App/STM32F4-Discovery/W5200.c **** 	flag is NONE_BLOCK / BLOCK
 597:App/STM32F4-Discovery/W5200.c **** 	return code is received data size.
 598:App/STM32F4-Discovery/W5200.c **** 	if received disconnectÂ@from peer, size was set to Zero, 
 599:App/STM32F4-Discovery/W5200.c **** ===========================================================================*/
 600:App/STM32F4-Discovery/W5200.c **** 
 601:App/STM32F4-Discovery/W5200.c **** int	recv(uint8_t sck_fd, uint8_t *buf, uint16_t len, uint16_t flag)
 602:App/STM32F4-Discovery/W5200.c **** {
 1992              		.loc 1 602 0
 1993              		.cfi_startproc
 1994              		@ args = 0, pretend = 0, frame = 24
 1995              		@ frame_needed = 1, uses_anonymous_args = 0
 1996 0000 80B5     		push	{r7, lr}
 1997              	.LCFI60:
 1998              		.cfi_def_cfa_offset 8
 1999              		.cfi_offset 7, -8
 2000              		.cfi_offset 14, -4
 2001 0002 86B0     		sub	sp, sp, #24
 2002              	.LCFI61:
 2003              		.cfi_def_cfa_offset 32
 2004 0004 00AF     		add	r7, sp, #0
 2005              	.LCFI62:
 2006              		.cfi_def_cfa_register 7
 2007 0006 B960     		str	r1, [r7, #8]
 2008 0008 0146     		mov	r1, r0
 2009 000a F973     		strb	r1, [r7, #15]
 2010 000c BA81     		strh	r2, [r7, #12]	@ movhi
 2011 000e FB80     		strh	r3, [r7, #6]	@ movhi
 603:App/STM32F4-Discovery/W5200.c **** 	uint16_t	read_len;
 604:App/STM32F4-Discovery/W5200.c **** 	uint16_t	read_ptr;
 605:App/STM32F4-Discovery/W5200.c **** 
 606:App/STM32F4-Discovery/W5200.c **** 	// check asign flag
 607:App/STM32F4-Discovery/W5200.c **** 	if(sck_fd < 0 || sck_fd >= W5200_MAX_SOCKETS ||  socket_flg[sck_fd] != 1) return -1;
 2012              		.loc 1 607 0
 2013 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2014 0012 072B     		cmp	r3, #7
 2015 0014 04D8     		bhi	.L106
 2016              		.loc 1 607 0 is_stmt 0 discriminator 2
 2017 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2018 0018 314A     		ldr	r2, .L115
 2019 001a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2020 001c 012B     		cmp	r3, #1
 2021 001e 02D0     		beq	.L107
 2022              	.L106:
 2023              		.loc 1 607 0 discriminator 1
 2024 0020 4FF0FF33 		mov	r3, #-1
 2025 0024 57E0     		b	.L108
 2026              	.L107:
 608:App/STM32F4-Discovery/W5200.c **** 
 609:App/STM32F4-Discovery/W5200.c **** 	// check parameter
 610:App/STM32F4-Discovery/W5200.c **** 	if(buf == NULL || len == 0) return -1;
 2027              		.loc 1 610 0 is_stmt 1
 2028 0026 BB68     		ldr	r3, [r7, #8]
 2029 0028 002B     		cmp	r3, #0
 2030 002a 02D0     		beq	.L109
 2031              		.loc 1 610 0 is_stmt 0 discriminator 2
 2032 002c BB89     		ldrh	r3, [r7, #12]
 2033 002e 002B     		cmp	r3, #0
 2034 0030 02D1     		bne	.L110
 2035              	.L109:
 2036              		.loc 1 610 0 discriminator 1
 2037 0032 4FF0FF33 		mov	r3, #-1
 2038 0036 4EE0     		b	.L108
 2039              	.L110:
 611:App/STM32F4-Discovery/W5200.c **** 
 612:App/STM32F4-Discovery/W5200.c **** 	// check status
 613:App/STM32F4-Discovery/W5200.c **** 	if(get_SRStatus(sck_fd) != W5200_Sn_SR_SOCK_ESTABLISHED) return 0;	// closing or fin close wait.
 2040              		.loc 1 613 0 is_stmt 1
 2041 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2042 003a 1846     		mov	r0, r3
 2043 003c FFF7FEFF 		bl	get_SRStatus
 2044 0040 0346     		mov	r3, r0
 2045 0042 172B     		cmp	r3, #23
 2046 0044 01D0     		beq	.L111
 2047              		.loc 1 613 0 is_stmt 0 discriminator 1
 2048 0046 0023     		movs	r3, #0
 2049 0048 45E0     		b	.L108
 2050              	.L111:
 614:App/STM32F4-Discovery/W5200.c **** 
 615:App/STM32F4-Discovery/W5200.c **** 	// received data exists?
 616:App/STM32F4-Discovery/W5200.c **** 	while((read_len = get_RXRSR(sck_fd)) == 0){
 2051              		.loc 1 616 0 is_stmt 1
 2052 004a 04E0     		b	.L112
 2053              	.L113:
 617:App/STM32F4-Discovery/W5200.c **** 		if(flag == 1) return 0;	// NONE BLOCKING
 2054              		.loc 1 617 0
 2055 004c FB88     		ldrh	r3, [r7, #6]
 2056 004e 012B     		cmp	r3, #1
 2057 0050 01D1     		bne	.L112
 2058              		.loc 1 617 0 is_stmt 0 discriminator 1
 2059 0052 0023     		movs	r3, #0
 2060 0054 3FE0     		b	.L108
 2061              	.L112:
 616:App/STM32F4-Discovery/W5200.c **** 	while((read_len = get_RXRSR(sck_fd)) == 0){
 2062              		.loc 1 616 0 is_stmt 1 discriminator 1
 2063 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2064 0058 1846     		mov	r0, r3
 2065 005a FFF7FEFF 		bl	get_RXRSR
 2066 005e 0346     		mov	r3, r0
 2067 0060 FB82     		strh	r3, [r7, #22]	@ movhi
 2068 0062 FB8A     		ldrh	r3, [r7, #22]
 2069 0064 002B     		cmp	r3, #0
 2070 0066 F1D0     		beq	.L113
 618:App/STM32F4-Discovery/W5200.c **** 	}
 619:App/STM32F4-Discovery/W5200.c **** 
 620:App/STM32F4-Discovery/W5200.c **** 	// set read length
 621:App/STM32F4-Discovery/W5200.c **** 	//if(read_len > len) read_len = len;
 622:App/STM32F4-Discovery/W5200.c **** 
 623:App/STM32F4-Discovery/W5200.c **** 	// get read pointer
 624:App/STM32F4-Discovery/W5200.c **** 	read_ptr = get_RXRD(sck_fd);
 2071              		.loc 1 624 0
 2072 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2073 006a 1846     		mov	r0, r3
 2074 006c FFF7FEFF 		bl	get_RXRD
 2075 0070 0346     		mov	r3, r0
 2076 0072 BB82     		strh	r3, [r7, #20]	@ movhi
 625:App/STM32F4-Discovery/W5200.c **** 
 626:App/STM32F4-Discovery/W5200.c **** 	// read from RX memory
 627:App/STM32F4-Discovery/W5200.c **** 	read_memory(sck_fd, read_ptr, buf, read_len < len ? read_len: len);
 2077              		.loc 1 627 0
 2078 0074 BA89     		ldrh	r2, [r7, #12]
 2079 0076 FB8A     		ldrh	r3, [r7, #22]
 2080 0078 9A42     		cmp	r2, r3
 2081 007a 38BF     		it	cc
 2082 007c 1346     		movcc	r3, r2
 2083 007e 9BB2     		uxth	r3, r3
 2084 0080 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 2085 0082 BA8A     		ldrh	r2, [r7, #20]
 2086 0084 0846     		mov	r0, r1
 2087 0086 1146     		mov	r1, r2
 2088 0088 BA68     		ldr	r2, [r7, #8]
 2089 008a FFF7FEFF 		bl	read_memory
 628:App/STM32F4-Discovery/W5200.c **** 
 629:App/STM32F4-Discovery/W5200.c **** 	// update pointer
 630:App/STM32F4-Discovery/W5200.c **** 	read_ptr += read_len;
 2090              		.loc 1 630 0
 2091 008e BA8A     		ldrh	r2, [r7, #20]	@ movhi
 2092 0090 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 2093 0092 1344     		add	r3, r3, r2
 2094 0094 BB82     		strh	r3, [r7, #20]	@ movhi
 631:App/STM32F4-Discovery/W5200.c **** 	set_RXRD(sck_fd, read_ptr);
 2095              		.loc 1 631 0
 2096 0096 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2097 0098 BB8A     		ldrh	r3, [r7, #20]
 2098 009a 1046     		mov	r0, r2
 2099 009c 1946     		mov	r1, r3
 2100 009e FFF7FEFF 		bl	set_RXRD
 632:App/STM32F4-Discovery/W5200.c **** 
 633:App/STM32F4-Discovery/W5200.c **** 	// recive command
 634:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_CR(sck_fd), W5200_Sn_CR_RECV);
 2101              		.loc 1 634 0
 2102 00a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2103 00a4 9BB2     		uxth	r3, r3
 2104 00a6 1B02     		lsls	r3, r3, #8
 2105 00a8 9BB2     		uxth	r3, r3
 2106 00aa 03F58043 		add	r3, r3, #16384
 2107 00ae 0133     		adds	r3, r3, #1
 2108 00b0 9BB2     		uxth	r3, r3
 2109 00b2 1846     		mov	r0, r3
 2110 00b4 4021     		movs	r1, #64
 2111 00b6 FFF7FEFF 		bl	spi_dma_sendByte
 635:App/STM32F4-Discovery/W5200.c **** 	// wait command complete.
 636:App/STM32F4-Discovery/W5200.c **** 	while(get_CRStatus(sck_fd) != 0);	// 0 value is command complete. 
 2112              		.loc 1 636 0
 2113 00ba 00BF     		nop
 2114              	.L114:
 2115              		.loc 1 636 0 is_stmt 0 discriminator 1
 2116 00bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2117 00be 1846     		mov	r0, r3
 2118 00c0 FFF7FEFF 		bl	get_CRStatus
 2119 00c4 0346     		mov	r3, r0
 2120 00c6 002B     		cmp	r3, #0
 2121 00c8 F8D1     		bne	.L114
 637:App/STM32F4-Discovery/W5200.c **** 	
 638:App/STM32F4-Discovery/W5200.c **** 
 639:App/STM32F4-Discovery/W5200.c ****  	return	(read_len < len ? read_len: len);
 2122              		.loc 1 639 0 is_stmt 1
 2123 00ca BA89     		ldrh	r2, [r7, #12]
 2124 00cc FB8A     		ldrh	r3, [r7, #22]
 2125 00ce 9A42     		cmp	r2, r3
 2126 00d0 38BF     		it	cc
 2127 00d2 1346     		movcc	r3, r2
 2128 00d4 9BB2     		uxth	r3, r3
 2129              	.L108:
 640:App/STM32F4-Discovery/W5200.c **** }
 2130              		.loc 1 640 0
 2131 00d6 1846     		mov	r0, r3
 2132 00d8 1837     		adds	r7, r7, #24
 2133 00da BD46     		mov	sp, r7
 2134              		@ sp needed
 2135 00dc 80BD     		pop	{r7, pc}
 2136              	.L116:
 2137 00de 00BF     		.align	2
 2138              	.L115:
 2139 00e0 00000000 		.word	socket_flg
 2140              		.cfi_endproc
 2141              	.LFE130:
 2143              		.section	.text.listen,"ax",%progbits
 2144              		.align	2
 2145              		.global	listen
 2146              		.thumb
 2147              		.thumb_func
 2149              	listen:
 2150              	.LFB131:
 641:App/STM32F4-Discovery/W5200.c **** 
 642:App/STM32F4-Discovery/W5200.c **** 
 643:App/STM32F4-Discovery/W5200.c **** //==================================================================================
 644:App/STM32F4-Discovery/W5200.c **** //	func listen 
 645:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 646:App/STM32F4-Discovery/W5200.c **** 
 647:App/STM32F4-Discovery/W5200.c **** 
 648:App/STM32F4-Discovery/W5200.c **** int	listen(int sck_fd)
 649:App/STM32F4-Discovery/W5200.c **** {
 2151              		.loc 1 649 0
 2152              		.cfi_startproc
 2153              		@ args = 0, pretend = 0, frame = 16
 2154              		@ frame_needed = 1, uses_anonymous_args = 0
 2155 0000 80B5     		push	{r7, lr}
 2156              	.LCFI63:
 2157              		.cfi_def_cfa_offset 8
 2158              		.cfi_offset 7, -8
 2159              		.cfi_offset 14, -4
 2160 0002 84B0     		sub	sp, sp, #16
 2161              	.LCFI64:
 2162              		.cfi_def_cfa_offset 24
 2163 0004 00AF     		add	r7, sp, #0
 2164              	.LCFI65:
 2165              		.cfi_def_cfa_register 7
 2166 0006 7860     		str	r0, [r7, #4]
 650:App/STM32F4-Discovery/W5200.c **** 	// check socket asign flag
 651:App/STM32F4-Discovery/W5200.c **** 	if(sck_fd < 0 || sck_fd >=W5200_MAX_SOCKETS||  socket_flg[sck_fd] != 1) return -1;
 2167              		.loc 1 651 0
 2168 0008 7B68     		ldr	r3, [r7, #4]
 2169 000a 002B     		cmp	r3, #0
 2170 000c 08DB     		blt	.L118
 2171              		.loc 1 651 0 is_stmt 0 discriminator 2
 2172 000e 7B68     		ldr	r3, [r7, #4]
 2173 0010 072B     		cmp	r3, #7
 2174 0012 05DC     		bgt	.L118
 2175              		.loc 1 651 0 discriminator 1
 2176 0014 224A     		ldr	r2, .L125
 2177 0016 7B68     		ldr	r3, [r7, #4]
 2178 0018 1344     		add	r3, r3, r2
 2179 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2180 001c 012B     		cmp	r3, #1
 2181 001e 02D0     		beq	.L119
 2182              	.L118:
 2183 0020 4FF0FF33 		mov	r3, #-1
 2184 0024 38E0     		b	.L124
 2185              	.L119:
 652:App/STM32F4-Discovery/W5200.c **** 
 653:App/STM32F4-Discovery/W5200.c **** 	// LISTEN start from INIT only.
 654:App/STM32F4-Discovery/W5200.c **** 	if(get_SRStatus(sck_fd)  != W5200_Sn_SR_SOCK_INIT) return -1;
 2186              		.loc 1 654 0 is_stmt 1
 2187 0026 7B68     		ldr	r3, [r7, #4]
 2188 0028 DBB2     		uxtb	r3, r3
 2189 002a 1846     		mov	r0, r3
 2190 002c FFF7FEFF 		bl	get_SRStatus
 2191 0030 0346     		mov	r3, r0
 2192 0032 132B     		cmp	r3, #19
 2193 0034 02D0     		beq	.L121
 2194              		.loc 1 654 0 is_stmt 0 discriminator 1
 2195 0036 4FF0FF33 		mov	r3, #-1
 2196 003a 2DE0     		b	.L124
 2197              	.L121:
 655:App/STM32F4-Discovery/W5200.c **** 
 656:App/STM32F4-Discovery/W5200.c **** 
 657:App/STM32F4-Discovery/W5200.c **** 	uint8_t b;
 658:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_IR(sck_fd), 1);
 2198              		.loc 1 658 0 is_stmt 1
 2199 003c 7B68     		ldr	r3, [r7, #4]
 2200 003e 9BB2     		uxth	r3, r3
 2201 0040 1B02     		lsls	r3, r3, #8
 2202 0042 9BB2     		uxth	r3, r3
 2203 0044 03F58043 		add	r3, r3, #16384
 2204 0048 0233     		adds	r3, r3, #2
 2205 004a 9BB2     		uxth	r3, r3
 2206 004c 1846     		mov	r0, r3
 2207 004e 0121     		movs	r1, #1
 2208 0050 FFF7FEFF 		bl	spi_dma_read
 659:App/STM32F4-Discovery/W5200.c **** 	memcpy(&b, bufferRX + 4, 1);
 2209              		.loc 1 659 0
 2210 0054 134B     		ldr	r3, .L125+4
 2211 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2212 0058 FB73     		strb	r3, [r7, #15]
 660:App/STM32F4-Discovery/W5200.c **** 
 661:App/STM32F4-Discovery/W5200.c **** 	// CONNECT command
 662:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_CR(sck_fd), W5200_Sn_CR_LISTEN);
 2213              		.loc 1 662 0
 2214 005a 7B68     		ldr	r3, [r7, #4]
 2215 005c 9BB2     		uxth	r3, r3
 2216 005e 1B02     		lsls	r3, r3, #8
 2217 0060 9BB2     		uxth	r3, r3
 2218 0062 03F58043 		add	r3, r3, #16384
 2219 0066 0133     		adds	r3, r3, #1
 2220 0068 9BB2     		uxth	r3, r3
 2221 006a 1846     		mov	r0, r3
 2222 006c 0221     		movs	r1, #2
 2223 006e FFF7FEFF 		bl	spi_dma_sendByte
 663:App/STM32F4-Discovery/W5200.c **** 	while(get_CRStatus(sck_fd) != 0);	// 0 value is command complete. 
 2224              		.loc 1 663 0
 2225 0072 00BF     		nop
 2226              	.L122:
 2227              		.loc 1 663 0 is_stmt 0 discriminator 1
 2228 0074 7B68     		ldr	r3, [r7, #4]
 2229 0076 DBB2     		uxtb	r3, r3
 2230 0078 1846     		mov	r0, r3
 2231 007a FFF7FEFF 		bl	get_CRStatus
 2232 007e 0346     		mov	r3, r0
 2233 0080 002B     		cmp	r3, #0
 2234 0082 F7D1     		bne	.L122
 664:App/STM32F4-Discovery/W5200.c **** 
 665:App/STM32F4-Discovery/W5200.c **** 	// wait for status change to LISTEN
 666:App/STM32F4-Discovery/W5200.c **** 	while(get_SRStatus(sck_fd) != W5200_Sn_SR_SOCK_LISTEN);
 2235              		.loc 1 666 0 is_stmt 1
 2236 0084 00BF     		nop
 2237              	.L123:
 2238              		.loc 1 666 0 is_stmt 0 discriminator 1
 2239 0086 7B68     		ldr	r3, [r7, #4]
 2240 0088 DBB2     		uxtb	r3, r3
 2241 008a 1846     		mov	r0, r3
 2242 008c FFF7FEFF 		bl	get_SRStatus
 2243 0090 0346     		mov	r3, r0
 2244 0092 142B     		cmp	r3, #20
 2245 0094 F7D1     		bne	.L123
 667:App/STM32F4-Discovery/W5200.c **** 	 
 668:App/STM32F4-Discovery/W5200.c **** 	return 0;	// listen success complete
 2246              		.loc 1 668 0 is_stmt 1
 2247 0096 0023     		movs	r3, #0
 2248              	.L124:
 669:App/STM32F4-Discovery/W5200.c **** }
 2249              		.loc 1 669 0
 2250 0098 1846     		mov	r0, r3
 2251 009a 1037     		adds	r7, r7, #16
 2252 009c BD46     		mov	sp, r7
 2253              		@ sp needed
 2254 009e 80BD     		pop	{r7, pc}
 2255              	.L126:
 2256              		.align	2
 2257              	.L125:
 2258 00a0 00000000 		.word	socket_flg
 2259 00a4 04000000 		.word	bufferRX+4
 2260              		.cfi_endproc
 2261              	.LFE131:
 2263              		.section	.text.locate_interrupt,"ax",%progbits
 2264              		.align	2
 2265              		.global	locate_interrupt
 2266              		.thumb
 2267              		.thumb_func
 2269              	locate_interrupt:
 2270              	.LFB132:
 670:App/STM32F4-Discovery/W5200.c **** 
 671:App/STM32F4-Discovery/W5200.c **** 
 672:App/STM32F4-Discovery/W5200.c **** 
 673:App/STM32F4-Discovery/W5200.c **** //==================================================================================
 674:App/STM32F4-Discovery/W5200.c **** ////	func locate_interrupt
 675:App/STM32F4-Discovery/W5200.c **** //==================================================================================
 676:App/STM32F4-Discovery/W5200.c **** void locate_interrupt()
 677:App/STM32F4-Discovery/W5200.c **** {
 2271              		.loc 1 677 0
 2272              		.cfi_startproc
 2273              		@ args = 0, pretend = 0, frame = 8
 2274              		@ frame_needed = 1, uses_anonymous_args = 0
 2275 0000 80B5     		push	{r7, lr}
 2276              	.LCFI66:
 2277              		.cfi_def_cfa_offset 8
 2278              		.cfi_offset 7, -8
 2279              		.cfi_offset 14, -4
 2280 0002 82B0     		sub	sp, sp, #8
 2281              	.LCFI67:
 2282              		.cfi_def_cfa_offset 16
 2283 0004 00AF     		add	r7, sp, #0
 2284              	.LCFI68:
 2285              		.cfi_def_cfa_register 7
 678:App/STM32F4-Discovery/W5200.c **** 
 679:App/STM32F4-Discovery/W5200.c **** 	/*!************************************************
 680:App/STM32F4-Discovery/W5200.c **** 	*  Function used by interrupt service routine. \n
 681:App/STM32F4-Discovery/W5200.c **** 	* Reads wiznet interrupt registers and identify 
 682:App/STM32F4-Discovery/W5200.c **** 	* interupt plus on which socket interrupt occured. \n
 683:App/STM32F4-Discovery/W5200.c **** 	* It depends on interrupt what follows
 684:App/STM32F4-Discovery/W5200.c **** 	* ****************************************************** */
 685:App/STM32F4-Discovery/W5200.c **** 	uint8_t code = 0x4; 
 2286              		.loc 1 685 0
 2287 0006 0423     		movs	r3, #4
 2288 0008 FB71     		strb	r3, [r7, #7]
 686:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_IMR2, 1);
 2289              		.loc 1 686 0
 2290 000a 3620     		movs	r0, #54
 2291 000c 0121     		movs	r1, #1
 2292 000e FFF7FEFF 		bl	spi_dma_read
 687:App/STM32F4-Discovery/W5200.c **** 	memcpy(&code, bufferRX + 4, 1);
 2293              		.loc 1 687 0
 2294 0012 2C4B     		ldr	r3, .L136
 2295 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2296 0016 FB71     		strb	r3, [r7, #7]
 688:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_IR(code), 1);
 2297              		.loc 1 688 0
 2298 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2299 001a 1B02     		lsls	r3, r3, #8
 2300 001c 9BB2     		uxth	r3, r3
 2301 001e 03F58043 		add	r3, r3, #16384
 2302 0022 0233     		adds	r3, r3, #2
 2303 0024 9BB2     		uxth	r3, r3
 2304 0026 1846     		mov	r0, r3
 2305 0028 0121     		movs	r1, #1
 2306 002a FFF7FEFF 		bl	spi_dma_read
 689:App/STM32F4-Discovery/W5200.c **** 	memcpy(&code, bufferRX +4 , 1);
 2307              		.loc 1 689 0
 2308 002e 254B     		ldr	r3, .L136
 2309 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2310 0032 FB71     		strb	r3, [r7, #7]
 690:App/STM32F4-Discovery/W5200.c ****        
 691:App/STM32F4-Discovery/W5200.c **** 	
 692:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_IR(0x0), 0xff);
 2311              		.loc 1 692 0
 2312 0034 44F20200 		movw	r0, #16386
 2313 0038 FF21     		movs	r1, #255
 2314 003a FFF7FEFF 		bl	spi_dma_sendByte
 693:App/STM32F4-Discovery/W5200.c **** 	switch (code )
 2315              		.loc 1 693 0
 2316 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2317 0040 013B     		subs	r3, r3, #1
 2318 0042 0F2B     		cmp	r3, #15
 2319 0044 39D8     		bhi	.L135
 2320 0046 01A2     		adr	r2, .L130
 2321 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2322              		.p2align 2
 2323              	.L130:
 2324 004c 8D000000 		.word	.L129+1
 2325 0050 99000000 		.word	.L131+1
 2326 0054 BB000000 		.word	.L135+1
 2327 0058 A5000000 		.word	.L132+1
 2328 005c BB000000 		.word	.L135+1
 2329 0060 BB000000 		.word	.L135+1
 2330 0064 BB000000 		.word	.L135+1
 2331 0068 BB000000 		.word	.L135+1
 2332 006c BB000000 		.word	.L135+1
 2333 0070 BB000000 		.word	.L135+1
 2334 0074 BB000000 		.word	.L135+1
 2335 0078 BB000000 		.word	.L135+1
 2336 007c BB000000 		.word	.L135+1
 2337 0080 BB000000 		.word	.L135+1
 2338 0084 BB000000 		.word	.L135+1
 2339 0088 BB000000 		.word	.L135+1
 2340              		.p2align 1
 2341              	.L129:
 694:App/STM32F4-Discovery/W5200.c **** 	{
 695:App/STM32F4-Discovery/W5200.c **** 		case 0x1: 
 696:App/STM32F4-Discovery/W5200.c **** 			vTaskSuspend(motorHBHandle);
 2342              		.loc 1 696 0
 2343 008c 0E4B     		ldr	r3, .L136+4
 2344 008e 1B68     		ldr	r3, [r3]
 2345 0090 1846     		mov	r0, r3
 2346 0092 FFF7FEFF 		bl	vTaskSuspend
 697:App/STM32F4-Discovery/W5200.c **** 			// connection established 
 698:App/STM32F4-Discovery/W5200.c **** 			// do nothing wait for input. 
 699:App/STM32F4-Discovery/W5200.c **** 			break;
 2347              		.loc 1 699 0
 2348 0096 11E0     		b	.L127
 2349              	.L131:
 700:App/STM32F4-Discovery/W5200.c **** 		case 0x2:
 701:App/STM32F4-Discovery/W5200.c **** 
 702:App/STM32F4-Discovery/W5200.c **** 			
 703:App/STM32F4-Discovery/W5200.c **** 			vTaskSuspend(motorHBHandle);
 2350              		.loc 1 703 0
 2351 0098 0B4B     		ldr	r3, .L136+4
 2352 009a 1B68     		ldr	r3, [r3]
 2353 009c 1846     		mov	r0, r3
 2354 009e FFF7FEFF 		bl	vTaskSuspend
 704:App/STM32F4-Discovery/W5200.c **** 
 705:App/STM32F4-Discovery/W5200.c **** 			break;
 2355              		.loc 1 705 0
 2356 00a2 0BE0     		b	.L127
 2357              	.L132:
 706:App/STM32F4-Discovery/W5200.c **** 		case 0x4:
 707:App/STM32F4-Discovery/W5200.c **** 			vTaskResume(motorHBHandle);
 2358              		.loc 1 707 0
 2359 00a4 084B     		ldr	r3, .L136+4
 2360 00a6 1B68     		ldr	r3, [r3]
 2361 00a8 1846     		mov	r0, r3
 2362 00aa FFF7FEFF 		bl	vTaskResume
 708:App/STM32F4-Discovery/W5200.c **** 			vTaskResume(set_macTaskHandle); 
 2363              		.loc 1 708 0
 2364 00ae 074B     		ldr	r3, .L136+8
 2365 00b0 1B68     		ldr	r3, [r3]
 2366 00b2 1846     		mov	r0, r3
 2367 00b4 FFF7FEFF 		bl	vTaskResume
 709:App/STM32F4-Discovery/W5200.c **** 			break;
 2368              		.loc 1 709 0
 2369 00b8 00E0     		b	.L127
 2370              	.L135:
 710:App/STM32F4-Discovery/W5200.c **** 		case 0x10:
 711:App/STM32F4-Discovery/W5200.c **** 			break;
 712:App/STM32F4-Discovery/W5200.c **** 		default:
 713:App/STM32F4-Discovery/W5200.c **** 			break;		
 2371              		.loc 1 713 0
 2372 00ba 00BF     		nop
 2373              	.L127:
 714:App/STM32F4-Discovery/W5200.c **** 	}
 715:App/STM32F4-Discovery/W5200.c **** }
 2374              		.loc 1 715 0
 2375 00bc 0837     		adds	r7, r7, #8
 2376 00be BD46     		mov	sp, r7
 2377              		@ sp needed
 2378 00c0 80BD     		pop	{r7, pc}
 2379              	.L137:
 2380 00c2 00BF     		.align	2
 2381              	.L136:
 2382 00c4 04000000 		.word	bufferRX+4
 2383 00c8 00000000 		.word	motorHBHandle
 2384 00cc 00000000 		.word	set_macTaskHandle
 2385              		.cfi_endproc
 2386              	.LFE132:
 2388              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
 2389              		.align	2
 2390              		.global	EXTI4_IRQHandler
 2391              		.thumb
 2392              		.thumb_func
 2394              	EXTI4_IRQHandler:
 2395              	.LFB133:
 716:App/STM32F4-Discovery/W5200.c **** 
 717:App/STM32F4-Discovery/W5200.c **** //==================================================================================
 718:App/STM32F4-Discovery/W5200.c **** //// EXTI4_IRQHandler
 719:App/STM32F4-Discovery/W5200.c **** //==================================================================================
 720:App/STM32F4-Discovery/W5200.c **** void EXTI4_IRQHandler(void) //EXTI0 ISR
 721:App/STM32F4-Discovery/W5200.c **** {
 2396              		.loc 1 721 0
 2397              		.cfi_startproc
 2398              		@ args = 0, pretend = 0, frame = 0
 2399              		@ frame_needed = 1, uses_anonymous_args = 0
 2400 0000 80B5     		push	{r7, lr}
 2401              	.LCFI69:
 2402              		.cfi_def_cfa_offset 8
 2403              		.cfi_offset 7, -8
 2404              		.cfi_offset 14, -4
 2405 0002 00AF     		add	r7, sp, #0
 2406              	.LCFI70:
 2407              		.cfi_def_cfa_register 7
 722:App/STM32F4-Discovery/W5200.c ****  	/*!***************************************************************** 
 723:App/STM32F4-Discovery/W5200.c **** 	 * \fn void EXTI4_IRQHandler(void) 
 724:App/STM32F4-Discovery/W5200.c **** 	 * Interuppt service routine for wiznet it locates interrupt and resets 
 725:App/STM32F4-Discovery/W5200.c **** 	 * interrupt line. 
 726:App/STM32F4-Discovery/W5200.c **** 	 * *******************************************************************/
 727:App/STM32F4-Discovery/W5200.c **** 	
 728:App/STM32F4-Discovery/W5200.c **** 	
 729:App/STM32F4-Discovery/W5200.c **** 	if(EXTI_GetITStatus(WIZ_IT_EXTI_LINE) != RESET) //check if EXTI line is asserted
 2408              		.loc 1 729 0
 2409 0004 1020     		movs	r0, #16
 2410 0006 FFF7FEFF 		bl	EXTI_GetITStatus
 2411 000a 0346     		mov	r3, r0
 2412 000c 002B     		cmp	r3, #0
 2413 000e 04D0     		beq	.L138
 730:App/STM32F4-Discovery/W5200.c **** 	{
 731:App/STM32F4-Discovery/W5200.c **** 		locate_interrupt();	
 2414              		.loc 1 731 0
 2415 0010 FFF7FEFF 		bl	locate_interrupt
 732:App/STM32F4-Discovery/W5200.c **** 		EXTI_ClearFlag(WIZ_IT_EXTI_LINE); //clear interrupt
 2416              		.loc 1 732 0
 2417 0014 1020     		movs	r0, #16
 2418 0016 FFF7FEFF 		bl	EXTI_ClearFlag
 2419              	.L138:
 733:App/STM32F4-Discovery/W5200.c ****  	
 734:App/STM32F4-Discovery/W5200.c **** 	}
 735:App/STM32F4-Discovery/W5200.c **** }
 2420              		.loc 1 735 0
 2421 001a 80BD     		pop	{r7, pc}
 2422              		.cfi_endproc
 2423              	.LFE133:
 2425              		.section	.text.set_macTask,"ax",%progbits
 2426              		.align	2
 2427              		.global	set_macTask
 2428              		.thumb
 2429              		.thumb_func
 2431              	set_macTask:
 2432              	.LFB134:
 736:App/STM32F4-Discovery/W5200.c **** 
 737:App/STM32F4-Discovery/W5200.c **** 
 738:App/STM32F4-Discovery/W5200.c **** //============================================================================/
 739:App/STM32F4-Discovery/W5200.c **** // func set_macTask 
 740:App/STM32F4-Discovery/W5200.c **** //==================================================================================
 741:App/STM32F4-Discovery/W5200.c **** 
 742:App/STM32F4-Discovery/W5200.c **** void set_macTask(void *pvParameters)
 743:App/STM32F4-Discovery/W5200.c **** {
 2433              		.loc 1 743 0
 2434              		.cfi_startproc
 2435              		@ args = 0, pretend = 0, frame = 216
 2436              		@ frame_needed = 1, uses_anonymous_args = 0
 2437 0000 80B5     		push	{r7, lr}
 2438              	.LCFI71:
 2439              		.cfi_def_cfa_offset 8
 2440              		.cfi_offset 7, -8
 2441              		.cfi_offset 14, -4
 2442 0002 B6B0     		sub	sp, sp, #216
 2443              	.LCFI72:
 2444              		.cfi_def_cfa_offset 224
 2445 0004 00AF     		add	r7, sp, #0
 2446              	.LCFI73:
 2447              		.cfi_def_cfa_register 7
 2448 0006 7860     		str	r0, [r7, #4]
 744:App/STM32F4-Discovery/W5200.c **** 
 745:App/STM32F4-Discovery/W5200.c **** 	/*!**********************************************************************
 746:App/STM32F4-Discovery/W5200.c **** 	 * 
 747:App/STM32F4-Discovery/W5200.c **** 	 * Task opens socket on port 80,  starts listening on port and susped 
 748:App/STM32F4-Discovery/W5200.c **** 	 * suspend itself. If interrupt occures it process CLI command 
 749:App/STM32F4-Discovery/W5200.c **** 	 * **********************************************************************/
 750:App/STM32F4-Discovery/W5200.c **** 
 751:App/STM32F4-Discovery/W5200.c **** 
 752:App/STM32F4-Discovery/W5200.c **** 	/* suspend task until init_W5200 is finished */
 753:App/STM32F4-Discovery/W5200.c **** 	//vTaskSuspend(set_macTaskHandle);
 754:App/STM32F4-Discovery/W5200.c **** 	vTaskSuspend(NULL);
 2449              		.loc 1 754 0
 2450 0008 0020     		movs	r0, #0
 2451 000a FFF7FEFF 		bl	vTaskSuspend
 755:App/STM32F4-Discovery/W5200.c **** 	uint8_t	buf[100], buf1[100]; 
 756:App/STM32F4-Discovery/W5200.c **** 	int len; 
 757:App/STM32F4-Discovery/W5200.c **** 		/*create socket and send byte */
 758:App/STM32F4-Discovery/W5200.c **** 	socket_0 = socket(W5200_Sn_MR_TCP, 80, 0);
 2452              		.loc 1 758 0
 2453 000e 0120     		movs	r0, #1
 2454 0010 5021     		movs	r1, #80
 2455 0012 0022     		movs	r2, #0
 2456 0014 FFF7FEFF 		bl	socket
 2457 0018 0346     		mov	r3, r0
 2458 001a 1A46     		mov	r2, r3
 2459 001c 104B     		ldr	r3, .L142
 2460 001e 1A60     		str	r2, [r3]
 759:App/STM32F4-Discovery/W5200.c **** 	listen(socket_0);
 2461              		.loc 1 759 0
 2462 0020 0F4B     		ldr	r3, .L142
 2463 0022 1B68     		ldr	r3, [r3]
 2464 0024 1846     		mov	r0, r3
 2465 0026 FFF7FEFF 		bl	listen
 2466              	.L141:
 2467              	.LBB2:
 760:App/STM32F4-Discovery/W5200.c **** 
 761:App/STM32F4-Discovery/W5200.c **** 
 762:App/STM32F4-Discovery/W5200.c **** 	for( ;; )
 763:App/STM32F4-Discovery/W5200.c ****         {
 764:App/STM32F4-Discovery/W5200.c **** 
 765:App/STM32F4-Discovery/W5200.c **** 	
 766:App/STM32F4-Discovery/W5200.c **** 		/*we are now listening
 767:App/STM32F4-Discovery/W5200.c **** 		suspend task set_macTask()*/
 768:App/STM32F4-Discovery/W5200.c **** 		vTaskSuspend(NULL);
 2468              		.loc 1 768 0 discriminator 1
 2469 002a 0020     		movs	r0, #0
 2470 002c FFF7FEFF 		bl	vTaskSuspend
 769:App/STM32F4-Discovery/W5200.c **** 		
 770:App/STM32F4-Discovery/W5200.c **** 		// interrupt on W5200 occured 
 771:App/STM32F4-Discovery/W5200.c **** 		// receive data 
 772:App/STM32F4-Discovery/W5200.c **** 		len = recv(socket_0, buf, 100, 0);
 2471              		.loc 1 772 0 discriminator 1
 2472 0030 0B4B     		ldr	r3, .L142
 2473 0032 1B68     		ldr	r3, [r3]
 2474 0034 DAB2     		uxtb	r2, r3
 2475 0036 07F17003 		add	r3, r7, #112
 2476 003a 1046     		mov	r0, r2
 2477 003c 1946     		mov	r1, r3
 2478 003e 6422     		movs	r2, #100
 2479 0040 0023     		movs	r3, #0
 2480 0042 FFF7FEFF 		bl	recv
 2481 0046 C7F8D400 		str	r0, [r7, #212]
 773:App/STM32F4-Discovery/W5200.c **** 		
 774:App/STM32F4-Discovery/W5200.c **** 		// proces data with CLI 
 775:App/STM32F4-Discovery/W5200.c **** 		
 776:App/STM32F4-Discovery/W5200.c **** 		FreeRTOS_CLIProcessCommand ( buf, buf1, 100);
 2482              		.loc 1 776 0 discriminator 1
 2483 004a 07F17002 		add	r2, r7, #112
 2484 004e 07F10C03 		add	r3, r7, #12
 2485 0052 1046     		mov	r0, r2
 2486 0054 1946     		mov	r1, r3
 2487 0056 6422     		movs	r2, #100
 2488 0058 FFF7FEFF 		bl	FreeRTOS_CLIProcessCommand
 2489              	.LBE2:
 777:App/STM32F4-Discovery/W5200.c **** 
 778:App/STM32F4-Discovery/W5200.c **** 		
 779:App/STM32F4-Discovery/W5200.c **** 
 780:App/STM32F4-Discovery/W5200.c **** 		
 781:App/STM32F4-Discovery/W5200.c **** 	}	
 2490              		.loc 1 781 0 discriminator 1
 2491 005c E5E7     		b	.L141
 2492              	.L143:
 2493 005e 00BF     		.align	2
 2494              	.L142:
 2495 0060 00000000 		.word	socket_0
 2496              		.cfi_endproc
 2497              	.LFE134:
 2499              		.text
 2500              	.Letext0:
 2501              		.file 2 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/machine/_default_
 2502              		.file 3 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/stdint.h"
 2503              		.file 4 "App/STM32F4-Discovery/Libraries/CMSIS/ST/STM32F4xx/Include/stm32f4xx.h"
 2504              		.file 5 "Source/portable/GCC/ARM_CM4F/portmacro.h"
 2505              		.file 6 "Source/include/task.h"
 2506              		.file 7 "Source/include/queue.h"
 2507              		.file 8 "Source/include/semphr.h"
 2508              		.file 9 "App/STM32F4-Discovery/main.h"
 2509              		.file 10 "App/STM32F4-Discovery/Libraries/CMSIS/Include/core_cm4.h"
 2510              		.file 11 "App/STM32F4-Discovery/spi.h"
 2511              		.file 12 "App/STM32F4-Discovery/W5200.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 W5200.c
                            *COM*:0000000000000004 xSemaphoreDMASPI
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:21     .bss.xHigherPriorityTaskWoken:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:24     .bss.xHigherPriorityTaskWoken:0000000000000000 xHigherPriorityTaskWoken
                            *COM*:0000000000000004 xSmphrUSART
                            *COM*:0000000000000004 motorHeartBeatHandle
                            *COM*:0000000000000004 motorHBHandle
                            *COM*:0000000000000004 QSpd_handle
                            *COM*:0000000000000004 QStatus_handle
                            *COM*:0000000000000004 socket_0
                            *COM*:00000000000007d0 bufferTX
                            *COM*:00000000000007d0 bufferRX
                            *COM*:0000000000000004 bufferRXidx
                            *COM*:0000000000000004 bufferTXidx
                            *COM*:0000000000000004 dat_lengthRX
                            *COM*:0000000000000004 dat_lengthTX
                            *COM*:0000000000000004 set_macTaskHandle
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:40     .rodata.RAMSIZE_TABLE:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:43     .rodata.RAMSIZE_TABLE:0000000000000000 RAMSIZE_TABLE
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:63     .bss.socket_table:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:66     .bss.socket_table:0000000000000000 socket_table
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:69     .bss.socket_flg:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:72     .bss.socket_flg:0000000000000000 socket_flg
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:75     .rodata.socket_open_status:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:78     .rodata.socket_open_status:0000000000000000 socket_open_status
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:86     .rodata:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:113    .text.init_W5200:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:118    .text.init_W5200:0000000000000000 init_W5200
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:414    .text.W5200_configure_network:0000000000000000 W5200_configure_network
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:332    .text.W5200_set_hardware_address:0000000000000000 W5200_set_hardware_address
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:315    .text.init_W5200:0000000000000168 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:327    .text.W5200_set_hardware_address:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:364    .text.W5200_get_hardware_address:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:369    .text.W5200_get_hardware_address:0000000000000000 W5200_get_hardware_address
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:404    .text.W5200_get_hardware_address:0000000000000020 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:409    .text.W5200_configure_network:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:458    .text.W5200_get_ipaddress:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:463    .text.W5200_get_ipaddress:0000000000000000 W5200_get_ipaddress
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:498    .text.W5200_get_ipaddress:0000000000000020 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:503    .text.get_CRStatus:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:507    .text.get_CRStatus:0000000000000000 get_CRStatus
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:552    .text.get_CRStatus:0000000000000034 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:557    .text.get_SRStatus:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:561    .text.get_SRStatus:0000000000000000 get_SRStatus
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:606    .text.get_SRStatus:0000000000000034 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:611    .text.get_TXFSRStatus:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:615    .text.get_TXFSRStatus:0000000000000000 get_TXFSRStatus
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:667    .text.get_TXFSRStatus:0000000000000044 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:672    .text.get_TXWRStatus:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:676    .text.get_TXWRStatus:0000000000000000 get_TXWRStatus
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:728    .text.get_TXWRStatus:0000000000000044 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:733    .text.get_TXRD:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:737    .text.get_TXRD:0000000000000000 get_TXRD
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:789    .text.get_TXRD:0000000000000044 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:794    .text.set_TXWR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:798    .text.set_TXWR:0000000000000000 set_TXWR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:840    .text.get_RXRSR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:844    .text.get_RXRSR:0000000000000000 get_RXRSR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:896    .text.get_RXRSR:0000000000000044 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:901    .text.get_RXRD:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:905    .text.get_RXRD:0000000000000000 get_RXRD
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:957    .text.get_RXRD:0000000000000044 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:962    .text.set_RXRD:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:966    .text.set_RXRD:0000000000000000 set_RXRD
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:1008   .text.write_memory:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:1013   .text.write_memory:0000000000000000 write_memory
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:1124   .text.read_memory:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:1129   .text.read_memory:0000000000000000 read_memory
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:1245   .text.read_memory:00000000000000bc $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:1250   .text.socket:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:1255   .text.socket:0000000000000000 socket
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:1465   .text.socket:000000000000014c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:1470   .text.closesocket:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:1475   .text.closesocket:0000000000000000 closesocket
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:1563   .text.closesocket:0000000000000078 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:1568   .text.connect:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:1573   .text.connect:0000000000000000 connect
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:1738   .text.connect:0000000000000104 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:1743   .text.send:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:1748   .text.send:0000000000000000 send
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:1979   .text.send:0000000000000180 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:1985   .text.recv:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:1990   .text.recv:0000000000000000 recv
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:2139   .text.recv:00000000000000e0 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:2144   .text.listen:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:2149   .text.listen:0000000000000000 listen
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:2258   .text.listen:00000000000000a0 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:2264   .text.locate_interrupt:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:2269   .text.locate_interrupt:0000000000000000 locate_interrupt
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:2324   .text.locate_interrupt:000000000000004c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:2340   .text.locate_interrupt:000000000000008c $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:2382   .text.locate_interrupt:00000000000000c4 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:2389   .text.EXTI4_IRQHandler:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:2394   .text.EXTI4_IRQHandler:0000000000000000 EXTI4_IRQHandler
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:2426   .text.set_macTask:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:2431   .text.set_macTask:0000000000000000 set_macTask
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccpaWmWa.s:2495   .text.set_macTask:0000000000000060 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
xQueueGenericCreate
xTaskGetTickCount
vTaskDelay
spi_dma_sendByte
vTaskDelayUntil
vTaskResume
vTaskDelete
spi_dma_send
spi_dma_read
memcpy
spi_dma_send2B
vTaskSuspend
EXTI_GetITStatus
EXTI_ClearFlag
FreeRTOS_CLIProcessCommand
