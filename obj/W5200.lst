   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"W5200.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	xSemaphoreDMASPI,4,4
  20              		.section	.bss.xHigherPriorityTaskWoken,"aw",%nobits
  21              		.align	2
  24              	xHigherPriorityTaskWoken:
  25 0000 00000000 		.space	4
  26              		.comm	xSmphrUSART,4,4
  27              		.comm	setSpeedHandle,4,4
  28              		.comm	motorHBHandle,4,4
  29              		.comm	QSpd_handle,4,4
  30              		.comm	QStatus_handle,4,4
  31              		.comm	socket_0,4,4
  32              		.comm	bufferTX,2000,4
  33              		.comm	bufferRX,2000,4
  34              		.comm	bufferRXidx,4,4
  35              		.comm	bufferTXidx,4,4
  36              		.comm	dat_lengthRX,4,4
  37              		.comm	dat_lengthTX,4,4
  38              		.comm	set_macTaskHandle,4,4
  39              		.section	.rodata.RAMSIZE_TABLE,"a",%progbits
  40              		.align	2
  43              	RAMSIZE_TABLE:
  44 0000 00000000 		.word	0
  45 0004 00000000 		.word	0
  46 0008 00200000 		.word	8192
  47 000c 08000000 		.word	8
  48 0010 00200000 		.word	8192
  49 0014 08000000 		.word	8
  50 0018 00100000 		.word	4096
  51 001c 04000000 		.word	4
  52 0020 00100000 		.word	4096
  53 0024 04000000 		.word	4
  54 0028 00080000 		.word	2048
  55 002c 02000000 		.word	2
  56 0030 00080000 		.word	2048
  57 0034 02000000 		.word	2
  58 0038 00080000 		.word	2048
  59 003c 02000000 		.word	2
  60 0040 00080000 		.word	2048
  61 0044 02000000 		.word	2
  62              		.section	.bss.socket_table,"aw",%nobits
  63              		.align	2
  66              	socket_table:
  67 0000 00000000 		.space	64
  67      00000000 
  67      00000000 
  67      00000000 
  67      00000000 
  68              		.section	.bss.socket_flg,"aw",%nobits
  69              		.align	2
  72              	socket_flg:
  73 0000 00000000 		.space	8
  73      00000000 
  74              		.section	.rodata.socket_open_status,"a",%progbits
  75              		.align	2
  78              	socket_open_status:
  79 0000 00       		.byte	0
  80 0001 13       		.byte	19
  81 0002 22       		.byte	34
  82 0003 32       		.byte	50
  83 0004 42       		.byte	66
  84 0005 5F       		.byte	95
  85 0006 0000     		.section	.rodata
  86              		.align	2
  87              	.LC0:
  88 0000 DD       		.byte	-35
  89 0001 AA       		.byte	-86
  90 0002 BB       		.byte	-69
  91 0003 CC       		.byte	-52
  92 0004 11       		.byte	17
  93 0005 22       		.byte	34
  94 0006 0000     		.align	2
  95              	.LC1:
  96 0008 C0       		.byte	-64
  97 0009 A8       		.byte	-88
  98 000a 00       		.byte	0
  99 000b 08       		.byte	8
 100              		.align	2
 101              	.LC2:
 102 000c FF       		.byte	-1
 103 000d FF       		.byte	-1
 104 000e FF       		.byte	-1
 105 000f 00       		.byte	0
 106              		.align	2
 107              	.LC3:
 108 0010 C0       		.byte	-64
 109 0011 A8       		.byte	-88
 110 0012 00       		.byte	0
 111 0013 01       		.byte	1
 112              		.section	.text.init_W5200,"ax",%progbits
 113              		.align	2
 114              		.global	init_W5200
 115              		.thumb
 116              		.thumb_func
 118              	init_W5200:
 119              	.LFB110:
 120              		.file 1 "App/STM32F4-Discovery/W5200.c"
   1:App/STM32F4-Discovery/W5200.c **** /* W5200 Device Driver */
   2:App/STM32F4-Discovery/W5200.c **** 
   3:App/STM32F4-Discovery/W5200.c **** // $Id: W5200.c 6548 2014-01-16 14:09:04Z svn $
   4:App/STM32F4-Discovery/W5200.c **** 
   5:App/STM32F4-Discovery/W5200.c **** // Copyright (C)2013-2014, Philip Munts, President, Munts AM Corp.
   6:App/STM32F4-Discovery/W5200.c **** // All rights reserved.
   7:App/STM32F4-Discovery/W5200.c **** //
   8:App/STM32F4-Discovery/W5200.c **** // Redistribution and use in source and binary forms, with or without
   9:App/STM32F4-Discovery/W5200.c **** // modification, are permitted provided that the following conditions are met:
  10:App/STM32F4-Discovery/W5200.c **** //
  11:App/STM32F4-Discovery/W5200.c **** // * Redistributions of source code must retain the above copyright notice,
  12:App/STM32F4-Discovery/W5200.c **** //   this list of conditions and the following disclaimer.
  13:App/STM32F4-Discovery/W5200.c **** //
  14:App/STM32F4-Discovery/W5200.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  15:App/STM32F4-Discovery/W5200.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  16:App/STM32F4-Discovery/W5200.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  17:App/STM32F4-Discovery/W5200.c **** // ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
  18:App/STM32F4-Discovery/W5200.c **** // LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  19:App/STM32F4-Discovery/W5200.c **** // CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  20:App/STM32F4-Discovery/W5200.c **** // SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  21:App/STM32F4-Discovery/W5200.c **** // INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  22:App/STM32F4-Discovery/W5200.c **** // CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  23:App/STM32F4-Discovery/W5200.c **** // ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  24:App/STM32F4-Discovery/W5200.c **** // POSSIBILITY OF SUCH DAMAGE.
  25:App/STM32F4-Discovery/W5200.c **** 
  26:App/STM32F4-Discovery/W5200.c **** /*! \file W5200.c
  27:App/STM32F4-Discovery/W5200.c ****  *  \brief File for W5200.c wiznet functions 
  28:App/STM32F4-Discovery/W5200.c ****  *  Wiznet control, creating and closing sockets, sending, receiving data via sockets, etc... \n
  29:App/STM32F4-Discovery/W5200.c ****  */
  30:App/STM32F4-Discovery/W5200.c **** 
  31:App/STM32F4-Discovery/W5200.c **** #include "W5200.h"
  32:App/STM32F4-Discovery/W5200.c **** 
  33:App/STM32F4-Discovery/W5200.c **** /* This table abstracts the W5200 RAM size configuration for 1 to 8 sockets. */
  34:App/STM32F4-Discovery/W5200.c **** /* We divide available RAM equally amoung the number of configured sockets.  */
  35:App/STM32F4-Discovery/W5200.c **** /* We don't try to give unequal amounts of RAM to different sockets.         */
  36:App/STM32F4-Discovery/W5200.c **** 
  37:App/STM32F4-Discovery/W5200.c **** 
  38:App/STM32F4-Discovery/W5200.c **** static const struct
  39:App/STM32F4-Discovery/W5200.c **** {
  40:App/STM32F4-Discovery/W5200.c ****   uint32_t SIZE;
  41:App/STM32F4-Discovery/W5200.c ****   uint32_t CONFIG;
  42:App/STM32F4-Discovery/W5200.c **** } RAMSIZE_TABLE[W5200_MAX_SOCKETS+1] =
  43:App/STM32F4-Discovery/W5200.c **** {
  44:App/STM32F4-Discovery/W5200.c ****   { 0,			0				},
  45:App/STM32F4-Discovery/W5200.c **** // Does not work => { W5200_RAMSIZE,	W5200_RAMSIZE_CONFIG_WHOLE	},
  46:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/2,	W5200_RAMSIZE_CONFIG_HALF	},
  47:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/2,	W5200_RAMSIZE_CONFIG_HALF	},
  48:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/4,	W5200_RAMSIZE_CONFIG_QUARTER	},
  49:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/4,	W5200_RAMSIZE_CONFIG_QUARTER	},
  50:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/8,	W5200_RAMSIZE_CONFIG_EIGHTH	},
  51:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/8,	W5200_RAMSIZE_CONFIG_EIGHTH	},
  52:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/8,	W5200_RAMSIZE_CONFIG_EIGHTH	},
  53:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/8,	W5200_RAMSIZE_CONFIG_EIGHTH	},
  54:App/STM32F4-Discovery/W5200.c **** };
  55:App/STM32F4-Discovery/W5200.c **** 
  56:App/STM32F4-Discovery/W5200.c **** /* This table holds precalculated TX and RX RAM base addresses for */
  57:App/STM32F4-Discovery/W5200.c **** /* each socket.                                                    */
  58:App/STM32F4-Discovery/W5200.c **** 
  59:App/STM32F4-Discovery/W5200.c **** 
  60:App/STM32F4-Discovery/W5200.c **** static struct
  61:App/STM32F4-Discovery/W5200.c **** {
  62:App/STM32F4-Discovery/W5200.c ****   uint32_t TX_RAM_base;
  63:App/STM32F4-Discovery/W5200.c ****   uint32_t RX_RAM_base;
  64:App/STM32F4-Discovery/W5200.c **** } socket_table[W5200_MAX_SOCKETS];
  65:App/STM32F4-Discovery/W5200.c **** 
  66:App/STM32F4-Discovery/W5200.c **** static uint8_t socket_flg[W5200_MAX_SOCKETS];
  67:App/STM32F4-Discovery/W5200.c **** 
  68:App/STM32F4-Discovery/W5200.c **** 
  69:App/STM32F4-Discovery/W5200.c **** const static	uint8_t	socket_open_status[] = {
  70:App/STM32F4-Discovery/W5200.c **** 			W5200_Sn_SR_SOCK_CLOSED,	// mode is CLOSE
  71:App/STM32F4-Discovery/W5200.c **** 			W5200_Sn_SR_SOCK_INIT,	// mode is TCP
  72:App/STM32F4-Discovery/W5200.c **** 			W5200_Sn_SR_SOCK_UDP,	// mode is UDP
  73:App/STM32F4-Discovery/W5200.c **** 			W5200_Sn_SR_SOCK_IPRAW,	// mode is IPRAW
  74:App/STM32F4-Discovery/W5200.c **** 			W5200_Sn_SR_SOCK_MACRAW,	// mode is MACRAW
  75:App/STM32F4-Discovery/W5200.c **** 			W5200_Sn_SR_SOCK_PPPOE,	// mode is PPPOE
  76:App/STM32F4-Discovery/W5200.c **** 		};
  77:App/STM32F4-Discovery/W5200.c **** 
  78:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
  79:App/STM32F4-Discovery/W5200.c **** //===	func 	init_W5200							 ===//
  80:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
  81:App/STM32F4-Discovery/W5200.c **** 
  82:App/STM32F4-Discovery/W5200.c **** void init_W5200(void)
  83:App/STM32F4-Discovery/W5200.c **** {
 121              		.loc 1 83 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 40
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125 0000 80B5     		push	{r7, lr}
 126              	.LCFI0:
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 7, -8
 129              		.cfi_offset 14, -4
 130 0002 8AB0     		sub	sp, sp, #40
 131              	.LCFI1:
 132              		.cfi_def_cfa_offset 48
 133 0004 00AF     		add	r7, sp, #0
 134              	.LCFI2:
 135              		.cfi_def_cfa_register 7
  84:App/STM32F4-Discovery/W5200.c **** 
  85:App/STM32F4-Discovery/W5200.c **** 	/*! Initialize Wiznet module - setup MAC address, ip address, gateway, subnet, 		etc..\n
  86:App/STM32F4-Discovery/W5200.c ****  	* - Default settings:
  87:App/STM32F4-Discovery/W5200.c **** 	 *  	
  88:App/STM32F4-Discovery/W5200.c **** 	 *  +	mac address : dd:aa:bb:cc:11:22
  89:App/STM32F4-Discovery/W5200.c **** 	 *  +	ip address :  192.168.0.8
  90:App/STM32F4-Discovery/W5200.c **** 	 *  +	subnet 	:     255.255.255.0
  91:App/STM32F4-Discovery/W5200.c **** 	 *  +	gateway :     192.168.0.254 
  92:App/STM32F4-Discovery/W5200.c **** 	 *  +	Ping 	:	enable 
  93:App/STM32F4-Discovery/W5200.c **** 	 *  +	timeout   :	200 mili sec. 
  94:App/STM32F4-Discovery/W5200.c **** 	 *  +	retry count :	3 
  95:App/STM32F4-Discovery/W5200.c **** 	 *  +	TX memory size : 2kB 
  96:App/STM32F4-Discovery/W5200.c **** 	 *  +	RX memory size : 2kB 
  97:App/STM32F4-Discovery/W5200.c **** 	 *  +	IT masking :    0xff
  98:App/STM32F4-Discovery/W5200.c ****  	*
  99:App/STM32F4-Discovery/W5200.c ****  	*
 100:App/STM32F4-Discovery/W5200.c **** 	 *\n Create and listen on socket '0', port 80. 
 101:App/STM32F4-Discovery/W5200.c **** 	 *
 102:App/STM32F4-Discovery/W5200.c **** 	 * */
 103:App/STM32F4-Discovery/W5200.c **** 
 104:App/STM32F4-Discovery/W5200.c **** 
 105:App/STM32F4-Discovery/W5200.c **** 	// mac address
 106:App/STM32F4-Discovery/W5200.c **** 	uint8_t address[6] =	{0xdd, 0xaa, 0xbb, 0xcc, 0x11, 0x22}; 
 136              		.loc 1 106 0
 137 0006 554A     		ldr	r2, .L4
 138 0008 07F11803 		add	r3, r7, #24
 139 000c 1068     		ldr	r0, [r2]	@ unaligned
 140 000e 1860     		str	r0, [r3]	@ unaligned
 141 0010 9288     		ldrh	r2, [r2, #4]	@ unaligned
 142 0012 9A80     		strh	r2, [r3, #4]	@ unaligned
 107:App/STM32F4-Discovery/W5200.c **** 	
 108:App/STM32F4-Discovery/W5200.c **** 	// ip 
 109:App/STM32F4-Discovery/W5200.c **** 	const  uint8_t ip[4] = {0xc0, 0xa8, 0x0, 0x08};
 143              		.loc 1 109 0
 144 0014 524A     		ldr	r2, .L4+4
 145 0016 07F11403 		add	r3, r7, #20
 146 001a 1068     		ldr	r0, [r2]	@ unaligned
 147 001c 1860     		str	r0, [r3]	@ unaligned
 110:App/STM32F4-Discovery/W5200.c **** 	// subnet 
 111:App/STM32F4-Discovery/W5200.c **** 	const uint8_t subnet[4] = {0xff,0xff,0xff,0x0};
 148              		.loc 1 111 0
 149 001e 514A     		ldr	r2, .L4+8
 150 0020 07F11003 		add	r3, r7, #16
 151 0024 1068     		ldr	r0, [r2]	@ unaligned
 152 0026 1860     		str	r0, [r3]	@ unaligned
 112:App/STM32F4-Discovery/W5200.c **** 	// gateway
 113:App/STM32F4-Discovery/W5200.c **** 	const uint8_t gw[4] = {0xc0, 0xa8, 0x0, 0x01};
 153              		.loc 1 113 0
 154 0028 4F4A     		ldr	r2, .L4+12
 155 002a 07F10C03 		add	r3, r7, #12
 156 002e 1068     		ldr	r0, [r2]	@ unaligned
 157 0030 1860     		str	r0, [r3]	@ unaligned
 114:App/STM32F4-Discovery/W5200.c **** 	
 115:App/STM32F4-Discovery/W5200.c **** 	portTickType xLastWakeTime;	
 116:App/STM32F4-Discovery/W5200.c **** 	
 117:App/STM32F4-Discovery/W5200.c **** 	xSemaphoreDMASPI = xSemaphoreCreateBinary();
 158              		.loc 1 117 0
 159 0032 0120     		movs	r0, #1
 160 0034 0021     		movs	r1, #0
 161 0036 0322     		movs	r2, #3
 162 0038 FFF7FEFF 		bl	xQueueGenericCreate
 163 003c 0246     		mov	r2, r0
 164 003e 4B4B     		ldr	r3, .L4+16
 165 0040 1A60     		str	r2, [r3]
 118:App/STM32F4-Discovery/W5200.c **** 	
 119:App/STM32F4-Discovery/W5200.c **** 	xLastWakeTime = xTaskGetTickCount();
 166              		.loc 1 119 0
 167 0042 FFF7FEFF 		bl	xTaskGetTickCount
 168 0046 0346     		mov	r3, r0
 169 0048 BB60     		str	r3, [r7, #8]
 120:App/STM32F4-Discovery/W5200.c **** 
 121:App/STM32F4-Discovery/W5200.c **** 	RESET_HIGH();
 170              		.loc 1 121 0
 171 004a 494B     		ldr	r3, .L4+20
 172 004c 484A     		ldr	r2, .L4+20
 173 004e 528B     		ldrh	r2, [r2, #26]	@ movhi
 174 0050 92B2     		uxth	r2, r2
 175 0052 42F02002 		orr	r2, r2, #32
 176 0056 92B2     		uxth	r2, r2
 177 0058 5A83     		strh	r2, [r3, #26]	@ movhi
 122:App/STM32F4-Discovery/W5200.c **** 	RESET_LOW();	
 178              		.loc 1 122 0
 179 005a 454B     		ldr	r3, .L4+20
 180 005c 444A     		ldr	r2, .L4+20
 181 005e 128B     		ldrh	r2, [r2, #24]	@ movhi
 182 0060 92B2     		uxth	r2, r2
 183 0062 42F02002 		orr	r2, r2, #32
 184 0066 92B2     		uxth	r2, r2
 185 0068 1A83     		strh	r2, [r3, #24]	@ movhi
 123:App/STM32F4-Discovery/W5200.c **** 
 124:App/STM32F4-Discovery/W5200.c **** 	vTaskDelay( 500/portTICK_RATE_MS );		
 186              		.loc 1 124 0
 187 006a 4FF4FA70 		mov	r0, #500
 188 006e FFF7FEFF 		bl	vTaskDelay
 125:App/STM32F4-Discovery/W5200.c **** 	const portTickType xFrequency = 1;
 189              		.loc 1 125 0
 190 0072 0123     		movs	r3, #1
 191 0074 3B62     		str	r3, [r7, #32]
 126:App/STM32F4-Discovery/W5200.c **** 	
 127:App/STM32F4-Discovery/W5200.c **** 	// ===================================================//
 128:App/STM32F4-Discovery/W5200.c **** 	//SW reset 
 129:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_MR, W5200_MR_RST);
 192              		.loc 1 129 0
 193 0076 0020     		movs	r0, #0
 194 0078 8021     		movs	r1, #128
 195 007a FFF7FEFF 		bl	spi_dma_sendByte
 130:App/STM32F4-Discovery/W5200.c **** 	// wait until reset complete
 131:App/STM32F4-Discovery/W5200.c **** 	uint8_t data = W5200_MR_RST; 
 196              		.loc 1 131 0
 197 007e 8023     		movs	r3, #128
 198 0080 FB71     		strb	r3, [r7, #7]
 132:App/STM32F4-Discovery/W5200.c **** 	while((data  && W5200_MR_RST) == W5200_MR_RST)
 199              		.loc 1 132 0
 200 0082 00BF     		nop
 133:App/STM32F4-Discovery/W5200.c **** 	{
 134:App/STM32F4-Discovery/W5200.c **** 		spi_dma_read(W5200_MR, 1);
 135:App/STM32F4-Discovery/W5200.c **** 		memcpy(&data, bufferRX+4, 1);
 136:App/STM32F4-Discovery/W5200.c **** 	}
 137:App/STM32F4-Discovery/W5200.c **** 		
 138:App/STM32F4-Discovery/W5200.c **** 	// PING enable, PPPoE disable 
 139:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_MR, 0);
 201              		.loc 1 139 0
 202 0084 0020     		movs	r0, #0
 203 0086 0021     		movs	r1, #0
 204 0088 FFF7FEFF 		bl	spi_dma_sendByte
 140:App/STM32F4-Discovery/W5200.c **** 	// all socket interrupts sets to nonmask. set '1' is interrupt enable. 
 141:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_IMR, 0xff);
 205              		.loc 1 141 0
 206 008c 1620     		movs	r0, #22
 207 008e FF21     		movs	r1, #255
 208 0090 FFF7FEFF 		bl	spi_dma_sendByte
 142:App/STM32F4-Discovery/W5200.c **** 	// IP-confilict, PPPoE Close are mask. set '0' interupt disable. 
 143:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_IMR2, 0);
 209              		.loc 1 143 0
 210 0094 3620     		movs	r0, #54
 211 0096 0021     		movs	r1, #0
 212 0098 FFF7FEFF 		bl	spi_dma_sendByte
 144:App/STM32F4-Discovery/W5200.c **** 	// set timeoput to 200msec
 145:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_RTR, 200);
 213              		.loc 1 145 0
 214 009c 1720     		movs	r0, #23
 215 009e C821     		movs	r1, #200
 216 00a0 FFF7FEFF 		bl	spi_dma_sendByte
 146:App/STM32F4-Discovery/W5200.c **** 	// set retry count register to 3rd
 147:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_RCR, 3);
 217              		.loc 1 147 0
 218 00a4 1920     		movs	r0, #25
 219 00a6 0321     		movs	r1, #3
 220 00a8 FFF7FEFF 		bl	spi_dma_sendByte
 148:App/STM32F4-Discovery/W5200.c **** 
 149:App/STM32F4-Discovery/W5200.c **** 	int n = 0; 
 221              		.loc 1 149 0
 222 00ac 0023     		movs	r3, #0
 223 00ae 7B62     		str	r3, [r7, #36]
 150:App/STM32F4-Discovery/W5200.c **** 
 151:App/STM32F4-Discovery/W5200.c **** 	for (n = 0; n < 8; n++)
 224              		.loc 1 151 0
 225 00b0 0023     		movs	r3, #0
 226 00b2 7B62     		str	r3, [r7, #36]
 227 00b4 2BE0     		b	.L2
 228              	.L3:
 152:App/STM32F4-Discovery/W5200.c **** 	{
 153:App/STM32F4-Discovery/W5200.c **** 		spi_dma_sendByte(W5200_Sn_RXMEM_SIZE(n), 0x2);
 229              		.loc 1 153 0 discriminator 2
 230 00b6 7B6A     		ldr	r3, [r7, #36]
 231 00b8 9BB2     		uxth	r3, r3
 232 00ba 1B02     		lsls	r3, r3, #8
 233 00bc 9BB2     		uxth	r3, r3
 234 00be 03F58043 		add	r3, r3, #16384
 235 00c2 1E33     		adds	r3, r3, #30
 236 00c4 9BB2     		uxth	r3, r3
 237 00c6 1846     		mov	r0, r3
 238 00c8 0221     		movs	r1, #2
 239 00ca FFF7FEFF 		bl	spi_dma_sendByte
 154:App/STM32F4-Discovery/W5200.c **** 		spi_dma_sendByte(W5200_Sn_TXMEM_SIZE(n),0x2);
 240              		.loc 1 154 0 discriminator 2
 241 00ce 7B6A     		ldr	r3, [r7, #36]
 242 00d0 9BB2     		uxth	r3, r3
 243 00d2 1B02     		lsls	r3, r3, #8
 244 00d4 9BB2     		uxth	r3, r3
 245 00d6 03F58043 		add	r3, r3, #16384
 246 00da 1F33     		adds	r3, r3, #31
 247 00dc 9BB2     		uxth	r3, r3
 248 00de 1846     		mov	r0, r3
 249 00e0 0221     		movs	r1, #2
 250 00e2 FFF7FEFF 		bl	spi_dma_sendByte
 155:App/STM32F4-Discovery/W5200.c **** 		spi_dma_sendByte(W5200_Sn_IMR(n), 0xff);	
 251              		.loc 1 155 0 discriminator 2
 252 00e6 7B6A     		ldr	r3, [r7, #36]
 253 00e8 9BB2     		uxth	r3, r3
 254 00ea 1B02     		lsls	r3, r3, #8
 255 00ec 9BB2     		uxth	r3, r3
 256 00ee 03F58043 		add	r3, r3, #16384
 257 00f2 2C33     		adds	r3, r3, #44
 258 00f4 9BB2     		uxth	r3, r3
 259 00f6 1846     		mov	r0, r3
 260 00f8 FF21     		movs	r1, #255
 261 00fa FFF7FEFF 		bl	spi_dma_sendByte
 156:App/STM32F4-Discovery/W5200.c **** 		socket_flg[n] = 0;
 262              		.loc 1 156 0 discriminator 2
 263 00fe 1D4A     		ldr	r2, .L4+24
 264 0100 7B6A     		ldr	r3, [r7, #36]
 265 0102 1344     		add	r3, r3, r2
 266 0104 0022     		movs	r2, #0
 267 0106 1A70     		strb	r2, [r3]
 151:App/STM32F4-Discovery/W5200.c **** 	for (n = 0; n < 8; n++)
 268              		.loc 1 151 0 discriminator 2
 269 0108 7B6A     		ldr	r3, [r7, #36]
 270 010a 0133     		adds	r3, r3, #1
 271 010c 7B62     		str	r3, [r7, #36]
 272              	.L2:
 151:App/STM32F4-Discovery/W5200.c **** 	for (n = 0; n < 8; n++)
 273              		.loc 1 151 0 is_stmt 0 discriminator 1
 274 010e 7B6A     		ldr	r3, [r7, #36]
 275 0110 072B     		cmp	r3, #7
 276 0112 D0DD     		ble	.L3
 157:App/STM32F4-Discovery/W5200.c **** 			
 158:App/STM32F4-Discovery/W5200.c **** 	}	
 159:App/STM32F4-Discovery/W5200.c **** 	// =========================================================//
 160:App/STM32F4-Discovery/W5200.c **** 		
 161:App/STM32F4-Discovery/W5200.c **** 	vTaskDelayUntil(&xLastWakeTime, 500/portTICK_RATE_MS );		
 277              		.loc 1 161 0 is_stmt 1
 278 0114 07F10803 		add	r3, r7, #8
 279 0118 1846     		mov	r0, r3
 280 011a 4FF4FA71 		mov	r1, #500
 281 011e FFF7FEFF 		bl	vTaskDelayUntil
 162:App/STM32F4-Discovery/W5200.c **** 
 163:App/STM32F4-Discovery/W5200.c **** 	W5200_configure_network(ip, subnet, gw);
 282              		.loc 1 163 0
 283 0122 07F11401 		add	r1, r7, #20
 284 0126 07F11002 		add	r2, r7, #16
 285 012a 07F10C03 		add	r3, r7, #12
 286 012e 0846     		mov	r0, r1
 287 0130 1146     		mov	r1, r2
 288 0132 1A46     		mov	r2, r3
 289 0134 FFF7FEFF 		bl	W5200_configure_network
 164:App/STM32F4-Discovery/W5200.c **** 	W5200_set_hardware_address(address);
 290              		.loc 1 164 0
 291 0138 07F11803 		add	r3, r7, #24
 292 013c 1846     		mov	r0, r3
 293 013e FFF7FEFF 		bl	W5200_set_hardware_address
 165:App/STM32F4-Discovery/W5200.c **** 	
 166:App/STM32F4-Discovery/W5200.c **** 	vTaskDelayUntil(&xLastWakeTime, 500/portTICK_RATE_MS );		
 294              		.loc 1 166 0
 295 0142 07F10803 		add	r3, r7, #8
 296 0146 1846     		mov	r0, r3
 297 0148 4FF4FA71 		mov	r1, #500
 298 014c FFF7FEFF 		bl	vTaskDelayUntil
 167:App/STM32F4-Discovery/W5200.c **** 	// end of initialization W5200 
 168:App/STM32F4-Discovery/W5200.c **** 	// delete task
 169:App/STM32F4-Discovery/W5200.c **** 	
 170:App/STM32F4-Discovery/W5200.c **** 	vTaskDelete ( NULL );
 299              		.loc 1 170 0
 300 0150 0020     		movs	r0, #0
 301 0152 FFF7FEFF 		bl	vTaskDelete
 171:App/STM32F4-Discovery/W5200.c **** 	
 172:App/STM32F4-Discovery/W5200.c **** 	
 173:App/STM32F4-Discovery/W5200.c **** 	
 174:App/STM32F4-Discovery/W5200.c **** 	
 175:App/STM32F4-Discovery/W5200.c **** }
 302              		.loc 1 175 0
 303 0156 2837     		adds	r7, r7, #40
 304 0158 BD46     		mov	sp, r7
 305              		@ sp needed
 306 015a 80BD     		pop	{r7, pc}
 307              	.L5:
 308              		.align	2
 309              	.L4:
 310 015c 00000000 		.word	.LC0
 311 0160 08000000 		.word	.LC1
 312 0164 0C000000 		.word	.LC2
 313 0168 10000000 		.word	.LC3
 314 016c 00000000 		.word	xSemaphoreDMASPI
 315 0170 00080240 		.word	1073874944
 316 0174 00000000 		.word	socket_flg
 317              		.cfi_endproc
 318              	.LFE110:
 320              		.section	.text.W5200_set_hardware_address,"ax",%progbits
 321              		.align	2
 322              		.global	W5200_set_hardware_address
 323              		.thumb
 324              		.thumb_func
 326              	W5200_set_hardware_address:
 327              	.LFB111:
 176:App/STM32F4-Discovery/W5200.c **** 
 177:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 178:App/STM32F4-Discovery/W5200.c **** //===	func W5200_set_hardware_address
 179:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 180:App/STM32F4-Discovery/W5200.c **** void  W5200_set_hardware_address(const macaddress_t address)
 181:App/STM32F4-Discovery/W5200.c **** {
 328              		.loc 1 181 0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 8
 331              		@ frame_needed = 1, uses_anonymous_args = 0
 332 0000 80B5     		push	{r7, lr}
 333              	.LCFI3:
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 7, -8
 336              		.cfi_offset 14, -4
 337 0002 82B0     		sub	sp, sp, #8
 338              	.LCFI4:
 339              		.cfi_def_cfa_offset 16
 340 0004 00AF     		add	r7, sp, #0
 341              	.LCFI5:
 342              		.cfi_def_cfa_register 7
 343 0006 7860     		str	r0, [r7, #4]
 182:App/STM32F4-Discovery/W5200.c **** 
 183:App/STM32F4-Discovery/W5200.c **** 	/*! Function set wiznet register to address via SPI DMA
 184:App/STM32F4-Discovery/W5200.c **** 	 */
 185:App/STM32F4-Discovery/W5200.c **** 
 186:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send(W5200_SHAR, 6, address);
 344              		.loc 1 186 0
 345 0008 0920     		movs	r0, #9
 346 000a 0621     		movs	r1, #6
 347 000c 7A68     		ldr	r2, [r7, #4]
 348 000e FFF7FEFF 		bl	spi_dma_send
 187:App/STM32F4-Discovery/W5200.c **** }
 349              		.loc 1 187 0
 350 0012 0837     		adds	r7, r7, #8
 351 0014 BD46     		mov	sp, r7
 352              		@ sp needed
 353 0016 80BD     		pop	{r7, pc}
 354              		.cfi_endproc
 355              	.LFE111:
 357              		.section	.text.W5200_get_hardware_address,"ax",%progbits
 358              		.align	2
 359              		.global	W5200_get_hardware_address
 360              		.thumb
 361              		.thumb_func
 363              	W5200_get_hardware_address:
 364              	.LFB112:
 188:App/STM32F4-Discovery/W5200.c **** 
 189:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 190:App/STM32F4-Discovery/W5200.c **** //===	func W5200_get_hardware_address
 191:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 192:App/STM32F4-Discovery/W5200.c **** 
 193:App/STM32F4-Discovery/W5200.c **** 
 194:App/STM32F4-Discovery/W5200.c **** void  W5200_get_hardware_address(macaddress_t address)
 195:App/STM32F4-Discovery/W5200.c **** {
 365              		.loc 1 195 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 8
 368              		@ frame_needed = 1, uses_anonymous_args = 0
 369 0000 80B5     		push	{r7, lr}
 370              	.LCFI6:
 371              		.cfi_def_cfa_offset 8
 372              		.cfi_offset 7, -8
 373              		.cfi_offset 14, -4
 374 0002 82B0     		sub	sp, sp, #8
 375              	.LCFI7:
 376              		.cfi_def_cfa_offset 16
 377 0004 00AF     		add	r7, sp, #0
 378              	.LCFI8:
 379              		.cfi_def_cfa_register 7
 380 0006 7860     		str	r0, [r7, #4]
 196:App/STM32F4-Discovery/W5200.c **** 	/*! Function reads wiznet register mac address and copies it to address
 197:App/STM32F4-Discovery/W5200.c **** 	 * */
 198:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_SHAR, 6);
 381              		.loc 1 198 0
 382 0008 0920     		movs	r0, #9
 383 000a 0621     		movs	r1, #6
 384 000c FFF7FEFF 		bl	spi_dma_read
 199:App/STM32F4-Discovery/W5200.c **** 	memcpy(address, bufferRX+4, 6);
 385              		.loc 1 199 0
 386 0010 7868     		ldr	r0, [r7, #4]
 387 0012 0349     		ldr	r1, .L8
 388 0014 0622     		movs	r2, #6
 389 0016 FFF7FEFF 		bl	memcpy
 200:App/STM32F4-Discovery/W5200.c **** }
 390              		.loc 1 200 0
 391 001a 0837     		adds	r7, r7, #8
 392 001c BD46     		mov	sp, r7
 393              		@ sp needed
 394 001e 80BD     		pop	{r7, pc}
 395              	.L9:
 396              		.align	2
 397              	.L8:
 398 0020 04000000 		.word	bufferRX+4
 399              		.cfi_endproc
 400              	.LFE112:
 402              		.section	.text.W5200_configure_network,"ax",%progbits
 403              		.align	2
 404              		.global	W5200_configure_network
 405              		.thumb
 406              		.thumb_func
 408              	W5200_configure_network:
 409              	.LFB113:
 201:App/STM32F4-Discovery/W5200.c **** 
 202:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 203:App/STM32F4-Discovery/W5200.c **** //===	func W5200_configure network
 204:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 205:App/STM32F4-Discovery/W5200.c **** 
 206:App/STM32F4-Discovery/W5200.c **** 
 207:App/STM32F4-Discovery/W5200.c **** void  W5200_configure_network(const ipv4address_t address,
 208:App/STM32F4-Discovery/W5200.c ****                              const ipv4address_t subnet,
 209:App/STM32F4-Discovery/W5200.c ****                              const ipv4address_t gateway)
 210:App/STM32F4-Discovery/W5200.c **** {
 410              		.loc 1 210 0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 16
 413              		@ frame_needed = 1, uses_anonymous_args = 0
 414 0000 80B5     		push	{r7, lr}
 415              	.LCFI9:
 416              		.cfi_def_cfa_offset 8
 417              		.cfi_offset 7, -8
 418              		.cfi_offset 14, -4
 419 0002 84B0     		sub	sp, sp, #16
 420              	.LCFI10:
 421              		.cfi_def_cfa_offset 24
 422 0004 00AF     		add	r7, sp, #0
 423              	.LCFI11:
 424              		.cfi_def_cfa_register 7
 425 0006 F860     		str	r0, [r7, #12]
 426 0008 B960     		str	r1, [r7, #8]
 427 000a 7A60     		str	r2, [r7, #4]
 211:App/STM32F4-Discovery/W5200.c **** 	/*! It configures ip, subnet and gateway */
 212:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send(W5200_SIPR, 4, address);
 428              		.loc 1 212 0
 429 000c 0F20     		movs	r0, #15
 430 000e 0421     		movs	r1, #4
 431 0010 FA68     		ldr	r2, [r7, #12]
 432 0012 FFF7FEFF 		bl	spi_dma_send
 213:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send(W5200_SUBR, 4, subnet);
 433              		.loc 1 213 0
 434 0016 0520     		movs	r0, #5
 435 0018 0421     		movs	r1, #4
 436 001a BA68     		ldr	r2, [r7, #8]
 437 001c FFF7FEFF 		bl	spi_dma_send
 214:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send(W5200_GAR, 4 , gateway);
 438              		.loc 1 214 0
 439 0020 0120     		movs	r0, #1
 440 0022 0421     		movs	r1, #4
 441 0024 7A68     		ldr	r2, [r7, #4]
 442 0026 FFF7FEFF 		bl	spi_dma_send
 215:App/STM32F4-Discovery/W5200.c **** }
 443              		.loc 1 215 0
 444 002a 1037     		adds	r7, r7, #16
 445 002c BD46     		mov	sp, r7
 446              		@ sp needed
 447 002e 80BD     		pop	{r7, pc}
 448              		.cfi_endproc
 449              	.LFE113:
 451              		.section	.text.W5200_get_ipaddress,"ax",%progbits
 452              		.align	2
 453              		.global	W5200_get_ipaddress
 454              		.thumb
 455              		.thumb_func
 457              	W5200_get_ipaddress:
 458              	.LFB114:
 216:App/STM32F4-Discovery/W5200.c **** 
 217:App/STM32F4-Discovery/W5200.c **** 
 218:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 219:App/STM32F4-Discovery/W5200.c **** //===	func  W5200_get_ipaddress
 220:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 221:App/STM32F4-Discovery/W5200.c **** 
 222:App/STM32F4-Discovery/W5200.c **** 
 223:App/STM32F4-Discovery/W5200.c **** 
 224:App/STM32F4-Discovery/W5200.c **** void  W5200_get_ipaddress(ipv4address_t address)
 225:App/STM32F4-Discovery/W5200.c **** {
 459              		.loc 1 225 0
 460              		.cfi_startproc
 461              		@ args = 0, pretend = 0, frame = 8
 462              		@ frame_needed = 1, uses_anonymous_args = 0
 463 0000 80B5     		push	{r7, lr}
 464              	.LCFI12:
 465              		.cfi_def_cfa_offset 8
 466              		.cfi_offset 7, -8
 467              		.cfi_offset 14, -4
 468 0002 82B0     		sub	sp, sp, #8
 469              	.LCFI13:
 470              		.cfi_def_cfa_offset 16
 471 0004 00AF     		add	r7, sp, #0
 472              	.LCFI14:
 473              		.cfi_def_cfa_register 7
 474 0006 7860     		str	r0, [r7, #4]
 226:App/STM32F4-Discovery/W5200.c **** 	 spi_dma_read(W5200_SIPR, 4);
 475              		.loc 1 226 0
 476 0008 0F20     		movs	r0, #15
 477 000a 0421     		movs	r1, #4
 478 000c FFF7FEFF 		bl	spi_dma_read
 227:App/STM32F4-Discovery/W5200.c **** 	memcpy(address, bufferRX+4, 4);
 479              		.loc 1 227 0
 480 0010 7868     		ldr	r0, [r7, #4]
 481 0012 0349     		ldr	r1, .L12
 482 0014 0422     		movs	r2, #4
 483 0016 FFF7FEFF 		bl	memcpy
 228:App/STM32F4-Discovery/W5200.c **** }
 484              		.loc 1 228 0
 485 001a 0837     		adds	r7, r7, #8
 486 001c BD46     		mov	sp, r7
 487              		@ sp needed
 488 001e 80BD     		pop	{r7, pc}
 489              	.L13:
 490              		.align	2
 491              	.L12:
 492 0020 04000000 		.word	bufferRX+4
 493              		.cfi_endproc
 494              	.LFE114:
 496              		.section	.text.get_CRStatus,"ax",%progbits
 497              		.align	2
 498              		.thumb
 499              		.thumb_func
 501              	get_CRStatus:
 502              	.LFB115:
 229:App/STM32F4-Discovery/W5200.c **** 
 230:App/STM32F4-Discovery/W5200.c **** 
 231:App/STM32F4-Discovery/W5200.c **** 
 232:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 233:App/STM32F4-Discovery/W5200.c **** //	INNER STATIC FUNCTIONS FOR WRITING AND READING STATUSES 
 234:App/STM32F4-Discovery/W5200.c **** //	needed by socket, connect, send, closesocket, recv functions 
 235:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 236:App/STM32F4-Discovery/W5200.c **** 
 237:App/STM32F4-Discovery/W5200.c **** 
 238:App/STM32F4-Discovery/W5200.c **** 
 239:App/STM32F4-Discovery/W5200.c **** static uint8_t get_CRStatus(uint8_t sck_fd)
 240:App/STM32F4-Discovery/W5200.c **** {
 503              		.loc 1 240 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 16
 506              		@ frame_needed = 1, uses_anonymous_args = 0
 507 0000 80B5     		push	{r7, lr}
 508              	.LCFI15:
 509              		.cfi_def_cfa_offset 8
 510              		.cfi_offset 7, -8
 511              		.cfi_offset 14, -4
 512 0002 84B0     		sub	sp, sp, #16
 513              	.LCFI16:
 514              		.cfi_def_cfa_offset 24
 515 0004 00AF     		add	r7, sp, #0
 516              	.LCFI17:
 517              		.cfi_def_cfa_register 7
 518 0006 0346     		mov	r3, r0
 519 0008 FB71     		strb	r3, [r7, #7]
 241:App/STM32F4-Discovery/W5200.c **** 	uint8_t var; 
 242:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_CR(sck_fd),1);
 520              		.loc 1 242 0
 521 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 522 000c 9BB2     		uxth	r3, r3
 523 000e 1B02     		lsls	r3, r3, #8
 524 0010 9BB2     		uxth	r3, r3
 525 0012 03F58043 		add	r3, r3, #16384
 526 0016 0133     		adds	r3, r3, #1
 527 0018 9BB2     		uxth	r3, r3
 528 001a 1846     		mov	r0, r3
 529 001c 0121     		movs	r1, #1
 530 001e FFF7FEFF 		bl	spi_dma_read
 243:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 1);
 531              		.loc 1 243 0
 532 0022 044B     		ldr	r3, .L16
 533 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 534 0026 FB73     		strb	r3, [r7, #15]
 244:App/STM32F4-Discovery/W5200.c **** 	return var;
 535              		.loc 1 244 0
 536 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 245:App/STM32F4-Discovery/W5200.c **** }
 537              		.loc 1 245 0
 538 002a 1846     		mov	r0, r3
 539 002c 1037     		adds	r7, r7, #16
 540 002e BD46     		mov	sp, r7
 541              		@ sp needed
 542 0030 80BD     		pop	{r7, pc}
 543              	.L17:
 544 0032 00BF     		.align	2
 545              	.L16:
 546 0034 04000000 		.word	bufferRX+4
 547              		.cfi_endproc
 548              	.LFE115:
 550              		.section	.text.get_SRStatus,"ax",%progbits
 551              		.align	2
 552              		.thumb
 553              		.thumb_func
 555              	get_SRStatus:
 556              	.LFB116:
 246:App/STM32F4-Discovery/W5200.c **** 
 247:App/STM32F4-Discovery/W5200.c **** 
 248:App/STM32F4-Discovery/W5200.c **** static uint8_t get_SRStatus(uint8_t sck_fd)
 249:App/STM32F4-Discovery/W5200.c **** {
 557              		.loc 1 249 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 16
 560              		@ frame_needed = 1, uses_anonymous_args = 0
 561 0000 80B5     		push	{r7, lr}
 562              	.LCFI18:
 563              		.cfi_def_cfa_offset 8
 564              		.cfi_offset 7, -8
 565              		.cfi_offset 14, -4
 566 0002 84B0     		sub	sp, sp, #16
 567              	.LCFI19:
 568              		.cfi_def_cfa_offset 24
 569 0004 00AF     		add	r7, sp, #0
 570              	.LCFI20:
 571              		.cfi_def_cfa_register 7
 572 0006 0346     		mov	r3, r0
 573 0008 FB71     		strb	r3, [r7, #7]
 250:App/STM32F4-Discovery/W5200.c **** 	uint8_t var; 
 251:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_SR(sck_fd), 1);
 574              		.loc 1 251 0
 575 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 576 000c 9BB2     		uxth	r3, r3
 577 000e 1B02     		lsls	r3, r3, #8
 578 0010 9BB2     		uxth	r3, r3
 579 0012 03F58043 		add	r3, r3, #16384
 580 0016 0333     		adds	r3, r3, #3
 581 0018 9BB2     		uxth	r3, r3
 582 001a 1846     		mov	r0, r3
 583 001c 0121     		movs	r1, #1
 584 001e FFF7FEFF 		bl	spi_dma_read
 252:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 1);
 585              		.loc 1 252 0
 586 0022 044B     		ldr	r3, .L20
 587 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 588 0026 FB73     		strb	r3, [r7, #15]
 253:App/STM32F4-Discovery/W5200.c **** 	return var;
 589              		.loc 1 253 0
 590 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 254:App/STM32F4-Discovery/W5200.c **** }
 591              		.loc 1 254 0
 592 002a 1846     		mov	r0, r3
 593 002c 1037     		adds	r7, r7, #16
 594 002e BD46     		mov	sp, r7
 595              		@ sp needed
 596 0030 80BD     		pop	{r7, pc}
 597              	.L21:
 598 0032 00BF     		.align	2
 599              	.L20:
 600 0034 04000000 		.word	bufferRX+4
 601              		.cfi_endproc
 602              	.LFE116:
 604              		.section	.text.get_TXFSRStatus,"ax",%progbits
 605              		.align	2
 606              		.thumb
 607              		.thumb_func
 609              	get_TXFSRStatus:
 610              	.LFB117:
 255:App/STM32F4-Discovery/W5200.c **** 
 256:App/STM32F4-Discovery/W5200.c **** static uint16_t get_TXFSRStatus(uint8_t sck_fd)
 257:App/STM32F4-Discovery/W5200.c **** {
 611              		.loc 1 257 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 16
 614              		@ frame_needed = 1, uses_anonymous_args = 0
 615 0000 80B5     		push	{r7, lr}
 616              	.LCFI21:
 617              		.cfi_def_cfa_offset 8
 618              		.cfi_offset 7, -8
 619              		.cfi_offset 14, -4
 620 0002 84B0     		sub	sp, sp, #16
 621              	.LCFI22:
 622              		.cfi_def_cfa_offset 24
 623 0004 00AF     		add	r7, sp, #0
 624              	.LCFI23:
 625              		.cfi_def_cfa_register 7
 626 0006 0346     		mov	r3, r0
 627 0008 FB71     		strb	r3, [r7, #7]
 258:App/STM32F4-Discovery/W5200.c **** 	uint8_t var[2]; 
 259:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_TX_FSR(sck_fd), 2);
 628              		.loc 1 259 0
 629 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 630 000c 9BB2     		uxth	r3, r3
 631 000e 1B02     		lsls	r3, r3, #8
 632 0010 9BB2     		uxth	r3, r3
 633 0012 03F58043 		add	r3, r3, #16384
 634 0016 2033     		adds	r3, r3, #32
 635 0018 9BB2     		uxth	r3, r3
 636 001a 1846     		mov	r0, r3
 637 001c 0221     		movs	r1, #2
 638 001e FFF7FEFF 		bl	spi_dma_read
 260:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 2);
 639              		.loc 1 260 0
 640 0022 084A     		ldr	r2, .L24
 641 0024 07F10C03 		add	r3, r7, #12
 642 0028 1288     		ldrh	r2, [r2]	@ unaligned
 643 002a 1A80     		strh	r2, [r3]	@ unaligned
 261:App/STM32F4-Discovery/W5200.c **** 	
 262:App/STM32F4-Discovery/W5200.c **** 	return ((var[0] << 8) | var[1] );
 644              		.loc 1 262 0
 645 002c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 646 002e 1B02     		lsls	r3, r3, #8
 647 0030 9AB2     		uxth	r2, r3
 648 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 649 0034 1343     		orrs	r3, r3, r2
 650 0036 9BB2     		uxth	r3, r3
 651 0038 9BB2     		uxth	r3, r3
 263:App/STM32F4-Discovery/W5200.c **** 	
 264:App/STM32F4-Discovery/W5200.c **** }
 652              		.loc 1 264 0
 653 003a 1846     		mov	r0, r3
 654 003c 1037     		adds	r7, r7, #16
 655 003e BD46     		mov	sp, r7
 656              		@ sp needed
 657 0040 80BD     		pop	{r7, pc}
 658              	.L25:
 659 0042 00BF     		.align	2
 660              	.L24:
 661 0044 04000000 		.word	bufferRX+4
 662              		.cfi_endproc
 663              	.LFE117:
 665              		.section	.text.get_TXWRStatus,"ax",%progbits
 666              		.align	2
 667              		.thumb
 668              		.thumb_func
 670              	get_TXWRStatus:
 671              	.LFB118:
 265:App/STM32F4-Discovery/W5200.c **** 
 266:App/STM32F4-Discovery/W5200.c **** static uint16_t get_TXWRStatus(uint8_t sck_fd)
 267:App/STM32F4-Discovery/W5200.c **** {
 672              		.loc 1 267 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 16
 675              		@ frame_needed = 1, uses_anonymous_args = 0
 676 0000 80B5     		push	{r7, lr}
 677              	.LCFI24:
 678              		.cfi_def_cfa_offset 8
 679              		.cfi_offset 7, -8
 680              		.cfi_offset 14, -4
 681 0002 84B0     		sub	sp, sp, #16
 682              	.LCFI25:
 683              		.cfi_def_cfa_offset 24
 684 0004 00AF     		add	r7, sp, #0
 685              	.LCFI26:
 686              		.cfi_def_cfa_register 7
 687 0006 0346     		mov	r3, r0
 688 0008 FB71     		strb	r3, [r7, #7]
 268:App/STM32F4-Discovery/W5200.c **** 	uint8_t var[2]; 
 269:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_TX_WR(sck_fd), 2 );
 689              		.loc 1 269 0
 690 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 691 000c 9BB2     		uxth	r3, r3
 692 000e 1B02     		lsls	r3, r3, #8
 693 0010 9BB2     		uxth	r3, r3
 694 0012 03F58043 		add	r3, r3, #16384
 695 0016 2433     		adds	r3, r3, #36
 696 0018 9BB2     		uxth	r3, r3
 697 001a 1846     		mov	r0, r3
 698 001c 0221     		movs	r1, #2
 699 001e FFF7FEFF 		bl	spi_dma_read
 270:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 2);
 700              		.loc 1 270 0
 701 0022 084A     		ldr	r2, .L28
 702 0024 07F10C03 		add	r3, r7, #12
 703 0028 1288     		ldrh	r2, [r2]	@ unaligned
 704 002a 1A80     		strh	r2, [r3]	@ unaligned
 271:App/STM32F4-Discovery/W5200.c **** 	
 272:App/STM32F4-Discovery/W5200.c **** 	return ((var[0] << 8) | var[1] );
 705              		.loc 1 272 0
 706 002c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 707 002e 1B02     		lsls	r3, r3, #8
 708 0030 9AB2     		uxth	r2, r3
 709 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 710 0034 1343     		orrs	r3, r3, r2
 711 0036 9BB2     		uxth	r3, r3
 712 0038 9BB2     		uxth	r3, r3
 273:App/STM32F4-Discovery/W5200.c **** 
 274:App/STM32F4-Discovery/W5200.c **** 	
 275:App/STM32F4-Discovery/W5200.c **** }
 713              		.loc 1 275 0
 714 003a 1846     		mov	r0, r3
 715 003c 1037     		adds	r7, r7, #16
 716 003e BD46     		mov	sp, r7
 717              		@ sp needed
 718 0040 80BD     		pop	{r7, pc}
 719              	.L29:
 720 0042 00BF     		.align	2
 721              	.L28:
 722 0044 04000000 		.word	bufferRX+4
 723              		.cfi_endproc
 724              	.LFE118:
 726              		.section	.text.get_TXRD,"ax",%progbits
 727              		.align	2
 728              		.thumb
 729              		.thumb_func
 731              	get_TXRD:
 732              	.LFB119:
 276:App/STM32F4-Discovery/W5200.c **** static uint16_t get_TXRD(uint8_t sck_fd)
 277:App/STM32F4-Discovery/W5200.c **** {
 733              		.loc 1 277 0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 16
 736              		@ frame_needed = 1, uses_anonymous_args = 0
 737 0000 80B5     		push	{r7, lr}
 738              	.LCFI27:
 739              		.cfi_def_cfa_offset 8
 740              		.cfi_offset 7, -8
 741              		.cfi_offset 14, -4
 742 0002 84B0     		sub	sp, sp, #16
 743              	.LCFI28:
 744              		.cfi_def_cfa_offset 24
 745 0004 00AF     		add	r7, sp, #0
 746              	.LCFI29:
 747              		.cfi_def_cfa_register 7
 748 0006 0346     		mov	r3, r0
 749 0008 FB71     		strb	r3, [r7, #7]
 278:App/STM32F4-Discovery/W5200.c **** 	uint8_t var[2]; 
 279:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_TX_RD(sck_fd), 2);
 750              		.loc 1 279 0
 751 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 752 000c 9BB2     		uxth	r3, r3
 753 000e 1B02     		lsls	r3, r3, #8
 754 0010 9BB2     		uxth	r3, r3
 755 0012 03F58043 		add	r3, r3, #16384
 756 0016 2233     		adds	r3, r3, #34
 757 0018 9BB2     		uxth	r3, r3
 758 001a 1846     		mov	r0, r3
 759 001c 0221     		movs	r1, #2
 760 001e FFF7FEFF 		bl	spi_dma_read
 280:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 2);
 761              		.loc 1 280 0
 762 0022 084A     		ldr	r2, .L32
 763 0024 07F10C03 		add	r3, r7, #12
 764 0028 1288     		ldrh	r2, [r2]	@ unaligned
 765 002a 1A80     		strh	r2, [r3]	@ unaligned
 281:App/STM32F4-Discovery/W5200.c **** 	
 282:App/STM32F4-Discovery/W5200.c **** 	return ((var[0] << 8) | var[1] );
 766              		.loc 1 282 0
 767 002c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 768 002e 1B02     		lsls	r3, r3, #8
 769 0030 9AB2     		uxth	r2, r3
 770 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 771 0034 1343     		orrs	r3, r3, r2
 772 0036 9BB2     		uxth	r3, r3
 773 0038 9BB2     		uxth	r3, r3
 283:App/STM32F4-Discovery/W5200.c **** 	
 284:App/STM32F4-Discovery/W5200.c **** }
 774              		.loc 1 284 0
 775 003a 1846     		mov	r0, r3
 776 003c 1037     		adds	r7, r7, #16
 777 003e BD46     		mov	sp, r7
 778              		@ sp needed
 779 0040 80BD     		pop	{r7, pc}
 780              	.L33:
 781 0042 00BF     		.align	2
 782              	.L32:
 783 0044 04000000 		.word	bufferRX+4
 784              		.cfi_endproc
 785              	.LFE119:
 787              		.section	.text.set_TXWR,"ax",%progbits
 788              		.align	2
 789              		.thumb
 790              		.thumb_func
 792              	set_TXWR:
 793              	.LFB120:
 285:App/STM32F4-Discovery/W5200.c **** 
 286:App/STM32F4-Discovery/W5200.c **** static void  set_TXWR(uint8_t sck_fd, uint16_t val)
 287:App/STM32F4-Discovery/W5200.c **** {
 794              		.loc 1 287 0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 8
 797              		@ frame_needed = 1, uses_anonymous_args = 0
 798 0000 80B5     		push	{r7, lr}
 799              	.LCFI30:
 800              		.cfi_def_cfa_offset 8
 801              		.cfi_offset 7, -8
 802              		.cfi_offset 14, -4
 803 0002 82B0     		sub	sp, sp, #8
 804              	.LCFI31:
 805              		.cfi_def_cfa_offset 16
 806 0004 00AF     		add	r7, sp, #0
 807              	.LCFI32:
 808              		.cfi_def_cfa_register 7
 809 0006 0246     		mov	r2, r0
 810 0008 0B46     		mov	r3, r1
 811 000a FA71     		strb	r2, [r7, #7]
 812 000c BB80     		strh	r3, [r7, #4]	@ movhi
 288:App/STM32F4-Discovery/W5200.c ****  	spi_dma_send2B(W5200_Sn_TX_WR(sck_fd), val);
 813              		.loc 1 288 0
 814 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 815 0010 9BB2     		uxth	r3, r3
 816 0012 1B02     		lsls	r3, r3, #8
 817 0014 9BB2     		uxth	r3, r3
 818 0016 03F58043 		add	r3, r3, #16384
 819 001a 2433     		adds	r3, r3, #36
 820 001c 9AB2     		uxth	r2, r3
 821 001e BB88     		ldrh	r3, [r7, #4]
 822 0020 1046     		mov	r0, r2
 823 0022 1946     		mov	r1, r3
 824 0024 FFF7FEFF 		bl	spi_dma_send2B
 289:App/STM32F4-Discovery/W5200.c **** }
 825              		.loc 1 289 0
 826 0028 0837     		adds	r7, r7, #8
 827 002a BD46     		mov	sp, r7
 828              		@ sp needed
 829 002c 80BD     		pop	{r7, pc}
 830              		.cfi_endproc
 831              	.LFE120:
 833 002e 00BF     		.section	.text.get_RXRSR,"ax",%progbits
 834              		.align	2
 835              		.thumb
 836              		.thumb_func
 838              	get_RXRSR:
 839              	.LFB121:
 290:App/STM32F4-Discovery/W5200.c **** 
 291:App/STM32F4-Discovery/W5200.c **** static uint16_t get_RXRSR(uint8_t sck_fd)
 292:App/STM32F4-Discovery/W5200.c **** {
 840              		.loc 1 292 0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 16
 843              		@ frame_needed = 1, uses_anonymous_args = 0
 844 0000 80B5     		push	{r7, lr}
 845              	.LCFI33:
 846              		.cfi_def_cfa_offset 8
 847              		.cfi_offset 7, -8
 848              		.cfi_offset 14, -4
 849 0002 84B0     		sub	sp, sp, #16
 850              	.LCFI34:
 851              		.cfi_def_cfa_offset 24
 852 0004 00AF     		add	r7, sp, #0
 853              	.LCFI35:
 854              		.cfi_def_cfa_register 7
 855 0006 0346     		mov	r3, r0
 856 0008 FB71     		strb	r3, [r7, #7]
 293:App/STM32F4-Discovery/W5200.c **** 	uint8_t var[2]; 
 294:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_RX_RSR(sck_fd), 2);
 857              		.loc 1 294 0
 858 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 859 000c 9BB2     		uxth	r3, r3
 860 000e 1B02     		lsls	r3, r3, #8
 861 0010 9BB2     		uxth	r3, r3
 862 0012 03F58043 		add	r3, r3, #16384
 863 0016 2633     		adds	r3, r3, #38
 864 0018 9BB2     		uxth	r3, r3
 865 001a 1846     		mov	r0, r3
 866 001c 0221     		movs	r1, #2
 867 001e FFF7FEFF 		bl	spi_dma_read
 295:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 2);
 868              		.loc 1 295 0
 869 0022 084A     		ldr	r2, .L37
 870 0024 07F10C03 		add	r3, r7, #12
 871 0028 1288     		ldrh	r2, [r2]	@ unaligned
 872 002a 1A80     		strh	r2, [r3]	@ unaligned
 296:App/STM32F4-Discovery/W5200.c **** 	
 297:App/STM32F4-Discovery/W5200.c **** 	return ((var[0] << 8) | var[1] );
 873              		.loc 1 297 0
 874 002c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 875 002e 1B02     		lsls	r3, r3, #8
 876 0030 9AB2     		uxth	r2, r3
 877 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 878 0034 1343     		orrs	r3, r3, r2
 879 0036 9BB2     		uxth	r3, r3
 880 0038 9BB2     		uxth	r3, r3
 298:App/STM32F4-Discovery/W5200.c **** 
 299:App/STM32F4-Discovery/W5200.c **** }
 881              		.loc 1 299 0
 882 003a 1846     		mov	r0, r3
 883 003c 1037     		adds	r7, r7, #16
 884 003e BD46     		mov	sp, r7
 885              		@ sp needed
 886 0040 80BD     		pop	{r7, pc}
 887              	.L38:
 888 0042 00BF     		.align	2
 889              	.L37:
 890 0044 04000000 		.word	bufferRX+4
 891              		.cfi_endproc
 892              	.LFE121:
 894              		.section	.text.get_RXRD,"ax",%progbits
 895              		.align	2
 896              		.thumb
 897              		.thumb_func
 899              	get_RXRD:
 900              	.LFB122:
 300:App/STM32F4-Discovery/W5200.c **** 
 301:App/STM32F4-Discovery/W5200.c **** static uint16_t get_RXRD(uint8_t sck_fd)
 302:App/STM32F4-Discovery/W5200.c **** {
 901              		.loc 1 302 0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 16
 904              		@ frame_needed = 1, uses_anonymous_args = 0
 905 0000 80B5     		push	{r7, lr}
 906              	.LCFI36:
 907              		.cfi_def_cfa_offset 8
 908              		.cfi_offset 7, -8
 909              		.cfi_offset 14, -4
 910 0002 84B0     		sub	sp, sp, #16
 911              	.LCFI37:
 912              		.cfi_def_cfa_offset 24
 913 0004 00AF     		add	r7, sp, #0
 914              	.LCFI38:
 915              		.cfi_def_cfa_register 7
 916 0006 0346     		mov	r3, r0
 917 0008 FB71     		strb	r3, [r7, #7]
 303:App/STM32F4-Discovery/W5200.c **** 	uint8_t var[2]; 
 304:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_RX_RD(sck_fd), 2 );
 918              		.loc 1 304 0
 919 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 920 000c 9BB2     		uxth	r3, r3
 921 000e 1B02     		lsls	r3, r3, #8
 922 0010 9BB2     		uxth	r3, r3
 923 0012 03F58043 		add	r3, r3, #16384
 924 0016 2833     		adds	r3, r3, #40
 925 0018 9BB2     		uxth	r3, r3
 926 001a 1846     		mov	r0, r3
 927 001c 0221     		movs	r1, #2
 928 001e FFF7FEFF 		bl	spi_dma_read
 305:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 2);
 929              		.loc 1 305 0
 930 0022 084A     		ldr	r2, .L41
 931 0024 07F10C03 		add	r3, r7, #12
 932 0028 1288     		ldrh	r2, [r2]	@ unaligned
 933 002a 1A80     		strh	r2, [r3]	@ unaligned
 306:App/STM32F4-Discovery/W5200.c **** 	
 307:App/STM32F4-Discovery/W5200.c **** 	return ((var[0] << 8) | var[1] );
 934              		.loc 1 307 0
 935 002c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 936 002e 1B02     		lsls	r3, r3, #8
 937 0030 9AB2     		uxth	r2, r3
 938 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 939 0034 1343     		orrs	r3, r3, r2
 940 0036 9BB2     		uxth	r3, r3
 941 0038 9BB2     		uxth	r3, r3
 308:App/STM32F4-Discovery/W5200.c **** }
 942              		.loc 1 308 0
 943 003a 1846     		mov	r0, r3
 944 003c 1037     		adds	r7, r7, #16
 945 003e BD46     		mov	sp, r7
 946              		@ sp needed
 947 0040 80BD     		pop	{r7, pc}
 948              	.L42:
 949 0042 00BF     		.align	2
 950              	.L41:
 951 0044 04000000 		.word	bufferRX+4
 952              		.cfi_endproc
 953              	.LFE122:
 955              		.section	.text.set_RXRD,"ax",%progbits
 956              		.align	2
 957              		.thumb
 958              		.thumb_func
 960              	set_RXRD:
 961              	.LFB123:
 309:App/STM32F4-Discovery/W5200.c **** 
 310:App/STM32F4-Discovery/W5200.c **** static void set_RXRD(uint8_t sck_fd, uint16_t val)
 311:App/STM32F4-Discovery/W5200.c **** {
 962              		.loc 1 311 0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 8
 965              		@ frame_needed = 1, uses_anonymous_args = 0
 966 0000 80B5     		push	{r7, lr}
 967              	.LCFI39:
 968              		.cfi_def_cfa_offset 8
 969              		.cfi_offset 7, -8
 970              		.cfi_offset 14, -4
 971 0002 82B0     		sub	sp, sp, #8
 972              	.LCFI40:
 973              		.cfi_def_cfa_offset 16
 974 0004 00AF     		add	r7, sp, #0
 975              	.LCFI41:
 976              		.cfi_def_cfa_register 7
 977 0006 0246     		mov	r2, r0
 978 0008 0B46     		mov	r3, r1
 979 000a FA71     		strb	r2, [r7, #7]
 980 000c BB80     		strh	r3, [r7, #4]	@ movhi
 312:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send2B(W5200_Sn_RX_RD(sck_fd), val);
 981              		.loc 1 312 0
 982 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 983 0010 9BB2     		uxth	r3, r3
 984 0012 1B02     		lsls	r3, r3, #8
 985 0014 9BB2     		uxth	r3, r3
 986 0016 03F58043 		add	r3, r3, #16384
 987 001a 2833     		adds	r3, r3, #40
 988 001c 9AB2     		uxth	r2, r3
 989 001e BB88     		ldrh	r3, [r7, #4]
 990 0020 1046     		mov	r0, r2
 991 0022 1946     		mov	r1, r3
 992 0024 FFF7FEFF 		bl	spi_dma_send2B
 313:App/STM32F4-Discovery/W5200.c **** }
 993              		.loc 1 313 0
 994 0028 0837     		adds	r7, r7, #8
 995 002a BD46     		mov	sp, r7
 996              		@ sp needed
 997 002c 80BD     		pop	{r7, pc}
 998              		.cfi_endproc
 999              	.LFE123:
 1001 002e 00BF     		.section	.text.write_memory,"ax",%progbits
 1002              		.align	2
 1003              		.global	write_memory
 1004              		.thumb
 1005              		.thumb_func
 1007              	write_memory:
 1008              	.LFB124:
 314:App/STM32F4-Discovery/W5200.c **** //===============================================================================================//
 315:App/STM32F4-Discovery/W5200.c **** //		func write_memory 
 316:App/STM32F4-Discovery/W5200.c **** //===============================================================================================//
 317:App/STM32F4-Discovery/W5200.c **** 
 318:App/STM32F4-Discovery/W5200.c **** 
 319:App/STM32F4-Discovery/W5200.c **** void write_memory(uint8_t sck_fd, uint16_t write_ptr, uint8_t *buf, uint16_t len)
 320:App/STM32F4-Discovery/W5200.c **** {
 1009              		.loc 1 320 0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 24
 1012              		@ frame_needed = 1, uses_anonymous_args = 0
 1013 0000 80B5     		push	{r7, lr}
 1014              	.LCFI42:
 1015              		.cfi_def_cfa_offset 8
 1016              		.cfi_offset 7, -8
 1017              		.cfi_offset 14, -4
 1018 0002 86B0     		sub	sp, sp, #24
 1019              	.LCFI43:
 1020              		.cfi_def_cfa_offset 32
 1021 0004 00AF     		add	r7, sp, #0
 1022              	.LCFI44:
 1023              		.cfi_def_cfa_register 7
 1024 0006 BA60     		str	r2, [r7, #8]
 1025 0008 0246     		mov	r2, r0
 1026 000a FA73     		strb	r2, [r7, #15]
 1027 000c 0A46     		mov	r2, r1	@ movhi
 1028 000e BA81     		strh	r2, [r7, #12]	@ movhi
 1029 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 321:App/STM32F4-Discovery/W5200.c **** 
 322:App/STM32F4-Discovery/W5200.c **** 	/*! 	\fn void write_memory(uint8_t sck_fd, uint16_t write_ptr, uint8_t *buf, uint16_t len)
 323:App/STM32F4-Discovery/W5200.c ****  	*	\brief write memory buffer to SPI line 
 324:App/STM32F4-Discovery/W5200.c ****  	*	\param sck_fd - socket file descriptor returned by function socket
 325:App/STM32F4-Discovery/W5200.c **** 		\param write_ptr - write pointer to memory 
 326:App/STM32F4-Discovery/W5200.c **** 		\param *buf - pointer to memory buffer 
 327:App/STM32F4-Discovery/W5200.c **** 		\param len - length of memory block 
 328:App/STM32F4-Discovery/W5200.c **** 	*/
 329:App/STM32F4-Discovery/W5200.c **** 	uint16_t	memory_addr, offset;
 330:App/STM32F4-Discovery/W5200.c **** 	uint16_t	upper_size, left_size;
 331:App/STM32F4-Discovery/W5200.c **** 
 332:App/STM32F4-Discovery/W5200.c **** 	// calculate offset address 
 333:App/STM32F4-Discovery/W5200.c **** 	offset = write_ptr & 0x07ff;
 1030              		.loc 1 333 0
 1031 0012 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1032 0014 C3F30A03 		ubfx	r3, r3, #0, #11
 1033 0018 FB82     		strh	r3, [r7, #22]	@ movhi
 334:App/STM32F4-Discovery/W5200.c **** 
 335:App/STM32F4-Discovery/W5200.c **** 	// calculate physical memory start address
 336:App/STM32F4-Discovery/W5200.c **** 	memory_addr = W5200_SOCKET_TX_BASE(sck_fd)  + offset;
 1034              		.loc 1 336 0
 1035 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1036 001c 9BB2     		uxth	r3, r3
 1037 001e DB00     		lsls	r3, r3, #3
 1038 0020 9BB2     		uxth	r3, r3
 1039 0022 1B02     		lsls	r3, r3, #8
 1040 0024 9AB2     		uxth	r2, r3
 1041 0026 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1042 0028 1344     		add	r3, r3, r2
 1043 002a 9BB2     		uxth	r3, r3
 1044 002c A3F50043 		sub	r3, r3, #32768
 1045 0030 BB82     		strh	r3, [r7, #20]	@ movhi
 337:App/STM32F4-Discovery/W5200.c **** 
 338:App/STM32F4-Discovery/W5200.c **** 	// if overflow socket TX memory ?
 339:App/STM32F4-Discovery/W5200.c **** 	if(offset + len > W5200_Sn_TXMEM_SIZE(sck_fd) +1 ){
 1046              		.loc 1 339 0
 1047 0032 FA8A     		ldrh	r2, [r7, #22]
 1048 0034 FB88     		ldrh	r3, [r7, #6]
 1049 0036 1A44     		add	r2, r2, r3
 1050 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1051 003a 1B02     		lsls	r3, r3, #8
 1052 003c 03F58043 		add	r3, r3, #16384
 1053 0040 2033     		adds	r3, r3, #32
 1054 0042 9A42     		cmp	r2, r3
 1055 0044 2ADD     		ble	.L45
 340:App/STM32F4-Discovery/W5200.c **** 
 341:App/STM32F4-Discovery/W5200.c **** 		// copy upper_size bytes
 342:App/STM32F4-Discovery/W5200.c **** 		upper_size = W5200_SOCKET_TX_BASE(sck_fd) - offset;
 1056              		.loc 1 342 0
 1057 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1058 0048 9BB2     		uxth	r3, r3
 1059 004a DB00     		lsls	r3, r3, #3
 1060 004c 9BB2     		uxth	r3, r3
 1061 004e 1B02     		lsls	r3, r3, #8
 1062 0050 9AB2     		uxth	r2, r3
 1063 0052 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1064 0054 D31A     		subs	r3, r2, r3
 1065 0056 9BB2     		uxth	r3, r3
 1066 0058 A3F50043 		sub	r3, r3, #32768
 1067 005c 7B82     		strh	r3, [r7, #18]	@ movhi
 343:App/STM32F4-Discovery/W5200.c **** 		spi_dma_send( memory_addr,upper_size, buf);
 1068              		.loc 1 343 0
 1069 005e BA8A     		ldrh	r2, [r7, #20]
 1070 0060 7B8A     		ldrh	r3, [r7, #18]
 1071 0062 1046     		mov	r0, r2
 1072 0064 1946     		mov	r1, r3
 1073 0066 BA68     		ldr	r2, [r7, #8]
 1074 0068 FFF7FEFF 		bl	spi_dma_send
 344:App/STM32F4-Discovery/W5200.c **** 		buf += upper_size;
 1075              		.loc 1 344 0
 1076 006c 7B8A     		ldrh	r3, [r7, #18]
 1077 006e BA68     		ldr	r2, [r7, #8]
 1078 0070 1344     		add	r3, r3, r2
 1079 0072 BB60     		str	r3, [r7, #8]
 345:App/STM32F4-Discovery/W5200.c **** 
 346:App/STM32F4-Discovery/W5200.c **** 		// copy left size bytes
 347:App/STM32F4-Discovery/W5200.c **** 		left_size = len - upper_size;
 1080              		.loc 1 347 0
 1081 0074 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1082 0076 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1083 0078 D31A     		subs	r3, r2, r3
 1084 007a 3B82     		strh	r3, [r7, #16]	@ movhi
 348:App/STM32F4-Discovery/W5200.c **** 		spi_dma_send( W5200_SOCKET_TX_BASE(sck_fd),
 1085              		.loc 1 348 0
 1086 007c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1087 007e 9BB2     		uxth	r3, r3
 1088 0080 DB00     		lsls	r3, r3, #3
 1089 0082 9BB2     		uxth	r3, r3
 1090 0084 1B02     		lsls	r3, r3, #8
 1091 0086 9BB2     		uxth	r3, r3
 1092 0088 A3F50043 		sub	r3, r3, #32768
 1093 008c 9AB2     		uxth	r2, r3
 1094 008e 3B8A     		ldrh	r3, [r7, #16]
 1095 0090 1046     		mov	r0, r2
 1096 0092 1946     		mov	r1, r3
 1097 0094 BA68     		ldr	r2, [r7, #8]
 1098 0096 FFF7FEFF 		bl	spi_dma_send
 1099 009a 06E0     		b	.L44
 1100              	.L45:
 349:App/STM32F4-Discovery/W5200.c **** 		left_size,  buf);
 350:App/STM32F4-Discovery/W5200.c **** 
 351:App/STM32F4-Discovery/W5200.c **** 	}else{
 352:App/STM32F4-Discovery/W5200.c **** 
 353:App/STM32F4-Discovery/W5200.c **** 		// copy len size bytes
 354:App/STM32F4-Discovery/W5200.c **** 		spi_dma_send( memory_addr,len,  buf);
 1101              		.loc 1 354 0
 1102 009c BA8A     		ldrh	r2, [r7, #20]
 1103 009e FB88     		ldrh	r3, [r7, #6]
 1104 00a0 1046     		mov	r0, r2
 1105 00a2 1946     		mov	r1, r3
 1106 00a4 BA68     		ldr	r2, [r7, #8]
 1107 00a6 FFF7FEFF 		bl	spi_dma_send
 1108              	.L44:
 355:App/STM32F4-Discovery/W5200.c **** 	}
 356:App/STM32F4-Discovery/W5200.c **** }
 1109              		.loc 1 356 0
 1110 00aa 1837     		adds	r7, r7, #24
 1111 00ac BD46     		mov	sp, r7
 1112              		@ sp needed
 1113 00ae 80BD     		pop	{r7, pc}
 1114              		.cfi_endproc
 1115              	.LFE124:
 1117              		.section	.text.read_memory,"ax",%progbits
 1118              		.align	2
 1119              		.global	read_memory
 1120              		.thumb
 1121              		.thumb_func
 1123              	read_memory:
 1124              	.LFB125:
 357:App/STM32F4-Discovery/W5200.c **** 
 358:App/STM32F4-Discovery/W5200.c **** 
 359:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 360:App/STM32F4-Discovery/W5200.c **** // 			func read_memory
 361:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 362:App/STM32F4-Discovery/W5200.c **** 
 363:App/STM32F4-Discovery/W5200.c **** 
 364:App/STM32F4-Discovery/W5200.c **** void	read_memory(uint8_t sck_fd, uint16_t read_ptr, uint8_t *buf, uint16_t len)
 365:App/STM32F4-Discovery/W5200.c **** {
 1125              		.loc 1 365 0
 1126              		.cfi_startproc
 1127              		@ args = 0, pretend = 0, frame = 24
 1128              		@ frame_needed = 1, uses_anonymous_args = 0
 1129 0000 80B5     		push	{r7, lr}
 1130              	.LCFI45:
 1131              		.cfi_def_cfa_offset 8
 1132              		.cfi_offset 7, -8
 1133              		.cfi_offset 14, -4
 1134 0002 86B0     		sub	sp, sp, #24
 1135              	.LCFI46:
 1136              		.cfi_def_cfa_offset 32
 1137 0004 00AF     		add	r7, sp, #0
 1138              	.LCFI47:
 1139              		.cfi_def_cfa_register 7
 1140 0006 BA60     		str	r2, [r7, #8]
 1141 0008 0246     		mov	r2, r0
 1142 000a FA73     		strb	r2, [r7, #15]
 1143 000c 0A46     		mov	r2, r1	@ movhi
 1144 000e BA81     		strh	r2, [r7, #12]	@ movhi
 1145 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 366:App/STM32F4-Discovery/W5200.c **** 	/*! 	\fn read_memory(uint8_t sck_fd, uint16_t read_ptr, uint8_t *buf, uint16_t len)
 367:App/STM32F4-Discovery/W5200.c ****  	*	\brief read memory buffer from SPI line 
 368:App/STM32F4-Discovery/W5200.c ****  	*	\param sck_fd - socket file descriptor returned by function socket
 369:App/STM32F4-Discovery/W5200.c **** 	*	\param write_ptr - read pointer to memory 
 370:App/STM32F4-Discovery/W5200.c **** 	*	\param *buf - pointer to memory buffer 
 371:App/STM32F4-Discovery/W5200.c **** 	*	\param len - length of memory block 
 372:App/STM32F4-Discovery/W5200.c **** 	*/
 373:App/STM32F4-Discovery/W5200.c **** 
 374:App/STM32F4-Discovery/W5200.c **** 	uint16_t	memory_addr, offset;
 375:App/STM32F4-Discovery/W5200.c **** 	uint16_t	upper_size, left_size;
 376:App/STM32F4-Discovery/W5200.c **** 
 377:App/STM32F4-Discovery/W5200.c **** 	// calculate offset address 
 378:App/STM32F4-Discovery/W5200.c **** 	offset = read_ptr & 0x07ff;
 1146              		.loc 1 378 0
 1147 0012 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1148 0014 C3F30A03 		ubfx	r3, r3, #0, #11
 1149 0018 FB82     		strh	r3, [r7, #22]	@ movhi
 379:App/STM32F4-Discovery/W5200.c **** 
 380:App/STM32F4-Discovery/W5200.c **** 	// calculate physical memory start address
 381:App/STM32F4-Discovery/W5200.c **** 	memory_addr = W5200_SOCKET_RX_BASE(sck_fd)  + offset;
 1150              		.loc 1 381 0
 1151 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1152 001c 9BB2     		uxth	r3, r3
 1153 001e DB00     		lsls	r3, r3, #3
 1154 0020 9BB2     		uxth	r3, r3
 1155 0022 1B02     		lsls	r3, r3, #8
 1156 0024 9AB2     		uxth	r2, r3
 1157 0026 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1158 0028 1344     		add	r3, r3, r2
 1159 002a 9BB2     		uxth	r3, r3
 1160 002c A3F58043 		sub	r3, r3, #16384
 1161 0030 BB82     		strh	r3, [r7, #20]	@ movhi
 382:App/STM32F4-Discovery/W5200.c **** 
 383:App/STM32F4-Discovery/W5200.c **** 	// if overflow socket RX memory ?
 384:App/STM32F4-Discovery/W5200.c **** 	if(offset + len > 0x0800){
 1162              		.loc 1 384 0
 1163 0032 FA8A     		ldrh	r2, [r7, #22]
 1164 0034 FB88     		ldrh	r3, [r7, #6]
 1165 0036 1344     		add	r3, r3, r2
 1166 0038 B3F5006F 		cmp	r3, #2048
 1167 003c 2FDD     		ble	.L48
 385:App/STM32F4-Discovery/W5200.c **** 
 386:App/STM32F4-Discovery/W5200.c **** 		// copy upper_size bytes
 387:App/STM32F4-Discovery/W5200.c **** 		upper_size = 0x0800 - offset;
 1168              		.loc 1 387 0
 1169 003e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1170 0040 C3F50063 		rsb	r3, r3, #2048
 1171 0044 7B82     		strh	r3, [r7, #18]	@ movhi
 388:App/STM32F4-Discovery/W5200.c **** 		spi_dma_read( memory_addr,upper_size);
 1172              		.loc 1 388 0
 1173 0046 BA8A     		ldrh	r2, [r7, #20]
 1174 0048 7B8A     		ldrh	r3, [r7, #18]
 1175 004a 1046     		mov	r0, r2
 1176 004c 1946     		mov	r1, r3
 1177 004e FFF7FEFF 		bl	spi_dma_read
 389:App/STM32F4-Discovery/W5200.c **** 		memcpy(buf, bufferRX+4, upper_size);
 1178              		.loc 1 389 0
 1179 0052 7B8A     		ldrh	r3, [r7, #18]
 1180 0054 B868     		ldr	r0, [r7, #8]
 1181 0056 1949     		ldr	r1, .L50
 1182 0058 1A46     		mov	r2, r3
 1183 005a FFF7FEFF 		bl	memcpy
 390:App/STM32F4-Discovery/W5200.c **** 
 391:App/STM32F4-Discovery/W5200.c **** 		buf += upper_size;
 1184              		.loc 1 391 0
 1185 005e 7B8A     		ldrh	r3, [r7, #18]
 1186 0060 BA68     		ldr	r2, [r7, #8]
 1187 0062 1344     		add	r3, r3, r2
 1188 0064 BB60     		str	r3, [r7, #8]
 392:App/STM32F4-Discovery/W5200.c **** 
 393:App/STM32F4-Discovery/W5200.c **** 		// copy left size bytes
 394:App/STM32F4-Discovery/W5200.c **** 		left_size = len - upper_size;
 1189              		.loc 1 394 0
 1190 0066 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1191 0068 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1192 006a D31A     		subs	r3, r2, r3
 1193 006c 3B82     		strh	r3, [r7, #16]	@ movhi
 395:App/STM32F4-Discovery/W5200.c **** 		spi_dma_read(W5200_SOCKET_RX_BASE(sck_fd), left_size);
 1194              		.loc 1 395 0
 1195 006e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1196 0070 9BB2     		uxth	r3, r3
 1197 0072 DB00     		lsls	r3, r3, #3
 1198 0074 9BB2     		uxth	r3, r3
 1199 0076 1B02     		lsls	r3, r3, #8
 1200 0078 9BB2     		uxth	r3, r3
 1201 007a A3F58043 		sub	r3, r3, #16384
 1202 007e 9AB2     		uxth	r2, r3
 1203 0080 3B8A     		ldrh	r3, [r7, #16]
 1204 0082 1046     		mov	r0, r2
 1205 0084 1946     		mov	r1, r3
 1206 0086 FFF7FEFF 		bl	spi_dma_read
 396:App/STM32F4-Discovery/W5200.c **** 		memcpy(buf+upper_size, bufferRX+4, left_size);
 1207              		.loc 1 396 0
 1208 008a 7B8A     		ldrh	r3, [r7, #18]
 1209 008c BA68     		ldr	r2, [r7, #8]
 1210 008e 1A44     		add	r2, r2, r3
 1211 0090 3B8A     		ldrh	r3, [r7, #16]
 1212 0092 1046     		mov	r0, r2
 1213 0094 0949     		ldr	r1, .L50
 1214 0096 1A46     		mov	r2, r3
 1215 0098 FFF7FEFF 		bl	memcpy
 1216 009c 0BE0     		b	.L47
 1217              	.L48:
 397:App/STM32F4-Discovery/W5200.c **** 	}else{
 398:App/STM32F4-Discovery/W5200.c **** 
 399:App/STM32F4-Discovery/W5200.c **** 		// copy len size bytes
 400:App/STM32F4-Discovery/W5200.c **** 		spi_dma_read( memory_addr,len);
 1218              		.loc 1 400 0
 1219 009e BA8A     		ldrh	r2, [r7, #20]
 1220 00a0 FB88     		ldrh	r3, [r7, #6]
 1221 00a2 1046     		mov	r0, r2
 1222 00a4 1946     		mov	r1, r3
 1223 00a6 FFF7FEFF 		bl	spi_dma_read
 401:App/STM32F4-Discovery/W5200.c **** 		memcpy(buf, bufferRX+4, len);
 1224              		.loc 1 401 0
 1225 00aa FB88     		ldrh	r3, [r7, #6]
 1226 00ac B868     		ldr	r0, [r7, #8]
 1227 00ae 0349     		ldr	r1, .L50
 1228 00b0 1A46     		mov	r2, r3
 1229 00b2 FFF7FEFF 		bl	memcpy
 1230              	.L47:
 402:App/STM32F4-Discovery/W5200.c **** 	}
 403:App/STM32F4-Discovery/W5200.c **** }
 1231              		.loc 1 403 0
 1232 00b6 1837     		adds	r7, r7, #24
 1233 00b8 BD46     		mov	sp, r7
 1234              		@ sp needed
 1235 00ba 80BD     		pop	{r7, pc}
 1236              	.L51:
 1237              		.align	2
 1238              	.L50:
 1239 00bc 04000000 		.word	bufferRX+4
 1240              		.cfi_endproc
 1241              	.LFE125:
 1243              		.section	.text.socket,"ax",%progbits
 1244              		.align	2
 1245              		.global	socket
 1246              		.thumb
 1247              		.thumb_func
 1249              	socket:
 1250              	.LFB126:
 404:App/STM32F4-Discovery/W5200.c **** 
 405:App/STM32F4-Discovery/W5200.c **** /*==========================================================================
 406:App/STM32F4-Discovery/W5200.c **** 	socket()	create socket, handle open
 407:App/STM32F4-Discovery/W5200.c **** 		ip_proto, RAW mode only.
 408:App/STM32F4-Discovery/W5200.c **** ===========================================================================*/
 409:App/STM32F4-Discovery/W5200.c **** 
 410:App/STM32F4-Discovery/W5200.c **** uint8_t	socket(uint8_t  mode, uint16_t  port, uint8_t ip_proto)
 411:App/STM32F4-Discovery/W5200.c **** {
 1251              		.loc 1 411 0
 1252              		.cfi_startproc
 1253              		@ args = 0, pretend = 0, frame = 16
 1254              		@ frame_needed = 1, uses_anonymous_args = 0
 1255 0000 80B5     		push	{r7, lr}
 1256              	.LCFI48:
 1257              		.cfi_def_cfa_offset 8
 1258              		.cfi_offset 7, -8
 1259              		.cfi_offset 14, -4
 1260 0002 84B0     		sub	sp, sp, #16
 1261              	.LCFI49:
 1262              		.cfi_def_cfa_offset 24
 1263 0004 00AF     		add	r7, sp, #0
 1264              	.LCFI50:
 1265              		.cfi_def_cfa_register 7
 1266 0006 1346     		mov	r3, r2
 1267 0008 0246     		mov	r2, r0
 1268 000a FA71     		strb	r2, [r7, #7]
 1269 000c 0A46     		mov	r2, r1	@ movhi
 1270 000e BA80     		strh	r2, [r7, #4]	@ movhi
 1271 0010 BB71     		strb	r3, [r7, #6]
 412:App/STM32F4-Discovery/W5200.c **** 	uint8_t	sck_fd;
 413:App/STM32F4-Discovery/W5200.c **** 	uint8_t	stat;
 414:App/STM32F4-Discovery/W5200.c **** 
 415:App/STM32F4-Discovery/W5200.c **** 	// check free socket exists? 
 416:App/STM32F4-Discovery/W5200.c **** 	for(sck_fd = 0; sck_fd < W5200_MAX_SOCKETS; sck_fd++){
 1272              		.loc 1 416 0
 1273 0012 0023     		movs	r3, #0
 1274 0014 FB73     		strb	r3, [r7, #15]
 1275 0016 0CE0     		b	.L53
 1276              	.L56:
 417:App/STM32F4-Discovery/W5200.c **** 		if(socket_flg[sck_fd] == 0){
 1277              		.loc 1 417 0
 1278 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1279 001a 4C4A     		ldr	r2, .L68
 1280 001c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1281 001e 002B     		cmp	r3, #0
 1282 0020 04D1     		bne	.L54
 418:App/STM32F4-Discovery/W5200.c **** 			socket_flg[sck_fd] = 1;
 1283              		.loc 1 418 0
 1284 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1285 0024 494A     		ldr	r2, .L68
 1286 0026 0121     		movs	r1, #1
 1287 0028 D154     		strb	r1, [r2, r3]
 419:App/STM32F4-Discovery/W5200.c **** 			break;
 1288              		.loc 1 419 0
 1289 002a 05E0     		b	.L55
 1290              	.L54:
 416:App/STM32F4-Discovery/W5200.c **** 	for(sck_fd = 0; sck_fd < W5200_MAX_SOCKETS; sck_fd++){
 1291              		.loc 1 416 0
 1292 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1293 002e 0133     		adds	r3, r3, #1
 1294 0030 FB73     		strb	r3, [r7, #15]
 1295              	.L53:
 416:App/STM32F4-Discovery/W5200.c **** 	for(sck_fd = 0; sck_fd < W5200_MAX_SOCKETS; sck_fd++){
 1296              		.loc 1 416 0 is_stmt 0 discriminator 1
 1297 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1298 0034 072B     		cmp	r3, #7
 1299 0036 EFD9     		bls	.L56
 1300              	.L55:
 420:App/STM32F4-Discovery/W5200.c **** 		}
 421:App/STM32F4-Discovery/W5200.c **** 	}
 422:App/STM32F4-Discovery/W5200.c **** 	if(sck_fd >= W5200_MAX_SOCKETS) return -1;	// no more sockets.
 1301              		.loc 1 422 0 is_stmt 1
 1302 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1303 003a 072B     		cmp	r3, #7
 1304 003c 01D9     		bls	.L57
 1305              		.loc 1 422 0 is_stmt 0 discriminator 1
 1306 003e FF23     		movs	r3, #255
 1307 0040 7FE0     		b	.L67
 1308              	.L57:
 423:App/STM32F4-Discovery/W5200.c **** 	// check mode parameter
 424:App/STM32F4-Discovery/W5200.c **** 	if((mode & 0x0f) > W5200_MR_PPPOE_ENABLE) return -1;	// mode error.
 1309              		.loc 1 424 0 is_stmt 1
 1310 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1311 0044 03F00F03 		and	r3, r3, #15
 1312 0048 082B     		cmp	r3, #8
 1313 004a 01DD     		ble	.L59
 1314              		.loc 1 424 0 is_stmt 0 discriminator 1
 1315 004c FF23     		movs	r3, #255
 1316 004e 78E0     		b	.L67
 1317              	.L59:
 425:App/STM32F4-Discovery/W5200.c **** 	if(((mode & 0x0f) != W5200_Sn_MR_UDP) && (mode & W5200_Sn_MR_MULTI)) return -1; // MULTI is UDP on
 1318              		.loc 1 425 0 is_stmt 1
 1319 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1320 0052 03F00F03 		and	r3, r3, #15
 1321 0056 022B     		cmp	r3, #2
 1322 0058 05D0     		beq	.L60
 1323              		.loc 1 425 0 is_stmt 0 discriminator 1
 1324 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1325 005c 5BB2     		sxtb	r3, r3
 1326 005e 002B     		cmp	r3, #0
 1327 0060 01DA     		bge	.L60
 1328 0062 FF23     		movs	r3, #255
 1329 0064 6DE0     		b	.L67
 1330              	.L60:
 426:App/STM32F4-Discovery/W5200.c **** 	if(((mode & 0x0f) != W5200_Sn_MR_TCP) && (mode & W5200_Sn_MR_ND)) return -1; // ND is TCP only.
 1331              		.loc 1 426 0 is_stmt 1
 1332 0066 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1333 0068 03F00F03 		and	r3, r3, #15
 1334 006c 012B     		cmp	r3, #1
 1335 006e 06D0     		beq	.L61
 1336              		.loc 1 426 0 is_stmt 0 discriminator 1
 1337 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1338 0072 03F02003 		and	r3, r3, #32
 1339 0076 002B     		cmp	r3, #0
 1340 0078 01D0     		beq	.L61
 1341 007a FF23     		movs	r3, #255
 1342 007c 61E0     		b	.L67
 1343              	.L61:
 427:App/STM32F4-Discovery/W5200.c **** 
 428:App/STM32F4-Discovery/W5200.c **** 	// set MODE register
 429:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_MR(sck_fd) , mode);
 1344              		.loc 1 429 0 is_stmt 1
 1345 007e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1346 0080 9BB2     		uxth	r3, r3
 1347 0082 1B02     		lsls	r3, r3, #8
 1348 0084 9BB2     		uxth	r3, r3
 1349 0086 03F58043 		add	r3, r3, #16384
 1350 008a 9AB2     		uxth	r2, r3
 1351 008c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1352 008e 1046     		mov	r0, r2
 1353 0090 1946     		mov	r1, r3
 1354 0092 FFF7FEFF 		bl	spi_dma_sendByte
 430:App/STM32F4-Discovery/W5200.c **** 	//socket_mode[sck_fd] = mode & 0x0f;	// omitting ND/MULTICAST
 431:App/STM32F4-Discovery/W5200.c **** 	mode &= 0x0f;
 1355              		.loc 1 431 0
 1356 0096 FB79     		ldrb	r3, [r7, #7]
 1357 0098 03F00F03 		and	r3, r3, #15
 1358 009c FB71     		strb	r3, [r7, #7]
 432:App/STM32F4-Discovery/W5200.c **** 
 433:App/STM32F4-Discovery/W5200.c **** 	uint8_t prt[2];
 434:App/STM32F4-Discovery/W5200.c **** 
 435:App/STM32F4-Discovery/W5200.c **** 	// set PORT, PROTOCOL 
 436:App/STM32F4-Discovery/W5200.c **** 	switch(mode){
 1359              		.loc 1 436 0
 1360 009e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1361 00a0 012B     		cmp	r3, #1
 1362 00a2 29DB     		blt	.L62
 1363 00a4 022B     		cmp	r3, #2
 1364 00a6 02DD     		ble	.L63
 1365 00a8 032B     		cmp	r3, #3
 1366 00aa 18D0     		beq	.L64
 1367 00ac 24E0     		b	.L62
 1368              	.L63:
 437:App/STM32F4-Discovery/W5200.c **** 	case W5200_Sn_MR_TCP:
 438:App/STM32F4-Discovery/W5200.c **** 	case W5200_Sn_MR_UDP:
 439:App/STM32F4-Discovery/W5200.c **** 
 440:App/STM32F4-Discovery/W5200.c **** 		// split port for sending on two 8bits
 441:App/STM32F4-Discovery/W5200.c **** 		prt[0] = (port & 0xff00) >> 8;
 1369              		.loc 1 441 0
 1370 00ae BB88     		ldrh	r3, [r7, #4]
 1371 00b0 1B0A     		lsrs	r3, r3, #8
 1372 00b2 9BB2     		uxth	r3, r3
 1373 00b4 DBB2     		uxtb	r3, r3
 1374 00b6 3B73     		strb	r3, [r7, #12]
 442:App/STM32F4-Discovery/W5200.c **** 		prt[1] =  (port & 0x00ff);
 1375              		.loc 1 442 0
 1376 00b8 BB88     		ldrh	r3, [r7, #4]	@ movhi
 1377 00ba DBB2     		uxtb	r3, r3
 1378 00bc 7B73     		strb	r3, [r7, #13]
 443:App/STM32F4-Discovery/W5200.c **** 		spi_dma_send(W5200_Sn_PORT(sck_fd), 2 , prt);
 1379              		.loc 1 443 0
 1380 00be FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1381 00c0 9BB2     		uxth	r3, r3
 1382 00c2 1B02     		lsls	r3, r3, #8
 1383 00c4 9BB2     		uxth	r3, r3
 1384 00c6 03F58043 		add	r3, r3, #16384
 1385 00ca 0433     		adds	r3, r3, #4
 1386 00cc 9AB2     		uxth	r2, r3
 1387 00ce 07F10C03 		add	r3, r7, #12
 1388 00d2 1046     		mov	r0, r2
 1389 00d4 0221     		movs	r1, #2
 1390 00d6 1A46     		mov	r2, r3
 1391 00d8 FFF7FEFF 		bl	spi_dma_send
 444:App/STM32F4-Discovery/W5200.c **** 		
 445:App/STM32F4-Discovery/W5200.c **** 		break;
 1392              		.loc 1 445 0
 1393 00dc 0CE0     		b	.L62
 1394              	.L64:
 446:App/STM32F4-Discovery/W5200.c **** 	case W5200_Sn_MR_IPRAW:
 447:App/STM32F4-Discovery/W5200.c **** 		spi_dma_sendByte(W5200_Sn_PROTO(sck_fd), ip_proto);
 1395              		.loc 1 447 0
 1396 00de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1397 00e0 9BB2     		uxth	r3, r3
 1398 00e2 1B02     		lsls	r3, r3, #8
 1399 00e4 9BB2     		uxth	r3, r3
 1400 00e6 03F58043 		add	r3, r3, #16384
 1401 00ea 1433     		adds	r3, r3, #20
 1402 00ec 9AB2     		uxth	r2, r3
 1403 00ee BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1404 00f0 1046     		mov	r0, r2
 1405 00f2 1946     		mov	r1, r3
 1406 00f4 FFF7FEFF 		bl	spi_dma_sendByte
 1407              	.L62:
 448:App/STM32F4-Discovery/W5200.c **** 	}
 449:App/STM32F4-Discovery/W5200.c **** 
 450:App/STM32F4-Discovery/W5200.c **** 	// execute socket open
 451:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_CR(sck_fd), W5200_Sn_CR_OPEN);
 1408              		.loc 1 451 0
 1409 00f8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1410 00fa 9BB2     		uxth	r3, r3
 1411 00fc 1B02     		lsls	r3, r3, #8
 1412 00fe 9BB2     		uxth	r3, r3
 1413 0100 03F58043 		add	r3, r3, #16384
 1414 0104 0133     		adds	r3, r3, #1
 1415 0106 9BB2     		uxth	r3, r3
 1416 0108 1846     		mov	r0, r3
 1417 010a 0121     		movs	r1, #1
 1418 010c FFF7FEFF 		bl	spi_dma_sendByte
 452:App/STM32F4-Discovery/W5200.c **** 	// wait command complete.
 453:App/STM32F4-Discovery/W5200.c **** 	while(get_CRStatus(sck_fd)  != 0);	// 0 value is command complete. 
 1419              		.loc 1 453 0
 1420 0110 00BF     		nop
 1421              	.L65:
 1422              		.loc 1 453 0 is_stmt 0 discriminator 1
 1423 0112 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1424 0114 1846     		mov	r0, r3
 1425 0116 FFF7FEFF 		bl	get_CRStatus
 1426 011a 0346     		mov	r3, r0
 1427 011c 002B     		cmp	r3, #0
 1428 011e F8D1     		bne	.L65
 454:App/STM32F4-Discovery/W5200.c **** 
 455:App/STM32F4-Discovery/W5200.c **** 	// check status
 456:App/STM32F4-Discovery/W5200.c **** 	if(stat = get_SRStatus(sck_fd) != W5200_Sn_SR_SOCK_INIT) return -1;
 1429              		.loc 1 456 0 is_stmt 1
 1430 0120 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1431 0122 1846     		mov	r0, r3
 1432 0124 FFF7FEFF 		bl	get_SRStatus
 1433 0128 0346     		mov	r3, r0
 1434 012a 132B     		cmp	r3, #19
 1435 012c 0CBF     		ite	eq
 1436 012e 0023     		moveq	r3, #0
 1437 0130 0123     		movne	r3, #1
 1438 0132 DBB2     		uxtb	r3, r3
 1439 0134 BB73     		strb	r3, [r7, #14]
 1440 0136 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1441 0138 002B     		cmp	r3, #0
 1442 013a 01D0     		beq	.L66
 1443              		.loc 1 456 0 is_stmt 0 discriminator 1
 1444 013c FF23     		movs	r3, #255
 1445 013e 00E0     		b	.L67
 1446              	.L66:
 457:App/STM32F4-Discovery/W5200.c **** 
 458:App/STM32F4-Discovery/W5200.c **** 	// success return
 459:App/STM32F4-Discovery/W5200.c **** 	return sck_fd;
 1447              		.loc 1 459 0 is_stmt 1
 1448 0140 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1449              	.L67:
 460:App/STM32F4-Discovery/W5200.c **** }
 1450              		.loc 1 460 0
 1451 0142 1846     		mov	r0, r3
 1452 0144 1037     		adds	r7, r7, #16
 1453 0146 BD46     		mov	sp, r7
 1454              		@ sp needed
 1455 0148 80BD     		pop	{r7, pc}
 1456              	.L69:
 1457 014a 00BF     		.align	2
 1458              	.L68:
 1459 014c 00000000 		.word	socket_flg
 1460              		.cfi_endproc
 1461              	.LFE126:
 1463              		.section	.text.closesocket,"ax",%progbits
 1464              		.align	2
 1465              		.global	closesocket
 1466              		.thumb
 1467              		.thumb_func
 1469              	closesocket:
 1470              	.LFB127:
 461:App/STM32F4-Discovery/W5200.c **** 
 462:App/STM32F4-Discovery/W5200.c **** 
 463:App/STM32F4-Discovery/W5200.c **** /*==========================================================================
 464:App/STM32F4-Discovery/W5200.c **** 	closesocket()	socket handle close
 465:App/STM32F4-Discovery/W5200.c **** ===========================================================================*/
 466:App/STM32F4-Discovery/W5200.c **** 
 467:App/STM32F4-Discovery/W5200.c **** int	closesocket(int sck_fd)
 468:App/STM32F4-Discovery/W5200.c **** {
 1471              		.loc 1 468 0
 1472              		.cfi_startproc
 1473              		@ args = 0, pretend = 0, frame = 8
 1474              		@ frame_needed = 1, uses_anonymous_args = 0
 1475 0000 80B5     		push	{r7, lr}
 1476              	.LCFI51:
 1477              		.cfi_def_cfa_offset 8
 1478              		.cfi_offset 7, -8
 1479              		.cfi_offset 14, -4
 1480 0002 82B0     		sub	sp, sp, #8
 1481              	.LCFI52:
 1482              		.cfi_def_cfa_offset 16
 1483 0004 00AF     		add	r7, sp, #0
 1484              	.LCFI53:
 1485              		.cfi_def_cfa_register 7
 1486 0006 7860     		str	r0, [r7, #4]
 469:App/STM32F4-Discovery/W5200.c **** 	// check asign flag
 470:App/STM32F4-Discovery/W5200.c **** 	if(sck_fd < 0 || sck_fd >=W5200_MAX_SOCKETS||  socket_flg[sck_fd] != 1) return -1;
 1487              		.loc 1 470 0
 1488 0008 7B68     		ldr	r3, [r7, #4]
 1489 000a 002B     		cmp	r3, #0
 1490 000c 08DB     		blt	.L71
 1491              		.loc 1 470 0 is_stmt 0 discriminator 2
 1492 000e 7B68     		ldr	r3, [r7, #4]
 1493 0010 072B     		cmp	r3, #7
 1494 0012 05DC     		bgt	.L71
 1495              		.loc 1 470 0 discriminator 1
 1496 0014 184A     		ldr	r2, .L76
 1497 0016 7B68     		ldr	r3, [r7, #4]
 1498 0018 1344     		add	r3, r3, r2
 1499 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1500 001c 012B     		cmp	r3, #1
 1501 001e 02D0     		beq	.L72
 1502              	.L71:
 1503 0020 4FF0FF33 		mov	r3, #-1
 1504 0024 23E0     		b	.L73
 1505              	.L72:
 471:App/STM32F4-Discovery/W5200.c **** 
 472:App/STM32F4-Discovery/W5200.c **** 	// release socket
 473:App/STM32F4-Discovery/W5200.c **** 	socket_flg[sck_fd] = 0;
 1506              		.loc 1 473 0 is_stmt 1
 1507 0026 144A     		ldr	r2, .L76
 1508 0028 7B68     		ldr	r3, [r7, #4]
 1509 002a 1344     		add	r3, r3, r2
 1510 002c 0022     		movs	r2, #0
 1511 002e 1A70     		strb	r2, [r3]
 474:App/STM32F4-Discovery/W5200.c **** 	
 475:App/STM32F4-Discovery/W5200.c **** 	// execute socket close
 476:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_CR(sck_fd), W5200_Sn_CR_CLOSE);
 1512              		.loc 1 476 0
 1513 0030 7B68     		ldr	r3, [r7, #4]
 1514 0032 9BB2     		uxth	r3, r3
 1515 0034 1B02     		lsls	r3, r3, #8
 1516 0036 9BB2     		uxth	r3, r3
 1517 0038 03F58043 		add	r3, r3, #16384
 1518 003c 0133     		adds	r3, r3, #1
 1519 003e 9BB2     		uxth	r3, r3
 1520 0040 1846     		mov	r0, r3
 1521 0042 1021     		movs	r1, #16
 1522 0044 FFF7FEFF 		bl	spi_dma_sendByte
 477:App/STM32F4-Discovery/W5200.c **** 	// wait command complete.
 478:App/STM32F4-Discovery/W5200.c **** 	while(get_CRStatus(sck_fd)  != 0);	// 0 value is command complete. 
 1523              		.loc 1 478 0
 1524 0048 00BF     		nop
 1525              	.L74:
 1526              		.loc 1 478 0 is_stmt 0 discriminator 1
 1527 004a 7B68     		ldr	r3, [r7, #4]
 1528 004c DBB2     		uxtb	r3, r3
 1529 004e 1846     		mov	r0, r3
 1530 0050 FFF7FEFF 		bl	get_CRStatus
 1531 0054 0346     		mov	r3, r0
 1532 0056 002B     		cmp	r3, #0
 1533 0058 F7D1     		bne	.L74
 479:App/STM32F4-Discovery/W5200.c **** 
 480:App/STM32F4-Discovery/W5200.c **** 	// check status
 481:App/STM32F4-Discovery/W5200.c **** 	while( get_SRStatus(sck_fd) != W5200_Sn_SR_SOCK_CLOSED);
 1534              		.loc 1 481 0 is_stmt 1
 1535 005a 00BF     		nop
 1536              	.L75:
 1537              		.loc 1 481 0 is_stmt 0 discriminator 1
 1538 005c 7B68     		ldr	r3, [r7, #4]
 1539 005e DBB2     		uxtb	r3, r3
 1540 0060 1846     		mov	r0, r3
 1541 0062 FFF7FEFF 		bl	get_SRStatus
 1542 0066 0346     		mov	r3, r0
 1543 0068 002B     		cmp	r3, #0
 1544 006a F7D1     		bne	.L75
 482:App/STM32F4-Discovery/W5200.c **** 
 483:App/STM32F4-Discovery/W5200.c **** 	// close success
 484:App/STM32F4-Discovery/W5200.c **** 	return 0;
 1545              		.loc 1 484 0 is_stmt 1
 1546 006c 0023     		movs	r3, #0
 1547              	.L73:
 485:App/STM32F4-Discovery/W5200.c **** }
 1548              		.loc 1 485 0
 1549 006e 1846     		mov	r0, r3
 1550 0070 0837     		adds	r7, r7, #8
 1551 0072 BD46     		mov	sp, r7
 1552              		@ sp needed
 1553 0074 80BD     		pop	{r7, pc}
 1554              	.L77:
 1555 0076 00BF     		.align	2
 1556              	.L76:
 1557 0078 00000000 		.word	socket_flg
 1558              		.cfi_endproc
 1559              	.LFE127:
 1561              		.section	.text.connect,"ax",%progbits
 1562              		.align	2
 1563              		.global	connect
 1564              		.thumb
 1565              		.thumb_func
 1567              	connect:
 1568              	.LFB128:
 486:App/STM32F4-Discovery/W5200.c **** 
 487:App/STM32F4-Discovery/W5200.c **** 
 488:App/STM32F4-Discovery/W5200.c **** /*==========================================================================
 489:App/STM32F4-Discovery/W5200.c **** 	connect()	connect to remote host (TCP only)
 490:App/STM32F4-Discovery/W5200.c **** ===========================================================================*/
 491:App/STM32F4-Discovery/W5200.c **** 
 492:App/STM32F4-Discovery/W5200.c **** int	connect(uint8_t sck_fd, uint8_t *to_ip, uint16_t to_port)
 493:App/STM32F4-Discovery/W5200.c **** {
 1569              		.loc 1 493 0
 1570              		.cfi_startproc
 1571              		@ args = 0, pretend = 0, frame = 16
 1572              		@ frame_needed = 1, uses_anonymous_args = 0
 1573 0000 80B5     		push	{r7, lr}
 1574              	.LCFI54:
 1575              		.cfi_def_cfa_offset 8
 1576              		.cfi_offset 7, -8
 1577              		.cfi_offset 14, -4
 1578 0002 84B0     		sub	sp, sp, #16
 1579              	.LCFI55:
 1580              		.cfi_def_cfa_offset 24
 1581 0004 00AF     		add	r7, sp, #0
 1582              	.LCFI56:
 1583              		.cfi_def_cfa_register 7
 1584 0006 3960     		str	r1, [r7]
 1585 0008 1346     		mov	r3, r2
 1586 000a 0246     		mov	r2, r0
 1587 000c FA71     		strb	r2, [r7, #7]
 1588 000e BB80     		strh	r3, [r7, #4]	@ movhi
 494:App/STM32F4-Discovery/W5200.c **** 	uint8_t	status;
 495:App/STM32F4-Discovery/W5200.c **** 
 496:App/STM32F4-Discovery/W5200.c **** 	// check socket asign flag
 497:App/STM32F4-Discovery/W5200.c **** 	if(sck_fd < 0 || sck_fd >= W5200_MAX_SOCKETS ||  socket_flg[sck_fd] != 1) return -1;
 1589              		.loc 1 497 0
 1590 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1591 0012 072B     		cmp	r3, #7
 1592 0014 04D8     		bhi	.L79
 1593              		.loc 1 497 0 is_stmt 0 discriminator 2
 1594 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1595 0018 3A4A     		ldr	r2, .L89
 1596 001a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1597 001c 012B     		cmp	r3, #1
 1598 001e 02D0     		beq	.L80
 1599              	.L79:
 1600              		.loc 1 497 0 discriminator 1
 1601 0020 4FF0FF33 		mov	r3, #-1
 1602 0024 6AE0     		b	.L88
 1603              	.L80:
 498:App/STM32F4-Discovery/W5200.c **** 
 499:App/STM32F4-Discovery/W5200.c **** 	// check parameter
 500:App/STM32F4-Discovery/W5200.c **** 	if(to_ip == NULL || to_port == 0) return -1;
 1604              		.loc 1 500 0 is_stmt 1
 1605 0026 3B68     		ldr	r3, [r7]
 1606 0028 002B     		cmp	r3, #0
 1607 002a 02D0     		beq	.L82
 1608              		.loc 1 500 0 is_stmt 0 discriminator 2
 1609 002c BB88     		ldrh	r3, [r7, #4]
 1610 002e 002B     		cmp	r3, #0
 1611 0030 02D1     		bne	.L83
 1612              	.L82:
 1613              		.loc 1 500 0 discriminator 1
 1614 0032 4FF0FF33 		mov	r3, #-1
 1615 0036 61E0     		b	.L88
 1616              	.L83:
 501:App/STM32F4-Discovery/W5200.c **** 	if(get_SRStatus(sck_fd) !=  W5200_Sn_SR_SOCK_INIT) return -1;
 1617              		.loc 1 501 0 is_stmt 1
 1618 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1619 003a 1846     		mov	r0, r3
 1620 003c FFF7FEFF 		bl	get_SRStatus
 1621 0040 0346     		mov	r3, r0
 1622 0042 132B     		cmp	r3, #19
 1623 0044 02D0     		beq	.L84
 1624              		.loc 1 501 0 is_stmt 0 discriminator 1
 1625 0046 4FF0FF33 		mov	r3, #-1
 1626 004a 57E0     		b	.L88
 1627              	.L84:
 502:App/STM32F4-Discovery/W5200.c **** 	status = get_SRStatus(sck_fd);
 1628              		.loc 1 502 0 is_stmt 1
 1629 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1630 004e 1846     		mov	r0, r3
 1631 0050 FFF7FEFF 		bl	get_SRStatus
 1632 0054 0346     		mov	r3, r0
 1633 0056 FB73     		strb	r3, [r7, #15]
 503:App/STM32F4-Discovery/W5200.c **** 	
 504:App/STM32F4-Discovery/W5200.c **** 	// set IP/PORT
 505:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send(W5200_Sn_DIPR(sck_fd), 4, to_ip);
 1634              		.loc 1 505 0
 1635 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1636 005a 9BB2     		uxth	r3, r3
 1637 005c 1B02     		lsls	r3, r3, #8
 1638 005e 9BB2     		uxth	r3, r3
 1639 0060 03F58043 		add	r3, r3, #16384
 1640 0064 0C33     		adds	r3, r3, #12
 1641 0066 9BB2     		uxth	r3, r3
 1642 0068 1846     		mov	r0, r3
 1643 006a 0421     		movs	r1, #4
 1644 006c 3A68     		ldr	r2, [r7]
 1645 006e FFF7FEFF 		bl	spi_dma_send
 506:App/STM32F4-Discovery/W5200.c **** 	// split port for sending on two 8bits
 507:App/STM32F4-Discovery/W5200.c **** 	uint8_t prt[2];
 508:App/STM32F4-Discovery/W5200.c **** 		prt[0] = (to_port & 0xff00) >> 8;
 1646              		.loc 1 508 0
 1647 0072 BB88     		ldrh	r3, [r7, #4]
 1648 0074 1B0A     		lsrs	r3, r3, #8
 1649 0076 9BB2     		uxth	r3, r3
 1650 0078 DBB2     		uxtb	r3, r3
 1651 007a 3B73     		strb	r3, [r7, #12]
 509:App/STM32F4-Discovery/W5200.c **** 		prt[1] =  (to_port & 0x00ff);
 1652              		.loc 1 509 0
 1653 007c BB88     		ldrh	r3, [r7, #4]	@ movhi
 1654 007e DBB2     		uxtb	r3, r3
 1655 0080 7B73     		strb	r3, [r7, #13]
 510:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send(W5200_Sn_DPORT(sck_fd), 2 , prt);
 1656              		.loc 1 510 0
 1657 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1658 0084 9BB2     		uxth	r3, r3
 1659 0086 1B02     		lsls	r3, r3, #8
 1660 0088 9BB2     		uxth	r3, r3
 1661 008a 03F58043 		add	r3, r3, #16384
 1662 008e 1033     		adds	r3, r3, #16
 1663 0090 9AB2     		uxth	r2, r3
 1664 0092 07F10C03 		add	r3, r7, #12
 1665 0096 1046     		mov	r0, r2
 1666 0098 0221     		movs	r1, #2
 1667 009a 1A46     		mov	r2, r3
 1668 009c FFF7FEFF 		bl	spi_dma_send
 511:App/STM32F4-Discovery/W5200.c **** 	
 512:App/STM32F4-Discovery/W5200.c **** 	// CONNECT command
 513:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_CR(sck_fd), W5200_Sn_CR_CONNECT);
 1669              		.loc 1 513 0
 1670 00a0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1671 00a2 9BB2     		uxth	r3, r3
 1672 00a4 1B02     		lsls	r3, r3, #8
 1673 00a6 9BB2     		uxth	r3, r3
 1674 00a8 03F58043 		add	r3, r3, #16384
 1675 00ac 0133     		adds	r3, r3, #1
 1676 00ae 9BB2     		uxth	r3, r3
 1677 00b0 1846     		mov	r0, r3
 1678 00b2 0421     		movs	r1, #4
 1679 00b4 FFF7FEFF 		bl	spi_dma_sendByte
 514:App/STM32F4-Discovery/W5200.c **** 	while(get_CRStatus(sck_fd) != 0);	// command complete
 1680              		.loc 1 514 0
 1681 00b8 00BF     		nop
 1682              	.L85:
 1683              		.loc 1 514 0 is_stmt 0 discriminator 1
 1684 00ba FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1685 00bc 1846     		mov	r0, r3
 1686 00be FFF7FEFF 		bl	get_CRStatus
 1687 00c2 0346     		mov	r3, r0
 1688 00c4 002B     		cmp	r3, #0
 1689 00c6 F8D1     		bne	.L85
 515:App/STM32F4-Discovery/W5200.c **** 
 516:App/STM32F4-Discovery/W5200.c **** 	// check status
 517:App/STM32F4-Discovery/W5200.c **** 	while(status = get_SRStatus(sck_fd) !=  W5200_Sn_SR_SOCK_ESTABLISHED){
 1690              		.loc 1 517 0 is_stmt 1
 1691 00c8 09E0     		b	.L86
 1692              	.L87:
 518:App/STM32F4-Discovery/W5200.c **** 		if(status == W5200_Sn_SR_SOCK_CLOSED) {
 1693              		.loc 1 518 0
 1694 00ca FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1695 00cc 002B     		cmp	r3, #0
 1696 00ce 06D1     		bne	.L86
 519:App/STM32F4-Discovery/W5200.c **** 			socket_flg[sck_fd] = 0;
 1697              		.loc 1 519 0
 1698 00d0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1699 00d2 0C4A     		ldr	r2, .L89
 1700 00d4 0021     		movs	r1, #0
 1701 00d6 D154     		strb	r1, [r2, r3]
 520:App/STM32F4-Discovery/W5200.c **** 			return -1;
 1702              		.loc 1 520 0
 1703 00d8 4FF0FF33 		mov	r3, #-1
 1704 00dc 0EE0     		b	.L88
 1705              	.L86:
 517:App/STM32F4-Discovery/W5200.c **** 	while(status = get_SRStatus(sck_fd) !=  W5200_Sn_SR_SOCK_ESTABLISHED){
 1706              		.loc 1 517 0 discriminator 1
 1707 00de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1708 00e0 1846     		mov	r0, r3
 1709 00e2 FFF7FEFF 		bl	get_SRStatus
 1710 00e6 0346     		mov	r3, r0
 1711 00e8 172B     		cmp	r3, #23
 1712 00ea 0CBF     		ite	eq
 1713 00ec 0023     		moveq	r3, #0
 1714 00ee 0123     		movne	r3, #1
 1715 00f0 DBB2     		uxtb	r3, r3
 1716 00f2 FB73     		strb	r3, [r7, #15]
 1717 00f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1718 00f6 002B     		cmp	r3, #0
 1719 00f8 E7D1     		bne	.L87
 521:App/STM32F4-Discovery/W5200.c **** 		}
 522:App/STM32F4-Discovery/W5200.c **** 	}
 523:App/STM32F4-Discovery/W5200.c **** 
 524:App/STM32F4-Discovery/W5200.c **** 	
 525:App/STM32F4-Discovery/W5200.c **** 
 526:App/STM32F4-Discovery/W5200.c **** 	return 0;	// connect success complete
 1720              		.loc 1 526 0
 1721 00fa 0023     		movs	r3, #0
 1722              	.L88:
 527:App/STM32F4-Discovery/W5200.c **** }
 1723              		.loc 1 527 0
 1724 00fc 1846     		mov	r0, r3
 1725 00fe 1037     		adds	r7, r7, #16
 1726 0100 BD46     		mov	sp, r7
 1727              		@ sp needed
 1728 0102 80BD     		pop	{r7, pc}
 1729              	.L90:
 1730              		.align	2
 1731              	.L89:
 1732 0104 00000000 		.word	socket_flg
 1733              		.cfi_endproc
 1734              	.LFE128:
 1736              		.section	.text.send,"ax",%progbits
 1737              		.align	2
 1738              		.global	send
 1739              		.thumb
 1740              		.thumb_func
 1742              	send:
 1743              	.LFB129:
 528:App/STM32F4-Discovery/W5200.c **** 
 529:App/STM32F4-Discovery/W5200.c **** /*==========================================================================
 530:App/STM32F4-Discovery/W5200.c **** 	send()	send *buf to  (TCP only)
 531:App/STM32F4-Discovery/W5200.c **** ===========================================================================*/
 532:App/STM32F4-Discovery/W5200.c **** 
 533:App/STM32F4-Discovery/W5200.c **** int	send(uint8_t sck_fd, uint8_t *buf, uint16_t len, uint16_t flag)
 534:App/STM32F4-Discovery/W5200.c **** {
 1744              		.loc 1 534 0
 1745              		.cfi_startproc
 1746              		@ args = 0, pretend = 0, frame = 40
 1747              		@ frame_needed = 1, uses_anonymous_args = 0
 1748 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1749              	.LCFI57:
 1750              		.cfi_def_cfa_offset 28
 1751              		.cfi_offset 4, -28
 1752              		.cfi_offset 5, -24
 1753              		.cfi_offset 6, -20
 1754              		.cfi_offset 7, -16
 1755              		.cfi_offset 8, -12
 1756              		.cfi_offset 9, -8
 1757              		.cfi_offset 14, -4
 1758 0004 8BB0     		sub	sp, sp, #44
 1759              	.LCFI58:
 1760              		.cfi_def_cfa_offset 72
 1761 0006 00AF     		add	r7, sp, #0
 1762              	.LCFI59:
 1763              		.cfi_def_cfa_register 7
 1764 0008 B960     		str	r1, [r7, #8]
 1765 000a 0146     		mov	r1, r0
 1766 000c F973     		strb	r1, [r7, #15]
 1767 000e BA81     		strh	r2, [r7, #12]	@ movhi
 1768 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 535:App/STM32F4-Discovery/W5200.c **** 	uint16_t	send_size;
 536:App/STM32F4-Discovery/W5200.c **** 	uint16_t	write_ptr;
 537:App/STM32F4-Discovery/W5200.c **** 	uint16_t status = get_SRStatus(sck_fd);
 1769              		.loc 1 537 0
 1770 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1771 0014 1846     		mov	r0, r3
 1772 0016 FFF7FEFF 		bl	get_SRStatus
 1773 001a 0346     		mov	r3, r0
 1774 001c BB84     		strh	r3, [r7, #36]	@ movhi
 538:App/STM32F4-Discovery/W5200.c **** 	// check socket asign flag
 539:App/STM32F4-Discovery/W5200.c **** 	if(sck_fd < 0 || sck_fd >= W5200_MAX_SOCKETS ||  socket_flg[sck_fd] != 1) return -1;
 1775              		.loc 1 539 0
 1776 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1777 0020 072B     		cmp	r3, #7
 1778 0022 04D8     		bhi	.L92
 1779              		.loc 1 539 0 is_stmt 0 discriminator 2
 1780 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1781 0026 564A     		ldr	r2, .L103
 1782 0028 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1783 002a 012B     		cmp	r3, #1
 1784 002c 02D0     		beq	.L93
 1785              	.L92:
 1786              		.loc 1 539 0 discriminator 1
 1787 002e 4FF0FF33 		mov	r3, #-1
 1788 0032 A0E0     		b	.L94
 1789              	.L93:
 540:App/STM32F4-Discovery/W5200.c **** 
 541:App/STM32F4-Discovery/W5200.c **** 	// check parameter
 542:App/STM32F4-Discovery/W5200.c **** 	if(buf == NULL || len == 0) return -1;
 1790              		.loc 1 542 0 is_stmt 1
 1791 0034 BB68     		ldr	r3, [r7, #8]
 1792 0036 002B     		cmp	r3, #0
 1793 0038 02D0     		beq	.L95
 1794              		.loc 1 542 0 is_stmt 0 discriminator 2
 1795 003a BB89     		ldrh	r3, [r7, #12]
 1796 003c 002B     		cmp	r3, #0
 1797 003e 02D1     		bne	.L96
 1798              	.L95:
 1799              		.loc 1 542 0 discriminator 1
 1800 0040 4FF0FF33 		mov	r3, #-1
 1801 0044 97E0     		b	.L94
 1802              	.L96:
 543:App/STM32F4-Discovery/W5200.c **** 	
 544:App/STM32F4-Discovery/W5200.c **** 	// check status
 545:App/STM32F4-Discovery/W5200.c **** 	if(get_SRStatus(sck_fd) != W5200_Sn_SR_SOCK_ESTABLISHED) return 0; // closing or fin close wait.
 1803              		.loc 1 545 0 is_stmt 1
 1804 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1805 0048 1846     		mov	r0, r3
 1806 004a FFF7FEFF 		bl	get_SRStatus
 1807 004e 0346     		mov	r3, r0
 1808 0050 172B     		cmp	r3, #23
 1809 0052 01D0     		beq	.L97
 1810              		.loc 1 545 0 is_stmt 0 discriminator 1
 1811 0054 0023     		movs	r3, #0
 1812 0056 8EE0     		b	.L94
 1813              	.L97:
 546:App/STM32F4-Discovery/W5200.c **** 
 547:App/STM32F4-Discovery/W5200.c **** 	// check TX memory free size?
 548:App/STM32F4-Discovery/W5200.c **** 	while((send_size = get_TXFSRStatus(sck_fd)) == 0){
 1814              		.loc 1 548 0 is_stmt 1
 1815 0058 04E0     		b	.L98
 1816              	.L99:
 549:App/STM32F4-Discovery/W5200.c **** 		if(flag == 1) return 0;	// NONE BLOCKING
 1817              		.loc 1 549 0
 1818 005a FB88     		ldrh	r3, [r7, #6]
 1819 005c 012B     		cmp	r3, #1
 1820 005e 01D1     		bne	.L98
 1821              		.loc 1 549 0 is_stmt 0 discriminator 1
 1822 0060 0023     		movs	r3, #0
 1823 0062 88E0     		b	.L94
 1824              	.L98:
 548:App/STM32F4-Discovery/W5200.c **** 	while((send_size = get_TXFSRStatus(sck_fd)) == 0){
 1825              		.loc 1 548 0 is_stmt 1 discriminator 1
 1826 0064 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1827 0066 1846     		mov	r0, r3
 1828 0068 FFF7FEFF 		bl	get_TXFSRStatus
 1829 006c 0346     		mov	r3, r0
 1830 006e FB84     		strh	r3, [r7, #38]	@ movhi
 1831 0070 FB8C     		ldrh	r3, [r7, #38]
 1832 0072 002B     		cmp	r3, #0
 1833 0074 F1D0     		beq	.L99
 550:App/STM32F4-Discovery/W5200.c **** 	}
 551:App/STM32F4-Discovery/W5200.c **** 
 552:App/STM32F4-Discovery/W5200.c **** 	// get write pointer
 553:App/STM32F4-Discovery/W5200.c **** 	write_ptr = get_TXWRStatus(sck_fd);
 1834              		.loc 1 553 0
 1835 0076 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1836 0078 1846     		mov	r0, r3
 1837 007a FFF7FEFF 		bl	get_TXWRStatus
 1838 007e 0346     		mov	r3, r0
 1839 0080 7B84     		strh	r3, [r7, #34]	@ movhi
 554:App/STM32F4-Discovery/W5200.c **** 
 555:App/STM32F4-Discovery/W5200.c **** 	// check write length
 556:App/STM32F4-Discovery/W5200.c **** 	if(send_size > len) send_size = len;
 1840              		.loc 1 556 0
 1841 0082 FA8C     		ldrh	r2, [r7, #38]
 1842 0084 BB89     		ldrh	r3, [r7, #12]
 1843 0086 9A42     		cmp	r2, r3
 1844 0088 01D9     		bls	.L100
 1845              		.loc 1 556 0 is_stmt 0 discriminator 1
 1846 008a BB89     		ldrh	r3, [r7, #12]	@ movhi
 1847 008c FB84     		strh	r3, [r7, #38]	@ movhi
 1848              	.L100:
 557:App/STM32F4-Discovery/W5200.c **** 
 558:App/STM32F4-Discovery/W5200.c **** 	// data write to memory
 559:App/STM32F4-Discovery/W5200.c **** 	write_memory(sck_fd, write_ptr, buf, send_size);
 1849              		.loc 1 559 0 is_stmt 1
 1850 008e F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 1851 0090 7A8C     		ldrh	r2, [r7, #34]
 1852 0092 FB8C     		ldrh	r3, [r7, #38]
 1853 0094 0846     		mov	r0, r1
 1854 0096 1146     		mov	r1, r2
 1855 0098 BA68     		ldr	r2, [r7, #8]
 1856 009a FFF7FEFF 		bl	write_memory
 560:App/STM32F4-Discovery/W5200.c **** 
 561:App/STM32F4-Discovery/W5200.c **** 	// pointer update
 562:App/STM32F4-Discovery/W5200.c **** 	write_ptr += send_size;
 1857              		.loc 1 562 0
 1858 009e 7A8C     		ldrh	r2, [r7, #34]	@ movhi
 1859 00a0 FB8C     		ldrh	r3, [r7, #38]	@ movhi
 1860 00a2 1344     		add	r3, r3, r2
 1861 00a4 7B84     		strh	r3, [r7, #34]	@ movhi
 563:App/STM32F4-Discovery/W5200.c **** 	set_TXWR(sck_fd, write_ptr);
 1862              		.loc 1 563 0
 1863 00a6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1864 00a8 7B8C     		ldrh	r3, [r7, #34]
 1865 00aa 1046     		mov	r0, r2
 1866 00ac 1946     		mov	r1, r3
 1867 00ae FFF7FEFF 		bl	set_TXWR
 564:App/STM32F4-Discovery/W5200.c **** 		
 565:App/STM32F4-Discovery/W5200.c **** 	// test function 
 566:App/STM32F4-Discovery/W5200.c **** 	
 567:App/STM32F4-Discovery/W5200.c **** 
 568:App/STM32F4-Discovery/W5200.c **** 	uint16_t start = get_TXRD(sck_fd);
 1868              		.loc 1 568 0
 1869 00b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1870 00b4 1846     		mov	r0, r3
 1871 00b6 FFF7FEFF 		bl	get_TXRD
 1872 00ba 0346     		mov	r3, r0
 1873 00bc 3B84     		strh	r3, [r7, #32]	@ movhi
 569:App/STM32F4-Discovery/W5200.c **** 	uint16_t end   = get_TXWRStatus(sck_fd); 
 1874              		.loc 1 569 0
 1875 00be FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1876 00c0 1846     		mov	r0, r3
 1877 00c2 FFF7FEFF 		bl	get_TXWRStatus
 1878 00c6 0346     		mov	r3, r0
 1879 00c8 FB83     		strh	r3, [r7, #30]	@ movhi
 570:App/STM32F4-Discovery/W5200.c **** 	uint8_t data [write_ptr-start]; 	
 1880              		.loc 1 570 0
 1881 00ca 7A8C     		ldrh	r2, [r7, #34]
 1882 00cc 3B8C     		ldrh	r3, [r7, #32]
 1883 00ce D11A     		subs	r1, r2, r3
 1884 00d0 6B46     		mov	r3, sp
 1885 00d2 1E46     		mov	r6, r3
 1886 00d4 4B1E     		subs	r3, r1, #1
 1887 00d6 BB61     		str	r3, [r7, #24]
 1888 00d8 0B46     		mov	r3, r1
 1889 00da 1A46     		mov	r2, r3
 1890 00dc 4FF00003 		mov	r3, #0
 1891 00e0 4FEAC309 		lsl	r9, r3, #3
 1892 00e4 49EA5279 		orr	r9, r9, r2, lsr #29
 1893 00e8 4FEAC208 		lsl	r8, r2, #3
 1894 00ec 0B46     		mov	r3, r1
 1895 00ee 1A46     		mov	r2, r3
 1896 00f0 4FF00003 		mov	r3, #0
 1897 00f4 DD00     		lsls	r5, r3, #3
 1898 00f6 45EA5275 		orr	r5, r5, r2, lsr #29
 1899 00fa D400     		lsls	r4, r2, #3
 1900 00fc 0B46     		mov	r3, r1
 1901 00fe 0733     		adds	r3, r3, #7
 1902 0100 DB08     		lsrs	r3, r3, #3
 1903 0102 DB00     		lsls	r3, r3, #3
 1904 0104 ADEB030D 		sub	sp, sp, r3
 1905 0108 6B46     		mov	r3, sp
 1906 010a 0033     		adds	r3, r3, #0
 1907 010c 7B61     		str	r3, [r7, #20]
 571:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(start+0x8000, write_ptr-start );
 1908              		.loc 1 571 0
 1909 010e 3B8C     		ldrh	r3, [r7, #32]	@ movhi
 1910 0110 A3F50043 		sub	r3, r3, #32768
 1911 0114 9AB2     		uxth	r2, r3
 1912 0116 798C     		ldrh	r1, [r7, #34]	@ movhi
 1913 0118 3B8C     		ldrh	r3, [r7, #32]	@ movhi
 1914 011a CB1A     		subs	r3, r1, r3
 1915 011c 9BB2     		uxth	r3, r3
 1916 011e 1046     		mov	r0, r2
 1917 0120 1946     		mov	r1, r3
 1918 0122 FFF7FEFF 		bl	spi_dma_read
 572:App/STM32F4-Discovery/W5200.c **** 	memcpy(data, bufferRX +4, write_ptr-start);
 1919              		.loc 1 572 0
 1920 0126 7A69     		ldr	r2, [r7, #20]
 1921 0128 798C     		ldrh	r1, [r7, #34]
 1922 012a 3B8C     		ldrh	r3, [r7, #32]
 1923 012c CB1A     		subs	r3, r1, r3
 1924 012e 1046     		mov	r0, r2
 1925 0130 1449     		ldr	r1, .L103+4
 1926 0132 1A46     		mov	r2, r3
 1927 0134 FFF7FEFF 		bl	memcpy
 573:App/STM32F4-Discovery/W5200.c **** 
 574:App/STM32F4-Discovery/W5200.c **** 	
 575:App/STM32F4-Discovery/W5200.c **** 	// test function 
 576:App/STM32F4-Discovery/W5200.c **** 	
 577:App/STM32F4-Discovery/W5200.c **** 	// send command
 578:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_CR(sck_fd), W5200_Sn_CR_SEND);
 1928              		.loc 1 578 0
 1929 0138 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1930 013a 9BB2     		uxth	r3, r3
 1931 013c 1B02     		lsls	r3, r3, #8
 1932 013e 9BB2     		uxth	r3, r3
 1933 0140 03F58043 		add	r3, r3, #16384
 1934 0144 0133     		adds	r3, r3, #1
 1935 0146 9BB2     		uxth	r3, r3
 1936 0148 1846     		mov	r0, r3
 1937 014a 2021     		movs	r1, #32
 1938 014c FFF7FEFF 		bl	spi_dma_sendByte
 579:App/STM32F4-Discovery/W5200.c **** 	// wait command complete.
 580:App/STM32F4-Discovery/W5200.c **** 	while(get_CRStatus(sck_fd) != 0);	// 0 value is command complete. 
 1939              		.loc 1 580 0
 1940 0150 00BF     		nop
 1941              	.L101:
 1942              		.loc 1 580 0 is_stmt 0 discriminator 1
 1943 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1944 0154 1846     		mov	r0, r3
 1945 0156 FFF7FEFF 		bl	get_CRStatus
 1946 015a 0346     		mov	r3, r0
 1947 015c 002B     		cmp	r3, #0
 1948 015e F8D1     		bne	.L101
 581:App/STM32F4-Discovery/W5200.c **** 
 582:App/STM32F4-Discovery/W5200.c **** 	// wait sending complete
 583:App/STM32F4-Discovery/W5200.c **** 	while(get_TXRD(sck_fd) != write_ptr);
 1949              		.loc 1 583 0 is_stmt 1
 1950 0160 00BF     		nop
 1951              	.L102:
 1952              		.loc 1 583 0 is_stmt 0 discriminator 1
 1953 0162 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1954 0164 1846     		mov	r0, r3
 1955 0166 FFF7FEFF 		bl	get_TXRD
 1956 016a 0346     		mov	r3, r0
 1957 016c 7A8C     		ldrh	r2, [r7, #34]
 1958 016e 9A42     		cmp	r2, r3
 1959 0170 F7D1     		bne	.L102
 584:App/STM32F4-Discovery/W5200.c **** 
 585:App/STM32F4-Discovery/W5200.c **** 	return send_size;
 1960              		.loc 1 585 0 is_stmt 1
 1961 0172 FB8C     		ldrh	r3, [r7, #38]
 1962 0174 B546     		mov	sp, r6
 1963              	.L94:
 586:App/STM32F4-Discovery/W5200.c **** }
 1964              		.loc 1 586 0
 1965 0176 1846     		mov	r0, r3
 1966 0178 2C37     		adds	r7, r7, #44
 1967 017a BD46     		mov	sp, r7
 1968              		@ sp needed
 1969 017c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1970              	.L104:
 1971              		.align	2
 1972              	.L103:
 1973 0180 00000000 		.word	socket_flg
 1974 0184 04000000 		.word	bufferRX+4
 1975              		.cfi_endproc
 1976              	.LFE129:
 1978              		.section	.text.recv,"ax",%progbits
 1979              		.align	2
 1980              		.global	recv
 1981              		.thumb
 1982              		.thumb_func
 1984              	recv:
 1985              	.LFB130:
 587:App/STM32F4-Discovery/W5200.c **** 
 588:App/STM32F4-Discovery/W5200.c **** /*==========================================================================
 589:App/STM32F4-Discovery/W5200.c **** 	recv()	receiving data from remote terminal (TCP)
 590:App/STM32F4-Discovery/W5200.c **** 	flag is NONE_BLOCK / BLOCK
 591:App/STM32F4-Discovery/W5200.c **** 	return code is received data size.
 592:App/STM32F4-Discovery/W5200.c **** 	if received disconnectÂ@from peer, size was set to Zero, 
 593:App/STM32F4-Discovery/W5200.c **** ===========================================================================*/
 594:App/STM32F4-Discovery/W5200.c **** 
 595:App/STM32F4-Discovery/W5200.c **** int	recv(uint8_t sck_fd, uint8_t *buf, uint16_t len, uint16_t flag)
 596:App/STM32F4-Discovery/W5200.c **** {
 1986              		.loc 1 596 0
 1987              		.cfi_startproc
 1988              		@ args = 0, pretend = 0, frame = 24
 1989              		@ frame_needed = 1, uses_anonymous_args = 0
 1990 0000 80B5     		push	{r7, lr}
 1991              	.LCFI60:
 1992              		.cfi_def_cfa_offset 8
 1993              		.cfi_offset 7, -8
 1994              		.cfi_offset 14, -4
 1995 0002 86B0     		sub	sp, sp, #24
 1996              	.LCFI61:
 1997              		.cfi_def_cfa_offset 32
 1998 0004 00AF     		add	r7, sp, #0
 1999              	.LCFI62:
 2000              		.cfi_def_cfa_register 7
 2001 0006 B960     		str	r1, [r7, #8]
 2002 0008 0146     		mov	r1, r0
 2003 000a F973     		strb	r1, [r7, #15]
 2004 000c BA81     		strh	r2, [r7, #12]	@ movhi
 2005 000e FB80     		strh	r3, [r7, #6]	@ movhi
 597:App/STM32F4-Discovery/W5200.c **** 	uint16_t	read_len;
 598:App/STM32F4-Discovery/W5200.c **** 	uint16_t	read_ptr;
 599:App/STM32F4-Discovery/W5200.c **** 
 600:App/STM32F4-Discovery/W5200.c **** 	// check asign flag
 601:App/STM32F4-Discovery/W5200.c **** 	if(sck_fd < 0 || sck_fd >= W5200_MAX_SOCKETS ||  socket_flg[sck_fd] != 1) return -1;
 2006              		.loc 1 601 0
 2007 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2008 0012 072B     		cmp	r3, #7
 2009 0014 04D8     		bhi	.L106
 2010              		.loc 1 601 0 is_stmt 0 discriminator 2
 2011 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2012 0018 314A     		ldr	r2, .L115
 2013 001a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2014 001c 012B     		cmp	r3, #1
 2015 001e 02D0     		beq	.L107
 2016              	.L106:
 2017              		.loc 1 601 0 discriminator 1
 2018 0020 4FF0FF33 		mov	r3, #-1
 2019 0024 57E0     		b	.L108
 2020              	.L107:
 602:App/STM32F4-Discovery/W5200.c **** 
 603:App/STM32F4-Discovery/W5200.c **** 	// check parameter
 604:App/STM32F4-Discovery/W5200.c **** 	if(buf == NULL || len == 0) return -1;
 2021              		.loc 1 604 0 is_stmt 1
 2022 0026 BB68     		ldr	r3, [r7, #8]
 2023 0028 002B     		cmp	r3, #0
 2024 002a 02D0     		beq	.L109
 2025              		.loc 1 604 0 is_stmt 0 discriminator 2
 2026 002c BB89     		ldrh	r3, [r7, #12]
 2027 002e 002B     		cmp	r3, #0
 2028 0030 02D1     		bne	.L110
 2029              	.L109:
 2030              		.loc 1 604 0 discriminator 1
 2031 0032 4FF0FF33 		mov	r3, #-1
 2032 0036 4EE0     		b	.L108
 2033              	.L110:
 605:App/STM32F4-Discovery/W5200.c **** 
 606:App/STM32F4-Discovery/W5200.c **** 	// check status
 607:App/STM32F4-Discovery/W5200.c **** 	if(get_SRStatus(sck_fd) != W5200_Sn_SR_SOCK_ESTABLISHED) return 0;	// closing or fin close wait.
 2034              		.loc 1 607 0 is_stmt 1
 2035 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2036 003a 1846     		mov	r0, r3
 2037 003c FFF7FEFF 		bl	get_SRStatus
 2038 0040 0346     		mov	r3, r0
 2039 0042 172B     		cmp	r3, #23
 2040 0044 01D0     		beq	.L111
 2041              		.loc 1 607 0 is_stmt 0 discriminator 1
 2042 0046 0023     		movs	r3, #0
 2043 0048 45E0     		b	.L108
 2044              	.L111:
 608:App/STM32F4-Discovery/W5200.c **** 
 609:App/STM32F4-Discovery/W5200.c **** 	// received data exists?
 610:App/STM32F4-Discovery/W5200.c **** 	while((read_len = get_RXRSR(sck_fd)) == 0){
 2045              		.loc 1 610 0 is_stmt 1
 2046 004a 04E0     		b	.L112
 2047              	.L113:
 611:App/STM32F4-Discovery/W5200.c **** 		if(flag == 1) return 0;	// NONE BLOCKING
 2048              		.loc 1 611 0
 2049 004c FB88     		ldrh	r3, [r7, #6]
 2050 004e 012B     		cmp	r3, #1
 2051 0050 01D1     		bne	.L112
 2052              		.loc 1 611 0 is_stmt 0 discriminator 1
 2053 0052 0023     		movs	r3, #0
 2054 0054 3FE0     		b	.L108
 2055              	.L112:
 610:App/STM32F4-Discovery/W5200.c **** 	while((read_len = get_RXRSR(sck_fd)) == 0){
 2056              		.loc 1 610 0 is_stmt 1 discriminator 1
 2057 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2058 0058 1846     		mov	r0, r3
 2059 005a FFF7FEFF 		bl	get_RXRSR
 2060 005e 0346     		mov	r3, r0
 2061 0060 FB82     		strh	r3, [r7, #22]	@ movhi
 2062 0062 FB8A     		ldrh	r3, [r7, #22]
 2063 0064 002B     		cmp	r3, #0
 2064 0066 F1D0     		beq	.L113
 612:App/STM32F4-Discovery/W5200.c **** 	}
 613:App/STM32F4-Discovery/W5200.c **** 
 614:App/STM32F4-Discovery/W5200.c **** 	// set read length
 615:App/STM32F4-Discovery/W5200.c **** 	//if(read_len > len) read_len = len;
 616:App/STM32F4-Discovery/W5200.c **** 
 617:App/STM32F4-Discovery/W5200.c **** 	// get read pointer
 618:App/STM32F4-Discovery/W5200.c **** 	read_ptr = get_RXRD(sck_fd);
 2065              		.loc 1 618 0
 2066 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2067 006a 1846     		mov	r0, r3
 2068 006c FFF7FEFF 		bl	get_RXRD
 2069 0070 0346     		mov	r3, r0
 2070 0072 BB82     		strh	r3, [r7, #20]	@ movhi
 619:App/STM32F4-Discovery/W5200.c **** 
 620:App/STM32F4-Discovery/W5200.c **** 	// read from RX memory
 621:App/STM32F4-Discovery/W5200.c **** 	read_memory(sck_fd, read_ptr, buf, read_len < len ? read_len: len);
 2071              		.loc 1 621 0
 2072 0074 BA89     		ldrh	r2, [r7, #12]
 2073 0076 FB8A     		ldrh	r3, [r7, #22]
 2074 0078 9A42     		cmp	r2, r3
 2075 007a 38BF     		it	cc
 2076 007c 1346     		movcc	r3, r2
 2077 007e 9BB2     		uxth	r3, r3
 2078 0080 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 2079 0082 BA8A     		ldrh	r2, [r7, #20]
 2080 0084 0846     		mov	r0, r1
 2081 0086 1146     		mov	r1, r2
 2082 0088 BA68     		ldr	r2, [r7, #8]
 2083 008a FFF7FEFF 		bl	read_memory
 622:App/STM32F4-Discovery/W5200.c **** 
 623:App/STM32F4-Discovery/W5200.c **** 	// update pointer
 624:App/STM32F4-Discovery/W5200.c **** 	read_ptr += read_len;
 2084              		.loc 1 624 0
 2085 008e BA8A     		ldrh	r2, [r7, #20]	@ movhi
 2086 0090 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 2087 0092 1344     		add	r3, r3, r2
 2088 0094 BB82     		strh	r3, [r7, #20]	@ movhi
 625:App/STM32F4-Discovery/W5200.c **** 	set_RXRD(sck_fd, read_ptr);
 2089              		.loc 1 625 0
 2090 0096 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2091 0098 BB8A     		ldrh	r3, [r7, #20]
 2092 009a 1046     		mov	r0, r2
 2093 009c 1946     		mov	r1, r3
 2094 009e FFF7FEFF 		bl	set_RXRD
 626:App/STM32F4-Discovery/W5200.c **** 
 627:App/STM32F4-Discovery/W5200.c **** 	// recive command
 628:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_CR(sck_fd), W5200_Sn_CR_RECV);
 2095              		.loc 1 628 0
 2096 00a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2097 00a4 9BB2     		uxth	r3, r3
 2098 00a6 1B02     		lsls	r3, r3, #8
 2099 00a8 9BB2     		uxth	r3, r3
 2100 00aa 03F58043 		add	r3, r3, #16384
 2101 00ae 0133     		adds	r3, r3, #1
 2102 00b0 9BB2     		uxth	r3, r3
 2103 00b2 1846     		mov	r0, r3
 2104 00b4 4021     		movs	r1, #64
 2105 00b6 FFF7FEFF 		bl	spi_dma_sendByte
 629:App/STM32F4-Discovery/W5200.c **** 	// wait command complete.
 630:App/STM32F4-Discovery/W5200.c **** 	while(get_CRStatus(sck_fd) != 0);	// 0 value is command complete. 
 2106              		.loc 1 630 0
 2107 00ba 00BF     		nop
 2108              	.L114:
 2109              		.loc 1 630 0 is_stmt 0 discriminator 1
 2110 00bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2111 00be 1846     		mov	r0, r3
 2112 00c0 FFF7FEFF 		bl	get_CRStatus
 2113 00c4 0346     		mov	r3, r0
 2114 00c6 002B     		cmp	r3, #0
 2115 00c8 F8D1     		bne	.L114
 631:App/STM32F4-Discovery/W5200.c **** 	
 632:App/STM32F4-Discovery/W5200.c **** 
 633:App/STM32F4-Discovery/W5200.c ****  	return	(read_len < len ? read_len: len);
 2116              		.loc 1 633 0 is_stmt 1
 2117 00ca BA89     		ldrh	r2, [r7, #12]
 2118 00cc FB8A     		ldrh	r3, [r7, #22]
 2119 00ce 9A42     		cmp	r2, r3
 2120 00d0 38BF     		it	cc
 2121 00d2 1346     		movcc	r3, r2
 2122 00d4 9BB2     		uxth	r3, r3
 2123              	.L108:
 634:App/STM32F4-Discovery/W5200.c **** }
 2124              		.loc 1 634 0
 2125 00d6 1846     		mov	r0, r3
 2126 00d8 1837     		adds	r7, r7, #24
 2127 00da BD46     		mov	sp, r7
 2128              		@ sp needed
 2129 00dc 80BD     		pop	{r7, pc}
 2130              	.L116:
 2131 00de 00BF     		.align	2
 2132              	.L115:
 2133 00e0 00000000 		.word	socket_flg
 2134              		.cfi_endproc
 2135              	.LFE130:
 2137              		.section	.text.listen,"ax",%progbits
 2138              		.align	2
 2139              		.global	listen
 2140              		.thumb
 2141              		.thumb_func
 2143              	listen:
 2144              	.LFB131:
 635:App/STM32F4-Discovery/W5200.c **** 
 636:App/STM32F4-Discovery/W5200.c **** 
 637:App/STM32F4-Discovery/W5200.c **** //==================================================================================
 638:App/STM32F4-Discovery/W5200.c **** //	func listen 
 639:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 640:App/STM32F4-Discovery/W5200.c **** 
 641:App/STM32F4-Discovery/W5200.c **** 
 642:App/STM32F4-Discovery/W5200.c **** int	listen(int sck_fd)
 643:App/STM32F4-Discovery/W5200.c **** {
 2145              		.loc 1 643 0
 2146              		.cfi_startproc
 2147              		@ args = 0, pretend = 0, frame = 16
 2148              		@ frame_needed = 1, uses_anonymous_args = 0
 2149 0000 80B5     		push	{r7, lr}
 2150              	.LCFI63:
 2151              		.cfi_def_cfa_offset 8
 2152              		.cfi_offset 7, -8
 2153              		.cfi_offset 14, -4
 2154 0002 84B0     		sub	sp, sp, #16
 2155              	.LCFI64:
 2156              		.cfi_def_cfa_offset 24
 2157 0004 00AF     		add	r7, sp, #0
 2158              	.LCFI65:
 2159              		.cfi_def_cfa_register 7
 2160 0006 7860     		str	r0, [r7, #4]
 644:App/STM32F4-Discovery/W5200.c **** 	// check socket asign flag
 645:App/STM32F4-Discovery/W5200.c **** 	if(sck_fd < 0 || sck_fd >=W5200_MAX_SOCKETS||  socket_flg[sck_fd] != 1) return -1;
 2161              		.loc 1 645 0
 2162 0008 7B68     		ldr	r3, [r7, #4]
 2163 000a 002B     		cmp	r3, #0
 2164 000c 08DB     		blt	.L118
 2165              		.loc 1 645 0 is_stmt 0 discriminator 2
 2166 000e 7B68     		ldr	r3, [r7, #4]
 2167 0010 072B     		cmp	r3, #7
 2168 0012 05DC     		bgt	.L118
 2169              		.loc 1 645 0 discriminator 1
 2170 0014 224A     		ldr	r2, .L125
 2171 0016 7B68     		ldr	r3, [r7, #4]
 2172 0018 1344     		add	r3, r3, r2
 2173 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2174 001c 012B     		cmp	r3, #1
 2175 001e 02D0     		beq	.L119
 2176              	.L118:
 2177 0020 4FF0FF33 		mov	r3, #-1
 2178 0024 38E0     		b	.L124
 2179              	.L119:
 646:App/STM32F4-Discovery/W5200.c **** 
 647:App/STM32F4-Discovery/W5200.c **** 	// LISTEN start from INIT only.
 648:App/STM32F4-Discovery/W5200.c **** 	if(get_SRStatus(sck_fd)  != W5200_Sn_SR_SOCK_INIT) return -1;
 2180              		.loc 1 648 0 is_stmt 1
 2181 0026 7B68     		ldr	r3, [r7, #4]
 2182 0028 DBB2     		uxtb	r3, r3
 2183 002a 1846     		mov	r0, r3
 2184 002c FFF7FEFF 		bl	get_SRStatus
 2185 0030 0346     		mov	r3, r0
 2186 0032 132B     		cmp	r3, #19
 2187 0034 02D0     		beq	.L121
 2188              		.loc 1 648 0 is_stmt 0 discriminator 1
 2189 0036 4FF0FF33 		mov	r3, #-1
 2190 003a 2DE0     		b	.L124
 2191              	.L121:
 649:App/STM32F4-Discovery/W5200.c **** 
 650:App/STM32F4-Discovery/W5200.c **** 
 651:App/STM32F4-Discovery/W5200.c **** 	uint8_t b;
 652:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_IR(sck_fd), 1);
 2192              		.loc 1 652 0 is_stmt 1
 2193 003c 7B68     		ldr	r3, [r7, #4]
 2194 003e 9BB2     		uxth	r3, r3
 2195 0040 1B02     		lsls	r3, r3, #8
 2196 0042 9BB2     		uxth	r3, r3
 2197 0044 03F58043 		add	r3, r3, #16384
 2198 0048 0233     		adds	r3, r3, #2
 2199 004a 9BB2     		uxth	r3, r3
 2200 004c 1846     		mov	r0, r3
 2201 004e 0121     		movs	r1, #1
 2202 0050 FFF7FEFF 		bl	spi_dma_read
 653:App/STM32F4-Discovery/W5200.c **** 	memcpy(&b, bufferRX + 4, 1);
 2203              		.loc 1 653 0
 2204 0054 134B     		ldr	r3, .L125+4
 2205 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2206 0058 FB73     		strb	r3, [r7, #15]
 654:App/STM32F4-Discovery/W5200.c **** 
 655:App/STM32F4-Discovery/W5200.c **** 	// CONNECT command
 656:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_CR(sck_fd), W5200_Sn_CR_LISTEN);
 2207              		.loc 1 656 0
 2208 005a 7B68     		ldr	r3, [r7, #4]
 2209 005c 9BB2     		uxth	r3, r3
 2210 005e 1B02     		lsls	r3, r3, #8
 2211 0060 9BB2     		uxth	r3, r3
 2212 0062 03F58043 		add	r3, r3, #16384
 2213 0066 0133     		adds	r3, r3, #1
 2214 0068 9BB2     		uxth	r3, r3
 2215 006a 1846     		mov	r0, r3
 2216 006c 0221     		movs	r1, #2
 2217 006e FFF7FEFF 		bl	spi_dma_sendByte
 657:App/STM32F4-Discovery/W5200.c **** 	while(get_CRStatus(sck_fd) != 0);	// 0 value is command complete. 
 2218              		.loc 1 657 0
 2219 0072 00BF     		nop
 2220              	.L122:
 2221              		.loc 1 657 0 is_stmt 0 discriminator 1
 2222 0074 7B68     		ldr	r3, [r7, #4]
 2223 0076 DBB2     		uxtb	r3, r3
 2224 0078 1846     		mov	r0, r3
 2225 007a FFF7FEFF 		bl	get_CRStatus
 2226 007e 0346     		mov	r3, r0
 2227 0080 002B     		cmp	r3, #0
 2228 0082 F7D1     		bne	.L122
 658:App/STM32F4-Discovery/W5200.c **** 
 659:App/STM32F4-Discovery/W5200.c **** 	// wait for status change to LISTEN
 660:App/STM32F4-Discovery/W5200.c **** 	while(get_SRStatus(sck_fd) != W5200_Sn_SR_SOCK_LISTEN);
 2229              		.loc 1 660 0 is_stmt 1
 2230 0084 00BF     		nop
 2231              	.L123:
 2232              		.loc 1 660 0 is_stmt 0 discriminator 1
 2233 0086 7B68     		ldr	r3, [r7, #4]
 2234 0088 DBB2     		uxtb	r3, r3
 2235 008a 1846     		mov	r0, r3
 2236 008c FFF7FEFF 		bl	get_SRStatus
 2237 0090 0346     		mov	r3, r0
 2238 0092 142B     		cmp	r3, #20
 2239 0094 F7D1     		bne	.L123
 661:App/STM32F4-Discovery/W5200.c **** 	 
 662:App/STM32F4-Discovery/W5200.c **** 	return 0;	// listen success complete
 2240              		.loc 1 662 0 is_stmt 1
 2241 0096 0023     		movs	r3, #0
 2242              	.L124:
 663:App/STM32F4-Discovery/W5200.c **** }
 2243              		.loc 1 663 0
 2244 0098 1846     		mov	r0, r3
 2245 009a 1037     		adds	r7, r7, #16
 2246 009c BD46     		mov	sp, r7
 2247              		@ sp needed
 2248 009e 80BD     		pop	{r7, pc}
 2249              	.L126:
 2250              		.align	2
 2251              	.L125:
 2252 00a0 00000000 		.word	socket_flg
 2253 00a4 04000000 		.word	bufferRX+4
 2254              		.cfi_endproc
 2255              	.LFE131:
 2257              		.section	.text.locate_interrupt,"ax",%progbits
 2258              		.align	2
 2259              		.global	locate_interrupt
 2260              		.thumb
 2261              		.thumb_func
 2263              	locate_interrupt:
 2264              	.LFB132:
 664:App/STM32F4-Discovery/W5200.c **** 
 665:App/STM32F4-Discovery/W5200.c **** 
 666:App/STM32F4-Discovery/W5200.c **** 
 667:App/STM32F4-Discovery/W5200.c **** //==================================================================================
 668:App/STM32F4-Discovery/W5200.c **** ////	func locate_interrupt
 669:App/STM32F4-Discovery/W5200.c **** //==================================================================================
 670:App/STM32F4-Discovery/W5200.c **** void locate_interrupt()
 671:App/STM32F4-Discovery/W5200.c **** {
 2265              		.loc 1 671 0
 2266              		.cfi_startproc
 2267              		@ args = 0, pretend = 0, frame = 8
 2268              		@ frame_needed = 1, uses_anonymous_args = 0
 2269 0000 80B5     		push	{r7, lr}
 2270              	.LCFI66:
 2271              		.cfi_def_cfa_offset 8
 2272              		.cfi_offset 7, -8
 2273              		.cfi_offset 14, -4
 2274 0002 82B0     		sub	sp, sp, #8
 2275              	.LCFI67:
 2276              		.cfi_def_cfa_offset 16
 2277 0004 00AF     		add	r7, sp, #0
 2278              	.LCFI68:
 2279              		.cfi_def_cfa_register 7
 672:App/STM32F4-Discovery/W5200.c **** 
 673:App/STM32F4-Discovery/W5200.c **** 	/*!************************************************
 674:App/STM32F4-Discovery/W5200.c **** 	*  Function used by interrupt service routine. \n
 675:App/STM32F4-Discovery/W5200.c **** 	* Reads wiznet interrupt registers and identify 
 676:App/STM32F4-Discovery/W5200.c **** 	* interupt plus on which socket interrupt occured. \n
 677:App/STM32F4-Discovery/W5200.c **** 	* It depends on interrupt what follows
 678:App/STM32F4-Discovery/W5200.c **** 	* ****************************************************** */
 679:App/STM32F4-Discovery/W5200.c **** 	uint8_t code = 0x4; 
 2280              		.loc 1 679 0
 2281 0006 0423     		movs	r3, #4
 2282 0008 FB71     		strb	r3, [r7, #7]
 680:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_IMR2, 1);
 2283              		.loc 1 680 0
 2284 000a 3620     		movs	r0, #54
 2285 000c 0121     		movs	r1, #1
 2286 000e FFF7FEFF 		bl	spi_dma_read
 681:App/STM32F4-Discovery/W5200.c **** 	memcpy(&code, bufferRX + 4, 1);
 2287              		.loc 1 681 0
 2288 0012 154B     		ldr	r3, .L135
 2289 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2290 0016 FB71     		strb	r3, [r7, #7]
 682:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_IR(code), 1);
 2291              		.loc 1 682 0
 2292 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2293 001a 1B02     		lsls	r3, r3, #8
 2294 001c 9BB2     		uxth	r3, r3
 2295 001e 03F58043 		add	r3, r3, #16384
 2296 0022 0233     		adds	r3, r3, #2
 2297 0024 9BB2     		uxth	r3, r3
 2298 0026 1846     		mov	r0, r3
 2299 0028 0121     		movs	r1, #1
 2300 002a FFF7FEFF 		bl	spi_dma_read
 683:App/STM32F4-Discovery/W5200.c **** 	memcpy(&code, bufferRX +4 , 1);
 2301              		.loc 1 683 0
 2302 002e 0E4B     		ldr	r3, .L135
 2303 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2304 0032 FB71     		strb	r3, [r7, #7]
 684:App/STM32F4-Discovery/W5200.c ****        
 685:App/STM32F4-Discovery/W5200.c **** 	
 686:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_IR(0x0), 0xff);
 2305              		.loc 1 686 0
 2306 0034 44F20200 		movw	r0, #16386
 2307 0038 FF21     		movs	r1, #255
 2308 003a FFF7FEFF 		bl	spi_dma_sendByte
 687:App/STM32F4-Discovery/W5200.c **** 	switch (code )
 2309              		.loc 1 687 0
 2310 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2311 0040 022B     		cmp	r3, #2
 2312 0042 0AD0     		beq	.L133
 2313 0044 042B     		cmp	r3, #4
 2314 0046 02D0     		beq	.L130
 2315 0048 012B     		cmp	r3, #1
 2316 004a 08D0     		beq	.L134
 688:App/STM32F4-Discovery/W5200.c **** 	{
 689:App/STM32F4-Discovery/W5200.c **** 		case 0x1: 
 690:App/STM32F4-Discovery/W5200.c **** 			// connection established 
 691:App/STM32F4-Discovery/W5200.c **** 			// do nothing wait for input. 
 692:App/STM32F4-Discovery/W5200.c **** 			break;
 693:App/STM32F4-Discovery/W5200.c **** 		case 0x2:
 694:App/STM32F4-Discovery/W5200.c **** 			break;
 695:App/STM32F4-Discovery/W5200.c **** 		case 0x4:
 696:App/STM32F4-Discovery/W5200.c **** 			vTaskResume(set_macTaskHandle); 
 697:App/STM32F4-Discovery/W5200.c **** 			break;
 698:App/STM32F4-Discovery/W5200.c **** 		default:
 699:App/STM32F4-Discovery/W5200.c **** 			break;		
 2317              		.loc 1 699 0
 2318 004c 08E0     		b	.L127
 2319              	.L130:
 696:App/STM32F4-Discovery/W5200.c **** 			vTaskResume(set_macTaskHandle); 
 2320              		.loc 1 696 0
 2321 004e 074B     		ldr	r3, .L135+4
 2322 0050 1B68     		ldr	r3, [r3]
 2323 0052 1846     		mov	r0, r3
 2324 0054 FFF7FEFF 		bl	vTaskResume
 697:App/STM32F4-Discovery/W5200.c **** 			break;
 2325              		.loc 1 697 0
 2326 0058 02E0     		b	.L127
 2327              	.L133:
 694:App/STM32F4-Discovery/W5200.c **** 			break;
 2328              		.loc 1 694 0
 2329 005a 00BF     		nop
 2330 005c 00E0     		b	.L127
 2331              	.L134:
 692:App/STM32F4-Discovery/W5200.c **** 			break;
 2332              		.loc 1 692 0
 2333 005e 00BF     		nop
 2334              	.L127:
 700:App/STM32F4-Discovery/W5200.c **** 	}
 701:App/STM32F4-Discovery/W5200.c **** }
 2335              		.loc 1 701 0
 2336 0060 0837     		adds	r7, r7, #8
 2337 0062 BD46     		mov	sp, r7
 2338              		@ sp needed
 2339 0064 80BD     		pop	{r7, pc}
 2340              	.L136:
 2341 0066 00BF     		.align	2
 2342              	.L135:
 2343 0068 04000000 		.word	bufferRX+4
 2344 006c 00000000 		.word	set_macTaskHandle
 2345              		.cfi_endproc
 2346              	.LFE132:
 2348              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
 2349              		.align	2
 2350              		.global	EXTI4_IRQHandler
 2351              		.thumb
 2352              		.thumb_func
 2354              	EXTI4_IRQHandler:
 2355              	.LFB133:
 702:App/STM32F4-Discovery/W5200.c **** 
 703:App/STM32F4-Discovery/W5200.c **** //==================================================================================
 704:App/STM32F4-Discovery/W5200.c **** //// EXTI4_IRQHandler
 705:App/STM32F4-Discovery/W5200.c **** //==================================================================================
 706:App/STM32F4-Discovery/W5200.c **** void EXTI4_IRQHandler(void) //EXTI0 ISR
 707:App/STM32F4-Discovery/W5200.c **** {
 2356              		.loc 1 707 0
 2357              		.cfi_startproc
 2358              		@ args = 0, pretend = 0, frame = 0
 2359              		@ frame_needed = 1, uses_anonymous_args = 0
 2360 0000 80B5     		push	{r7, lr}
 2361              	.LCFI69:
 2362              		.cfi_def_cfa_offset 8
 2363              		.cfi_offset 7, -8
 2364              		.cfi_offset 14, -4
 2365 0002 00AF     		add	r7, sp, #0
 2366              	.LCFI70:
 2367              		.cfi_def_cfa_register 7
 708:App/STM32F4-Discovery/W5200.c ****  	/*!***************************************************************** 
 709:App/STM32F4-Discovery/W5200.c **** 	 * \fn void EXTI4_IRQHandler(void) 
 710:App/STM32F4-Discovery/W5200.c **** 	 * Interuppt service routine for wiznet it locates interrupt and resets 
 711:App/STM32F4-Discovery/W5200.c **** 	 * interrupt line. 
 712:App/STM32F4-Discovery/W5200.c **** 	 * *******************************************************************/
 713:App/STM32F4-Discovery/W5200.c **** 	
 714:App/STM32F4-Discovery/W5200.c **** 	
 715:App/STM32F4-Discovery/W5200.c **** 	if(EXTI_GetITStatus(WIZ_IT_EXTI_LINE) != RESET) //check if EXTI line is asserted
 2368              		.loc 1 715 0
 2369 0004 1020     		movs	r0, #16
 2370 0006 FFF7FEFF 		bl	EXTI_GetITStatus
 2371 000a 0346     		mov	r3, r0
 2372 000c 002B     		cmp	r3, #0
 2373 000e 04D0     		beq	.L137
 716:App/STM32F4-Discovery/W5200.c **** 	{
 717:App/STM32F4-Discovery/W5200.c **** 		locate_interrupt();	
 2374              		.loc 1 717 0
 2375 0010 FFF7FEFF 		bl	locate_interrupt
 718:App/STM32F4-Discovery/W5200.c **** 		EXTI_ClearFlag(WIZ_IT_EXTI_LINE); //clear interrupt
 2376              		.loc 1 718 0
 2377 0014 1020     		movs	r0, #16
 2378 0016 FFF7FEFF 		bl	EXTI_ClearFlag
 2379              	.L137:
 719:App/STM32F4-Discovery/W5200.c ****  	
 720:App/STM32F4-Discovery/W5200.c **** 	}
 721:App/STM32F4-Discovery/W5200.c **** }
 2380              		.loc 1 721 0
 2381 001a 80BD     		pop	{r7, pc}
 2382              		.cfi_endproc
 2383              	.LFE133:
 2385              		.section	.text.set_macTask,"ax",%progbits
 2386              		.align	2
 2387              		.global	set_macTask
 2388              		.thumb
 2389              		.thumb_func
 2391              	set_macTask:
 2392              	.LFB134:
 722:App/STM32F4-Discovery/W5200.c **** 
 723:App/STM32F4-Discovery/W5200.c **** 
 724:App/STM32F4-Discovery/W5200.c **** //============================================================================/
 725:App/STM32F4-Discovery/W5200.c **** // func set_macTask 
 726:App/STM32F4-Discovery/W5200.c **** //==================================================================================
 727:App/STM32F4-Discovery/W5200.c **** 
 728:App/STM32F4-Discovery/W5200.c **** void set_macTask(void *pvParameters)
 729:App/STM32F4-Discovery/W5200.c **** {
 2393              		.loc 1 729 0
 2394              		.cfi_startproc
 2395              		@ args = 0, pretend = 0, frame = 56
 2396              		@ frame_needed = 1, uses_anonymous_args = 0
 2397 0000 80B5     		push	{r7, lr}
 2398              	.LCFI71:
 2399              		.cfi_def_cfa_offset 8
 2400              		.cfi_offset 7, -8
 2401              		.cfi_offset 14, -4
 2402 0002 8EB0     		sub	sp, sp, #56
 2403              	.LCFI72:
 2404              		.cfi_def_cfa_offset 64
 2405 0004 00AF     		add	r7, sp, #0
 2406              	.LCFI73:
 2407              		.cfi_def_cfa_register 7
 2408 0006 7860     		str	r0, [r7, #4]
 2409              	.L140:
 2410              	.LBB2:
 730:App/STM32F4-Discovery/W5200.c **** 
 731:App/STM32F4-Discovery/W5200.c **** 	/*!**********************************************************************
 732:App/STM32F4-Discovery/W5200.c **** 	 * 
 733:App/STM32F4-Discovery/W5200.c **** 	 * Task opens socket on port 80,  starts listening on port and susped 
 734:App/STM32F4-Discovery/W5200.c **** 	 * suspend itself. If interrupt occures it process CLI command 
 735:App/STM32F4-Discovery/W5200.c **** 	 * **********************************************************************/
 736:App/STM32F4-Discovery/W5200.c **** 
 737:App/STM32F4-Discovery/W5200.c **** 	for( ;; )
 738:App/STM32F4-Discovery/W5200.c ****         {
 739:App/STM32F4-Discovery/W5200.c **** 
 740:App/STM32F4-Discovery/W5200.c **** 		uint8_t	buf[20], buf1[20]; 
 741:App/STM32F4-Discovery/W5200.c **** 		int len; 
 742:App/STM32F4-Discovery/W5200.c **** 			/*create socket and send byte */
 743:App/STM32F4-Discovery/W5200.c **** 		socket_0 = socket(W5200_Sn_MR_TCP, 80, 0);
 2411              		.loc 1 743 0 discriminator 1
 2412 0008 0120     		movs	r0, #1
 2413 000a 5021     		movs	r1, #80
 2414 000c 0022     		movs	r2, #0
 2415 000e FFF7FEFF 		bl	socket
 2416 0012 0346     		mov	r3, r0
 2417 0014 1A46     		mov	r2, r3
 2418 0016 104B     		ldr	r3, .L141
 2419 0018 1A60     		str	r2, [r3]
 744:App/STM32F4-Discovery/W5200.c **** 		listen(socket_0);
 2420              		.loc 1 744 0 discriminator 1
 2421 001a 0F4B     		ldr	r3, .L141
 2422 001c 1B68     		ldr	r3, [r3]
 2423 001e 1846     		mov	r0, r3
 2424 0020 FFF7FEFF 		bl	listen
 745:App/STM32F4-Discovery/W5200.c **** 
 746:App/STM32F4-Discovery/W5200.c **** 		/*we are now listening
 747:App/STM32F4-Discovery/W5200.c **** 		suspend task set_macTask()*/
 748:App/STM32F4-Discovery/W5200.c **** 		vTaskSuspend(NULL);
 2425              		.loc 1 748 0 discriminator 1
 2426 0024 0020     		movs	r0, #0
 2427 0026 FFF7FEFF 		bl	vTaskSuspend
 749:App/STM32F4-Discovery/W5200.c **** 		
 750:App/STM32F4-Discovery/W5200.c **** 		// interrupt on W5200 occured 
 751:App/STM32F4-Discovery/W5200.c **** 		// receive data 
 752:App/STM32F4-Discovery/W5200.c **** 		len = recv(socket_0, buf, 20, 0);
 2428              		.loc 1 752 0 discriminator 1
 2429 002a 0B4B     		ldr	r3, .L141
 2430 002c 1B68     		ldr	r3, [r3]
 2431 002e DAB2     		uxtb	r2, r3
 2432 0030 07F12003 		add	r3, r7, #32
 2433 0034 1046     		mov	r0, r2
 2434 0036 1946     		mov	r1, r3
 2435 0038 1422     		movs	r2, #20
 2436 003a 0023     		movs	r3, #0
 2437 003c FFF7FEFF 		bl	recv
 2438 0040 7863     		str	r0, [r7, #52]
 753:App/STM32F4-Discovery/W5200.c **** 		
 754:App/STM32F4-Discovery/W5200.c **** 		// proces data with CLI 
 755:App/STM32F4-Discovery/W5200.c **** 		
 756:App/STM32F4-Discovery/W5200.c **** 		FreeRTOS_CLIProcessCommand ( buf, buf1, 15);
 2439              		.loc 1 756 0 discriminator 1
 2440 0042 07F12002 		add	r2, r7, #32
 2441 0046 07F10C03 		add	r3, r7, #12
 2442 004a 1046     		mov	r0, r2
 2443 004c 1946     		mov	r1, r3
 2444 004e 0F22     		movs	r2, #15
 2445 0050 FFF7FEFF 		bl	FreeRTOS_CLIProcessCommand
 2446              	.LBE2:
 757:App/STM32F4-Discovery/W5200.c **** 
 758:App/STM32F4-Discovery/W5200.c **** 		
 759:App/STM32F4-Discovery/W5200.c **** 
 760:App/STM32F4-Discovery/W5200.c **** 		
 761:App/STM32F4-Discovery/W5200.c **** 	}	
 2447              		.loc 1 761 0 discriminator 1
 2448 0054 D8E7     		b	.L140
 2449              	.L142:
 2450 0056 00BF     		.align	2
 2451              	.L141:
 2452 0058 00000000 		.word	socket_0
 2453              		.cfi_endproc
 2454              	.LFE134:
 2456              		.text
 2457              	.Letext0:
 2458              		.file 2 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/machine/_default_
 2459              		.file 3 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/stdint.h"
 2460              		.file 4 "App/STM32F4-Discovery/Libraries/CMSIS/ST/STM32F4xx/Include/stm32f4xx.h"
 2461              		.file 5 "Source/portable/GCC/ARM_CM4F/portmacro.h"
 2462              		.file 6 "Source/include/task.h"
 2463              		.file 7 "Source/include/queue.h"
 2464              		.file 8 "Source/include/semphr.h"
 2465              		.file 9 "App/STM32F4-Discovery/main.h"
 2466              		.file 10 "App/STM32F4-Discovery/Libraries/CMSIS/Include/core_cm4.h"
 2467              		.file 11 "App/STM32F4-Discovery/spi.h"
 2468              		.file 12 "App/STM32F4-Discovery/W5200.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 W5200.c
                            *COM*:0000000000000004 xSemaphoreDMASPI
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:21     .bss.xHigherPriorityTaskWoken:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:24     .bss.xHigherPriorityTaskWoken:0000000000000000 xHigherPriorityTaskWoken
                            *COM*:0000000000000004 xSmphrUSART
                            *COM*:0000000000000004 setSpeedHandle
                            *COM*:0000000000000004 motorHBHandle
                            *COM*:0000000000000004 QSpd_handle
                            *COM*:0000000000000004 QStatus_handle
                            *COM*:0000000000000004 socket_0
                            *COM*:00000000000007d0 bufferTX
                            *COM*:00000000000007d0 bufferRX
                            *COM*:0000000000000004 bufferRXidx
                            *COM*:0000000000000004 bufferTXidx
                            *COM*:0000000000000004 dat_lengthRX
                            *COM*:0000000000000004 dat_lengthTX
                            *COM*:0000000000000004 set_macTaskHandle
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:40     .rodata.RAMSIZE_TABLE:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:43     .rodata.RAMSIZE_TABLE:0000000000000000 RAMSIZE_TABLE
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:63     .bss.socket_table:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:66     .bss.socket_table:0000000000000000 socket_table
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:69     .bss.socket_flg:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:72     .bss.socket_flg:0000000000000000 socket_flg
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:75     .rodata.socket_open_status:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:78     .rodata.socket_open_status:0000000000000000 socket_open_status
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:86     .rodata:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:113    .text.init_W5200:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:118    .text.init_W5200:0000000000000000 init_W5200
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:408    .text.W5200_configure_network:0000000000000000 W5200_configure_network
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:326    .text.W5200_set_hardware_address:0000000000000000 W5200_set_hardware_address
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:310    .text.init_W5200:000000000000015c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:321    .text.W5200_set_hardware_address:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:358    .text.W5200_get_hardware_address:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:363    .text.W5200_get_hardware_address:0000000000000000 W5200_get_hardware_address
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:398    .text.W5200_get_hardware_address:0000000000000020 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:403    .text.W5200_configure_network:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:452    .text.W5200_get_ipaddress:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:457    .text.W5200_get_ipaddress:0000000000000000 W5200_get_ipaddress
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:492    .text.W5200_get_ipaddress:0000000000000020 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:497    .text.get_CRStatus:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:501    .text.get_CRStatus:0000000000000000 get_CRStatus
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:546    .text.get_CRStatus:0000000000000034 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:551    .text.get_SRStatus:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:555    .text.get_SRStatus:0000000000000000 get_SRStatus
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:600    .text.get_SRStatus:0000000000000034 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:605    .text.get_TXFSRStatus:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:609    .text.get_TXFSRStatus:0000000000000000 get_TXFSRStatus
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:661    .text.get_TXFSRStatus:0000000000000044 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:666    .text.get_TXWRStatus:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:670    .text.get_TXWRStatus:0000000000000000 get_TXWRStatus
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:722    .text.get_TXWRStatus:0000000000000044 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:727    .text.get_TXRD:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:731    .text.get_TXRD:0000000000000000 get_TXRD
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:783    .text.get_TXRD:0000000000000044 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:788    .text.set_TXWR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:792    .text.set_TXWR:0000000000000000 set_TXWR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:834    .text.get_RXRSR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:838    .text.get_RXRSR:0000000000000000 get_RXRSR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:890    .text.get_RXRSR:0000000000000044 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:895    .text.get_RXRD:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:899    .text.get_RXRD:0000000000000000 get_RXRD
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:951    .text.get_RXRD:0000000000000044 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:956    .text.set_RXRD:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:960    .text.set_RXRD:0000000000000000 set_RXRD
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:1002   .text.write_memory:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:1007   .text.write_memory:0000000000000000 write_memory
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:1118   .text.read_memory:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:1123   .text.read_memory:0000000000000000 read_memory
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:1239   .text.read_memory:00000000000000bc $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:1244   .text.socket:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:1249   .text.socket:0000000000000000 socket
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:1459   .text.socket:000000000000014c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:1464   .text.closesocket:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:1469   .text.closesocket:0000000000000000 closesocket
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:1557   .text.closesocket:0000000000000078 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:1562   .text.connect:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:1567   .text.connect:0000000000000000 connect
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:1732   .text.connect:0000000000000104 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:1737   .text.send:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:1742   .text.send:0000000000000000 send
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:1973   .text.send:0000000000000180 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:1979   .text.recv:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:1984   .text.recv:0000000000000000 recv
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:2133   .text.recv:00000000000000e0 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:2138   .text.listen:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:2143   .text.listen:0000000000000000 listen
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:2252   .text.listen:00000000000000a0 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:2258   .text.locate_interrupt:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:2263   .text.locate_interrupt:0000000000000000 locate_interrupt
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:2343   .text.locate_interrupt:0000000000000068 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:2349   .text.EXTI4_IRQHandler:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:2354   .text.EXTI4_IRQHandler:0000000000000000 EXTI4_IRQHandler
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:2386   .text.set_macTask:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:2391   .text.set_macTask:0000000000000000 set_macTask
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccjiicFL.s:2452   .text.set_macTask:0000000000000058 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
xQueueGenericCreate
xTaskGetTickCount
vTaskDelay
spi_dma_sendByte
vTaskDelayUntil
vTaskDelete
spi_dma_send
spi_dma_read
memcpy
spi_dma_send2B
vTaskResume
EXTI_GetITStatus
EXTI_ClearFlag
vTaskSuspend
FreeRTOS_CLIProcessCommand
