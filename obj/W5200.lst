   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"W5200.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata.revision,"a",%progbits
  20              		.align	2
  23              	revision:
  24 0000 2449643A 		.ascii	"$Id: W5200.c 6548 2014-01-16 14:09:04Z svn $\000"
  24      20573532 
  24      30302E63 
  24      20363534 
  24      38203230 
  25              		.comm	xSemaphoreDMASPI,4,4
  26 002d 000000   		.section	.bss.xHigherPriorityTaskWoken,"aw",%nobits
  27              		.align	2
  30              	xHigherPriorityTaskWoken:
  31 0000 00000000 		.space	4
  32              		.comm	xSmphrUSART,4,4
  33              		.comm	setSpeedHandle,4,4
  34              		.comm	motorHBHandle,4,4
  35              		.comm	QSpd_handle,4,4
  36              		.comm	QStatus_handle,4,4
  37              		.comm	socket_0,4,4
  38              		.comm	bufferTX,2000,4
  39              		.comm	bufferRX,2000,4
  40              		.comm	bufferRXidx,4,4
  41              		.comm	bufferTXidx,4,4
  42              		.comm	dat_lengthRX,4,4
  43              		.comm	dat_lengthTX,4,4
  44              		.comm	set_macTaskHandle,4,4
  45              		.section	.rodata.RAMSIZE_TABLE,"a",%progbits
  46              		.align	2
  49              	RAMSIZE_TABLE:
  50 0000 00000000 		.word	0
  51 0004 00000000 		.word	0
  52 0008 00200000 		.word	8192
  53 000c 08000000 		.word	8
  54 0010 00200000 		.word	8192
  55 0014 08000000 		.word	8
  56 0018 00100000 		.word	4096
  57 001c 04000000 		.word	4
  58 0020 00100000 		.word	4096
  59 0024 04000000 		.word	4
  60 0028 00080000 		.word	2048
  61 002c 02000000 		.word	2
  62 0030 00080000 		.word	2048
  63 0034 02000000 		.word	2
  64 0038 00080000 		.word	2048
  65 003c 02000000 		.word	2
  66 0040 00080000 		.word	2048
  67 0044 02000000 		.word	2
  68              		.section	.bss.socket_table,"aw",%nobits
  69              		.align	2
  72              	socket_table:
  73 0000 00000000 		.space	64
  73      00000000 
  73      00000000 
  73      00000000 
  73      00000000 
  74              		.section	.bss.socket_flg,"aw",%nobits
  75              		.align	2
  78              	socket_flg:
  79 0000 00000000 		.space	8
  79      00000000 
  80              		.section	.rodata.socket_open_status,"a",%progbits
  81              		.align	2
  84              	socket_open_status:
  85 0000 00       		.byte	0
  86 0001 13       		.byte	19
  87 0002 22       		.byte	34
  88 0003 32       		.byte	50
  89 0004 42       		.byte	66
  90 0005 5F       		.byte	95
  91 0006 0000     		.section	.rodata
  92              		.align	2
  93              	.LC0:
  94 0000 DD       		.byte	-35
  95 0001 AA       		.byte	-86
  96 0002 BB       		.byte	-69
  97 0003 CC       		.byte	-52
  98 0004 11       		.byte	17
  99 0005 22       		.byte	34
 100 0006 0000     		.align	2
 101              	.LC1:
 102 0008 C0       		.byte	-64
 103 0009 A8       		.byte	-88
 104 000a 00       		.byte	0
 105 000b 08       		.byte	8
 106              		.align	2
 107              	.LC2:
 108 000c FF       		.byte	-1
 109 000d FF       		.byte	-1
 110 000e FF       		.byte	-1
 111 000f 00       		.byte	0
 112              		.align	2
 113              	.LC3:
 114 0010 C0       		.byte	-64
 115 0011 A8       		.byte	-88
 116 0012 00       		.byte	0
 117 0013 01       		.byte	1
 118              		.section	.text.init_W5200,"ax",%progbits
 119              		.align	2
 120              		.global	init_W5200
 121              		.thumb
 122              		.thumb_func
 124              	init_W5200:
 125              	.LFB110:
 126              		.file 1 "App/STM32F4-Discovery/W5200.c"
   1:App/STM32F4-Discovery/W5200.c **** /* W5200 Device Driver */
   2:App/STM32F4-Discovery/W5200.c **** 
   3:App/STM32F4-Discovery/W5200.c **** // $Id: W5200.c 6548 2014-01-16 14:09:04Z svn $
   4:App/STM32F4-Discovery/W5200.c **** 
   5:App/STM32F4-Discovery/W5200.c **** // Copyright (C)2013-2014, Philip Munts, President, Munts AM Corp.
   6:App/STM32F4-Discovery/W5200.c **** // All rights reserved.
   7:App/STM32F4-Discovery/W5200.c **** //
   8:App/STM32F4-Discovery/W5200.c **** // Redistribution and use in source and binary forms, with or without
   9:App/STM32F4-Discovery/W5200.c **** // modification, are permitted provided that the following conditions are met:
  10:App/STM32F4-Discovery/W5200.c **** //
  11:App/STM32F4-Discovery/W5200.c **** // * Redistributions of source code must retain the above copyright notice,
  12:App/STM32F4-Discovery/W5200.c **** //   this list of conditions and the following disclaimer.
  13:App/STM32F4-Discovery/W5200.c **** //
  14:App/STM32F4-Discovery/W5200.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  15:App/STM32F4-Discovery/W5200.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  16:App/STM32F4-Discovery/W5200.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  17:App/STM32F4-Discovery/W5200.c **** // ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
  18:App/STM32F4-Discovery/W5200.c **** // LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  19:App/STM32F4-Discovery/W5200.c **** // CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  20:App/STM32F4-Discovery/W5200.c **** // SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  21:App/STM32F4-Discovery/W5200.c **** // INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  22:App/STM32F4-Discovery/W5200.c **** // CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  23:App/STM32F4-Discovery/W5200.c **** // ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  24:App/STM32F4-Discovery/W5200.c **** // POSSIBILITY OF SUCH DAMAGE.
  25:App/STM32F4-Discovery/W5200.c **** 
  26:App/STM32F4-Discovery/W5200.c **** static const char revision[] = "$Id: W5200.c 6548 2014-01-16 14:09:04Z svn $";
  27:App/STM32F4-Discovery/W5200.c **** 
  28:App/STM32F4-Discovery/W5200.c **** #include "W5200.h"
  29:App/STM32F4-Discovery/W5200.c **** 
  30:App/STM32F4-Discovery/W5200.c **** /* This table abstracts the W5200 RAM size configuration for 1 to 8 sockets. */
  31:App/STM32F4-Discovery/W5200.c **** /* We divide available RAM equally amoung the number of configured sockets.  */
  32:App/STM32F4-Discovery/W5200.c **** /* We don't try to give unequal amounts of RAM to different sockets.         */
  33:App/STM32F4-Discovery/W5200.c **** 
  34:App/STM32F4-Discovery/W5200.c **** 
  35:App/STM32F4-Discovery/W5200.c **** static const struct
  36:App/STM32F4-Discovery/W5200.c **** {
  37:App/STM32F4-Discovery/W5200.c ****   uint32_t SIZE;
  38:App/STM32F4-Discovery/W5200.c ****   uint32_t CONFIG;
  39:App/STM32F4-Discovery/W5200.c **** } RAMSIZE_TABLE[W5200_MAX_SOCKETS+1] =
  40:App/STM32F4-Discovery/W5200.c **** {
  41:App/STM32F4-Discovery/W5200.c ****   { 0,			0				},
  42:App/STM32F4-Discovery/W5200.c **** // Does not work => { W5200_RAMSIZE,	W5200_RAMSIZE_CONFIG_WHOLE	},
  43:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/2,	W5200_RAMSIZE_CONFIG_HALF	},
  44:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/2,	W5200_RAMSIZE_CONFIG_HALF	},
  45:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/4,	W5200_RAMSIZE_CONFIG_QUARTER	},
  46:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/4,	W5200_RAMSIZE_CONFIG_QUARTER	},
  47:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/8,	W5200_RAMSIZE_CONFIG_EIGHTH	},
  48:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/8,	W5200_RAMSIZE_CONFIG_EIGHTH	},
  49:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/8,	W5200_RAMSIZE_CONFIG_EIGHTH	},
  50:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/8,	W5200_RAMSIZE_CONFIG_EIGHTH	},
  51:App/STM32F4-Discovery/W5200.c **** };
  52:App/STM32F4-Discovery/W5200.c **** 
  53:App/STM32F4-Discovery/W5200.c **** /* This table holds precalculated TX and RX RAM base addresses for */
  54:App/STM32F4-Discovery/W5200.c **** /* each socket.                                                    */
  55:App/STM32F4-Discovery/W5200.c **** 
  56:App/STM32F4-Discovery/W5200.c **** 
  57:App/STM32F4-Discovery/W5200.c **** static struct
  58:App/STM32F4-Discovery/W5200.c **** {
  59:App/STM32F4-Discovery/W5200.c ****   uint32_t TX_RAM_base;
  60:App/STM32F4-Discovery/W5200.c ****   uint32_t RX_RAM_base;
  61:App/STM32F4-Discovery/W5200.c **** } socket_table[W5200_MAX_SOCKETS];
  62:App/STM32F4-Discovery/W5200.c **** 
  63:App/STM32F4-Discovery/W5200.c **** static uint8_t socket_flg[W5200_MAX_SOCKETS];
  64:App/STM32F4-Discovery/W5200.c **** 
  65:App/STM32F4-Discovery/W5200.c **** 
  66:App/STM32F4-Discovery/W5200.c **** const static	uint8_t	socket_open_status[] = {
  67:App/STM32F4-Discovery/W5200.c **** 			W5200_Sn_SR_SOCK_CLOSED,	// mode is CLOSE
  68:App/STM32F4-Discovery/W5200.c **** 			W5200_Sn_SR_SOCK_INIT,	// mode is TCP
  69:App/STM32F4-Discovery/W5200.c **** 			W5200_Sn_SR_SOCK_UDP,	// mode is UDP
  70:App/STM32F4-Discovery/W5200.c **** 			W5200_Sn_SR_SOCK_IPRAW,	// mode is IPRAW
  71:App/STM32F4-Discovery/W5200.c **** 			W5200_Sn_SR_SOCK_MACRAW,	// mode is MACRAW
  72:App/STM32F4-Discovery/W5200.c **** 			W5200_Sn_SR_SOCK_PPPOE,	// mode is PPPOE
  73:App/STM32F4-Discovery/W5200.c **** 		};
  74:App/STM32F4-Discovery/W5200.c **** 
  75:App/STM32F4-Discovery/W5200.c **** 
  76:App/STM32F4-Discovery/W5200.c **** void init_W5200(void)
  77:App/STM32F4-Discovery/W5200.c **** {
 127              		.loc 1 77 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 40
 130              		@ frame_needed = 1, uses_anonymous_args = 0
 131 0000 80B5     		push	{r7, lr}
 132              	.LCFI0:
 133              		.cfi_def_cfa_offset 8
 134              		.cfi_offset 7, -8
 135              		.cfi_offset 14, -4
 136 0002 8AB0     		sub	sp, sp, #40
 137              	.LCFI1:
 138              		.cfi_def_cfa_offset 48
 139 0004 00AF     		add	r7, sp, #0
 140              	.LCFI2:
 141              		.cfi_def_cfa_register 7
  78:App/STM32F4-Discovery/W5200.c **** 	// mac address 
  79:App/STM32F4-Discovery/W5200.c **** 	uint8_t address[6] = {0xdd, 0xaa, 0xbb, 0xcc, 0x11, 0x22}; 
 142              		.loc 1 79 0
 143 0006 5C4A     		ldr	r2, .L4
 144 0008 07F11803 		add	r3, r7, #24
 145 000c 1068     		ldr	r0, [r2]	@ unaligned
 146 000e 1860     		str	r0, [r3]	@ unaligned
 147 0010 9288     		ldrh	r2, [r2, #4]	@ unaligned
 148 0012 9A80     		strh	r2, [r3, #4]	@ unaligned
  80:App/STM32F4-Discovery/W5200.c **** 	
  81:App/STM32F4-Discovery/W5200.c **** 	// ip 
  82:App/STM32F4-Discovery/W5200.c **** 	const  uint8_t ip[4] = {0xc0, 0xa8, 0x0, 0x08};
 149              		.loc 1 82 0
 150 0014 594A     		ldr	r2, .L4+4
 151 0016 07F11403 		add	r3, r7, #20
 152 001a 1068     		ldr	r0, [r2]	@ unaligned
 153 001c 1860     		str	r0, [r3]	@ unaligned
  83:App/STM32F4-Discovery/W5200.c **** 	// subnet 
  84:App/STM32F4-Discovery/W5200.c **** 	const uint8_t subnet[4] = {0xff,0xff,0xff,0x0};
 154              		.loc 1 84 0
 155 001e 584A     		ldr	r2, .L4+8
 156 0020 07F11003 		add	r3, r7, #16
 157 0024 1068     		ldr	r0, [r2]	@ unaligned
 158 0026 1860     		str	r0, [r3]	@ unaligned
  85:App/STM32F4-Discovery/W5200.c **** 	// gateway
  86:App/STM32F4-Discovery/W5200.c **** 	const uint8_t gw[4] = {0xc0, 0xa8, 0x0, 0x01};
 159              		.loc 1 86 0
 160 0028 564A     		ldr	r2, .L4+12
 161 002a 07F10C03 		add	r3, r7, #12
 162 002e 1068     		ldr	r0, [r2]	@ unaligned
 163 0030 1860     		str	r0, [r3]	@ unaligned
  87:App/STM32F4-Discovery/W5200.c **** 	
  88:App/STM32F4-Discovery/W5200.c **** 	portTickType xLastWakeTime;	
  89:App/STM32F4-Discovery/W5200.c **** 	
  90:App/STM32F4-Discovery/W5200.c **** 	xSemaphoreDMASPI = xSemaphoreCreateBinary();
 164              		.loc 1 90 0
 165 0032 0120     		movs	r0, #1
 166 0034 0021     		movs	r1, #0
 167 0036 0322     		movs	r2, #3
 168 0038 FFF7FEFF 		bl	xQueueGenericCreate
 169 003c 0246     		mov	r2, r0
 170 003e 524B     		ldr	r3, .L4+16
 171 0040 1A60     		str	r2, [r3]
  91:App/STM32F4-Discovery/W5200.c **** 	
  92:App/STM32F4-Discovery/W5200.c **** 	xLastWakeTime = xTaskGetTickCount();
 172              		.loc 1 92 0
 173 0042 FFF7FEFF 		bl	xTaskGetTickCount
 174 0046 0346     		mov	r3, r0
 175 0048 BB60     		str	r3, [r7, #8]
  93:App/STM32F4-Discovery/W5200.c **** 
  94:App/STM32F4-Discovery/W5200.c **** 	RESET_HIGH();
 176              		.loc 1 94 0
 177 004a 504B     		ldr	r3, .L4+20
 178 004c 4F4A     		ldr	r2, .L4+20
 179 004e 528B     		ldrh	r2, [r2, #26]	@ movhi
 180 0050 92B2     		uxth	r2, r2
 181 0052 42F02002 		orr	r2, r2, #32
 182 0056 92B2     		uxth	r2, r2
 183 0058 5A83     		strh	r2, [r3, #26]	@ movhi
  95:App/STM32F4-Discovery/W5200.c **** 	RESET_LOW();	
 184              		.loc 1 95 0
 185 005a 4C4B     		ldr	r3, .L4+20
 186 005c 4B4A     		ldr	r2, .L4+20
 187 005e 128B     		ldrh	r2, [r2, #24]	@ movhi
 188 0060 92B2     		uxth	r2, r2
 189 0062 42F02002 		orr	r2, r2, #32
 190 0066 92B2     		uxth	r2, r2
 191 0068 1A83     		strh	r2, [r3, #24]	@ movhi
  96:App/STM32F4-Discovery/W5200.c **** 
  97:App/STM32F4-Discovery/W5200.c **** 	vTaskDelay( 500/portTICK_RATE_MS );		
 192              		.loc 1 97 0
 193 006a 4FF4FA70 		mov	r0, #500
 194 006e FFF7FEFF 		bl	vTaskDelay
  98:App/STM32F4-Discovery/W5200.c **** 	const portTickType xFrequency = 1;
 195              		.loc 1 98 0
 196 0072 0123     		movs	r3, #1
 197 0074 3B62     		str	r3, [r7, #32]
  99:App/STM32F4-Discovery/W5200.c **** 	
 100:App/STM32F4-Discovery/W5200.c **** 	// ===================================================//
 101:App/STM32F4-Discovery/W5200.c **** 	//SW reset 
 102:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_MR, W5200_MR_RST);
 198              		.loc 1 102 0
 199 0076 0020     		movs	r0, #0
 200 0078 8021     		movs	r1, #128
 201 007a FFF7FEFF 		bl	spi_dma_sendByte
 103:App/STM32F4-Discovery/W5200.c **** 	// wait until reset complete
 104:App/STM32F4-Discovery/W5200.c **** 	uint8_t data = W5200_MR_RST; 
 202              		.loc 1 104 0
 203 007e 8023     		movs	r3, #128
 204 0080 FB71     		strb	r3, [r7, #7]
 105:App/STM32F4-Discovery/W5200.c **** 	while((data  && W5200_MR_RST) == W5200_MR_RST)
 205              		.loc 1 105 0
 206 0082 00BF     		nop
 106:App/STM32F4-Discovery/W5200.c **** 	{
 107:App/STM32F4-Discovery/W5200.c **** 		spi_dma_read(W5200_MR, 1);
 108:App/STM32F4-Discovery/W5200.c **** 		memcpy(&data, bufferRX+4, 1);
 109:App/STM32F4-Discovery/W5200.c **** 	}
 110:App/STM32F4-Discovery/W5200.c **** 		
 111:App/STM32F4-Discovery/W5200.c **** 	// PING enable, PPPoE disable 
 112:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_MR, 0);
 207              		.loc 1 112 0
 208 0084 0020     		movs	r0, #0
 209 0086 0021     		movs	r1, #0
 210 0088 FFF7FEFF 		bl	spi_dma_sendByte
 113:App/STM32F4-Discovery/W5200.c **** 	// all socket interrupts sets to nonmask. set '1' is interrupt enable. 
 114:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_IMR, 0xff);
 211              		.loc 1 114 0
 212 008c 1620     		movs	r0, #22
 213 008e FF21     		movs	r1, #255
 214 0090 FFF7FEFF 		bl	spi_dma_sendByte
 115:App/STM32F4-Discovery/W5200.c **** 	// IP-confilict, PPPoE Close are mask. set '0' interupt disable. 
 116:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_IMR2, 0);
 215              		.loc 1 116 0
 216 0094 3620     		movs	r0, #54
 217 0096 0021     		movs	r1, #0
 218 0098 FFF7FEFF 		bl	spi_dma_sendByte
 117:App/STM32F4-Discovery/W5200.c **** 	// set timeoput to 200msec
 118:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_RTR, 200);
 219              		.loc 1 118 0
 220 009c 1720     		movs	r0, #23
 221 009e C821     		movs	r1, #200
 222 00a0 FFF7FEFF 		bl	spi_dma_sendByte
 119:App/STM32F4-Discovery/W5200.c **** 	// set retry count register to 3rd
 120:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_RCR, 3);
 223              		.loc 1 120 0
 224 00a4 1920     		movs	r0, #25
 225 00a6 0321     		movs	r1, #3
 226 00a8 FFF7FEFF 		bl	spi_dma_sendByte
 121:App/STM32F4-Discovery/W5200.c **** 
 122:App/STM32F4-Discovery/W5200.c **** 	int n = 0; 
 227              		.loc 1 122 0
 228 00ac 0023     		movs	r3, #0
 229 00ae 7B62     		str	r3, [r7, #36]
 123:App/STM32F4-Discovery/W5200.c **** 
 124:App/STM32F4-Discovery/W5200.c **** 	for (n = 0; n < 8; n++)
 230              		.loc 1 124 0
 231 00b0 0023     		movs	r3, #0
 232 00b2 7B62     		str	r3, [r7, #36]
 233 00b4 2BE0     		b	.L2
 234              	.L3:
 125:App/STM32F4-Discovery/W5200.c **** 	{
 126:App/STM32F4-Discovery/W5200.c **** 		spi_dma_sendByte(W5200_Sn_RXMEM_SIZE(n), 0x2);
 235              		.loc 1 126 0 discriminator 2
 236 00b6 7B6A     		ldr	r3, [r7, #36]
 237 00b8 9BB2     		uxth	r3, r3
 238 00ba 1B02     		lsls	r3, r3, #8
 239 00bc 9BB2     		uxth	r3, r3
 240 00be 03F58043 		add	r3, r3, #16384
 241 00c2 1E33     		adds	r3, r3, #30
 242 00c4 9BB2     		uxth	r3, r3
 243 00c6 1846     		mov	r0, r3
 244 00c8 0221     		movs	r1, #2
 245 00ca FFF7FEFF 		bl	spi_dma_sendByte
 127:App/STM32F4-Discovery/W5200.c **** 		spi_dma_sendByte(W5200_Sn_TXMEM_SIZE(n),0x2);
 246              		.loc 1 127 0 discriminator 2
 247 00ce 7B6A     		ldr	r3, [r7, #36]
 248 00d0 9BB2     		uxth	r3, r3
 249 00d2 1B02     		lsls	r3, r3, #8
 250 00d4 9BB2     		uxth	r3, r3
 251 00d6 03F58043 		add	r3, r3, #16384
 252 00da 1F33     		adds	r3, r3, #31
 253 00dc 9BB2     		uxth	r3, r3
 254 00de 1846     		mov	r0, r3
 255 00e0 0221     		movs	r1, #2
 256 00e2 FFF7FEFF 		bl	spi_dma_sendByte
 128:App/STM32F4-Discovery/W5200.c **** 		spi_dma_sendByte(W5200_Sn_IMR(n), 0xff);	
 257              		.loc 1 128 0 discriminator 2
 258 00e6 7B6A     		ldr	r3, [r7, #36]
 259 00e8 9BB2     		uxth	r3, r3
 260 00ea 1B02     		lsls	r3, r3, #8
 261 00ec 9BB2     		uxth	r3, r3
 262 00ee 03F58043 		add	r3, r3, #16384
 263 00f2 2C33     		adds	r3, r3, #44
 264 00f4 9BB2     		uxth	r3, r3
 265 00f6 1846     		mov	r0, r3
 266 00f8 FF21     		movs	r1, #255
 267 00fa FFF7FEFF 		bl	spi_dma_sendByte
 129:App/STM32F4-Discovery/W5200.c **** 		socket_flg[n] = 0;
 268              		.loc 1 129 0 discriminator 2
 269 00fe 244A     		ldr	r2, .L4+24
 270 0100 7B6A     		ldr	r3, [r7, #36]
 271 0102 1344     		add	r3, r3, r2
 272 0104 0022     		movs	r2, #0
 273 0106 1A70     		strb	r2, [r3]
 124:App/STM32F4-Discovery/W5200.c **** 	for (n = 0; n < 8; n++)
 274              		.loc 1 124 0 discriminator 2
 275 0108 7B6A     		ldr	r3, [r7, #36]
 276 010a 0133     		adds	r3, r3, #1
 277 010c 7B62     		str	r3, [r7, #36]
 278              	.L2:
 124:App/STM32F4-Discovery/W5200.c **** 	for (n = 0; n < 8; n++)
 279              		.loc 1 124 0 is_stmt 0 discriminator 1
 280 010e 7B6A     		ldr	r3, [r7, #36]
 281 0110 072B     		cmp	r3, #7
 282 0112 D0DD     		ble	.L3
 130:App/STM32F4-Discovery/W5200.c **** 			
 131:App/STM32F4-Discovery/W5200.c **** 	}	
 132:App/STM32F4-Discovery/W5200.c **** 	// =========================================================//
 133:App/STM32F4-Discovery/W5200.c **** 		
 134:App/STM32F4-Discovery/W5200.c **** 	vTaskDelayUntil(&xLastWakeTime, 500/portTICK_RATE_MS );		
 283              		.loc 1 134 0 is_stmt 1
 284 0114 07F10803 		add	r3, r7, #8
 285 0118 1846     		mov	r0, r3
 286 011a 4FF4FA71 		mov	r1, #500
 287 011e FFF7FEFF 		bl	vTaskDelayUntil
 135:App/STM32F4-Discovery/W5200.c **** 
 136:App/STM32F4-Discovery/W5200.c **** 	W5200_configure_network(ip, subnet, gw);
 288              		.loc 1 136 0
 289 0122 07F11401 		add	r1, r7, #20
 290 0126 07F11002 		add	r2, r7, #16
 291 012a 07F10C03 		add	r3, r7, #12
 292 012e 0846     		mov	r0, r1
 293 0130 1146     		mov	r1, r2
 294 0132 1A46     		mov	r2, r3
 295 0134 FFF7FEFF 		bl	W5200_configure_network
 137:App/STM32F4-Discovery/W5200.c **** 	W5200_set_hardware_address(address);
 296              		.loc 1 137 0
 297 0138 07F11803 		add	r3, r7, #24
 298 013c 1846     		mov	r0, r3
 299 013e FFF7FEFF 		bl	W5200_set_hardware_address
 138:App/STM32F4-Discovery/W5200.c **** 	
 139:App/STM32F4-Discovery/W5200.c **** 	vTaskDelayUntil(&xLastWakeTime, 500/portTICK_RATE_MS );		
 300              		.loc 1 139 0
 301 0142 07F10803 		add	r3, r7, #8
 302 0146 1846     		mov	r0, r3
 303 0148 4FF4FA71 		mov	r1, #500
 304 014c FFF7FEFF 		bl	vTaskDelayUntil
 140:App/STM32F4-Discovery/W5200.c **** 	
 141:App/STM32F4-Discovery/W5200.c **** 	/*create socket and send byte */
 142:App/STM32F4-Discovery/W5200.c **** 	socket_0 = socket(W5200_Sn_MR_TCP, 80, 0);
 305              		.loc 1 142 0
 306 0150 0120     		movs	r0, #1
 307 0152 5021     		movs	r1, #80
 308 0154 0022     		movs	r2, #0
 309 0156 FFF7FEFF 		bl	socket
 310 015a 0346     		mov	r3, r0
 311 015c 1A46     		mov	r2, r3
 312 015e 0D4B     		ldr	r3, .L4+28
 313 0160 1A60     		str	r2, [r3]
 143:App/STM32F4-Discovery/W5200.c **** 	listen(socket_0);
 314              		.loc 1 143 0
 315 0162 0C4B     		ldr	r3, .L4+28
 316 0164 1B68     		ldr	r3, [r3]
 317 0166 1846     		mov	r0, r3
 318 0168 FFF7FEFF 		bl	listen
 144:App/STM32F4-Discovery/W5200.c **** 
 145:App/STM32F4-Discovery/W5200.c **** 	// end of initialization W5200 
 146:App/STM32F4-Discovery/W5200.c **** 	// delete task
 147:App/STM32F4-Discovery/W5200.c **** 	
 148:App/STM32F4-Discovery/W5200.c **** 	vTaskDelete ( NULL );
 319              		.loc 1 148 0
 320 016c 0020     		movs	r0, #0
 321 016e FFF7FEFF 		bl	vTaskDelete
 149:App/STM32F4-Discovery/W5200.c **** 	
 150:App/STM32F4-Discovery/W5200.c **** 	
 151:App/STM32F4-Discovery/W5200.c **** 	
 152:App/STM32F4-Discovery/W5200.c **** 	
 153:App/STM32F4-Discovery/W5200.c **** }
 322              		.loc 1 153 0
 323 0172 2837     		adds	r7, r7, #40
 324 0174 BD46     		mov	sp, r7
 325              		@ sp needed
 326 0176 80BD     		pop	{r7, pc}
 327              	.L5:
 328              		.align	2
 329              	.L4:
 330 0178 00000000 		.word	.LC0
 331 017c 08000000 		.word	.LC1
 332 0180 0C000000 		.word	.LC2
 333 0184 10000000 		.word	.LC3
 334 0188 00000000 		.word	xSemaphoreDMASPI
 335 018c 00080240 		.word	1073874944
 336 0190 00000000 		.word	socket_flg
 337 0194 00000000 		.word	socket_0
 338              		.cfi_endproc
 339              	.LFE110:
 341              		.section	.text.W5200_set_hardware_address,"ax",%progbits
 342              		.align	2
 343              		.global	W5200_set_hardware_address
 344              		.thumb
 345              		.thumb_func
 347              	W5200_set_hardware_address:
 348              	.LFB111:
 154:App/STM32F4-Discovery/W5200.c **** 
 155:App/STM32F4-Discovery/W5200.c **** void  W5200_set_hardware_address(const macaddress_t address)
 156:App/STM32F4-Discovery/W5200.c **** {
 349              		.loc 1 156 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 8
 352              		@ frame_needed = 1, uses_anonymous_args = 0
 353 0000 80B5     		push	{r7, lr}
 354              	.LCFI3:
 355              		.cfi_def_cfa_offset 8
 356              		.cfi_offset 7, -8
 357              		.cfi_offset 14, -4
 358 0002 82B0     		sub	sp, sp, #8
 359              	.LCFI4:
 360              		.cfi_def_cfa_offset 16
 361 0004 00AF     		add	r7, sp, #0
 362              	.LCFI5:
 363              		.cfi_def_cfa_register 7
 364 0006 7860     		str	r0, [r7, #4]
 157:App/STM32F4-Discovery/W5200.c **** 
 158:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send(W5200_SHAR, 6, address);
 365              		.loc 1 158 0
 366 0008 0920     		movs	r0, #9
 367 000a 0621     		movs	r1, #6
 368 000c 7A68     		ldr	r2, [r7, #4]
 369 000e FFF7FEFF 		bl	spi_dma_send
 159:App/STM32F4-Discovery/W5200.c **** }
 370              		.loc 1 159 0
 371 0012 0837     		adds	r7, r7, #8
 372 0014 BD46     		mov	sp, r7
 373              		@ sp needed
 374 0016 80BD     		pop	{r7, pc}
 375              		.cfi_endproc
 376              	.LFE111:
 378              		.section	.text.W5200_get_hardware_address,"ax",%progbits
 379              		.align	2
 380              		.global	W5200_get_hardware_address
 381              		.thumb
 382              		.thumb_func
 384              	W5200_get_hardware_address:
 385              	.LFB112:
 160:App/STM32F4-Discovery/W5200.c **** 
 161:App/STM32F4-Discovery/W5200.c **** void  W5200_get_hardware_address(macaddress_t address)
 162:App/STM32F4-Discovery/W5200.c **** {
 386              		.loc 1 162 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 8
 389              		@ frame_needed = 1, uses_anonymous_args = 0
 390 0000 80B5     		push	{r7, lr}
 391              	.LCFI6:
 392              		.cfi_def_cfa_offset 8
 393              		.cfi_offset 7, -8
 394              		.cfi_offset 14, -4
 395 0002 82B0     		sub	sp, sp, #8
 396              	.LCFI7:
 397              		.cfi_def_cfa_offset 16
 398 0004 00AF     		add	r7, sp, #0
 399              	.LCFI8:
 400              		.cfi_def_cfa_register 7
 401 0006 7860     		str	r0, [r7, #4]
 163:App/STM32F4-Discovery/W5200.c **** 
 164:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_SHAR, 6);
 402              		.loc 1 164 0
 403 0008 0920     		movs	r0, #9
 404 000a 0621     		movs	r1, #6
 405 000c FFF7FEFF 		bl	spi_dma_read
 165:App/STM32F4-Discovery/W5200.c **** 	memcpy(address, bufferRX+4, 6);
 406              		.loc 1 165 0
 407 0010 7868     		ldr	r0, [r7, #4]
 408 0012 0349     		ldr	r1, .L8
 409 0014 0622     		movs	r2, #6
 410 0016 FFF7FEFF 		bl	memcpy
 166:App/STM32F4-Discovery/W5200.c **** }
 411              		.loc 1 166 0
 412 001a 0837     		adds	r7, r7, #8
 413 001c BD46     		mov	sp, r7
 414              		@ sp needed
 415 001e 80BD     		pop	{r7, pc}
 416              	.L9:
 417              		.align	2
 418              	.L8:
 419 0020 04000000 		.word	bufferRX+4
 420              		.cfi_endproc
 421              	.LFE112:
 423              		.section	.text.W5200_configure_network,"ax",%progbits
 424              		.align	2
 425              		.global	W5200_configure_network
 426              		.thumb
 427              		.thumb_func
 429              	W5200_configure_network:
 430              	.LFB113:
 167:App/STM32F4-Discovery/W5200.c **** 
 168:App/STM32F4-Discovery/W5200.c **** void  W5200_configure_network(const ipv4address_t address,
 169:App/STM32F4-Discovery/W5200.c ****                              const ipv4address_t subnet,
 170:App/STM32F4-Discovery/W5200.c ****                              const ipv4address_t gateway)
 171:App/STM32F4-Discovery/W5200.c **** {
 431              		.loc 1 171 0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 16
 434              		@ frame_needed = 1, uses_anonymous_args = 0
 435 0000 80B5     		push	{r7, lr}
 436              	.LCFI9:
 437              		.cfi_def_cfa_offset 8
 438              		.cfi_offset 7, -8
 439              		.cfi_offset 14, -4
 440 0002 84B0     		sub	sp, sp, #16
 441              	.LCFI10:
 442              		.cfi_def_cfa_offset 24
 443 0004 00AF     		add	r7, sp, #0
 444              	.LCFI11:
 445              		.cfi_def_cfa_register 7
 446 0006 F860     		str	r0, [r7, #12]
 447 0008 B960     		str	r1, [r7, #8]
 448 000a 7A60     		str	r2, [r7, #4]
 172:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send(W5200_SIPR, 4, address);
 449              		.loc 1 172 0
 450 000c 0F20     		movs	r0, #15
 451 000e 0421     		movs	r1, #4
 452 0010 FA68     		ldr	r2, [r7, #12]
 453 0012 FFF7FEFF 		bl	spi_dma_send
 173:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send(W5200_SUBR, 4, subnet);
 454              		.loc 1 173 0
 455 0016 0520     		movs	r0, #5
 456 0018 0421     		movs	r1, #4
 457 001a BA68     		ldr	r2, [r7, #8]
 458 001c FFF7FEFF 		bl	spi_dma_send
 174:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send(W5200_GAR, 4 , gateway);
 459              		.loc 1 174 0
 460 0020 0120     		movs	r0, #1
 461 0022 0421     		movs	r1, #4
 462 0024 7A68     		ldr	r2, [r7, #4]
 463 0026 FFF7FEFF 		bl	spi_dma_send
 175:App/STM32F4-Discovery/W5200.c **** }
 464              		.loc 1 175 0
 465 002a 1037     		adds	r7, r7, #16
 466 002c BD46     		mov	sp, r7
 467              		@ sp needed
 468 002e 80BD     		pop	{r7, pc}
 469              		.cfi_endproc
 470              	.LFE113:
 472              		.section	.text.W5200_get_ipaddress,"ax",%progbits
 473              		.align	2
 474              		.global	W5200_get_ipaddress
 475              		.thumb
 476              		.thumb_func
 478              	W5200_get_ipaddress:
 479              	.LFB114:
 176:App/STM32F4-Discovery/W5200.c **** 
 177:App/STM32F4-Discovery/W5200.c **** void  W5200_get_ipaddress(ipv4address_t address)
 178:App/STM32F4-Discovery/W5200.c **** {
 480              		.loc 1 178 0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 8
 483              		@ frame_needed = 1, uses_anonymous_args = 0
 484 0000 80B5     		push	{r7, lr}
 485              	.LCFI12:
 486              		.cfi_def_cfa_offset 8
 487              		.cfi_offset 7, -8
 488              		.cfi_offset 14, -4
 489 0002 82B0     		sub	sp, sp, #8
 490              	.LCFI13:
 491              		.cfi_def_cfa_offset 16
 492 0004 00AF     		add	r7, sp, #0
 493              	.LCFI14:
 494              		.cfi_def_cfa_register 7
 495 0006 7860     		str	r0, [r7, #4]
 179:App/STM32F4-Discovery/W5200.c **** 	 spi_dma_read(W5200_SIPR, 4);
 496              		.loc 1 179 0
 497 0008 0F20     		movs	r0, #15
 498 000a 0421     		movs	r1, #4
 499 000c FFF7FEFF 		bl	spi_dma_read
 180:App/STM32F4-Discovery/W5200.c **** 	memcpy(address, bufferRX+4, 4);
 500              		.loc 1 180 0
 501 0010 7868     		ldr	r0, [r7, #4]
 502 0012 0349     		ldr	r1, .L12
 503 0014 0422     		movs	r2, #4
 504 0016 FFF7FEFF 		bl	memcpy
 181:App/STM32F4-Discovery/W5200.c **** }
 505              		.loc 1 181 0
 506 001a 0837     		adds	r7, r7, #8
 507 001c BD46     		mov	sp, r7
 508              		@ sp needed
 509 001e 80BD     		pop	{r7, pc}
 510              	.L13:
 511              		.align	2
 512              	.L12:
 513 0020 04000000 		.word	bufferRX+4
 514              		.cfi_endproc
 515              	.LFE114:
 517              		.section	.text.get_CRStatus,"ax",%progbits
 518              		.align	2
 519              		.global	get_CRStatus
 520              		.thumb
 521              		.thumb_func
 523              	get_CRStatus:
 524              	.LFB115:
 182:App/STM32F4-Discovery/W5200.c **** 
 183:App/STM32F4-Discovery/W5200.c **** 
 184:App/STM32F4-Discovery/W5200.c **** 
 185:App/STM32F4-Discovery/W5200.c **** uint8_t get_CRStatus(uint8_t sck_fd)
 186:App/STM32F4-Discovery/W5200.c **** {
 525              		.loc 1 186 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 16
 528              		@ frame_needed = 1, uses_anonymous_args = 0
 529 0000 80B5     		push	{r7, lr}
 530              	.LCFI15:
 531              		.cfi_def_cfa_offset 8
 532              		.cfi_offset 7, -8
 533              		.cfi_offset 14, -4
 534 0002 84B0     		sub	sp, sp, #16
 535              	.LCFI16:
 536              		.cfi_def_cfa_offset 24
 537 0004 00AF     		add	r7, sp, #0
 538              	.LCFI17:
 539              		.cfi_def_cfa_register 7
 540 0006 0346     		mov	r3, r0
 541 0008 FB71     		strb	r3, [r7, #7]
 187:App/STM32F4-Discovery/W5200.c **** 	uint8_t var; 
 188:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_CR(sck_fd),1);
 542              		.loc 1 188 0
 543 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 544 000c 9BB2     		uxth	r3, r3
 545 000e 1B02     		lsls	r3, r3, #8
 546 0010 9BB2     		uxth	r3, r3
 547 0012 03F58043 		add	r3, r3, #16384
 548 0016 0133     		adds	r3, r3, #1
 549 0018 9BB2     		uxth	r3, r3
 550 001a 1846     		mov	r0, r3
 551 001c 0121     		movs	r1, #1
 552 001e FFF7FEFF 		bl	spi_dma_read
 189:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 1);
 553              		.loc 1 189 0
 554 0022 044B     		ldr	r3, .L16
 555 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 556 0026 FB73     		strb	r3, [r7, #15]
 190:App/STM32F4-Discovery/W5200.c **** 	return var;
 557              		.loc 1 190 0
 558 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 191:App/STM32F4-Discovery/W5200.c **** }
 559              		.loc 1 191 0
 560 002a 1846     		mov	r0, r3
 561 002c 1037     		adds	r7, r7, #16
 562 002e BD46     		mov	sp, r7
 563              		@ sp needed
 564 0030 80BD     		pop	{r7, pc}
 565              	.L17:
 566 0032 00BF     		.align	2
 567              	.L16:
 568 0034 04000000 		.word	bufferRX+4
 569              		.cfi_endproc
 570              	.LFE115:
 572              		.section	.text.get_SRStatus,"ax",%progbits
 573              		.align	2
 574              		.global	get_SRStatus
 575              		.thumb
 576              		.thumb_func
 578              	get_SRStatus:
 579              	.LFB116:
 192:App/STM32F4-Discovery/W5200.c **** 
 193:App/STM32F4-Discovery/W5200.c **** 
 194:App/STM32F4-Discovery/W5200.c **** uint8_t get_SRStatus(uint8_t sck_fd)
 195:App/STM32F4-Discovery/W5200.c **** {
 580              		.loc 1 195 0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 16
 583              		@ frame_needed = 1, uses_anonymous_args = 0
 584 0000 80B5     		push	{r7, lr}
 585              	.LCFI18:
 586              		.cfi_def_cfa_offset 8
 587              		.cfi_offset 7, -8
 588              		.cfi_offset 14, -4
 589 0002 84B0     		sub	sp, sp, #16
 590              	.LCFI19:
 591              		.cfi_def_cfa_offset 24
 592 0004 00AF     		add	r7, sp, #0
 593              	.LCFI20:
 594              		.cfi_def_cfa_register 7
 595 0006 0346     		mov	r3, r0
 596 0008 FB71     		strb	r3, [r7, #7]
 196:App/STM32F4-Discovery/W5200.c **** 	uint8_t var; 
 197:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_SR(sck_fd), 1);
 597              		.loc 1 197 0
 598 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 599 000c 9BB2     		uxth	r3, r3
 600 000e 1B02     		lsls	r3, r3, #8
 601 0010 9BB2     		uxth	r3, r3
 602 0012 03F58043 		add	r3, r3, #16384
 603 0016 0333     		adds	r3, r3, #3
 604 0018 9BB2     		uxth	r3, r3
 605 001a 1846     		mov	r0, r3
 606 001c 0121     		movs	r1, #1
 607 001e FFF7FEFF 		bl	spi_dma_read
 198:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 1);
 608              		.loc 1 198 0
 609 0022 044B     		ldr	r3, .L20
 610 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 611 0026 FB73     		strb	r3, [r7, #15]
 199:App/STM32F4-Discovery/W5200.c **** 	return var;
 612              		.loc 1 199 0
 613 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 200:App/STM32F4-Discovery/W5200.c **** }
 614              		.loc 1 200 0
 615 002a 1846     		mov	r0, r3
 616 002c 1037     		adds	r7, r7, #16
 617 002e BD46     		mov	sp, r7
 618              		@ sp needed
 619 0030 80BD     		pop	{r7, pc}
 620              	.L21:
 621 0032 00BF     		.align	2
 622              	.L20:
 623 0034 04000000 		.word	bufferRX+4
 624              		.cfi_endproc
 625              	.LFE116:
 627              		.section	.text.get_TXFSRStatus,"ax",%progbits
 628              		.align	2
 629              		.global	get_TXFSRStatus
 630              		.thumb
 631              		.thumb_func
 633              	get_TXFSRStatus:
 634              	.LFB117:
 201:App/STM32F4-Discovery/W5200.c **** 
 202:App/STM32F4-Discovery/W5200.c **** uint16_t get_TXFSRStatus(uint8_t sck_fd)
 203:App/STM32F4-Discovery/W5200.c **** {
 635              		.loc 1 203 0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 16
 638              		@ frame_needed = 1, uses_anonymous_args = 0
 639 0000 80B5     		push	{r7, lr}
 640              	.LCFI21:
 641              		.cfi_def_cfa_offset 8
 642              		.cfi_offset 7, -8
 643              		.cfi_offset 14, -4
 644 0002 84B0     		sub	sp, sp, #16
 645              	.LCFI22:
 646              		.cfi_def_cfa_offset 24
 647 0004 00AF     		add	r7, sp, #0
 648              	.LCFI23:
 649              		.cfi_def_cfa_register 7
 650 0006 0346     		mov	r3, r0
 651 0008 FB71     		strb	r3, [r7, #7]
 204:App/STM32F4-Discovery/W5200.c **** 	uint8_t var[2]; 
 205:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_TX_FSR(sck_fd), 2);
 652              		.loc 1 205 0
 653 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 654 000c 9BB2     		uxth	r3, r3
 655 000e 1B02     		lsls	r3, r3, #8
 656 0010 9BB2     		uxth	r3, r3
 657 0012 03F58043 		add	r3, r3, #16384
 658 0016 2033     		adds	r3, r3, #32
 659 0018 9BB2     		uxth	r3, r3
 660 001a 1846     		mov	r0, r3
 661 001c 0221     		movs	r1, #2
 662 001e FFF7FEFF 		bl	spi_dma_read
 206:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 2);
 663              		.loc 1 206 0
 664 0022 084A     		ldr	r2, .L24
 665 0024 07F10C03 		add	r3, r7, #12
 666 0028 1288     		ldrh	r2, [r2]	@ unaligned
 667 002a 1A80     		strh	r2, [r3]	@ unaligned
 207:App/STM32F4-Discovery/W5200.c **** 	
 208:App/STM32F4-Discovery/W5200.c **** 	return ((var[0] << 8) | var[1] );
 668              		.loc 1 208 0
 669 002c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 670 002e 1B02     		lsls	r3, r3, #8
 671 0030 9AB2     		uxth	r2, r3
 672 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 673 0034 1343     		orrs	r3, r3, r2
 674 0036 9BB2     		uxth	r3, r3
 675 0038 9BB2     		uxth	r3, r3
 209:App/STM32F4-Discovery/W5200.c **** 	
 210:App/STM32F4-Discovery/W5200.c **** }
 676              		.loc 1 210 0
 677 003a 1846     		mov	r0, r3
 678 003c 1037     		adds	r7, r7, #16
 679 003e BD46     		mov	sp, r7
 680              		@ sp needed
 681 0040 80BD     		pop	{r7, pc}
 682              	.L25:
 683 0042 00BF     		.align	2
 684              	.L24:
 685 0044 04000000 		.word	bufferRX+4
 686              		.cfi_endproc
 687              	.LFE117:
 689              		.section	.text.get_TXWRStatus,"ax",%progbits
 690              		.align	2
 691              		.global	get_TXWRStatus
 692              		.thumb
 693              		.thumb_func
 695              	get_TXWRStatus:
 696              	.LFB118:
 211:App/STM32F4-Discovery/W5200.c **** 
 212:App/STM32F4-Discovery/W5200.c **** uint16_t get_TXWRStatus(uint8_t sck_fd)
 213:App/STM32F4-Discovery/W5200.c **** {
 697              		.loc 1 213 0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 16
 700              		@ frame_needed = 1, uses_anonymous_args = 0
 701 0000 80B5     		push	{r7, lr}
 702              	.LCFI24:
 703              		.cfi_def_cfa_offset 8
 704              		.cfi_offset 7, -8
 705              		.cfi_offset 14, -4
 706 0002 84B0     		sub	sp, sp, #16
 707              	.LCFI25:
 708              		.cfi_def_cfa_offset 24
 709 0004 00AF     		add	r7, sp, #0
 710              	.LCFI26:
 711              		.cfi_def_cfa_register 7
 712 0006 0346     		mov	r3, r0
 713 0008 FB71     		strb	r3, [r7, #7]
 214:App/STM32F4-Discovery/W5200.c **** 	uint8_t var[2]; 
 215:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_TX_WR(sck_fd), 2 );
 714              		.loc 1 215 0
 715 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 716 000c 9BB2     		uxth	r3, r3
 717 000e 1B02     		lsls	r3, r3, #8
 718 0010 9BB2     		uxth	r3, r3
 719 0012 03F58043 		add	r3, r3, #16384
 720 0016 2433     		adds	r3, r3, #36
 721 0018 9BB2     		uxth	r3, r3
 722 001a 1846     		mov	r0, r3
 723 001c 0221     		movs	r1, #2
 724 001e FFF7FEFF 		bl	spi_dma_read
 216:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 2);
 725              		.loc 1 216 0
 726 0022 084A     		ldr	r2, .L28
 727 0024 07F10C03 		add	r3, r7, #12
 728 0028 1288     		ldrh	r2, [r2]	@ unaligned
 729 002a 1A80     		strh	r2, [r3]	@ unaligned
 217:App/STM32F4-Discovery/W5200.c **** 	
 218:App/STM32F4-Discovery/W5200.c **** 	return ((var[0] << 8) | var[1] );
 730              		.loc 1 218 0
 731 002c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 732 002e 1B02     		lsls	r3, r3, #8
 733 0030 9AB2     		uxth	r2, r3
 734 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 735 0034 1343     		orrs	r3, r3, r2
 736 0036 9BB2     		uxth	r3, r3
 737 0038 9BB2     		uxth	r3, r3
 219:App/STM32F4-Discovery/W5200.c **** 
 220:App/STM32F4-Discovery/W5200.c **** 	
 221:App/STM32F4-Discovery/W5200.c **** }
 738              		.loc 1 221 0
 739 003a 1846     		mov	r0, r3
 740 003c 1037     		adds	r7, r7, #16
 741 003e BD46     		mov	sp, r7
 742              		@ sp needed
 743 0040 80BD     		pop	{r7, pc}
 744              	.L29:
 745 0042 00BF     		.align	2
 746              	.L28:
 747 0044 04000000 		.word	bufferRX+4
 748              		.cfi_endproc
 749              	.LFE118:
 751              		.section	.text.get_TXRD,"ax",%progbits
 752              		.align	2
 753              		.global	get_TXRD
 754              		.thumb
 755              		.thumb_func
 757              	get_TXRD:
 758              	.LFB119:
 222:App/STM32F4-Discovery/W5200.c **** uint16_t get_TXRD(uint8_t sck_fd)
 223:App/STM32F4-Discovery/W5200.c **** {
 759              		.loc 1 223 0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 16
 762              		@ frame_needed = 1, uses_anonymous_args = 0
 763 0000 80B5     		push	{r7, lr}
 764              	.LCFI27:
 765              		.cfi_def_cfa_offset 8
 766              		.cfi_offset 7, -8
 767              		.cfi_offset 14, -4
 768 0002 84B0     		sub	sp, sp, #16
 769              	.LCFI28:
 770              		.cfi_def_cfa_offset 24
 771 0004 00AF     		add	r7, sp, #0
 772              	.LCFI29:
 773              		.cfi_def_cfa_register 7
 774 0006 0346     		mov	r3, r0
 775 0008 FB71     		strb	r3, [r7, #7]
 224:App/STM32F4-Discovery/W5200.c **** 	uint8_t var[2]; 
 225:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_TX_RD(sck_fd), 2);
 776              		.loc 1 225 0
 777 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 778 000c 9BB2     		uxth	r3, r3
 779 000e 1B02     		lsls	r3, r3, #8
 780 0010 9BB2     		uxth	r3, r3
 781 0012 03F58043 		add	r3, r3, #16384
 782 0016 2233     		adds	r3, r3, #34
 783 0018 9BB2     		uxth	r3, r3
 784 001a 1846     		mov	r0, r3
 785 001c 0221     		movs	r1, #2
 786 001e FFF7FEFF 		bl	spi_dma_read
 226:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 2);
 787              		.loc 1 226 0
 788 0022 084A     		ldr	r2, .L32
 789 0024 07F10C03 		add	r3, r7, #12
 790 0028 1288     		ldrh	r2, [r2]	@ unaligned
 791 002a 1A80     		strh	r2, [r3]	@ unaligned
 227:App/STM32F4-Discovery/W5200.c **** 	
 228:App/STM32F4-Discovery/W5200.c **** 	return ((var[0] << 8) | var[1] );
 792              		.loc 1 228 0
 793 002c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 794 002e 1B02     		lsls	r3, r3, #8
 795 0030 9AB2     		uxth	r2, r3
 796 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 797 0034 1343     		orrs	r3, r3, r2
 798 0036 9BB2     		uxth	r3, r3
 799 0038 9BB2     		uxth	r3, r3
 229:App/STM32F4-Discovery/W5200.c **** 	
 230:App/STM32F4-Discovery/W5200.c **** }
 800              		.loc 1 230 0
 801 003a 1846     		mov	r0, r3
 802 003c 1037     		adds	r7, r7, #16
 803 003e BD46     		mov	sp, r7
 804              		@ sp needed
 805 0040 80BD     		pop	{r7, pc}
 806              	.L33:
 807 0042 00BF     		.align	2
 808              	.L32:
 809 0044 04000000 		.word	bufferRX+4
 810              		.cfi_endproc
 811              	.LFE119:
 813              		.section	.text.set_TXWR,"ax",%progbits
 814              		.align	2
 815              		.global	set_TXWR
 816              		.thumb
 817              		.thumb_func
 819              	set_TXWR:
 820              	.LFB120:
 231:App/STM32F4-Discovery/W5200.c **** 
 232:App/STM32F4-Discovery/W5200.c **** void  set_TXWR(uint8_t sck_fd, uint16_t val)
 233:App/STM32F4-Discovery/W5200.c **** {
 821              		.loc 1 233 0
 822              		.cfi_startproc
 823              		@ args = 0, pretend = 0, frame = 8
 824              		@ frame_needed = 1, uses_anonymous_args = 0
 825 0000 80B5     		push	{r7, lr}
 826              	.LCFI30:
 827              		.cfi_def_cfa_offset 8
 828              		.cfi_offset 7, -8
 829              		.cfi_offset 14, -4
 830 0002 82B0     		sub	sp, sp, #8
 831              	.LCFI31:
 832              		.cfi_def_cfa_offset 16
 833 0004 00AF     		add	r7, sp, #0
 834              	.LCFI32:
 835              		.cfi_def_cfa_register 7
 836 0006 0246     		mov	r2, r0
 837 0008 0B46     		mov	r3, r1
 838 000a FA71     		strb	r2, [r7, #7]
 839 000c BB80     		strh	r3, [r7, #4]	@ movhi
 234:App/STM32F4-Discovery/W5200.c ****  	spi_dma_send2B(W5200_Sn_TX_WR(sck_fd), val);
 840              		.loc 1 234 0
 841 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 842 0010 9BB2     		uxth	r3, r3
 843 0012 1B02     		lsls	r3, r3, #8
 844 0014 9BB2     		uxth	r3, r3
 845 0016 03F58043 		add	r3, r3, #16384
 846 001a 2433     		adds	r3, r3, #36
 847 001c 9AB2     		uxth	r2, r3
 848 001e BB88     		ldrh	r3, [r7, #4]
 849 0020 1046     		mov	r0, r2
 850 0022 1946     		mov	r1, r3
 851 0024 FFF7FEFF 		bl	spi_dma_send2B
 235:App/STM32F4-Discovery/W5200.c **** }
 852              		.loc 1 235 0
 853 0028 0837     		adds	r7, r7, #8
 854 002a BD46     		mov	sp, r7
 855              		@ sp needed
 856 002c 80BD     		pop	{r7, pc}
 857              		.cfi_endproc
 858              	.LFE120:
 860 002e 00BF     		.section	.text.get_RXRSR,"ax",%progbits
 861              		.align	2
 862              		.global	get_RXRSR
 863              		.thumb
 864              		.thumb_func
 866              	get_RXRSR:
 867              	.LFB121:
 236:App/STM32F4-Discovery/W5200.c **** 
 237:App/STM32F4-Discovery/W5200.c **** uint16_t get_RXRSR(uint8_t sck_fd)
 238:App/STM32F4-Discovery/W5200.c **** {
 868              		.loc 1 238 0
 869              		.cfi_startproc
 870              		@ args = 0, pretend = 0, frame = 16
 871              		@ frame_needed = 1, uses_anonymous_args = 0
 872 0000 80B5     		push	{r7, lr}
 873              	.LCFI33:
 874              		.cfi_def_cfa_offset 8
 875              		.cfi_offset 7, -8
 876              		.cfi_offset 14, -4
 877 0002 84B0     		sub	sp, sp, #16
 878              	.LCFI34:
 879              		.cfi_def_cfa_offset 24
 880 0004 00AF     		add	r7, sp, #0
 881              	.LCFI35:
 882              		.cfi_def_cfa_register 7
 883 0006 0346     		mov	r3, r0
 884 0008 FB71     		strb	r3, [r7, #7]
 239:App/STM32F4-Discovery/W5200.c **** 	uint8_t var[2]; 
 240:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_RX_RSR(sck_fd), 2);
 885              		.loc 1 240 0
 886 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 887 000c 9BB2     		uxth	r3, r3
 888 000e 1B02     		lsls	r3, r3, #8
 889 0010 9BB2     		uxth	r3, r3
 890 0012 03F58043 		add	r3, r3, #16384
 891 0016 2633     		adds	r3, r3, #38
 892 0018 9BB2     		uxth	r3, r3
 893 001a 1846     		mov	r0, r3
 894 001c 0221     		movs	r1, #2
 895 001e FFF7FEFF 		bl	spi_dma_read
 241:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 2);
 896              		.loc 1 241 0
 897 0022 084A     		ldr	r2, .L37
 898 0024 07F10C03 		add	r3, r7, #12
 899 0028 1288     		ldrh	r2, [r2]	@ unaligned
 900 002a 1A80     		strh	r2, [r3]	@ unaligned
 242:App/STM32F4-Discovery/W5200.c **** 	
 243:App/STM32F4-Discovery/W5200.c **** 	return ((var[0] << 8) | var[1] );
 901              		.loc 1 243 0
 902 002c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 903 002e 1B02     		lsls	r3, r3, #8
 904 0030 9AB2     		uxth	r2, r3
 905 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 906 0034 1343     		orrs	r3, r3, r2
 907 0036 9BB2     		uxth	r3, r3
 908 0038 9BB2     		uxth	r3, r3
 244:App/STM32F4-Discovery/W5200.c **** 
 245:App/STM32F4-Discovery/W5200.c **** }
 909              		.loc 1 245 0
 910 003a 1846     		mov	r0, r3
 911 003c 1037     		adds	r7, r7, #16
 912 003e BD46     		mov	sp, r7
 913              		@ sp needed
 914 0040 80BD     		pop	{r7, pc}
 915              	.L38:
 916 0042 00BF     		.align	2
 917              	.L37:
 918 0044 04000000 		.word	bufferRX+4
 919              		.cfi_endproc
 920              	.LFE121:
 922              		.section	.text.get_RXRD,"ax",%progbits
 923              		.align	2
 924              		.global	get_RXRD
 925              		.thumb
 926              		.thumb_func
 928              	get_RXRD:
 929              	.LFB122:
 246:App/STM32F4-Discovery/W5200.c **** 
 247:App/STM32F4-Discovery/W5200.c **** uint16_t get_RXRD(uint8_t sck_fd)
 248:App/STM32F4-Discovery/W5200.c **** {
 930              		.loc 1 248 0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 16
 933              		@ frame_needed = 1, uses_anonymous_args = 0
 934 0000 80B5     		push	{r7, lr}
 935              	.LCFI36:
 936              		.cfi_def_cfa_offset 8
 937              		.cfi_offset 7, -8
 938              		.cfi_offset 14, -4
 939 0002 84B0     		sub	sp, sp, #16
 940              	.LCFI37:
 941              		.cfi_def_cfa_offset 24
 942 0004 00AF     		add	r7, sp, #0
 943              	.LCFI38:
 944              		.cfi_def_cfa_register 7
 945 0006 0346     		mov	r3, r0
 946 0008 FB71     		strb	r3, [r7, #7]
 249:App/STM32F4-Discovery/W5200.c **** 	uint8_t var[2]; 
 250:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_RX_RD(sck_fd), 2 );
 947              		.loc 1 250 0
 948 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 949 000c 9BB2     		uxth	r3, r3
 950 000e 1B02     		lsls	r3, r3, #8
 951 0010 9BB2     		uxth	r3, r3
 952 0012 03F58043 		add	r3, r3, #16384
 953 0016 2833     		adds	r3, r3, #40
 954 0018 9BB2     		uxth	r3, r3
 955 001a 1846     		mov	r0, r3
 956 001c 0221     		movs	r1, #2
 957 001e FFF7FEFF 		bl	spi_dma_read
 251:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 2);
 958              		.loc 1 251 0
 959 0022 084A     		ldr	r2, .L41
 960 0024 07F10C03 		add	r3, r7, #12
 961 0028 1288     		ldrh	r2, [r2]	@ unaligned
 962 002a 1A80     		strh	r2, [r3]	@ unaligned
 252:App/STM32F4-Discovery/W5200.c **** 	
 253:App/STM32F4-Discovery/W5200.c **** 	return ((var[0] << 8) | var[1] );
 963              		.loc 1 253 0
 964 002c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 965 002e 1B02     		lsls	r3, r3, #8
 966 0030 9AB2     		uxth	r2, r3
 967 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 968 0034 1343     		orrs	r3, r3, r2
 969 0036 9BB2     		uxth	r3, r3
 970 0038 9BB2     		uxth	r3, r3
 254:App/STM32F4-Discovery/W5200.c **** }
 971              		.loc 1 254 0
 972 003a 1846     		mov	r0, r3
 973 003c 1037     		adds	r7, r7, #16
 974 003e BD46     		mov	sp, r7
 975              		@ sp needed
 976 0040 80BD     		pop	{r7, pc}
 977              	.L42:
 978 0042 00BF     		.align	2
 979              	.L41:
 980 0044 04000000 		.word	bufferRX+4
 981              		.cfi_endproc
 982              	.LFE122:
 984              		.section	.text.set_RXRD,"ax",%progbits
 985              		.align	2
 986              		.global	set_RXRD
 987              		.thumb
 988              		.thumb_func
 990              	set_RXRD:
 991              	.LFB123:
 255:App/STM32F4-Discovery/W5200.c **** 
 256:App/STM32F4-Discovery/W5200.c **** void set_RXRD(uint8_t sck_fd, uint16_t val)
 257:App/STM32F4-Discovery/W5200.c **** {
 992              		.loc 1 257 0
 993              		.cfi_startproc
 994              		@ args = 0, pretend = 0, frame = 8
 995              		@ frame_needed = 1, uses_anonymous_args = 0
 996 0000 80B5     		push	{r7, lr}
 997              	.LCFI39:
 998              		.cfi_def_cfa_offset 8
 999              		.cfi_offset 7, -8
 1000              		.cfi_offset 14, -4
 1001 0002 82B0     		sub	sp, sp, #8
 1002              	.LCFI40:
 1003              		.cfi_def_cfa_offset 16
 1004 0004 00AF     		add	r7, sp, #0
 1005              	.LCFI41:
 1006              		.cfi_def_cfa_register 7
 1007 0006 0246     		mov	r2, r0
 1008 0008 0B46     		mov	r3, r1
 1009 000a FA71     		strb	r2, [r7, #7]
 1010 000c BB80     		strh	r3, [r7, #4]	@ movhi
 258:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send2B(W5200_Sn_RX_RD(sck_fd), val);
 1011              		.loc 1 258 0
 1012 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1013 0010 9BB2     		uxth	r3, r3
 1014 0012 1B02     		lsls	r3, r3, #8
 1015 0014 9BB2     		uxth	r3, r3
 1016 0016 03F58043 		add	r3, r3, #16384
 1017 001a 2833     		adds	r3, r3, #40
 1018 001c 9AB2     		uxth	r2, r3
 1019 001e BB88     		ldrh	r3, [r7, #4]
 1020 0020 1046     		mov	r0, r2
 1021 0022 1946     		mov	r1, r3
 1022 0024 FFF7FEFF 		bl	spi_dma_send2B
 259:App/STM32F4-Discovery/W5200.c **** }
 1023              		.loc 1 259 0
 1024 0028 0837     		adds	r7, r7, #8
 1025 002a BD46     		mov	sp, r7
 1026              		@ sp needed
 1027 002c 80BD     		pop	{r7, pc}
 1028              		.cfi_endproc
 1029              	.LFE123:
 1031 002e 00BF     		.section	.text.write_memory,"ax",%progbits
 1032              		.align	2
 1033              		.global	write_memory
 1034              		.thumb
 1035              		.thumb_func
 1037              	write_memory:
 1038              	.LFB124:
 260:App/STM32F4-Discovery/W5200.c **** 
 261:App/STM32F4-Discovery/W5200.c **** /*==========================================================================
 262:App/STM32F4-Discovery/W5200.c **** 	socket TX/RX memory read write function
 263:App/STM32F4-Discovery/W5200.c **** ===========================================================================*/
 264:App/STM32F4-Discovery/W5200.c **** /*---------------------------------------------------------------------------
 265:App/STM32F4-Discovery/W5200.c **** 	write data to socket TX memory
 266:App/STM32F4-Discovery/W5200.c **** ----------------------------------------------------------------------------*/
 267:App/STM32F4-Discovery/W5200.c **** 
 268:App/STM32F4-Discovery/W5200.c **** void	write_memory(uint8_t sck_fd, uint16_t write_ptr, uint8_t *buf, uint16_t len)
 269:App/STM32F4-Discovery/W5200.c **** {
 1039              		.loc 1 269 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 24
 1042              		@ frame_needed = 1, uses_anonymous_args = 0
 1043 0000 80B5     		push	{r7, lr}
 1044              	.LCFI42:
 1045              		.cfi_def_cfa_offset 8
 1046              		.cfi_offset 7, -8
 1047              		.cfi_offset 14, -4
 1048 0002 86B0     		sub	sp, sp, #24
 1049              	.LCFI43:
 1050              		.cfi_def_cfa_offset 32
 1051 0004 00AF     		add	r7, sp, #0
 1052              	.LCFI44:
 1053              		.cfi_def_cfa_register 7
 1054 0006 BA60     		str	r2, [r7, #8]
 1055 0008 0246     		mov	r2, r0
 1056 000a FA73     		strb	r2, [r7, #15]
 1057 000c 0A46     		mov	r2, r1	@ movhi
 1058 000e BA81     		strh	r2, [r7, #12]	@ movhi
 1059 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 270:App/STM32F4-Discovery/W5200.c **** 	uint16_t	memory_addr, offset;
 271:App/STM32F4-Discovery/W5200.c **** 	uint16_t	upper_size, left_size;
 272:App/STM32F4-Discovery/W5200.c **** 
 273:App/STM32F4-Discovery/W5200.c **** 	// calculate offset address 
 274:App/STM32F4-Discovery/W5200.c **** 	offset = write_ptr & 0x07ff;
 1060              		.loc 1 274 0
 1061 0012 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1062 0014 C3F30A03 		ubfx	r3, r3, #0, #11
 1063 0018 FB82     		strh	r3, [r7, #22]	@ movhi
 275:App/STM32F4-Discovery/W5200.c **** 
 276:App/STM32F4-Discovery/W5200.c **** 	// calculate physical memory start address
 277:App/STM32F4-Discovery/W5200.c **** 	memory_addr = W5200_SOCKET_TX_BASE(sck_fd)  + offset;
 1064              		.loc 1 277 0
 1065 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1066 001c 9BB2     		uxth	r3, r3
 1067 001e DB00     		lsls	r3, r3, #3
 1068 0020 9BB2     		uxth	r3, r3
 1069 0022 1B02     		lsls	r3, r3, #8
 1070 0024 9AB2     		uxth	r2, r3
 1071 0026 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1072 0028 1344     		add	r3, r3, r2
 1073 002a 9BB2     		uxth	r3, r3
 1074 002c A3F50043 		sub	r3, r3, #32768
 1075 0030 BB82     		strh	r3, [r7, #20]	@ movhi
 278:App/STM32F4-Discovery/W5200.c **** 
 279:App/STM32F4-Discovery/W5200.c **** 	// if overflow socket TX memory ?
 280:App/STM32F4-Discovery/W5200.c **** 	if(offset + len > W5200_Sn_TXMEM_SIZE(sck_fd) +1 ){
 1076              		.loc 1 280 0
 1077 0032 FA8A     		ldrh	r2, [r7, #22]
 1078 0034 FB88     		ldrh	r3, [r7, #6]
 1079 0036 1A44     		add	r2, r2, r3
 1080 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1081 003a 1B02     		lsls	r3, r3, #8
 1082 003c 03F58043 		add	r3, r3, #16384
 1083 0040 2033     		adds	r3, r3, #32
 1084 0042 9A42     		cmp	r2, r3
 1085 0044 2ADD     		ble	.L45
 281:App/STM32F4-Discovery/W5200.c **** 
 282:App/STM32F4-Discovery/W5200.c **** 		// copy upper_size bytes
 283:App/STM32F4-Discovery/W5200.c **** 		upper_size = W5200_SOCKET_TX_BASE(sck_fd) - offset;
 1086              		.loc 1 283 0
 1087 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1088 0048 9BB2     		uxth	r3, r3
 1089 004a DB00     		lsls	r3, r3, #3
 1090 004c 9BB2     		uxth	r3, r3
 1091 004e 1B02     		lsls	r3, r3, #8
 1092 0050 9AB2     		uxth	r2, r3
 1093 0052 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1094 0054 D31A     		subs	r3, r2, r3
 1095 0056 9BB2     		uxth	r3, r3
 1096 0058 A3F50043 		sub	r3, r3, #32768
 1097 005c 7B82     		strh	r3, [r7, #18]	@ movhi
 284:App/STM32F4-Discovery/W5200.c **** 		spi_dma_send( memory_addr,upper_size, buf);
 1098              		.loc 1 284 0
 1099 005e BA8A     		ldrh	r2, [r7, #20]
 1100 0060 7B8A     		ldrh	r3, [r7, #18]
 1101 0062 1046     		mov	r0, r2
 1102 0064 1946     		mov	r1, r3
 1103 0066 BA68     		ldr	r2, [r7, #8]
 1104 0068 FFF7FEFF 		bl	spi_dma_send
 285:App/STM32F4-Discovery/W5200.c **** 		buf += upper_size;
 1105              		.loc 1 285 0
 1106 006c 7B8A     		ldrh	r3, [r7, #18]
 1107 006e BA68     		ldr	r2, [r7, #8]
 1108 0070 1344     		add	r3, r3, r2
 1109 0072 BB60     		str	r3, [r7, #8]
 286:App/STM32F4-Discovery/W5200.c **** 
 287:App/STM32F4-Discovery/W5200.c **** 		// copy left size bytes
 288:App/STM32F4-Discovery/W5200.c **** 		left_size = len - upper_size;
 1110              		.loc 1 288 0
 1111 0074 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1112 0076 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1113 0078 D31A     		subs	r3, r2, r3
 1114 007a 3B82     		strh	r3, [r7, #16]	@ movhi
 289:App/STM32F4-Discovery/W5200.c **** 		spi_dma_send( W5200_SOCKET_TX_BASE(sck_fd),
 1115              		.loc 1 289 0
 1116 007c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1117 007e 9BB2     		uxth	r3, r3
 1118 0080 DB00     		lsls	r3, r3, #3
 1119 0082 9BB2     		uxth	r3, r3
 1120 0084 1B02     		lsls	r3, r3, #8
 1121 0086 9BB2     		uxth	r3, r3
 1122 0088 A3F50043 		sub	r3, r3, #32768
 1123 008c 9AB2     		uxth	r2, r3
 1124 008e 3B8A     		ldrh	r3, [r7, #16]
 1125 0090 1046     		mov	r0, r2
 1126 0092 1946     		mov	r1, r3
 1127 0094 BA68     		ldr	r2, [r7, #8]
 1128 0096 FFF7FEFF 		bl	spi_dma_send
 1129 009a 06E0     		b	.L44
 1130              	.L45:
 290:App/STM32F4-Discovery/W5200.c **** 		left_size,  buf);
 291:App/STM32F4-Discovery/W5200.c **** 
 292:App/STM32F4-Discovery/W5200.c **** 	}else{
 293:App/STM32F4-Discovery/W5200.c **** 
 294:App/STM32F4-Discovery/W5200.c **** 		// copy len size bytes
 295:App/STM32F4-Discovery/W5200.c **** 		spi_dma_send( memory_addr,len,  buf);
 1131              		.loc 1 295 0
 1132 009c BA8A     		ldrh	r2, [r7, #20]
 1133 009e FB88     		ldrh	r3, [r7, #6]
 1134 00a0 1046     		mov	r0, r2
 1135 00a2 1946     		mov	r1, r3
 1136 00a4 BA68     		ldr	r2, [r7, #8]
 1137 00a6 FFF7FEFF 		bl	spi_dma_send
 1138              	.L44:
 296:App/STM32F4-Discovery/W5200.c **** 	}
 297:App/STM32F4-Discovery/W5200.c **** }
 1139              		.loc 1 297 0
 1140 00aa 1837     		adds	r7, r7, #24
 1141 00ac BD46     		mov	sp, r7
 1142              		@ sp needed
 1143 00ae 80BD     		pop	{r7, pc}
 1144              		.cfi_endproc
 1145              	.LFE124:
 1147              		.section	.text.read_memory,"ax",%progbits
 1148              		.align	2
 1149              		.global	read_memory
 1150              		.thumb
 1151              		.thumb_func
 1153              	read_memory:
 1154              	.LFB125:
 298:App/STM32F4-Discovery/W5200.c **** 
 299:App/STM32F4-Discovery/W5200.c **** /*---------------------------------------------------------------------------
 300:App/STM32F4-Discovery/W5200.c **** 	read data from socket RX memory
 301:App/STM32F4-Discovery/W5200.c **** ----------------------------------------------------------------------------*/
 302:App/STM32F4-Discovery/W5200.c **** 
 303:App/STM32F4-Discovery/W5200.c **** void	read_memory(uint8_t sck_fd, uint16_t read_ptr, uint8_t *buf, uint16_t len)
 304:App/STM32F4-Discovery/W5200.c **** {
 1155              		.loc 1 304 0
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 24
 1158              		@ frame_needed = 1, uses_anonymous_args = 0
 1159 0000 80B5     		push	{r7, lr}
 1160              	.LCFI45:
 1161              		.cfi_def_cfa_offset 8
 1162              		.cfi_offset 7, -8
 1163              		.cfi_offset 14, -4
 1164 0002 86B0     		sub	sp, sp, #24
 1165              	.LCFI46:
 1166              		.cfi_def_cfa_offset 32
 1167 0004 00AF     		add	r7, sp, #0
 1168              	.LCFI47:
 1169              		.cfi_def_cfa_register 7
 1170 0006 BA60     		str	r2, [r7, #8]
 1171 0008 0246     		mov	r2, r0
 1172 000a FA73     		strb	r2, [r7, #15]
 1173 000c 0A46     		mov	r2, r1	@ movhi
 1174 000e BA81     		strh	r2, [r7, #12]	@ movhi
 1175 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 305:App/STM32F4-Discovery/W5200.c **** 	uint16_t	memory_addr, offset;
 306:App/STM32F4-Discovery/W5200.c **** 	uint16_t	upper_size, left_size;
 307:App/STM32F4-Discovery/W5200.c **** 
 308:App/STM32F4-Discovery/W5200.c **** 	// calculate offset address 
 309:App/STM32F4-Discovery/W5200.c **** 	offset = read_ptr & 0x07ff;
 1176              		.loc 1 309 0
 1177 0012 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1178 0014 C3F30A03 		ubfx	r3, r3, #0, #11
 1179 0018 FB82     		strh	r3, [r7, #22]	@ movhi
 310:App/STM32F4-Discovery/W5200.c **** 
 311:App/STM32F4-Discovery/W5200.c **** 	// calculate physical memory start address
 312:App/STM32F4-Discovery/W5200.c **** 	memory_addr = W5200_SOCKET_RX_BASE(sck_fd)  + offset;
 1180              		.loc 1 312 0
 1181 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1182 001c 9BB2     		uxth	r3, r3
 1183 001e DB00     		lsls	r3, r3, #3
 1184 0020 9BB2     		uxth	r3, r3
 1185 0022 1B02     		lsls	r3, r3, #8
 1186 0024 9AB2     		uxth	r2, r3
 1187 0026 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1188 0028 1344     		add	r3, r3, r2
 1189 002a 9BB2     		uxth	r3, r3
 1190 002c A3F58043 		sub	r3, r3, #16384
 1191 0030 BB82     		strh	r3, [r7, #20]	@ movhi
 313:App/STM32F4-Discovery/W5200.c **** 
 314:App/STM32F4-Discovery/W5200.c **** 	// if overflow socket RX memory ?
 315:App/STM32F4-Discovery/W5200.c **** 	if(offset + len > 0x0800){
 1192              		.loc 1 315 0
 1193 0032 FA8A     		ldrh	r2, [r7, #22]
 1194 0034 FB88     		ldrh	r3, [r7, #6]
 1195 0036 1344     		add	r3, r3, r2
 1196 0038 B3F5006F 		cmp	r3, #2048
 1197 003c 2FDD     		ble	.L48
 316:App/STM32F4-Discovery/W5200.c **** 
 317:App/STM32F4-Discovery/W5200.c **** 		// copy upper_size bytes
 318:App/STM32F4-Discovery/W5200.c **** 		upper_size = 0x0800 - offset;
 1198              		.loc 1 318 0
 1199 003e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1200 0040 C3F50063 		rsb	r3, r3, #2048
 1201 0044 7B82     		strh	r3, [r7, #18]	@ movhi
 319:App/STM32F4-Discovery/W5200.c **** 		spi_dma_read( memory_addr,upper_size);
 1202              		.loc 1 319 0
 1203 0046 BA8A     		ldrh	r2, [r7, #20]
 1204 0048 7B8A     		ldrh	r3, [r7, #18]
 1205 004a 1046     		mov	r0, r2
 1206 004c 1946     		mov	r1, r3
 1207 004e FFF7FEFF 		bl	spi_dma_read
 320:App/STM32F4-Discovery/W5200.c **** 		memcpy(buf, bufferRX+4, upper_size);
 1208              		.loc 1 320 0
 1209 0052 7B8A     		ldrh	r3, [r7, #18]
 1210 0054 B868     		ldr	r0, [r7, #8]
 1211 0056 1949     		ldr	r1, .L50
 1212 0058 1A46     		mov	r2, r3
 1213 005a FFF7FEFF 		bl	memcpy
 321:App/STM32F4-Discovery/W5200.c **** 
 322:App/STM32F4-Discovery/W5200.c **** 		buf += upper_size;
 1214              		.loc 1 322 0
 1215 005e 7B8A     		ldrh	r3, [r7, #18]
 1216 0060 BA68     		ldr	r2, [r7, #8]
 1217 0062 1344     		add	r3, r3, r2
 1218 0064 BB60     		str	r3, [r7, #8]
 323:App/STM32F4-Discovery/W5200.c **** 
 324:App/STM32F4-Discovery/W5200.c **** 		// copy left size bytes
 325:App/STM32F4-Discovery/W5200.c **** 		left_size = len - upper_size;
 1219              		.loc 1 325 0
 1220 0066 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1221 0068 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1222 006a D31A     		subs	r3, r2, r3
 1223 006c 3B82     		strh	r3, [r7, #16]	@ movhi
 326:App/STM32F4-Discovery/W5200.c **** 		spi_dma_read(W5200_SOCKET_RX_BASE(sck_fd), left_size);
 1224              		.loc 1 326 0
 1225 006e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1226 0070 9BB2     		uxth	r3, r3
 1227 0072 DB00     		lsls	r3, r3, #3
 1228 0074 9BB2     		uxth	r3, r3
 1229 0076 1B02     		lsls	r3, r3, #8
 1230 0078 9BB2     		uxth	r3, r3
 1231 007a A3F58043 		sub	r3, r3, #16384
 1232 007e 9AB2     		uxth	r2, r3
 1233 0080 3B8A     		ldrh	r3, [r7, #16]
 1234 0082 1046     		mov	r0, r2
 1235 0084 1946     		mov	r1, r3
 1236 0086 FFF7FEFF 		bl	spi_dma_read
 327:App/STM32F4-Discovery/W5200.c **** 		memcpy(buf+upper_size, bufferRX+4, left_size);
 1237              		.loc 1 327 0
 1238 008a 7B8A     		ldrh	r3, [r7, #18]
 1239 008c BA68     		ldr	r2, [r7, #8]
 1240 008e 1A44     		add	r2, r2, r3
 1241 0090 3B8A     		ldrh	r3, [r7, #16]
 1242 0092 1046     		mov	r0, r2
 1243 0094 0949     		ldr	r1, .L50
 1244 0096 1A46     		mov	r2, r3
 1245 0098 FFF7FEFF 		bl	memcpy
 1246 009c 0BE0     		b	.L47
 1247              	.L48:
 328:App/STM32F4-Discovery/W5200.c **** 	}else{
 329:App/STM32F4-Discovery/W5200.c **** 
 330:App/STM32F4-Discovery/W5200.c **** 		// copy len size bytes
 331:App/STM32F4-Discovery/W5200.c **** 		spi_dma_read( memory_addr,len);
 1248              		.loc 1 331 0
 1249 009e BA8A     		ldrh	r2, [r7, #20]
 1250 00a0 FB88     		ldrh	r3, [r7, #6]
 1251 00a2 1046     		mov	r0, r2
 1252 00a4 1946     		mov	r1, r3
 1253 00a6 FFF7FEFF 		bl	spi_dma_read
 332:App/STM32F4-Discovery/W5200.c **** 		memcpy(buf, bufferRX+4, len);
 1254              		.loc 1 332 0
 1255 00aa FB88     		ldrh	r3, [r7, #6]
 1256 00ac B868     		ldr	r0, [r7, #8]
 1257 00ae 0349     		ldr	r1, .L50
 1258 00b0 1A46     		mov	r2, r3
 1259 00b2 FFF7FEFF 		bl	memcpy
 1260              	.L47:
 333:App/STM32F4-Discovery/W5200.c **** 	}
 334:App/STM32F4-Discovery/W5200.c **** }
 1261              		.loc 1 334 0
 1262 00b6 1837     		adds	r7, r7, #24
 1263 00b8 BD46     		mov	sp, r7
 1264              		@ sp needed
 1265 00ba 80BD     		pop	{r7, pc}
 1266              	.L51:
 1267              		.align	2
 1268              	.L50:
 1269 00bc 04000000 		.word	bufferRX+4
 1270              		.cfi_endproc
 1271              	.LFE125:
 1273              		.section	.text.socket,"ax",%progbits
 1274              		.align	2
 1275              		.global	socket
 1276              		.thumb
 1277              		.thumb_func
 1279              	socket:
 1280              	.LFB126:
 335:App/STM32F4-Discovery/W5200.c **** 
 336:App/STM32F4-Discovery/W5200.c **** 
 337:App/STM32F4-Discovery/W5200.c **** 
 338:App/STM32F4-Discovery/W5200.c **** /*==========================================================================
 339:App/STM32F4-Discovery/W5200.c **** 	socket()	create socket, handle open
 340:App/STM32F4-Discovery/W5200.c **** 		ip_proto, RAW mode only.
 341:App/STM32F4-Discovery/W5200.c **** ===========================================================================*/
 342:App/STM32F4-Discovery/W5200.c **** 
 343:App/STM32F4-Discovery/W5200.c **** uint8_t	socket(uint8_t  mode, uint16_t  port, uint8_t ip_proto)
 344:App/STM32F4-Discovery/W5200.c **** {
 1281              		.loc 1 344 0
 1282              		.cfi_startproc
 1283              		@ args = 0, pretend = 0, frame = 16
 1284              		@ frame_needed = 1, uses_anonymous_args = 0
 1285 0000 80B5     		push	{r7, lr}
 1286              	.LCFI48:
 1287              		.cfi_def_cfa_offset 8
 1288              		.cfi_offset 7, -8
 1289              		.cfi_offset 14, -4
 1290 0002 84B0     		sub	sp, sp, #16
 1291              	.LCFI49:
 1292              		.cfi_def_cfa_offset 24
 1293 0004 00AF     		add	r7, sp, #0
 1294              	.LCFI50:
 1295              		.cfi_def_cfa_register 7
 1296 0006 1346     		mov	r3, r2
 1297 0008 0246     		mov	r2, r0
 1298 000a FA71     		strb	r2, [r7, #7]
 1299 000c 0A46     		mov	r2, r1	@ movhi
 1300 000e BA80     		strh	r2, [r7, #4]	@ movhi
 1301 0010 BB71     		strb	r3, [r7, #6]
 345:App/STM32F4-Discovery/W5200.c **** 	uint8_t	sck_fd;
 346:App/STM32F4-Discovery/W5200.c **** 	uint8_t	stat;
 347:App/STM32F4-Discovery/W5200.c **** 
 348:App/STM32F4-Discovery/W5200.c **** 	// check free socket exists? 
 349:App/STM32F4-Discovery/W5200.c **** 	for(sck_fd = 0; sck_fd < W5200_MAX_SOCKETS; sck_fd++){
 1302              		.loc 1 349 0
 1303 0012 0023     		movs	r3, #0
 1304 0014 FB73     		strb	r3, [r7, #15]
 1305 0016 0CE0     		b	.L53
 1306              	.L56:
 350:App/STM32F4-Discovery/W5200.c **** 		if(socket_flg[sck_fd] == 0){
 1307              		.loc 1 350 0
 1308 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1309 001a 4C4A     		ldr	r2, .L68
 1310 001c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1311 001e 002B     		cmp	r3, #0
 1312 0020 04D1     		bne	.L54
 351:App/STM32F4-Discovery/W5200.c **** 			socket_flg[sck_fd] = 1;
 1313              		.loc 1 351 0
 1314 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1315 0024 494A     		ldr	r2, .L68
 1316 0026 0121     		movs	r1, #1
 1317 0028 D154     		strb	r1, [r2, r3]
 352:App/STM32F4-Discovery/W5200.c **** 			break;
 1318              		.loc 1 352 0
 1319 002a 05E0     		b	.L55
 1320              	.L54:
 349:App/STM32F4-Discovery/W5200.c **** 	for(sck_fd = 0; sck_fd < W5200_MAX_SOCKETS; sck_fd++){
 1321              		.loc 1 349 0
 1322 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1323 002e 0133     		adds	r3, r3, #1
 1324 0030 FB73     		strb	r3, [r7, #15]
 1325              	.L53:
 349:App/STM32F4-Discovery/W5200.c **** 	for(sck_fd = 0; sck_fd < W5200_MAX_SOCKETS; sck_fd++){
 1326              		.loc 1 349 0 is_stmt 0 discriminator 1
 1327 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1328 0034 072B     		cmp	r3, #7
 1329 0036 EFD9     		bls	.L56
 1330              	.L55:
 353:App/STM32F4-Discovery/W5200.c **** 		}
 354:App/STM32F4-Discovery/W5200.c **** 	}
 355:App/STM32F4-Discovery/W5200.c **** 	if(sck_fd >= W5200_MAX_SOCKETS) return -1;	// no more sockets.
 1331              		.loc 1 355 0 is_stmt 1
 1332 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1333 003a 072B     		cmp	r3, #7
 1334 003c 01D9     		bls	.L57
 1335              		.loc 1 355 0 is_stmt 0 discriminator 1
 1336 003e FF23     		movs	r3, #255
 1337 0040 7FE0     		b	.L67
 1338              	.L57:
 356:App/STM32F4-Discovery/W5200.c **** 	// check mode parameter
 357:App/STM32F4-Discovery/W5200.c **** 	if((mode & 0x0f) > W5200_MR_PPPOE_ENABLE) return -1;	// mode error.
 1339              		.loc 1 357 0 is_stmt 1
 1340 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1341 0044 03F00F03 		and	r3, r3, #15
 1342 0048 082B     		cmp	r3, #8
 1343 004a 01DD     		ble	.L59
 1344              		.loc 1 357 0 is_stmt 0 discriminator 1
 1345 004c FF23     		movs	r3, #255
 1346 004e 78E0     		b	.L67
 1347              	.L59:
 358:App/STM32F4-Discovery/W5200.c **** 	if(((mode & 0x0f) != W5200_Sn_MR_UDP) && (mode & W5200_Sn_MR_MULTI)) return -1; // MULTI is UDP on
 1348              		.loc 1 358 0 is_stmt 1
 1349 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1350 0052 03F00F03 		and	r3, r3, #15
 1351 0056 022B     		cmp	r3, #2
 1352 0058 05D0     		beq	.L60
 1353              		.loc 1 358 0 is_stmt 0 discriminator 1
 1354 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1355 005c 5BB2     		sxtb	r3, r3
 1356 005e 002B     		cmp	r3, #0
 1357 0060 01DA     		bge	.L60
 1358 0062 FF23     		movs	r3, #255
 1359 0064 6DE0     		b	.L67
 1360              	.L60:
 359:App/STM32F4-Discovery/W5200.c **** 	if(((mode & 0x0f) != W5200_Sn_MR_TCP) && (mode & W5200_Sn_MR_ND)) return -1; // ND is TCP only.
 1361              		.loc 1 359 0 is_stmt 1
 1362 0066 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1363 0068 03F00F03 		and	r3, r3, #15
 1364 006c 012B     		cmp	r3, #1
 1365 006e 06D0     		beq	.L61
 1366              		.loc 1 359 0 is_stmt 0 discriminator 1
 1367 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1368 0072 03F02003 		and	r3, r3, #32
 1369 0076 002B     		cmp	r3, #0
 1370 0078 01D0     		beq	.L61
 1371 007a FF23     		movs	r3, #255
 1372 007c 61E0     		b	.L67
 1373              	.L61:
 360:App/STM32F4-Discovery/W5200.c **** 
 361:App/STM32F4-Discovery/W5200.c **** 	// set MODE register
 362:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_MR(sck_fd) , mode);
 1374              		.loc 1 362 0 is_stmt 1
 1375 007e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1376 0080 9BB2     		uxth	r3, r3
 1377 0082 1B02     		lsls	r3, r3, #8
 1378 0084 9BB2     		uxth	r3, r3
 1379 0086 03F58043 		add	r3, r3, #16384
 1380 008a 9AB2     		uxth	r2, r3
 1381 008c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1382 008e 1046     		mov	r0, r2
 1383 0090 1946     		mov	r1, r3
 1384 0092 FFF7FEFF 		bl	spi_dma_sendByte
 363:App/STM32F4-Discovery/W5200.c **** 	//socket_mode[sck_fd] = mode & 0x0f;	// omitting ND/MULTICAST
 364:App/STM32F4-Discovery/W5200.c **** 	mode &= 0x0f;
 1385              		.loc 1 364 0
 1386 0096 FB79     		ldrb	r3, [r7, #7]
 1387 0098 03F00F03 		and	r3, r3, #15
 1388 009c FB71     		strb	r3, [r7, #7]
 365:App/STM32F4-Discovery/W5200.c **** 
 366:App/STM32F4-Discovery/W5200.c **** 	uint8_t prt[2];
 367:App/STM32F4-Discovery/W5200.c **** 
 368:App/STM32F4-Discovery/W5200.c **** 	// set PORT, PROTOCOL 
 369:App/STM32F4-Discovery/W5200.c **** 	switch(mode){
 1389              		.loc 1 369 0
 1390 009e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1391 00a0 012B     		cmp	r3, #1
 1392 00a2 29DB     		blt	.L62
 1393 00a4 022B     		cmp	r3, #2
 1394 00a6 02DD     		ble	.L63
 1395 00a8 032B     		cmp	r3, #3
 1396 00aa 18D0     		beq	.L64
 1397 00ac 24E0     		b	.L62
 1398              	.L63:
 370:App/STM32F4-Discovery/W5200.c **** 	case W5200_Sn_MR_TCP:
 371:App/STM32F4-Discovery/W5200.c **** 	case W5200_Sn_MR_UDP:
 372:App/STM32F4-Discovery/W5200.c **** 
 373:App/STM32F4-Discovery/W5200.c **** 		// split port for sending on two 8bits
 374:App/STM32F4-Discovery/W5200.c **** 		prt[0] = (port & 0xff00) >> 8;
 1399              		.loc 1 374 0
 1400 00ae BB88     		ldrh	r3, [r7, #4]
 1401 00b0 1B0A     		lsrs	r3, r3, #8
 1402 00b2 9BB2     		uxth	r3, r3
 1403 00b4 DBB2     		uxtb	r3, r3
 1404 00b6 3B73     		strb	r3, [r7, #12]
 375:App/STM32F4-Discovery/W5200.c **** 		prt[1] =  (port & 0x00ff);
 1405              		.loc 1 375 0
 1406 00b8 BB88     		ldrh	r3, [r7, #4]	@ movhi
 1407 00ba DBB2     		uxtb	r3, r3
 1408 00bc 7B73     		strb	r3, [r7, #13]
 376:App/STM32F4-Discovery/W5200.c **** 		spi_dma_send(W5200_Sn_PORT(sck_fd), 2 , prt);
 1409              		.loc 1 376 0
 1410 00be FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1411 00c0 9BB2     		uxth	r3, r3
 1412 00c2 1B02     		lsls	r3, r3, #8
 1413 00c4 9BB2     		uxth	r3, r3
 1414 00c6 03F58043 		add	r3, r3, #16384
 1415 00ca 0433     		adds	r3, r3, #4
 1416 00cc 9AB2     		uxth	r2, r3
 1417 00ce 07F10C03 		add	r3, r7, #12
 1418 00d2 1046     		mov	r0, r2
 1419 00d4 0221     		movs	r1, #2
 1420 00d6 1A46     		mov	r2, r3
 1421 00d8 FFF7FEFF 		bl	spi_dma_send
 377:App/STM32F4-Discovery/W5200.c **** 		
 378:App/STM32F4-Discovery/W5200.c **** 		break;
 1422              		.loc 1 378 0
 1423 00dc 0CE0     		b	.L62
 1424              	.L64:
 379:App/STM32F4-Discovery/W5200.c **** 	case W5200_Sn_MR_IPRAW:
 380:App/STM32F4-Discovery/W5200.c **** 		spi_dma_sendByte(W5200_Sn_PROTO(sck_fd), ip_proto);
 1425              		.loc 1 380 0
 1426 00de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1427 00e0 9BB2     		uxth	r3, r3
 1428 00e2 1B02     		lsls	r3, r3, #8
 1429 00e4 9BB2     		uxth	r3, r3
 1430 00e6 03F58043 		add	r3, r3, #16384
 1431 00ea 1433     		adds	r3, r3, #20
 1432 00ec 9AB2     		uxth	r2, r3
 1433 00ee BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1434 00f0 1046     		mov	r0, r2
 1435 00f2 1946     		mov	r1, r3
 1436 00f4 FFF7FEFF 		bl	spi_dma_sendByte
 1437              	.L62:
 381:App/STM32F4-Discovery/W5200.c **** 	}
 382:App/STM32F4-Discovery/W5200.c **** 
 383:App/STM32F4-Discovery/W5200.c **** 	// execute socket open
 384:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_CR(sck_fd), W5200_Sn_CR_OPEN);
 1438              		.loc 1 384 0
 1439 00f8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1440 00fa 9BB2     		uxth	r3, r3
 1441 00fc 1B02     		lsls	r3, r3, #8
 1442 00fe 9BB2     		uxth	r3, r3
 1443 0100 03F58043 		add	r3, r3, #16384
 1444 0104 0133     		adds	r3, r3, #1
 1445 0106 9BB2     		uxth	r3, r3
 1446 0108 1846     		mov	r0, r3
 1447 010a 0121     		movs	r1, #1
 1448 010c FFF7FEFF 		bl	spi_dma_sendByte
 385:App/STM32F4-Discovery/W5200.c **** 	// wait command complete.
 386:App/STM32F4-Discovery/W5200.c **** 	while(get_CRStatus(sck_fd)  != 0);	// 0 value is command complete. 
 1449              		.loc 1 386 0
 1450 0110 00BF     		nop
 1451              	.L65:
 1452              		.loc 1 386 0 is_stmt 0 discriminator 1
 1453 0112 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1454 0114 1846     		mov	r0, r3
 1455 0116 FFF7FEFF 		bl	get_CRStatus
 1456 011a 0346     		mov	r3, r0
 1457 011c 002B     		cmp	r3, #0
 1458 011e F8D1     		bne	.L65
 387:App/STM32F4-Discovery/W5200.c **** 
 388:App/STM32F4-Discovery/W5200.c **** 	// check status
 389:App/STM32F4-Discovery/W5200.c **** 	if(stat = get_SRStatus(sck_fd) != W5200_Sn_SR_SOCK_INIT) return -1;
 1459              		.loc 1 389 0 is_stmt 1
 1460 0120 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1461 0122 1846     		mov	r0, r3
 1462 0124 FFF7FEFF 		bl	get_SRStatus
 1463 0128 0346     		mov	r3, r0
 1464 012a 132B     		cmp	r3, #19
 1465 012c 0CBF     		ite	eq
 1466 012e 0023     		moveq	r3, #0
 1467 0130 0123     		movne	r3, #1
 1468 0132 DBB2     		uxtb	r3, r3
 1469 0134 BB73     		strb	r3, [r7, #14]
 1470 0136 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1471 0138 002B     		cmp	r3, #0
 1472 013a 01D0     		beq	.L66
 1473              		.loc 1 389 0 is_stmt 0 discriminator 1
 1474 013c FF23     		movs	r3, #255
 1475 013e 00E0     		b	.L67
 1476              	.L66:
 390:App/STM32F4-Discovery/W5200.c **** 
 391:App/STM32F4-Discovery/W5200.c **** 	// success return
 392:App/STM32F4-Discovery/W5200.c **** 	return sck_fd;
 1477              		.loc 1 392 0 is_stmt 1
 1478 0140 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1479              	.L67:
 393:App/STM32F4-Discovery/W5200.c **** }
 1480              		.loc 1 393 0
 1481 0142 1846     		mov	r0, r3
 1482 0144 1037     		adds	r7, r7, #16
 1483 0146 BD46     		mov	sp, r7
 1484              		@ sp needed
 1485 0148 80BD     		pop	{r7, pc}
 1486              	.L69:
 1487 014a 00BF     		.align	2
 1488              	.L68:
 1489 014c 00000000 		.word	socket_flg
 1490              		.cfi_endproc
 1491              	.LFE126:
 1493              		.section	.text.closesocket,"ax",%progbits
 1494              		.align	2
 1495              		.global	closesocket
 1496              		.thumb
 1497              		.thumb_func
 1499              	closesocket:
 1500              	.LFB127:
 394:App/STM32F4-Discovery/W5200.c **** 
 395:App/STM32F4-Discovery/W5200.c **** /*==========================================================================
 396:App/STM32F4-Discovery/W5200.c **** 	closesocket()	socket handle close
 397:App/STM32F4-Discovery/W5200.c **** ===========================================================================*/
 398:App/STM32F4-Discovery/W5200.c **** 
 399:App/STM32F4-Discovery/W5200.c **** int	closesocket(int sck_fd)
 400:App/STM32F4-Discovery/W5200.c **** {
 1501              		.loc 1 400 0
 1502              		.cfi_startproc
 1503              		@ args = 0, pretend = 0, frame = 8
 1504              		@ frame_needed = 1, uses_anonymous_args = 0
 1505 0000 80B5     		push	{r7, lr}
 1506              	.LCFI51:
 1507              		.cfi_def_cfa_offset 8
 1508              		.cfi_offset 7, -8
 1509              		.cfi_offset 14, -4
 1510 0002 82B0     		sub	sp, sp, #8
 1511              	.LCFI52:
 1512              		.cfi_def_cfa_offset 16
 1513 0004 00AF     		add	r7, sp, #0
 1514              	.LCFI53:
 1515              		.cfi_def_cfa_register 7
 1516 0006 7860     		str	r0, [r7, #4]
 401:App/STM32F4-Discovery/W5200.c **** 	// check asign flag
 402:App/STM32F4-Discovery/W5200.c **** 	if(sck_fd < 0 || sck_fd >=W5200_MAX_SOCKETS||  socket_flg[sck_fd] != 1) return -1;
 1517              		.loc 1 402 0
 1518 0008 7B68     		ldr	r3, [r7, #4]
 1519 000a 002B     		cmp	r3, #0
 1520 000c 08DB     		blt	.L71
 1521              		.loc 1 402 0 is_stmt 0 discriminator 2
 1522 000e 7B68     		ldr	r3, [r7, #4]
 1523 0010 072B     		cmp	r3, #7
 1524 0012 05DC     		bgt	.L71
 1525              		.loc 1 402 0 discriminator 1
 1526 0014 184A     		ldr	r2, .L76
 1527 0016 7B68     		ldr	r3, [r7, #4]
 1528 0018 1344     		add	r3, r3, r2
 1529 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1530 001c 012B     		cmp	r3, #1
 1531 001e 02D0     		beq	.L72
 1532              	.L71:
 1533 0020 4FF0FF33 		mov	r3, #-1
 1534 0024 23E0     		b	.L73
 1535              	.L72:
 403:App/STM32F4-Discovery/W5200.c **** 
 404:App/STM32F4-Discovery/W5200.c **** 	// release socket
 405:App/STM32F4-Discovery/W5200.c **** 	socket_flg[sck_fd] = 0;
 1536              		.loc 1 405 0 is_stmt 1
 1537 0026 144A     		ldr	r2, .L76
 1538 0028 7B68     		ldr	r3, [r7, #4]
 1539 002a 1344     		add	r3, r3, r2
 1540 002c 0022     		movs	r2, #0
 1541 002e 1A70     		strb	r2, [r3]
 406:App/STM32F4-Discovery/W5200.c **** 	
 407:App/STM32F4-Discovery/W5200.c **** 	// execute socket close
 408:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_CR(sck_fd), W5200_Sn_CR_CLOSE);
 1542              		.loc 1 408 0
 1543 0030 7B68     		ldr	r3, [r7, #4]
 1544 0032 9BB2     		uxth	r3, r3
 1545 0034 1B02     		lsls	r3, r3, #8
 1546 0036 9BB2     		uxth	r3, r3
 1547 0038 03F58043 		add	r3, r3, #16384
 1548 003c 0133     		adds	r3, r3, #1
 1549 003e 9BB2     		uxth	r3, r3
 1550 0040 1846     		mov	r0, r3
 1551 0042 1021     		movs	r1, #16
 1552 0044 FFF7FEFF 		bl	spi_dma_sendByte
 409:App/STM32F4-Discovery/W5200.c **** 	// wait command complete.
 410:App/STM32F4-Discovery/W5200.c **** 	while(get_CRStatus(sck_fd)  != 0);	// 0 value is command complete. 
 1553              		.loc 1 410 0
 1554 0048 00BF     		nop
 1555              	.L74:
 1556              		.loc 1 410 0 is_stmt 0 discriminator 1
 1557 004a 7B68     		ldr	r3, [r7, #4]
 1558 004c DBB2     		uxtb	r3, r3
 1559 004e 1846     		mov	r0, r3
 1560 0050 FFF7FEFF 		bl	get_CRStatus
 1561 0054 0346     		mov	r3, r0
 1562 0056 002B     		cmp	r3, #0
 1563 0058 F7D1     		bne	.L74
 411:App/STM32F4-Discovery/W5200.c **** 
 412:App/STM32F4-Discovery/W5200.c **** 	// check status
 413:App/STM32F4-Discovery/W5200.c **** 	while( get_SRStatus(sck_fd) != W5200_Sn_SR_SOCK_CLOSED);
 1564              		.loc 1 413 0 is_stmt 1
 1565 005a 00BF     		nop
 1566              	.L75:
 1567              		.loc 1 413 0 is_stmt 0 discriminator 1
 1568 005c 7B68     		ldr	r3, [r7, #4]
 1569 005e DBB2     		uxtb	r3, r3
 1570 0060 1846     		mov	r0, r3
 1571 0062 FFF7FEFF 		bl	get_SRStatus
 1572 0066 0346     		mov	r3, r0
 1573 0068 002B     		cmp	r3, #0
 1574 006a F7D1     		bne	.L75
 414:App/STM32F4-Discovery/W5200.c **** 
 415:App/STM32F4-Discovery/W5200.c **** 	// close success
 416:App/STM32F4-Discovery/W5200.c **** 	return 0;
 1575              		.loc 1 416 0 is_stmt 1
 1576 006c 0023     		movs	r3, #0
 1577              	.L73:
 417:App/STM32F4-Discovery/W5200.c **** }
 1578              		.loc 1 417 0
 1579 006e 1846     		mov	r0, r3
 1580 0070 0837     		adds	r7, r7, #8
 1581 0072 BD46     		mov	sp, r7
 1582              		@ sp needed
 1583 0074 80BD     		pop	{r7, pc}
 1584              	.L77:
 1585 0076 00BF     		.align	2
 1586              	.L76:
 1587 0078 00000000 		.word	socket_flg
 1588              		.cfi_endproc
 1589              	.LFE127:
 1591              		.section	.text.connect,"ax",%progbits
 1592              		.align	2
 1593              		.global	connect
 1594              		.thumb
 1595              		.thumb_func
 1597              	connect:
 1598              	.LFB128:
 418:App/STM32F4-Discovery/W5200.c **** 
 419:App/STM32F4-Discovery/W5200.c **** /*==========================================================================
 420:App/STM32F4-Discovery/W5200.c **** 	connect()	connect to remote host (TCP only)
 421:App/STM32F4-Discovery/W5200.c **** ===========================================================================*/
 422:App/STM32F4-Discovery/W5200.c **** 
 423:App/STM32F4-Discovery/W5200.c **** int	connect(uint8_t sck_fd, uint8_t *to_ip, uint16_t to_port)
 424:App/STM32F4-Discovery/W5200.c **** {
 1599              		.loc 1 424 0
 1600              		.cfi_startproc
 1601              		@ args = 0, pretend = 0, frame = 16
 1602              		@ frame_needed = 1, uses_anonymous_args = 0
 1603 0000 80B5     		push	{r7, lr}
 1604              	.LCFI54:
 1605              		.cfi_def_cfa_offset 8
 1606              		.cfi_offset 7, -8
 1607              		.cfi_offset 14, -4
 1608 0002 84B0     		sub	sp, sp, #16
 1609              	.LCFI55:
 1610              		.cfi_def_cfa_offset 24
 1611 0004 00AF     		add	r7, sp, #0
 1612              	.LCFI56:
 1613              		.cfi_def_cfa_register 7
 1614 0006 3960     		str	r1, [r7]
 1615 0008 1346     		mov	r3, r2
 1616 000a 0246     		mov	r2, r0
 1617 000c FA71     		strb	r2, [r7, #7]
 1618 000e BB80     		strh	r3, [r7, #4]	@ movhi
 425:App/STM32F4-Discovery/W5200.c **** 	uint8_t	status;
 426:App/STM32F4-Discovery/W5200.c **** 
 427:App/STM32F4-Discovery/W5200.c **** 	// check socket asign flag
 428:App/STM32F4-Discovery/W5200.c **** 	if(sck_fd < 0 || sck_fd >= W5200_MAX_SOCKETS ||  socket_flg[sck_fd] != 1) return -1;
 1619              		.loc 1 428 0
 1620 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1621 0012 072B     		cmp	r3, #7
 1622 0014 04D8     		bhi	.L79
 1623              		.loc 1 428 0 is_stmt 0 discriminator 2
 1624 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1625 0018 3A4A     		ldr	r2, .L89
 1626 001a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1627 001c 012B     		cmp	r3, #1
 1628 001e 02D0     		beq	.L80
 1629              	.L79:
 1630              		.loc 1 428 0 discriminator 1
 1631 0020 4FF0FF33 		mov	r3, #-1
 1632 0024 6AE0     		b	.L88
 1633              	.L80:
 429:App/STM32F4-Discovery/W5200.c **** 
 430:App/STM32F4-Discovery/W5200.c **** 	// check parameter
 431:App/STM32F4-Discovery/W5200.c **** 	if(to_ip == NULL || to_port == 0) return -1;
 1634              		.loc 1 431 0 is_stmt 1
 1635 0026 3B68     		ldr	r3, [r7]
 1636 0028 002B     		cmp	r3, #0
 1637 002a 02D0     		beq	.L82
 1638              		.loc 1 431 0 is_stmt 0 discriminator 2
 1639 002c BB88     		ldrh	r3, [r7, #4]
 1640 002e 002B     		cmp	r3, #0
 1641 0030 02D1     		bne	.L83
 1642              	.L82:
 1643              		.loc 1 431 0 discriminator 1
 1644 0032 4FF0FF33 		mov	r3, #-1
 1645 0036 61E0     		b	.L88
 1646              	.L83:
 432:App/STM32F4-Discovery/W5200.c **** 	if(get_SRStatus(sck_fd) !=  W5200_Sn_SR_SOCK_INIT) return -1;
 1647              		.loc 1 432 0 is_stmt 1
 1648 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1649 003a 1846     		mov	r0, r3
 1650 003c FFF7FEFF 		bl	get_SRStatus
 1651 0040 0346     		mov	r3, r0
 1652 0042 132B     		cmp	r3, #19
 1653 0044 02D0     		beq	.L84
 1654              		.loc 1 432 0 is_stmt 0 discriminator 1
 1655 0046 4FF0FF33 		mov	r3, #-1
 1656 004a 57E0     		b	.L88
 1657              	.L84:
 433:App/STM32F4-Discovery/W5200.c **** 	status = get_SRStatus(sck_fd);
 1658              		.loc 1 433 0 is_stmt 1
 1659 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1660 004e 1846     		mov	r0, r3
 1661 0050 FFF7FEFF 		bl	get_SRStatus
 1662 0054 0346     		mov	r3, r0
 1663 0056 FB73     		strb	r3, [r7, #15]
 434:App/STM32F4-Discovery/W5200.c **** 	
 435:App/STM32F4-Discovery/W5200.c **** 	// set IP/PORT
 436:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send(W5200_Sn_DIPR(sck_fd), 4, to_ip);
 1664              		.loc 1 436 0
 1665 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1666 005a 9BB2     		uxth	r3, r3
 1667 005c 1B02     		lsls	r3, r3, #8
 1668 005e 9BB2     		uxth	r3, r3
 1669 0060 03F58043 		add	r3, r3, #16384
 1670 0064 0C33     		adds	r3, r3, #12
 1671 0066 9BB2     		uxth	r3, r3
 1672 0068 1846     		mov	r0, r3
 1673 006a 0421     		movs	r1, #4
 1674 006c 3A68     		ldr	r2, [r7]
 1675 006e FFF7FEFF 		bl	spi_dma_send
 437:App/STM32F4-Discovery/W5200.c **** 	// split port for sending on two 8bits
 438:App/STM32F4-Discovery/W5200.c **** 	uint8_t prt[2];
 439:App/STM32F4-Discovery/W5200.c **** 		prt[0] = (to_port & 0xff00) >> 8;
 1676              		.loc 1 439 0
 1677 0072 BB88     		ldrh	r3, [r7, #4]
 1678 0074 1B0A     		lsrs	r3, r3, #8
 1679 0076 9BB2     		uxth	r3, r3
 1680 0078 DBB2     		uxtb	r3, r3
 1681 007a 3B73     		strb	r3, [r7, #12]
 440:App/STM32F4-Discovery/W5200.c **** 		prt[1] =  (to_port & 0x00ff);
 1682              		.loc 1 440 0
 1683 007c BB88     		ldrh	r3, [r7, #4]	@ movhi
 1684 007e DBB2     		uxtb	r3, r3
 1685 0080 7B73     		strb	r3, [r7, #13]
 441:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send(W5200_Sn_DPORT(sck_fd), 2 , prt);
 1686              		.loc 1 441 0
 1687 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1688 0084 9BB2     		uxth	r3, r3
 1689 0086 1B02     		lsls	r3, r3, #8
 1690 0088 9BB2     		uxth	r3, r3
 1691 008a 03F58043 		add	r3, r3, #16384
 1692 008e 1033     		adds	r3, r3, #16
 1693 0090 9AB2     		uxth	r2, r3
 1694 0092 07F10C03 		add	r3, r7, #12
 1695 0096 1046     		mov	r0, r2
 1696 0098 0221     		movs	r1, #2
 1697 009a 1A46     		mov	r2, r3
 1698 009c FFF7FEFF 		bl	spi_dma_send
 442:App/STM32F4-Discovery/W5200.c **** 	
 443:App/STM32F4-Discovery/W5200.c **** 	// CONNECT command
 444:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_CR(sck_fd), W5200_Sn_CR_CONNECT);
 1699              		.loc 1 444 0
 1700 00a0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1701 00a2 9BB2     		uxth	r3, r3
 1702 00a4 1B02     		lsls	r3, r3, #8
 1703 00a6 9BB2     		uxth	r3, r3
 1704 00a8 03F58043 		add	r3, r3, #16384
 1705 00ac 0133     		adds	r3, r3, #1
 1706 00ae 9BB2     		uxth	r3, r3
 1707 00b0 1846     		mov	r0, r3
 1708 00b2 0421     		movs	r1, #4
 1709 00b4 FFF7FEFF 		bl	spi_dma_sendByte
 445:App/STM32F4-Discovery/W5200.c **** 	while(get_CRStatus(sck_fd) != 0);	// command complete
 1710              		.loc 1 445 0
 1711 00b8 00BF     		nop
 1712              	.L85:
 1713              		.loc 1 445 0 is_stmt 0 discriminator 1
 1714 00ba FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1715 00bc 1846     		mov	r0, r3
 1716 00be FFF7FEFF 		bl	get_CRStatus
 1717 00c2 0346     		mov	r3, r0
 1718 00c4 002B     		cmp	r3, #0
 1719 00c6 F8D1     		bne	.L85
 446:App/STM32F4-Discovery/W5200.c **** 
 447:App/STM32F4-Discovery/W5200.c **** 	// check status
 448:App/STM32F4-Discovery/W5200.c **** 	while(status = get_SRStatus(sck_fd) !=  W5200_Sn_SR_SOCK_ESTABLISHED){
 1720              		.loc 1 448 0 is_stmt 1
 1721 00c8 09E0     		b	.L86
 1722              	.L87:
 449:App/STM32F4-Discovery/W5200.c **** 		if(status == W5200_Sn_SR_SOCK_CLOSED) {
 1723              		.loc 1 449 0
 1724 00ca FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1725 00cc 002B     		cmp	r3, #0
 1726 00ce 06D1     		bne	.L86
 450:App/STM32F4-Discovery/W5200.c **** 			socket_flg[sck_fd] = 0;
 1727              		.loc 1 450 0
 1728 00d0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1729 00d2 0C4A     		ldr	r2, .L89
 1730 00d4 0021     		movs	r1, #0
 1731 00d6 D154     		strb	r1, [r2, r3]
 451:App/STM32F4-Discovery/W5200.c **** 			return -1;
 1732              		.loc 1 451 0
 1733 00d8 4FF0FF33 		mov	r3, #-1
 1734 00dc 0EE0     		b	.L88
 1735              	.L86:
 448:App/STM32F4-Discovery/W5200.c **** 	while(status = get_SRStatus(sck_fd) !=  W5200_Sn_SR_SOCK_ESTABLISHED){
 1736              		.loc 1 448 0 discriminator 1
 1737 00de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1738 00e0 1846     		mov	r0, r3
 1739 00e2 FFF7FEFF 		bl	get_SRStatus
 1740 00e6 0346     		mov	r3, r0
 1741 00e8 172B     		cmp	r3, #23
 1742 00ea 0CBF     		ite	eq
 1743 00ec 0023     		moveq	r3, #0
 1744 00ee 0123     		movne	r3, #1
 1745 00f0 DBB2     		uxtb	r3, r3
 1746 00f2 FB73     		strb	r3, [r7, #15]
 1747 00f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1748 00f6 002B     		cmp	r3, #0
 1749 00f8 E7D1     		bne	.L87
 452:App/STM32F4-Discovery/W5200.c **** 		}
 453:App/STM32F4-Discovery/W5200.c **** 	}
 454:App/STM32F4-Discovery/W5200.c **** 
 455:App/STM32F4-Discovery/W5200.c **** 	
 456:App/STM32F4-Discovery/W5200.c **** 
 457:App/STM32F4-Discovery/W5200.c **** 	return 0;	// connect success complete
 1750              		.loc 1 457 0
 1751 00fa 0023     		movs	r3, #0
 1752              	.L88:
 458:App/STM32F4-Discovery/W5200.c **** }
 1753              		.loc 1 458 0
 1754 00fc 1846     		mov	r0, r3
 1755 00fe 1037     		adds	r7, r7, #16
 1756 0100 BD46     		mov	sp, r7
 1757              		@ sp needed
 1758 0102 80BD     		pop	{r7, pc}
 1759              	.L90:
 1760              		.align	2
 1761              	.L89:
 1762 0104 00000000 		.word	socket_flg
 1763              		.cfi_endproc
 1764              	.LFE128:
 1766              		.section	.text.send,"ax",%progbits
 1767              		.align	2
 1768              		.global	send
 1769              		.thumb
 1770              		.thumb_func
 1772              	send:
 1773              	.LFB129:
 459:App/STM32F4-Discovery/W5200.c **** 
 460:App/STM32F4-Discovery/W5200.c **** /*==========================================================================
 461:App/STM32F4-Discovery/W5200.c **** 	send()	send *buf to  (TCP only)
 462:App/STM32F4-Discovery/W5200.c **** ===========================================================================*/
 463:App/STM32F4-Discovery/W5200.c **** 
 464:App/STM32F4-Discovery/W5200.c **** int	send(uint8_t sck_fd, uint8_t *buf, uint16_t len, uint16_t flag)
 465:App/STM32F4-Discovery/W5200.c **** {
 1774              		.loc 1 465 0
 1775              		.cfi_startproc
 1776              		@ args = 0, pretend = 0, frame = 40
 1777              		@ frame_needed = 1, uses_anonymous_args = 0
 1778 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1779              	.LCFI57:
 1780              		.cfi_def_cfa_offset 28
 1781              		.cfi_offset 4, -28
 1782              		.cfi_offset 5, -24
 1783              		.cfi_offset 6, -20
 1784              		.cfi_offset 7, -16
 1785              		.cfi_offset 8, -12
 1786              		.cfi_offset 9, -8
 1787              		.cfi_offset 14, -4
 1788 0004 8BB0     		sub	sp, sp, #44
 1789              	.LCFI58:
 1790              		.cfi_def_cfa_offset 72
 1791 0006 00AF     		add	r7, sp, #0
 1792              	.LCFI59:
 1793              		.cfi_def_cfa_register 7
 1794 0008 B960     		str	r1, [r7, #8]
 1795 000a 0146     		mov	r1, r0
 1796 000c F973     		strb	r1, [r7, #15]
 1797 000e BA81     		strh	r2, [r7, #12]	@ movhi
 1798 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 466:App/STM32F4-Discovery/W5200.c **** 	uint16_t	send_size;
 467:App/STM32F4-Discovery/W5200.c **** 	uint16_t	write_ptr;
 468:App/STM32F4-Discovery/W5200.c **** 	uint16_t status = get_SRStatus(sck_fd);
 1799              		.loc 1 468 0
 1800 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1801 0014 1846     		mov	r0, r3
 1802 0016 FFF7FEFF 		bl	get_SRStatus
 1803 001a 0346     		mov	r3, r0
 1804 001c BB84     		strh	r3, [r7, #36]	@ movhi
 469:App/STM32F4-Discovery/W5200.c **** 	// check socket asign flag
 470:App/STM32F4-Discovery/W5200.c **** 	if(sck_fd < 0 || sck_fd >= W5200_MAX_SOCKETS ||  socket_flg[sck_fd] != 1) return -1;
 1805              		.loc 1 470 0
 1806 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1807 0020 072B     		cmp	r3, #7
 1808 0022 04D8     		bhi	.L92
 1809              		.loc 1 470 0 is_stmt 0 discriminator 2
 1810 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1811 0026 564A     		ldr	r2, .L103
 1812 0028 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1813 002a 012B     		cmp	r3, #1
 1814 002c 02D0     		beq	.L93
 1815              	.L92:
 1816              		.loc 1 470 0 discriminator 1
 1817 002e 4FF0FF33 		mov	r3, #-1
 1818 0032 A0E0     		b	.L94
 1819              	.L93:
 471:App/STM32F4-Discovery/W5200.c **** 
 472:App/STM32F4-Discovery/W5200.c **** 	// check parameter
 473:App/STM32F4-Discovery/W5200.c **** 	if(buf == NULL || len == 0) return -1;
 1820              		.loc 1 473 0 is_stmt 1
 1821 0034 BB68     		ldr	r3, [r7, #8]
 1822 0036 002B     		cmp	r3, #0
 1823 0038 02D0     		beq	.L95
 1824              		.loc 1 473 0 is_stmt 0 discriminator 2
 1825 003a BB89     		ldrh	r3, [r7, #12]
 1826 003c 002B     		cmp	r3, #0
 1827 003e 02D1     		bne	.L96
 1828              	.L95:
 1829              		.loc 1 473 0 discriminator 1
 1830 0040 4FF0FF33 		mov	r3, #-1
 1831 0044 97E0     		b	.L94
 1832              	.L96:
 474:App/STM32F4-Discovery/W5200.c **** 	
 475:App/STM32F4-Discovery/W5200.c **** 	// check status
 476:App/STM32F4-Discovery/W5200.c **** 	if(get_SRStatus(sck_fd) != W5200_Sn_SR_SOCK_ESTABLISHED) return 0; // closing or fin close wait.
 1833              		.loc 1 476 0 is_stmt 1
 1834 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1835 0048 1846     		mov	r0, r3
 1836 004a FFF7FEFF 		bl	get_SRStatus
 1837 004e 0346     		mov	r3, r0
 1838 0050 172B     		cmp	r3, #23
 1839 0052 01D0     		beq	.L97
 1840              		.loc 1 476 0 is_stmt 0 discriminator 1
 1841 0054 0023     		movs	r3, #0
 1842 0056 8EE0     		b	.L94
 1843              	.L97:
 477:App/STM32F4-Discovery/W5200.c **** 
 478:App/STM32F4-Discovery/W5200.c **** 	// check TX memory free size?
 479:App/STM32F4-Discovery/W5200.c **** 	while((send_size = get_TXFSRStatus(sck_fd)) == 0){
 1844              		.loc 1 479 0 is_stmt 1
 1845 0058 04E0     		b	.L98
 1846              	.L99:
 480:App/STM32F4-Discovery/W5200.c **** 		if(flag == 1) return 0;	// NONE BLOCKING
 1847              		.loc 1 480 0
 1848 005a FB88     		ldrh	r3, [r7, #6]
 1849 005c 012B     		cmp	r3, #1
 1850 005e 01D1     		bne	.L98
 1851              		.loc 1 480 0 is_stmt 0 discriminator 1
 1852 0060 0023     		movs	r3, #0
 1853 0062 88E0     		b	.L94
 1854              	.L98:
 479:App/STM32F4-Discovery/W5200.c **** 	while((send_size = get_TXFSRStatus(sck_fd)) == 0){
 1855              		.loc 1 479 0 is_stmt 1 discriminator 1
 1856 0064 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1857 0066 1846     		mov	r0, r3
 1858 0068 FFF7FEFF 		bl	get_TXFSRStatus
 1859 006c 0346     		mov	r3, r0
 1860 006e FB84     		strh	r3, [r7, #38]	@ movhi
 1861 0070 FB8C     		ldrh	r3, [r7, #38]
 1862 0072 002B     		cmp	r3, #0
 1863 0074 F1D0     		beq	.L99
 481:App/STM32F4-Discovery/W5200.c **** 	}
 482:App/STM32F4-Discovery/W5200.c **** 
 483:App/STM32F4-Discovery/W5200.c **** 	// get write pointer
 484:App/STM32F4-Discovery/W5200.c **** 	write_ptr = get_TXWRStatus(sck_fd);
 1864              		.loc 1 484 0
 1865 0076 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1866 0078 1846     		mov	r0, r3
 1867 007a FFF7FEFF 		bl	get_TXWRStatus
 1868 007e 0346     		mov	r3, r0
 1869 0080 7B84     		strh	r3, [r7, #34]	@ movhi
 485:App/STM32F4-Discovery/W5200.c **** 
 486:App/STM32F4-Discovery/W5200.c **** 	// check write length
 487:App/STM32F4-Discovery/W5200.c **** 	if(send_size > len) send_size = len;
 1870              		.loc 1 487 0
 1871 0082 FA8C     		ldrh	r2, [r7, #38]
 1872 0084 BB89     		ldrh	r3, [r7, #12]
 1873 0086 9A42     		cmp	r2, r3
 1874 0088 01D9     		bls	.L100
 1875              		.loc 1 487 0 is_stmt 0 discriminator 1
 1876 008a BB89     		ldrh	r3, [r7, #12]	@ movhi
 1877 008c FB84     		strh	r3, [r7, #38]	@ movhi
 1878              	.L100:
 488:App/STM32F4-Discovery/W5200.c **** 
 489:App/STM32F4-Discovery/W5200.c **** 	// data write to memory
 490:App/STM32F4-Discovery/W5200.c **** 	write_memory(sck_fd, write_ptr, buf, send_size);
 1879              		.loc 1 490 0 is_stmt 1
 1880 008e F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 1881 0090 7A8C     		ldrh	r2, [r7, #34]
 1882 0092 FB8C     		ldrh	r3, [r7, #38]
 1883 0094 0846     		mov	r0, r1
 1884 0096 1146     		mov	r1, r2
 1885 0098 BA68     		ldr	r2, [r7, #8]
 1886 009a FFF7FEFF 		bl	write_memory
 491:App/STM32F4-Discovery/W5200.c **** 
 492:App/STM32F4-Discovery/W5200.c **** 	// pointer update
 493:App/STM32F4-Discovery/W5200.c **** 	write_ptr += send_size;
 1887              		.loc 1 493 0
 1888 009e 7A8C     		ldrh	r2, [r7, #34]	@ movhi
 1889 00a0 FB8C     		ldrh	r3, [r7, #38]	@ movhi
 1890 00a2 1344     		add	r3, r3, r2
 1891 00a4 7B84     		strh	r3, [r7, #34]	@ movhi
 494:App/STM32F4-Discovery/W5200.c **** 	set_TXWR(sck_fd, write_ptr);
 1892              		.loc 1 494 0
 1893 00a6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1894 00a8 7B8C     		ldrh	r3, [r7, #34]
 1895 00aa 1046     		mov	r0, r2
 1896 00ac 1946     		mov	r1, r3
 1897 00ae FFF7FEFF 		bl	set_TXWR
 495:App/STM32F4-Discovery/W5200.c **** 		
 496:App/STM32F4-Discovery/W5200.c **** 	// test function 
 497:App/STM32F4-Discovery/W5200.c **** 	
 498:App/STM32F4-Discovery/W5200.c **** 
 499:App/STM32F4-Discovery/W5200.c **** 	uint16_t start = get_TXRD(sck_fd);
 1898              		.loc 1 499 0
 1899 00b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1900 00b4 1846     		mov	r0, r3
 1901 00b6 FFF7FEFF 		bl	get_TXRD
 1902 00ba 0346     		mov	r3, r0
 1903 00bc 3B84     		strh	r3, [r7, #32]	@ movhi
 500:App/STM32F4-Discovery/W5200.c **** 	uint16_t end   = get_TXWRStatus(sck_fd); 
 1904              		.loc 1 500 0
 1905 00be FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1906 00c0 1846     		mov	r0, r3
 1907 00c2 FFF7FEFF 		bl	get_TXWRStatus
 1908 00c6 0346     		mov	r3, r0
 1909 00c8 FB83     		strh	r3, [r7, #30]	@ movhi
 501:App/STM32F4-Discovery/W5200.c **** 	uint8_t data [write_ptr-start]; 	
 1910              		.loc 1 501 0
 1911 00ca 7A8C     		ldrh	r2, [r7, #34]
 1912 00cc 3B8C     		ldrh	r3, [r7, #32]
 1913 00ce D11A     		subs	r1, r2, r3
 1914 00d0 6B46     		mov	r3, sp
 1915 00d2 1E46     		mov	r6, r3
 1916 00d4 4B1E     		subs	r3, r1, #1
 1917 00d6 BB61     		str	r3, [r7, #24]
 1918 00d8 0B46     		mov	r3, r1
 1919 00da 1A46     		mov	r2, r3
 1920 00dc 4FF00003 		mov	r3, #0
 1921 00e0 4FEAC309 		lsl	r9, r3, #3
 1922 00e4 49EA5279 		orr	r9, r9, r2, lsr #29
 1923 00e8 4FEAC208 		lsl	r8, r2, #3
 1924 00ec 0B46     		mov	r3, r1
 1925 00ee 1A46     		mov	r2, r3
 1926 00f0 4FF00003 		mov	r3, #0
 1927 00f4 DD00     		lsls	r5, r3, #3
 1928 00f6 45EA5275 		orr	r5, r5, r2, lsr #29
 1929 00fa D400     		lsls	r4, r2, #3
 1930 00fc 0B46     		mov	r3, r1
 1931 00fe 0733     		adds	r3, r3, #7
 1932 0100 DB08     		lsrs	r3, r3, #3
 1933 0102 DB00     		lsls	r3, r3, #3
 1934 0104 ADEB030D 		sub	sp, sp, r3
 1935 0108 6B46     		mov	r3, sp
 1936 010a 0033     		adds	r3, r3, #0
 1937 010c 7B61     		str	r3, [r7, #20]
 502:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(start+0x8000, write_ptr-start );
 1938              		.loc 1 502 0
 1939 010e 3B8C     		ldrh	r3, [r7, #32]	@ movhi
 1940 0110 A3F50043 		sub	r3, r3, #32768
 1941 0114 9AB2     		uxth	r2, r3
 1942 0116 798C     		ldrh	r1, [r7, #34]	@ movhi
 1943 0118 3B8C     		ldrh	r3, [r7, #32]	@ movhi
 1944 011a CB1A     		subs	r3, r1, r3
 1945 011c 9BB2     		uxth	r3, r3
 1946 011e 1046     		mov	r0, r2
 1947 0120 1946     		mov	r1, r3
 1948 0122 FFF7FEFF 		bl	spi_dma_read
 503:App/STM32F4-Discovery/W5200.c **** 	memcpy(data, bufferRX +4, write_ptr-start);
 1949              		.loc 1 503 0
 1950 0126 7A69     		ldr	r2, [r7, #20]
 1951 0128 798C     		ldrh	r1, [r7, #34]
 1952 012a 3B8C     		ldrh	r3, [r7, #32]
 1953 012c CB1A     		subs	r3, r1, r3
 1954 012e 1046     		mov	r0, r2
 1955 0130 1449     		ldr	r1, .L103+4
 1956 0132 1A46     		mov	r2, r3
 1957 0134 FFF7FEFF 		bl	memcpy
 504:App/STM32F4-Discovery/W5200.c **** 
 505:App/STM32F4-Discovery/W5200.c **** 	
 506:App/STM32F4-Discovery/W5200.c **** 	// test function 
 507:App/STM32F4-Discovery/W5200.c **** 	
 508:App/STM32F4-Discovery/W5200.c **** 	// send command
 509:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_CR(sck_fd), W5200_Sn_CR_SEND);
 1958              		.loc 1 509 0
 1959 0138 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1960 013a 9BB2     		uxth	r3, r3
 1961 013c 1B02     		lsls	r3, r3, #8
 1962 013e 9BB2     		uxth	r3, r3
 1963 0140 03F58043 		add	r3, r3, #16384
 1964 0144 0133     		adds	r3, r3, #1
 1965 0146 9BB2     		uxth	r3, r3
 1966 0148 1846     		mov	r0, r3
 1967 014a 2021     		movs	r1, #32
 1968 014c FFF7FEFF 		bl	spi_dma_sendByte
 510:App/STM32F4-Discovery/W5200.c **** 	// wait command complete.
 511:App/STM32F4-Discovery/W5200.c **** 	while(get_CRStatus(sck_fd) != 0);	// 0 value is command complete. 
 1969              		.loc 1 511 0
 1970 0150 00BF     		nop
 1971              	.L101:
 1972              		.loc 1 511 0 is_stmt 0 discriminator 1
 1973 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1974 0154 1846     		mov	r0, r3
 1975 0156 FFF7FEFF 		bl	get_CRStatus
 1976 015a 0346     		mov	r3, r0
 1977 015c 002B     		cmp	r3, #0
 1978 015e F8D1     		bne	.L101
 512:App/STM32F4-Discovery/W5200.c **** 
 513:App/STM32F4-Discovery/W5200.c **** 	// wait sending complete
 514:App/STM32F4-Discovery/W5200.c **** 	while(get_TXRD(sck_fd) != write_ptr);
 1979              		.loc 1 514 0 is_stmt 1
 1980 0160 00BF     		nop
 1981              	.L102:
 1982              		.loc 1 514 0 is_stmt 0 discriminator 1
 1983 0162 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1984 0164 1846     		mov	r0, r3
 1985 0166 FFF7FEFF 		bl	get_TXRD
 1986 016a 0346     		mov	r3, r0
 1987 016c 7A8C     		ldrh	r2, [r7, #34]
 1988 016e 9A42     		cmp	r2, r3
 1989 0170 F7D1     		bne	.L102
 515:App/STM32F4-Discovery/W5200.c **** 
 516:App/STM32F4-Discovery/W5200.c **** 	return send_size;
 1990              		.loc 1 516 0 is_stmt 1
 1991 0172 FB8C     		ldrh	r3, [r7, #38]
 1992 0174 B546     		mov	sp, r6
 1993              	.L94:
 517:App/STM32F4-Discovery/W5200.c **** }
 1994              		.loc 1 517 0
 1995 0176 1846     		mov	r0, r3
 1996 0178 2C37     		adds	r7, r7, #44
 1997 017a BD46     		mov	sp, r7
 1998              		@ sp needed
 1999 017c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 2000              	.L104:
 2001              		.align	2
 2002              	.L103:
 2003 0180 00000000 		.word	socket_flg
 2004 0184 04000000 		.word	bufferRX+4
 2005              		.cfi_endproc
 2006              	.LFE129:
 2008              		.section	.text.recv,"ax",%progbits
 2009              		.align	2
 2010              		.global	recv
 2011              		.thumb
 2012              		.thumb_func
 2014              	recv:
 2015              	.LFB130:
 518:App/STM32F4-Discovery/W5200.c **** 
 519:App/STM32F4-Discovery/W5200.c **** /*==========================================================================
 520:App/STM32F4-Discovery/W5200.c **** 	recv()	receiving data from remote terminal (TCP)
 521:App/STM32F4-Discovery/W5200.c **** 	flag is NONE_BLOCK / BLOCK
 522:App/STM32F4-Discovery/W5200.c **** 	return code is received data size.
 523:App/STM32F4-Discovery/W5200.c **** 	if received disconnectÂ@from peer, size was set to Zero, 
 524:App/STM32F4-Discovery/W5200.c **** ===========================================================================*/
 525:App/STM32F4-Discovery/W5200.c **** 
 526:App/STM32F4-Discovery/W5200.c **** int	recv(uint8_t sck_fd, uint8_t *buf, uint16_t len, uint8_t flag)
 527:App/STM32F4-Discovery/W5200.c **** {
 2016              		.loc 1 527 0
 2017              		.cfi_startproc
 2018              		@ args = 0, pretend = 0, frame = 16
 2019              		@ frame_needed = 1, uses_anonymous_args = 0
 2020 0000 80B5     		push	{r7, lr}
 2021              	.LCFI60:
 2022              		.cfi_def_cfa_offset 8
 2023              		.cfi_offset 7, -8
 2024              		.cfi_offset 14, -4
 2025 0002 84B0     		sub	sp, sp, #16
 2026              	.LCFI61:
 2027              		.cfi_def_cfa_offset 24
 2028 0004 00AF     		add	r7, sp, #0
 2029              	.LCFI62:
 2030              		.cfi_def_cfa_register 7
 2031 0006 3960     		str	r1, [r7]
 2032 0008 0146     		mov	r1, r0
 2033 000a F971     		strb	r1, [r7, #7]
 2034 000c BA80     		strh	r2, [r7, #4]	@ movhi
 2035 000e BB71     		strb	r3, [r7, #6]
 528:App/STM32F4-Discovery/W5200.c **** 	uint16_t	read_len;
 529:App/STM32F4-Discovery/W5200.c **** 	uint16_t	read_ptr;
 530:App/STM32F4-Discovery/W5200.c **** 
 531:App/STM32F4-Discovery/W5200.c **** 	// check asign flag
 532:App/STM32F4-Discovery/W5200.c **** 	if(sck_fd < 0 || sck_fd >= W5200_MAX_SOCKETS ||  socket_flg[sck_fd] != 1) return -1;
 2036              		.loc 1 532 0
 2037 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2038 0012 072B     		cmp	r3, #7
 2039 0014 04D8     		bhi	.L106
 2040              		.loc 1 532 0 is_stmt 0 discriminator 2
 2041 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2042 0018 314A     		ldr	r2, .L115
 2043 001a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2044 001c 012B     		cmp	r3, #1
 2045 001e 02D0     		beq	.L107
 2046              	.L106:
 2047              		.loc 1 532 0 discriminator 1
 2048 0020 4FF0FF33 		mov	r3, #-1
 2049 0024 57E0     		b	.L108
 2050              	.L107:
 533:App/STM32F4-Discovery/W5200.c **** 
 534:App/STM32F4-Discovery/W5200.c **** 	// check parameter
 535:App/STM32F4-Discovery/W5200.c **** 	if(buf == NULL || len == 0) return -1;
 2051              		.loc 1 535 0 is_stmt 1
 2052 0026 3B68     		ldr	r3, [r7]
 2053 0028 002B     		cmp	r3, #0
 2054 002a 02D0     		beq	.L109
 2055              		.loc 1 535 0 is_stmt 0 discriminator 2
 2056 002c BB88     		ldrh	r3, [r7, #4]
 2057 002e 002B     		cmp	r3, #0
 2058 0030 02D1     		bne	.L110
 2059              	.L109:
 2060              		.loc 1 535 0 discriminator 1
 2061 0032 4FF0FF33 		mov	r3, #-1
 2062 0036 4EE0     		b	.L108
 2063              	.L110:
 536:App/STM32F4-Discovery/W5200.c **** 
 537:App/STM32F4-Discovery/W5200.c **** 	// check status
 538:App/STM32F4-Discovery/W5200.c **** 	if(get_SRStatus(sck_fd) != W5200_Sn_SR_SOCK_ESTABLISHED) return 0;	// closing or fin close wait.
 2064              		.loc 1 538 0 is_stmt 1
 2065 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2066 003a 1846     		mov	r0, r3
 2067 003c FFF7FEFF 		bl	get_SRStatus
 2068 0040 0346     		mov	r3, r0
 2069 0042 172B     		cmp	r3, #23
 2070 0044 01D0     		beq	.L111
 2071              		.loc 1 538 0 is_stmt 0 discriminator 1
 2072 0046 0023     		movs	r3, #0
 2073 0048 45E0     		b	.L108
 2074              	.L111:
 539:App/STM32F4-Discovery/W5200.c **** 
 540:App/STM32F4-Discovery/W5200.c **** 	// received data exists?
 541:App/STM32F4-Discovery/W5200.c **** 	while((read_len = get_RXRSR(sck_fd)) == 0){
 2075              		.loc 1 541 0 is_stmt 1
 2076 004a 04E0     		b	.L112
 2077              	.L113:
 542:App/STM32F4-Discovery/W5200.c **** 		if(flag == 1) return 0;	// NONE BLOCKING
 2078              		.loc 1 542 0
 2079 004c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2080 004e 012B     		cmp	r3, #1
 2081 0050 01D1     		bne	.L112
 2082              		.loc 1 542 0 is_stmt 0 discriminator 1
 2083 0052 0023     		movs	r3, #0
 2084 0054 3FE0     		b	.L108
 2085              	.L112:
 541:App/STM32F4-Discovery/W5200.c **** 	while((read_len = get_RXRSR(sck_fd)) == 0){
 2086              		.loc 1 541 0 is_stmt 1 discriminator 1
 2087 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2088 0058 1846     		mov	r0, r3
 2089 005a FFF7FEFF 		bl	get_RXRSR
 2090 005e 0346     		mov	r3, r0
 2091 0060 FB81     		strh	r3, [r7, #14]	@ movhi
 2092 0062 FB89     		ldrh	r3, [r7, #14]
 2093 0064 002B     		cmp	r3, #0
 2094 0066 F1D0     		beq	.L113
 543:App/STM32F4-Discovery/W5200.c **** 	}
 544:App/STM32F4-Discovery/W5200.c **** 
 545:App/STM32F4-Discovery/W5200.c **** 	// set read length
 546:App/STM32F4-Discovery/W5200.c **** 	//if(read_len > len) read_len = len;
 547:App/STM32F4-Discovery/W5200.c **** 
 548:App/STM32F4-Discovery/W5200.c **** 	// get read pointer
 549:App/STM32F4-Discovery/W5200.c **** 	read_ptr = get_RXRD(sck_fd);
 2095              		.loc 1 549 0
 2096 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2097 006a 1846     		mov	r0, r3
 2098 006c FFF7FEFF 		bl	get_RXRD
 2099 0070 0346     		mov	r3, r0
 2100 0072 BB81     		strh	r3, [r7, #12]	@ movhi
 550:App/STM32F4-Discovery/W5200.c **** 
 551:App/STM32F4-Discovery/W5200.c **** 	// read from RX memory
 552:App/STM32F4-Discovery/W5200.c **** 	read_memory(sck_fd, read_ptr, buf, read_len < len ? read_len: len);
 2101              		.loc 1 552 0
 2102 0074 BA88     		ldrh	r2, [r7, #4]
 2103 0076 FB89     		ldrh	r3, [r7, #14]
 2104 0078 9A42     		cmp	r2, r3
 2105 007a 38BF     		it	cc
 2106 007c 1346     		movcc	r3, r2
 2107 007e 9BB2     		uxth	r3, r3
 2108 0080 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 2109 0082 BA89     		ldrh	r2, [r7, #12]
 2110 0084 0846     		mov	r0, r1
 2111 0086 1146     		mov	r1, r2
 2112 0088 3A68     		ldr	r2, [r7]
 2113 008a FFF7FEFF 		bl	read_memory
 553:App/STM32F4-Discovery/W5200.c **** 
 554:App/STM32F4-Discovery/W5200.c **** 	// update pointer
 555:App/STM32F4-Discovery/W5200.c **** 	read_ptr += read_len;
 2114              		.loc 1 555 0
 2115 008e BA89     		ldrh	r2, [r7, #12]	@ movhi
 2116 0090 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2117 0092 1344     		add	r3, r3, r2
 2118 0094 BB81     		strh	r3, [r7, #12]	@ movhi
 556:App/STM32F4-Discovery/W5200.c **** 	set_RXRD(sck_fd, read_ptr);
 2119              		.loc 1 556 0
 2120 0096 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2121 0098 BB89     		ldrh	r3, [r7, #12]
 2122 009a 1046     		mov	r0, r2
 2123 009c 1946     		mov	r1, r3
 2124 009e FFF7FEFF 		bl	set_RXRD
 557:App/STM32F4-Discovery/W5200.c **** 
 558:App/STM32F4-Discovery/W5200.c **** 	// recive command
 559:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_CR(sck_fd), W5200_Sn_CR_RECV);
 2125              		.loc 1 559 0
 2126 00a2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2127 00a4 9BB2     		uxth	r3, r3
 2128 00a6 1B02     		lsls	r3, r3, #8
 2129 00a8 9BB2     		uxth	r3, r3
 2130 00aa 03F58043 		add	r3, r3, #16384
 2131 00ae 0133     		adds	r3, r3, #1
 2132 00b0 9BB2     		uxth	r3, r3
 2133 00b2 1846     		mov	r0, r3
 2134 00b4 4021     		movs	r1, #64
 2135 00b6 FFF7FEFF 		bl	spi_dma_sendByte
 560:App/STM32F4-Discovery/W5200.c **** 	// wait command complete.
 561:App/STM32F4-Discovery/W5200.c **** 	while(get_CRStatus(sck_fd) != 0);	// 0 value is command complete. 
 2136              		.loc 1 561 0
 2137 00ba 00BF     		nop
 2138              	.L114:
 2139              		.loc 1 561 0 is_stmt 0 discriminator 1
 2140 00bc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2141 00be 1846     		mov	r0, r3
 2142 00c0 FFF7FEFF 		bl	get_CRStatus
 2143 00c4 0346     		mov	r3, r0
 2144 00c6 002B     		cmp	r3, #0
 2145 00c8 F8D1     		bne	.L114
 562:App/STM32F4-Discovery/W5200.c **** 	
 563:App/STM32F4-Discovery/W5200.c **** 
 564:App/STM32F4-Discovery/W5200.c ****  	return	(read_len < len ? read_len: len);
 2146              		.loc 1 564 0 is_stmt 1
 2147 00ca BA88     		ldrh	r2, [r7, #4]
 2148 00cc FB89     		ldrh	r3, [r7, #14]
 2149 00ce 9A42     		cmp	r2, r3
 2150 00d0 38BF     		it	cc
 2151 00d2 1346     		movcc	r3, r2
 2152 00d4 9BB2     		uxth	r3, r3
 2153              	.L108:
 565:App/STM32F4-Discovery/W5200.c **** }
 2154              		.loc 1 565 0
 2155 00d6 1846     		mov	r0, r3
 2156 00d8 1037     		adds	r7, r7, #16
 2157 00da BD46     		mov	sp, r7
 2158              		@ sp needed
 2159 00dc 80BD     		pop	{r7, pc}
 2160              	.L116:
 2161 00de 00BF     		.align	2
 2162              	.L115:
 2163 00e0 00000000 		.word	socket_flg
 2164              		.cfi_endproc
 2165              	.LFE130:
 2167              		.section	.text.listen,"ax",%progbits
 2168              		.align	2
 2169              		.global	listen
 2170              		.thumb
 2171              		.thumb_func
 2173              	listen:
 2174              	.LFB131:
 566:App/STM32F4-Discovery/W5200.c **** 
 567:App/STM32F4-Discovery/W5200.c **** 
 568:App/STM32F4-Discovery/W5200.c **** int	listen(int sck_fd)
 569:App/STM32F4-Discovery/W5200.c **** {
 2175              		.loc 1 569 0
 2176              		.cfi_startproc
 2177              		@ args = 0, pretend = 0, frame = 16
 2178              		@ frame_needed = 1, uses_anonymous_args = 0
 2179 0000 80B5     		push	{r7, lr}
 2180              	.LCFI63:
 2181              		.cfi_def_cfa_offset 8
 2182              		.cfi_offset 7, -8
 2183              		.cfi_offset 14, -4
 2184 0002 84B0     		sub	sp, sp, #16
 2185              	.LCFI64:
 2186              		.cfi_def_cfa_offset 24
 2187 0004 00AF     		add	r7, sp, #0
 2188              	.LCFI65:
 2189              		.cfi_def_cfa_register 7
 2190 0006 7860     		str	r0, [r7, #4]
 570:App/STM32F4-Discovery/W5200.c **** 	// check socket asign flag
 571:App/STM32F4-Discovery/W5200.c **** 	if(sck_fd < 0 || sck_fd >=W5200_MAX_SOCKETS||  socket_flg[sck_fd] != 1) return -1;
 2191              		.loc 1 571 0
 2192 0008 7B68     		ldr	r3, [r7, #4]
 2193 000a 002B     		cmp	r3, #0
 2194 000c 08DB     		blt	.L118
 2195              		.loc 1 571 0 is_stmt 0 discriminator 2
 2196 000e 7B68     		ldr	r3, [r7, #4]
 2197 0010 072B     		cmp	r3, #7
 2198 0012 05DC     		bgt	.L118
 2199              		.loc 1 571 0 discriminator 1
 2200 0014 224A     		ldr	r2, .L125
 2201 0016 7B68     		ldr	r3, [r7, #4]
 2202 0018 1344     		add	r3, r3, r2
 2203 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2204 001c 012B     		cmp	r3, #1
 2205 001e 02D0     		beq	.L119
 2206              	.L118:
 2207 0020 4FF0FF33 		mov	r3, #-1
 2208 0024 38E0     		b	.L124
 2209              	.L119:
 572:App/STM32F4-Discovery/W5200.c **** 
 573:App/STM32F4-Discovery/W5200.c **** 	// LISTEN start from INIT only.
 574:App/STM32F4-Discovery/W5200.c **** 	if(get_SRStatus(sck_fd)  != W5200_Sn_SR_SOCK_INIT) return -1;
 2210              		.loc 1 574 0 is_stmt 1
 2211 0026 7B68     		ldr	r3, [r7, #4]
 2212 0028 DBB2     		uxtb	r3, r3
 2213 002a 1846     		mov	r0, r3
 2214 002c FFF7FEFF 		bl	get_SRStatus
 2215 0030 0346     		mov	r3, r0
 2216 0032 132B     		cmp	r3, #19
 2217 0034 02D0     		beq	.L121
 2218              		.loc 1 574 0 is_stmt 0 discriminator 1
 2219 0036 4FF0FF33 		mov	r3, #-1
 2220 003a 2DE0     		b	.L124
 2221              	.L121:
 575:App/STM32F4-Discovery/W5200.c **** 
 576:App/STM32F4-Discovery/W5200.c **** 
 577:App/STM32F4-Discovery/W5200.c **** 	uint8_t b;
 578:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_IR(sck_fd), 1);
 2222              		.loc 1 578 0 is_stmt 1
 2223 003c 7B68     		ldr	r3, [r7, #4]
 2224 003e 9BB2     		uxth	r3, r3
 2225 0040 1B02     		lsls	r3, r3, #8
 2226 0042 9BB2     		uxth	r3, r3
 2227 0044 03F58043 		add	r3, r3, #16384
 2228 0048 0233     		adds	r3, r3, #2
 2229 004a 9BB2     		uxth	r3, r3
 2230 004c 1846     		mov	r0, r3
 2231 004e 0121     		movs	r1, #1
 2232 0050 FFF7FEFF 		bl	spi_dma_read
 579:App/STM32F4-Discovery/W5200.c **** 	memcpy(&b, bufferRX + 4, 1);
 2233              		.loc 1 579 0
 2234 0054 134B     		ldr	r3, .L125+4
 2235 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2236 0058 FB73     		strb	r3, [r7, #15]
 580:App/STM32F4-Discovery/W5200.c **** 
 581:App/STM32F4-Discovery/W5200.c **** 	// CONNECT command
 582:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_CR(sck_fd), W5200_Sn_CR_LISTEN);
 2237              		.loc 1 582 0
 2238 005a 7B68     		ldr	r3, [r7, #4]
 2239 005c 9BB2     		uxth	r3, r3
 2240 005e 1B02     		lsls	r3, r3, #8
 2241 0060 9BB2     		uxth	r3, r3
 2242 0062 03F58043 		add	r3, r3, #16384
 2243 0066 0133     		adds	r3, r3, #1
 2244 0068 9BB2     		uxth	r3, r3
 2245 006a 1846     		mov	r0, r3
 2246 006c 0221     		movs	r1, #2
 2247 006e FFF7FEFF 		bl	spi_dma_sendByte
 583:App/STM32F4-Discovery/W5200.c **** 	while(get_CRStatus(sck_fd) != 0);	// 0 value is command complete. 
 2248              		.loc 1 583 0
 2249 0072 00BF     		nop
 2250              	.L122:
 2251              		.loc 1 583 0 is_stmt 0 discriminator 1
 2252 0074 7B68     		ldr	r3, [r7, #4]
 2253 0076 DBB2     		uxtb	r3, r3
 2254 0078 1846     		mov	r0, r3
 2255 007a FFF7FEFF 		bl	get_CRStatus
 2256 007e 0346     		mov	r3, r0
 2257 0080 002B     		cmp	r3, #0
 2258 0082 F7D1     		bne	.L122
 584:App/STM32F4-Discovery/W5200.c **** 
 585:App/STM32F4-Discovery/W5200.c **** 	// wait for status change to LISTEN
 586:App/STM32F4-Discovery/W5200.c **** 	while(get_SRStatus(sck_fd) != W5200_Sn_SR_SOCK_LISTEN);
 2259              		.loc 1 586 0 is_stmt 1
 2260 0084 00BF     		nop
 2261              	.L123:
 2262              		.loc 1 586 0 is_stmt 0 discriminator 1
 2263 0086 7B68     		ldr	r3, [r7, #4]
 2264 0088 DBB2     		uxtb	r3, r3
 2265 008a 1846     		mov	r0, r3
 2266 008c FFF7FEFF 		bl	get_SRStatus
 2267 0090 0346     		mov	r3, r0
 2268 0092 142B     		cmp	r3, #20
 2269 0094 F7D1     		bne	.L123
 587:App/STM32F4-Discovery/W5200.c **** 	 
 588:App/STM32F4-Discovery/W5200.c **** 	return 0;	// listen success complete
 2270              		.loc 1 588 0 is_stmt 1
 2271 0096 0023     		movs	r3, #0
 2272              	.L124:
 589:App/STM32F4-Discovery/W5200.c **** }
 2273              		.loc 1 589 0
 2274 0098 1846     		mov	r0, r3
 2275 009a 1037     		adds	r7, r7, #16
 2276 009c BD46     		mov	sp, r7
 2277              		@ sp needed
 2278 009e 80BD     		pop	{r7, pc}
 2279              	.L126:
 2280              		.align	2
 2281              	.L125:
 2282 00a0 00000000 		.word	socket_flg
 2283 00a4 04000000 		.word	bufferRX+4
 2284              		.cfi_endproc
 2285              	.LFE131:
 2287              		.section	.text.locate_interrupt,"ax",%progbits
 2288              		.align	2
 2289              		.global	locate_interrupt
 2290              		.thumb
 2291              		.thumb_func
 2293              	locate_interrupt:
 2294              	.LFB132:
 590:App/STM32F4-Discovery/W5200.c **** 
 591:App/STM32F4-Discovery/W5200.c **** 
 592:App/STM32F4-Discovery/W5200.c **** 
 593:App/STM32F4-Discovery/W5200.c **** void locate_interrupt()
 594:App/STM32F4-Discovery/W5200.c **** {
 2295              		.loc 1 594 0
 2296              		.cfi_startproc
 2297              		@ args = 0, pretend = 0, frame = 8
 2298              		@ frame_needed = 1, uses_anonymous_args = 0
 2299 0000 80B5     		push	{r7, lr}
 2300              	.LCFI66:
 2301              		.cfi_def_cfa_offset 8
 2302              		.cfi_offset 7, -8
 2303              		.cfi_offset 14, -4
 2304 0002 82B0     		sub	sp, sp, #8
 2305              	.LCFI67:
 2306              		.cfi_def_cfa_offset 16
 2307 0004 00AF     		add	r7, sp, #0
 2308              	.LCFI68:
 2309              		.cfi_def_cfa_register 7
 595:App/STM32F4-Discovery/W5200.c **** 	uint8_t code = 0x4; 
 2310              		.loc 1 595 0
 2311 0006 0423     		movs	r3, #4
 2312 0008 FB71     		strb	r3, [r7, #7]
 596:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_IMR2, 1);
 2313              		.loc 1 596 0
 2314 000a 3620     		movs	r0, #54
 2315 000c 0121     		movs	r1, #1
 2316 000e FFF7FEFF 		bl	spi_dma_read
 597:App/STM32F4-Discovery/W5200.c **** 	memcpy(&code, bufferRX + 4, 1);
 2317              		.loc 1 597 0
 2318 0012 154B     		ldr	r3, .L135
 2319 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2320 0016 FB71     		strb	r3, [r7, #7]
 598:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_IR(code), 1);
 2321              		.loc 1 598 0
 2322 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2323 001a 1B02     		lsls	r3, r3, #8
 2324 001c 9BB2     		uxth	r3, r3
 2325 001e 03F58043 		add	r3, r3, #16384
 2326 0022 0233     		adds	r3, r3, #2
 2327 0024 9BB2     		uxth	r3, r3
 2328 0026 1846     		mov	r0, r3
 2329 0028 0121     		movs	r1, #1
 2330 002a FFF7FEFF 		bl	spi_dma_read
 599:App/STM32F4-Discovery/W5200.c **** 	memcpy(&code, bufferRX +4 , 1);
 2331              		.loc 1 599 0
 2332 002e 0E4B     		ldr	r3, .L135
 2333 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2334 0032 FB71     		strb	r3, [r7, #7]
 600:App/STM32F4-Discovery/W5200.c ****        
 601:App/STM32F4-Discovery/W5200.c **** 	
 602:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_IR(0x0), 0xff);
 2335              		.loc 1 602 0
 2336 0034 44F20200 		movw	r0, #16386
 2337 0038 FF21     		movs	r1, #255
 2338 003a FFF7FEFF 		bl	spi_dma_sendByte
 603:App/STM32F4-Discovery/W5200.c **** 	switch (code )
 2339              		.loc 1 603 0
 2340 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2341 0040 022B     		cmp	r3, #2
 2342 0042 0AD0     		beq	.L133
 2343 0044 042B     		cmp	r3, #4
 2344 0046 02D0     		beq	.L130
 2345 0048 012B     		cmp	r3, #1
 2346 004a 08D0     		beq	.L134
 604:App/STM32F4-Discovery/W5200.c **** 	{
 605:App/STM32F4-Discovery/W5200.c **** 		case 0x1: 
 606:App/STM32F4-Discovery/W5200.c **** 			// connection established 
 607:App/STM32F4-Discovery/W5200.c **** 			// do nothing wait for input. 
 608:App/STM32F4-Discovery/W5200.c **** 			break;
 609:App/STM32F4-Discovery/W5200.c **** 		case 0x2:
 610:App/STM32F4-Discovery/W5200.c **** 			break;
 611:App/STM32F4-Discovery/W5200.c **** 		case 0x4:
 612:App/STM32F4-Discovery/W5200.c **** 			vTaskResume(set_macTaskHandle); 
 613:App/STM32F4-Discovery/W5200.c **** 			break;
 614:App/STM32F4-Discovery/W5200.c **** 		default:
 615:App/STM32F4-Discovery/W5200.c **** 			break;		
 2347              		.loc 1 615 0
 2348 004c 08E0     		b	.L127
 2349              	.L130:
 612:App/STM32F4-Discovery/W5200.c **** 			vTaskResume(set_macTaskHandle); 
 2350              		.loc 1 612 0
 2351 004e 074B     		ldr	r3, .L135+4
 2352 0050 1B68     		ldr	r3, [r3]
 2353 0052 1846     		mov	r0, r3
 2354 0054 FFF7FEFF 		bl	vTaskResume
 613:App/STM32F4-Discovery/W5200.c **** 			break;
 2355              		.loc 1 613 0
 2356 0058 02E0     		b	.L127
 2357              	.L133:
 610:App/STM32F4-Discovery/W5200.c **** 			break;
 2358              		.loc 1 610 0
 2359 005a 00BF     		nop
 2360 005c 00E0     		b	.L127
 2361              	.L134:
 608:App/STM32F4-Discovery/W5200.c **** 			break;
 2362              		.loc 1 608 0
 2363 005e 00BF     		nop
 2364              	.L127:
 616:App/STM32F4-Discovery/W5200.c **** 	}
 617:App/STM32F4-Discovery/W5200.c **** }
 2365              		.loc 1 617 0
 2366 0060 0837     		adds	r7, r7, #8
 2367 0062 BD46     		mov	sp, r7
 2368              		@ sp needed
 2369 0064 80BD     		pop	{r7, pc}
 2370              	.L136:
 2371 0066 00BF     		.align	2
 2372              	.L135:
 2373 0068 04000000 		.word	bufferRX+4
 2374 006c 00000000 		.word	set_macTaskHandle
 2375              		.cfi_endproc
 2376              	.LFE132:
 2378              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
 2379              		.align	2
 2380              		.global	EXTI4_IRQHandler
 2381              		.thumb
 2382              		.thumb_func
 2384              	EXTI4_IRQHandler:
 2385              	.LFB133:
 618:App/STM32F4-Discovery/W5200.c **** 
 619:App/STM32F4-Discovery/W5200.c **** 
 620:App/STM32F4-Discovery/W5200.c **** void EXTI4_IRQHandler(void) //EXTI0 ISR
 621:App/STM32F4-Discovery/W5200.c **** {
 2386              		.loc 1 621 0
 2387              		.cfi_startproc
 2388              		@ args = 0, pretend = 0, frame = 0
 2389              		@ frame_needed = 1, uses_anonymous_args = 0
 2390 0000 80B5     		push	{r7, lr}
 2391              	.LCFI69:
 2392              		.cfi_def_cfa_offset 8
 2393              		.cfi_offset 7, -8
 2394              		.cfi_offset 14, -4
 2395 0002 00AF     		add	r7, sp, #0
 2396              	.LCFI70:
 2397              		.cfi_def_cfa_register 7
 622:App/STM32F4-Discovery/W5200.c ****  
 623:App/STM32F4-Discovery/W5200.c **** 	if(EXTI_GetITStatus(WIZ_IT_EXTI_LINE) != RESET) //check if EXTI line is asserted
 2398              		.loc 1 623 0
 2399 0004 1020     		movs	r0, #16
 2400 0006 FFF7FEFF 		bl	EXTI_GetITStatus
 2401 000a 0346     		mov	r3, r0
 2402 000c 002B     		cmp	r3, #0
 2403 000e 04D0     		beq	.L137
 624:App/STM32F4-Discovery/W5200.c **** 	{
 625:App/STM32F4-Discovery/W5200.c **** 		locate_interrupt();	
 2404              		.loc 1 625 0
 2405 0010 FFF7FEFF 		bl	locate_interrupt
 626:App/STM32F4-Discovery/W5200.c **** 		EXTI_ClearFlag(WIZ_IT_EXTI_LINE); //clear interrupt
 2406              		.loc 1 626 0
 2407 0014 1020     		movs	r0, #16
 2408 0016 FFF7FEFF 		bl	EXTI_ClearFlag
 2409              	.L137:
 627:App/STM32F4-Discovery/W5200.c ****  	
 628:App/STM32F4-Discovery/W5200.c **** 	}
 629:App/STM32F4-Discovery/W5200.c **** }
 2410              		.loc 1 629 0
 2411 001a 80BD     		pop	{r7, pc}
 2412              		.cfi_endproc
 2413              	.LFE133:
 2415              		.section	.text.set_macTask,"ax",%progbits
 2416              		.align	2
 2417              		.global	set_macTask
 2418              		.thumb
 2419              		.thumb_func
 2421              	set_macTask:
 2422              	.LFB134:
 630:App/STM32F4-Discovery/W5200.c **** 
 631:App/STM32F4-Discovery/W5200.c **** 
 632:App/STM32F4-Discovery/W5200.c **** void set_macTask(void *pvParameters)
 633:App/STM32F4-Discovery/W5200.c **** {
 2423              		.loc 1 633 0
 2424              		.cfi_startproc
 2425              		@ args = 0, pretend = 0, frame = 56
 2426              		@ frame_needed = 1, uses_anonymous_args = 0
 2427 0000 80B5     		push	{r7, lr}
 2428              	.LCFI71:
 2429              		.cfi_def_cfa_offset 8
 2430              		.cfi_offset 7, -8
 2431              		.cfi_offset 14, -4
 2432 0002 8EB0     		sub	sp, sp, #56
 2433              	.LCFI72:
 2434              		.cfi_def_cfa_offset 64
 2435 0004 00AF     		add	r7, sp, #0
 2436              	.LCFI73:
 2437              		.cfi_def_cfa_register 7
 2438 0006 7860     		str	r0, [r7, #4]
 2439              	.L140:
 2440              	.LBB2:
 634:App/STM32F4-Discovery/W5200.c **** 
 635:App/STM32F4-Discovery/W5200.c **** 	for( ;; )
 636:App/STM32F4-Discovery/W5200.c ****         {
 637:App/STM32F4-Discovery/W5200.c **** 		uint8_t	buf[20], buf1[20]; 
 638:App/STM32F4-Discovery/W5200.c **** 		int len; 
 639:App/STM32F4-Discovery/W5200.c **** 
 640:App/STM32F4-Discovery/W5200.c **** 		/*we are now listening
 641:App/STM32F4-Discovery/W5200.c **** 		suspend task set_macTask()*/
 642:App/STM32F4-Discovery/W5200.c **** 		vTaskSuspend(NULL);
 2441              		.loc 1 642 0 discriminator 1
 2442 0008 0020     		movs	r0, #0
 2443 000a FFF7FEFF 		bl	vTaskSuspend
 643:App/STM32F4-Discovery/W5200.c **** 		
 644:App/STM32F4-Discovery/W5200.c **** 		// interrupt on W5200 occured 
 645:App/STM32F4-Discovery/W5200.c **** 		// receive data 
 646:App/STM32F4-Discovery/W5200.c **** 		len = recv(socket_0, buf, 20, 0);
 2444              		.loc 1 646 0 discriminator 1
 2445 000e 0B4B     		ldr	r3, .L141
 2446 0010 1B68     		ldr	r3, [r3]
 2447 0012 DAB2     		uxtb	r2, r3
 2448 0014 07F12003 		add	r3, r7, #32
 2449 0018 1046     		mov	r0, r2
 2450 001a 1946     		mov	r1, r3
 2451 001c 1422     		movs	r2, #20
 2452 001e 0023     		movs	r3, #0
 2453 0020 FFF7FEFF 		bl	recv
 2454 0024 7863     		str	r0, [r7, #52]
 647:App/STM32F4-Discovery/W5200.c **** 		
 648:App/STM32F4-Discovery/W5200.c **** 		// proces data with CLI 
 649:App/STM32F4-Discovery/W5200.c **** 		
 650:App/STM32F4-Discovery/W5200.c **** 		FreeRTOS_CLIProcessCommand ( buf, buf1, 15);
 2455              		.loc 1 650 0 discriminator 1
 2456 0026 07F12002 		add	r2, r7, #32
 2457 002a 07F10C03 		add	r3, r7, #12
 2458 002e 1046     		mov	r0, r2
 2459 0030 1946     		mov	r1, r3
 2460 0032 0F22     		movs	r2, #15
 2461 0034 FFF7FEFF 		bl	FreeRTOS_CLIProcessCommand
 2462              	.LBE2:
 651:App/STM32F4-Discovery/W5200.c **** 
 652:App/STM32F4-Discovery/W5200.c **** 		
 653:App/STM32F4-Discovery/W5200.c **** 
 654:App/STM32F4-Discovery/W5200.c **** 		
 655:App/STM32F4-Discovery/W5200.c **** 	}	
 2463              		.loc 1 655 0 discriminator 1
 2464 0038 E6E7     		b	.L140
 2465              	.L142:
 2466 003a 00BF     		.align	2
 2467              	.L141:
 2468 003c 00000000 		.word	socket_0
 2469              		.cfi_endproc
 2470              	.LFE134:
 2472              		.text
 2473              	.Letext0:
 2474              		.file 2 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/machine/_default_
 2475              		.file 3 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/stdint.h"
 2476              		.file 4 "App/STM32F4-Discovery/Libraries/CMSIS/ST/STM32F4xx/Include/stm32f4xx.h"
 2477              		.file 5 "Source/portable/GCC/ARM_CM4F/portmacro.h"
 2478              		.file 6 "Source/include/task.h"
 2479              		.file 7 "Source/include/queue.h"
 2480              		.file 8 "Source/include/semphr.h"
 2481              		.file 9 "App/STM32F4-Discovery/main.h"
 2482              		.file 10 "App/STM32F4-Discovery/Libraries/CMSIS/Include/core_cm4.h"
 2483              		.file 11 "App/STM32F4-Discovery/spi.h"
 2484              		.file 12 "App/STM32F4-Discovery/W5200.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 W5200.c
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:20     .rodata.revision:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:23     .rodata.revision:0000000000000000 revision
                            *COM*:0000000000000004 xSemaphoreDMASPI
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:27     .bss.xHigherPriorityTaskWoken:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:30     .bss.xHigherPriorityTaskWoken:0000000000000000 xHigherPriorityTaskWoken
                            *COM*:0000000000000004 xSmphrUSART
                            *COM*:0000000000000004 setSpeedHandle
                            *COM*:0000000000000004 motorHBHandle
                            *COM*:0000000000000004 QSpd_handle
                            *COM*:0000000000000004 QStatus_handle
                            *COM*:0000000000000004 socket_0
                            *COM*:00000000000007d0 bufferTX
                            *COM*:00000000000007d0 bufferRX
                            *COM*:0000000000000004 bufferRXidx
                            *COM*:0000000000000004 bufferTXidx
                            *COM*:0000000000000004 dat_lengthRX
                            *COM*:0000000000000004 dat_lengthTX
                            *COM*:0000000000000004 set_macTaskHandle
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:46     .rodata.RAMSIZE_TABLE:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:49     .rodata.RAMSIZE_TABLE:0000000000000000 RAMSIZE_TABLE
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:69     .bss.socket_table:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:72     .bss.socket_table:0000000000000000 socket_table
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:75     .bss.socket_flg:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:78     .bss.socket_flg:0000000000000000 socket_flg
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:81     .rodata.socket_open_status:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:84     .rodata.socket_open_status:0000000000000000 socket_open_status
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:92     .rodata:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:119    .text.init_W5200:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:124    .text.init_W5200:0000000000000000 init_W5200
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:429    .text.W5200_configure_network:0000000000000000 W5200_configure_network
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:347    .text.W5200_set_hardware_address:0000000000000000 W5200_set_hardware_address
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:1279   .text.socket:0000000000000000 socket
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:2173   .text.listen:0000000000000000 listen
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:330    .text.init_W5200:0000000000000178 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:342    .text.W5200_set_hardware_address:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:379    .text.W5200_get_hardware_address:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:384    .text.W5200_get_hardware_address:0000000000000000 W5200_get_hardware_address
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:419    .text.W5200_get_hardware_address:0000000000000020 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:424    .text.W5200_configure_network:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:473    .text.W5200_get_ipaddress:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:478    .text.W5200_get_ipaddress:0000000000000000 W5200_get_ipaddress
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:513    .text.W5200_get_ipaddress:0000000000000020 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:518    .text.get_CRStatus:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:523    .text.get_CRStatus:0000000000000000 get_CRStatus
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:568    .text.get_CRStatus:0000000000000034 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:573    .text.get_SRStatus:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:578    .text.get_SRStatus:0000000000000000 get_SRStatus
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:623    .text.get_SRStatus:0000000000000034 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:628    .text.get_TXFSRStatus:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:633    .text.get_TXFSRStatus:0000000000000000 get_TXFSRStatus
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:685    .text.get_TXFSRStatus:0000000000000044 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:690    .text.get_TXWRStatus:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:695    .text.get_TXWRStatus:0000000000000000 get_TXWRStatus
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:747    .text.get_TXWRStatus:0000000000000044 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:752    .text.get_TXRD:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:757    .text.get_TXRD:0000000000000000 get_TXRD
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:809    .text.get_TXRD:0000000000000044 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:814    .text.set_TXWR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:819    .text.set_TXWR:0000000000000000 set_TXWR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:861    .text.get_RXRSR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:866    .text.get_RXRSR:0000000000000000 get_RXRSR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:918    .text.get_RXRSR:0000000000000044 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:923    .text.get_RXRD:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:928    .text.get_RXRD:0000000000000000 get_RXRD
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:980    .text.get_RXRD:0000000000000044 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:985    .text.set_RXRD:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:990    .text.set_RXRD:0000000000000000 set_RXRD
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:1032   .text.write_memory:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:1037   .text.write_memory:0000000000000000 write_memory
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:1148   .text.read_memory:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:1153   .text.read_memory:0000000000000000 read_memory
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:1269   .text.read_memory:00000000000000bc $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:1274   .text.socket:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:1489   .text.socket:000000000000014c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:1494   .text.closesocket:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:1499   .text.closesocket:0000000000000000 closesocket
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:1587   .text.closesocket:0000000000000078 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:1592   .text.connect:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:1597   .text.connect:0000000000000000 connect
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:1762   .text.connect:0000000000000104 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:1767   .text.send:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:1772   .text.send:0000000000000000 send
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:2003   .text.send:0000000000000180 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:2009   .text.recv:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:2014   .text.recv:0000000000000000 recv
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:2163   .text.recv:00000000000000e0 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:2168   .text.listen:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:2282   .text.listen:00000000000000a0 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:2288   .text.locate_interrupt:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:2293   .text.locate_interrupt:0000000000000000 locate_interrupt
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:2373   .text.locate_interrupt:0000000000000068 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:2379   .text.EXTI4_IRQHandler:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:2384   .text.EXTI4_IRQHandler:0000000000000000 EXTI4_IRQHandler
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:2416   .text.set_macTask:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:2421   .text.set_macTask:0000000000000000 set_macTask
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccd6eqGb.s:2468   .text.set_macTask:000000000000003c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
xQueueGenericCreate
xTaskGetTickCount
vTaskDelay
spi_dma_sendByte
vTaskDelayUntil
vTaskDelete
spi_dma_send
spi_dma_read
memcpy
spi_dma_send2B
vTaskResume
EXTI_GetITStatus
EXTI_ClearFlag
vTaskSuspend
FreeRTOS_CLIProcessCommand
