   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"W5200.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	xSemaphoreDMASPI,4,4
  20              		.comm	xSmphrUSART,4,4
  21              		.comm	xSemaphoreREADLEN,4,4
  22              		.comm	motorHeartBeatHandle,4,4
  23              		.comm	motorHBHandle,4,4
  24              		.comm	QSpd_handle,4,4
  25              		.comm	QTCP_handle,4,4
  26              		.comm	socket_0,4,4
  27              		.comm	bufferTX,2000,4
  28              		.comm	bufferRX,2000,4
  29              		.comm	bufferRXidx,4,4
  30              		.comm	bufferTXidx,4,4
  31              		.comm	dat_lengthRX,4,4
  32              		.comm	dat_lengthTX,4,4
  33              		.comm	set_macTaskHandle,4,4
  34              		.section	.rodata.RAMSIZE_TABLE,"a",%progbits
  35              		.align	2
  38              	RAMSIZE_TABLE:
  39 0000 00000000 		.word	0
  40 0004 00000000 		.word	0
  41 0008 00200000 		.word	8192
  42 000c 08000000 		.word	8
  43 0010 00200000 		.word	8192
  44 0014 08000000 		.word	8
  45 0018 00100000 		.word	4096
  46 001c 04000000 		.word	4
  47 0020 00100000 		.word	4096
  48 0024 04000000 		.word	4
  49 0028 00080000 		.word	2048
  50 002c 02000000 		.word	2
  51 0030 00080000 		.word	2048
  52 0034 02000000 		.word	2
  53 0038 00080000 		.word	2048
  54 003c 02000000 		.word	2
  55 0040 00080000 		.word	2048
  56 0044 02000000 		.word	2
  57              		.section	.bss.socket_table,"aw",%nobits
  58              		.align	2
  61              	socket_table:
  62 0000 00000000 		.space	64
  62      00000000 
  62      00000000 
  62      00000000 
  62      00000000 
  63              		.section	.bss.socket_flg,"aw",%nobits
  64              		.align	2
  67              	socket_flg:
  68 0000 00000000 		.space	8
  68      00000000 
  69              		.section	.bss.telegram,"aw",%nobits
  70              		.align	2
  73              	telegram:
  74 0000 00000000 		.space	28
  74      00000000 
  74      00000000 
  74      00000000 
  74      00000000 
  75              		.section	.rodata.socket_open_status,"a",%progbits
  76              		.align	2
  79              	socket_open_status:
  80 0000 00       		.byte	0
  81 0001 13       		.byte	19
  82 0002 22       		.byte	34
  83 0003 32       		.byte	50
  84 0004 42       		.byte	66
  85 0005 5F       		.byte	95
  86 0006 0000     		.section	.rodata
  87              		.align	2
  88              	.LC0:
  89 0000 DD       		.byte	-35
  90 0001 AA       		.byte	-86
  91 0002 BB       		.byte	-69
  92 0003 CC       		.byte	-52
  93 0004 11       		.byte	17
  94 0005 22       		.byte	34
  95 0006 0000     		.align	2
  96              	.LC1:
  97 0008 C0       		.byte	-64
  98 0009 A8       		.byte	-88
  99 000a 00       		.byte	0
 100 000b 08       		.byte	8
 101              		.align	2
 102              	.LC2:
 103 000c FF       		.byte	-1
 104 000d FF       		.byte	-1
 105 000e FF       		.byte	-1
 106 000f 00       		.byte	0
 107              		.align	2
 108              	.LC3:
 109 0010 C0       		.byte	-64
 110 0011 A8       		.byte	-88
 111 0012 00       		.byte	0
 112 0013 01       		.byte	1
 113              		.section	.text.init_W5200,"ax",%progbits
 114              		.align	2
 115              		.global	init_W5200
 116              		.thumb
 117              		.thumb_func
 119              	init_W5200:
 120              	.LFB110:
 121              		.file 1 "App/STM32F4-Discovery/W5200.c"
   1:App/STM32F4-Discovery/W5200.c **** /* W5200 Device Driver */
   2:App/STM32F4-Discovery/W5200.c **** 
   3:App/STM32F4-Discovery/W5200.c **** // $Id: W5200.c 6548 2014-01-16 14:09:04Z svn $
   4:App/STM32F4-Discovery/W5200.c **** 
   5:App/STM32F4-Discovery/W5200.c **** // Copyright (C)2013-2014, Philip Munts, President, Munts AM Corp.
   6:App/STM32F4-Discovery/W5200.c **** // All rights reserved.
   7:App/STM32F4-Discovery/W5200.c **** //
   8:App/STM32F4-Discovery/W5200.c **** // Redistribution and use in source and binary forms, with or without
   9:App/STM32F4-Discovery/W5200.c **** // modification, are permitted provided that the following conditions are met:
  10:App/STM32F4-Discovery/W5200.c **** //
  11:App/STM32F4-Discovery/W5200.c **** // * Redistributions of source code must retain the above copyright notice,
  12:App/STM32F4-Discovery/W5200.c **** //   this list of conditions and the following disclaimer.
  13:App/STM32F4-Discovery/W5200.c **** //
  14:App/STM32F4-Discovery/W5200.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  15:App/STM32F4-Discovery/W5200.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  16:App/STM32F4-Discovery/W5200.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  17:App/STM32F4-Discovery/W5200.c **** // ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
  18:App/STM32F4-Discovery/W5200.c **** // LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  19:App/STM32F4-Discovery/W5200.c **** // CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  20:App/STM32F4-Discovery/W5200.c **** // SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  21:App/STM32F4-Discovery/W5200.c **** // INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  22:App/STM32F4-Discovery/W5200.c **** // CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  23:App/STM32F4-Discovery/W5200.c **** // ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  24:App/STM32F4-Discovery/W5200.c **** // POSSIBILITY OF SUCH DAMAGE.
  25:App/STM32F4-Discovery/W5200.c **** 
  26:App/STM32F4-Discovery/W5200.c **** /*! \file W5200.c
  27:App/STM32F4-Discovery/W5200.c ****  *  \brief File for W5200.c wiznet functions 
  28:App/STM32F4-Discovery/W5200.c ****  *  Wiznet control, creating and closing sockets, sending, receiving data via sockets, etc... \n
  29:App/STM32F4-Discovery/W5200.c ****  */
  30:App/STM32F4-Discovery/W5200.c **** 
  31:App/STM32F4-Discovery/W5200.c **** #include "W5200.h"
  32:App/STM32F4-Discovery/W5200.c **** 
  33:App/STM32F4-Discovery/W5200.c **** #ifdef DEBUG
  34:App/STM32F4-Discovery/W5200.c **** 	#include "printf.h"
  35:App/STM32F4-Discovery/W5200.c **** #endif
  36:App/STM32F4-Discovery/W5200.c **** 
  37:App/STM32F4-Discovery/W5200.c **** 
  38:App/STM32F4-Discovery/W5200.c **** /* This table abstracts the W5200 RAM size configuration for 1 to 8 sockets. */
  39:App/STM32F4-Discovery/W5200.c **** /* We divide available RAM equally amoung the number of configured sockets.  */
  40:App/STM32F4-Discovery/W5200.c **** /* We don't try to give unequal amounts of RAM to different sockets.         */
  41:App/STM32F4-Discovery/W5200.c **** 
  42:App/STM32F4-Discovery/W5200.c **** 
  43:App/STM32F4-Discovery/W5200.c **** static const struct
  44:App/STM32F4-Discovery/W5200.c **** {
  45:App/STM32F4-Discovery/W5200.c ****   uint32_t SIZE;
  46:App/STM32F4-Discovery/W5200.c ****   uint32_t CONFIG;
  47:App/STM32F4-Discovery/W5200.c **** } RAMSIZE_TABLE[W5200_MAX_SOCKETS+1] =
  48:App/STM32F4-Discovery/W5200.c **** {
  49:App/STM32F4-Discovery/W5200.c ****   { 0,			0				},
  50:App/STM32F4-Discovery/W5200.c **** // Does not work => { W5200_RAMSIZE,	W5200_RAMSIZE_CONFIG_WHOLE	},
  51:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/2,	W5200_RAMSIZE_CONFIG_HALF	},
  52:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/2,	W5200_RAMSIZE_CONFIG_HALF	},
  53:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/4,	W5200_RAMSIZE_CONFIG_QUARTER	},
  54:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/4,	W5200_RAMSIZE_CONFIG_QUARTER	},
  55:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/8,	W5200_RAMSIZE_CONFIG_EIGHTH	},
  56:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/8,	W5200_RAMSIZE_CONFIG_EIGHTH	},
  57:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/8,	W5200_RAMSIZE_CONFIG_EIGHTH	},
  58:App/STM32F4-Discovery/W5200.c ****   { W5200_RAMSIZE/8,	W5200_RAMSIZE_CONFIG_EIGHTH	},
  59:App/STM32F4-Discovery/W5200.c **** };
  60:App/STM32F4-Discovery/W5200.c **** 
  61:App/STM32F4-Discovery/W5200.c **** /* This table holds precalculated TX and RX RAM base addresses for */
  62:App/STM32F4-Discovery/W5200.c **** /* each socket.                                                    */
  63:App/STM32F4-Discovery/W5200.c **** 
  64:App/STM32F4-Discovery/W5200.c **** 
  65:App/STM32F4-Discovery/W5200.c **** static struct
  66:App/STM32F4-Discovery/W5200.c **** {
  67:App/STM32F4-Discovery/W5200.c ****   uint32_t TX_RAM_base;
  68:App/STM32F4-Discovery/W5200.c ****   uint32_t RX_RAM_base;
  69:App/STM32F4-Discovery/W5200.c **** } socket_table[W5200_MAX_SOCKETS];
  70:App/STM32F4-Discovery/W5200.c **** 
  71:App/STM32F4-Discovery/W5200.c **** static uint8_t socket_flg[W5200_MAX_SOCKETS];
  72:App/STM32F4-Discovery/W5200.c **** static QueueTelegram telegram;
  73:App/STM32F4-Discovery/W5200.c **** 
  74:App/STM32F4-Discovery/W5200.c **** const static	uint8_t	socket_open_status[] = {
  75:App/STM32F4-Discovery/W5200.c **** 			W5200_Sn_SR_SOCK_CLOSED,	// mode is CLOSE
  76:App/STM32F4-Discovery/W5200.c **** 			W5200_Sn_SR_SOCK_INIT,	// mode is TCP
  77:App/STM32F4-Discovery/W5200.c **** 			W5200_Sn_SR_SOCK_UDP,	// mode is UDP
  78:App/STM32F4-Discovery/W5200.c **** 			W5200_Sn_SR_SOCK_IPRAW,	// mode is IPRAW
  79:App/STM32F4-Discovery/W5200.c **** 			W5200_Sn_SR_SOCK_MACRAW,	// mode is MACRAW
  80:App/STM32F4-Discovery/W5200.c **** 			W5200_Sn_SR_SOCK_PPPOE,	// mode is PPPOE
  81:App/STM32F4-Discovery/W5200.c **** 		};
  82:App/STM32F4-Discovery/W5200.c **** 
  83:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
  84:App/STM32F4-Discovery/W5200.c **** //===	func 	init_W5200							 ===//
  85:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
  86:App/STM32F4-Discovery/W5200.c **** 
  87:App/STM32F4-Discovery/W5200.c **** void init_W5200(void)
  88:App/STM32F4-Discovery/W5200.c **** {
 122              		.loc 1 88 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 40
 125              		@ frame_needed = 1, uses_anonymous_args = 0
 126 0000 80B5     		push	{r7, lr}
 127              	.LCFI0:
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 7, -8
 130              		.cfi_offset 14, -4
 131 0002 8AB0     		sub	sp, sp, #40
 132              	.LCFI1:
 133              		.cfi_def_cfa_offset 48
 134 0004 00AF     		add	r7, sp, #0
 135              	.LCFI2:
 136              		.cfi_def_cfa_register 7
  89:App/STM32F4-Discovery/W5200.c **** 
  90:App/STM32F4-Discovery/W5200.c **** 	/*! Initialize Wiznet module - setup MAC address, ip address, gateway, subnet, 		etc..\n
  91:App/STM32F4-Discovery/W5200.c ****  	* - Default settings:
  92:App/STM32F4-Discovery/W5200.c **** 	 *  	
  93:App/STM32F4-Discovery/W5200.c **** 	 *  +	mac address : dd:aa:bb:cc:11:22
  94:App/STM32F4-Discovery/W5200.c **** 	 *  +	ip address :  192.168.0.8
  95:App/STM32F4-Discovery/W5200.c **** 	 *  +	subnet 	:     255.255.255.0
  96:App/STM32F4-Discovery/W5200.c **** 	 *  +	gateway :     192.168.0.254 
  97:App/STM32F4-Discovery/W5200.c **** 	 *  +	Ping 	:	enable 
  98:App/STM32F4-Discovery/W5200.c **** 	 *  +	timeout   :	200 mili sec. 
  99:App/STM32F4-Discovery/W5200.c **** 	 *  +	retry count :	3 
 100:App/STM32F4-Discovery/W5200.c **** 	 *  +	TX memory size : 2kB 
 101:App/STM32F4-Discovery/W5200.c **** 	 *  +	RX memory size : 2kB 
 102:App/STM32F4-Discovery/W5200.c **** 	 *  +	IT masking :    0xff
 103:App/STM32F4-Discovery/W5200.c ****  	*
 104:App/STM32F4-Discovery/W5200.c ****  	*
 105:App/STM32F4-Discovery/W5200.c **** 	 *\n Create and listen on socket '0', port 80. 
 106:App/STM32F4-Discovery/W5200.c **** 	 *
 107:App/STM32F4-Discovery/W5200.c **** 	 * */
 108:App/STM32F4-Discovery/W5200.c **** 
 109:App/STM32F4-Discovery/W5200.c **** 
 110:App/STM32F4-Discovery/W5200.c **** 	// mac address
 111:App/STM32F4-Discovery/W5200.c **** 	uint8_t address[6] =	{0xdd, 0xaa, 0xbb, 0xcc, 0x11, 0x22}; 
 137              		.loc 1 111 0
 138 0006 5C4A     		ldr	r2, .L4
 139 0008 07F11803 		add	r3, r7, #24
 140 000c 1068     		ldr	r0, [r2]	@ unaligned
 141 000e 1860     		str	r0, [r3]	@ unaligned
 142 0010 9288     		ldrh	r2, [r2, #4]	@ unaligned
 143 0012 9A80     		strh	r2, [r3, #4]	@ unaligned
 112:App/STM32F4-Discovery/W5200.c **** 	
 113:App/STM32F4-Discovery/W5200.c **** 	// ip 
 114:App/STM32F4-Discovery/W5200.c **** 	const  uint8_t ip[4] = {0xc0, 0xa8, 0x0, 0x08};
 144              		.loc 1 114 0
 145 0014 594A     		ldr	r2, .L4+4
 146 0016 07F11403 		add	r3, r7, #20
 147 001a 1068     		ldr	r0, [r2]	@ unaligned
 148 001c 1860     		str	r0, [r3]	@ unaligned
 115:App/STM32F4-Discovery/W5200.c **** 	// subnet 
 116:App/STM32F4-Discovery/W5200.c **** 	const uint8_t subnet[4] = {0xff,0xff,0xff,0x0};
 149              		.loc 1 116 0
 150 001e 584A     		ldr	r2, .L4+8
 151 0020 07F11003 		add	r3, r7, #16
 152 0024 1068     		ldr	r0, [r2]	@ unaligned
 153 0026 1860     		str	r0, [r3]	@ unaligned
 117:App/STM32F4-Discovery/W5200.c **** 	// gateway
 118:App/STM32F4-Discovery/W5200.c **** 	const uint8_t gw[4] = {0xc0, 0xa8, 0x0, 0x01};
 154              		.loc 1 118 0
 155 0028 564A     		ldr	r2, .L4+12
 156 002a 07F10C03 		add	r3, r7, #12
 157 002e 1068     		ldr	r0, [r2]	@ unaligned
 158 0030 1860     		str	r0, [r3]	@ unaligned
 119:App/STM32F4-Discovery/W5200.c **** 	
 120:App/STM32F4-Discovery/W5200.c **** 	portTickType xLastWakeTime;	
 121:App/STM32F4-Discovery/W5200.c **** 	
 122:App/STM32F4-Discovery/W5200.c **** 	xSemaphoreDMASPI = xSemaphoreCreateBinary();
 159              		.loc 1 122 0
 160 0032 0120     		movs	r0, #1
 161 0034 0021     		movs	r1, #0
 162 0036 0322     		movs	r2, #3
 163 0038 FFF7FEFF 		bl	xQueueGenericCreate
 164 003c 0246     		mov	r2, r0
 165 003e 524B     		ldr	r3, .L4+16
 166 0040 1A60     		str	r2, [r3]
 123:App/STM32F4-Discovery/W5200.c **** 
 124:App/STM32F4-Discovery/W5200.c **** //	vTaskSuspend(set_macTaskHandle);
 125:App/STM32F4-Discovery/W5200.c **** 	
 126:App/STM32F4-Discovery/W5200.c **** 	xLastWakeTime = xTaskGetTickCount();
 167              		.loc 1 126 0
 168 0042 FFF7FEFF 		bl	xTaskGetTickCount
 169 0046 0346     		mov	r3, r0
 170 0048 BB60     		str	r3, [r7, #8]
 127:App/STM32F4-Discovery/W5200.c **** 
 128:App/STM32F4-Discovery/W5200.c **** 	RESET_HIGH();
 171              		.loc 1 128 0
 172 004a 504B     		ldr	r3, .L4+20
 173 004c 4F4A     		ldr	r2, .L4+20
 174 004e 528B     		ldrh	r2, [r2, #26]	@ movhi
 175 0050 92B2     		uxth	r2, r2
 176 0052 42F02002 		orr	r2, r2, #32
 177 0056 92B2     		uxth	r2, r2
 178 0058 5A83     		strh	r2, [r3, #26]	@ movhi
 129:App/STM32F4-Discovery/W5200.c **** 	RESET_LOW();	
 179              		.loc 1 129 0
 180 005a 4C4B     		ldr	r3, .L4+20
 181 005c 4B4A     		ldr	r2, .L4+20
 182 005e 128B     		ldrh	r2, [r2, #24]	@ movhi
 183 0060 92B2     		uxth	r2, r2
 184 0062 42F02002 		orr	r2, r2, #32
 185 0066 92B2     		uxth	r2, r2
 186 0068 1A83     		strh	r2, [r3, #24]	@ movhi
 130:App/STM32F4-Discovery/W5200.c **** 
 131:App/STM32F4-Discovery/W5200.c **** 	vTaskDelay( 500/portTICK_RATE_MS );		
 187              		.loc 1 131 0
 188 006a 4FF4FA70 		mov	r0, #500
 189 006e FFF7FEFF 		bl	vTaskDelay
 132:App/STM32F4-Discovery/W5200.c **** 	const portTickType xFrequency = 1;
 190              		.loc 1 132 0
 191 0072 0123     		movs	r3, #1
 192 0074 3B62     		str	r3, [r7, #32]
 133:App/STM32F4-Discovery/W5200.c **** 	
 134:App/STM32F4-Discovery/W5200.c **** 	// ===================================================//
 135:App/STM32F4-Discovery/W5200.c **** 	//SW reset 
 136:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_MR, W5200_MR_RST);
 193              		.loc 1 136 0
 194 0076 0020     		movs	r0, #0
 195 0078 8021     		movs	r1, #128
 196 007a FFF7FEFF 		bl	spi_dma_sendByte
 137:App/STM32F4-Discovery/W5200.c **** 	// wait until reset complete
 138:App/STM32F4-Discovery/W5200.c **** 	uint8_t data = W5200_MR_RST; 
 197              		.loc 1 138 0
 198 007e 8023     		movs	r3, #128
 199 0080 FB71     		strb	r3, [r7, #7]
 139:App/STM32F4-Discovery/W5200.c **** 	while((data  && W5200_MR_RST) == W5200_MR_RST)
 200              		.loc 1 139 0
 201 0082 00BF     		nop
 140:App/STM32F4-Discovery/W5200.c **** 	{
 141:App/STM32F4-Discovery/W5200.c **** 		spi_dma_read(W5200_MR, 1);
 142:App/STM32F4-Discovery/W5200.c **** 		memcpy(&data, bufferRX+4, 1);
 143:App/STM32F4-Discovery/W5200.c **** 	}
 144:App/STM32F4-Discovery/W5200.c **** 		
 145:App/STM32F4-Discovery/W5200.c **** 	// PING enable, PPPoE disable 
 146:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_MR, 0);
 202              		.loc 1 146 0
 203 0084 0020     		movs	r0, #0
 204 0086 0021     		movs	r1, #0
 205 0088 FFF7FEFF 		bl	spi_dma_sendByte
 147:App/STM32F4-Discovery/W5200.c **** 	// all socket interrupts sets to nonmask. set '1' is interrupt enable. 
 148:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_IMR, 0xff);
 206              		.loc 1 148 0
 207 008c 1620     		movs	r0, #22
 208 008e FF21     		movs	r1, #255
 209 0090 FFF7FEFF 		bl	spi_dma_sendByte
 149:App/STM32F4-Discovery/W5200.c **** 	// IP-confilict, PPPoE Close are mask. set '0' interupt disable. 
 150:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_IMR2, 0);
 210              		.loc 1 150 0
 211 0094 3620     		movs	r0, #54
 212 0096 0021     		movs	r1, #0
 213 0098 FFF7FEFF 		bl	spi_dma_sendByte
 151:App/STM32F4-Discovery/W5200.c **** 	// set timeoput to 200msec
 152:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_RTR, 200);
 214              		.loc 1 152 0
 215 009c 1720     		movs	r0, #23
 216 009e C821     		movs	r1, #200
 217 00a0 FFF7FEFF 		bl	spi_dma_sendByte
 153:App/STM32F4-Discovery/W5200.c **** 	// set retry count register to 3rd
 154:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_RCR, 3);
 218              		.loc 1 154 0
 219 00a4 1920     		movs	r0, #25
 220 00a6 0321     		movs	r1, #3
 221 00a8 FFF7FEFF 		bl	spi_dma_sendByte
 155:App/STM32F4-Discovery/W5200.c **** 
 156:App/STM32F4-Discovery/W5200.c **** 	int n = 0; 
 222              		.loc 1 156 0
 223 00ac 0023     		movs	r3, #0
 224 00ae 7B62     		str	r3, [r7, #36]
 157:App/STM32F4-Discovery/W5200.c **** 
 158:App/STM32F4-Discovery/W5200.c **** 	for (n = 0; n < 8; n++)
 225              		.loc 1 158 0
 226 00b0 0023     		movs	r3, #0
 227 00b2 7B62     		str	r3, [r7, #36]
 228 00b4 2BE0     		b	.L2
 229              	.L3:
 159:App/STM32F4-Discovery/W5200.c **** 	{
 160:App/STM32F4-Discovery/W5200.c **** 		spi_dma_sendByte(W5200_Sn_RXMEM_SIZE(n), 0x2);
 230              		.loc 1 160 0 discriminator 2
 231 00b6 7B6A     		ldr	r3, [r7, #36]
 232 00b8 9BB2     		uxth	r3, r3
 233 00ba 1B02     		lsls	r3, r3, #8
 234 00bc 9BB2     		uxth	r3, r3
 235 00be 03F58043 		add	r3, r3, #16384
 236 00c2 1E33     		adds	r3, r3, #30
 237 00c4 9BB2     		uxth	r3, r3
 238 00c6 1846     		mov	r0, r3
 239 00c8 0221     		movs	r1, #2
 240 00ca FFF7FEFF 		bl	spi_dma_sendByte
 161:App/STM32F4-Discovery/W5200.c **** 		spi_dma_sendByte(W5200_Sn_TXMEM_SIZE(n),0x2);
 241              		.loc 1 161 0 discriminator 2
 242 00ce 7B6A     		ldr	r3, [r7, #36]
 243 00d0 9BB2     		uxth	r3, r3
 244 00d2 1B02     		lsls	r3, r3, #8
 245 00d4 9BB2     		uxth	r3, r3
 246 00d6 03F58043 		add	r3, r3, #16384
 247 00da 1F33     		adds	r3, r3, #31
 248 00dc 9BB2     		uxth	r3, r3
 249 00de 1846     		mov	r0, r3
 250 00e0 0221     		movs	r1, #2
 251 00e2 FFF7FEFF 		bl	spi_dma_sendByte
 162:App/STM32F4-Discovery/W5200.c **** 		spi_dma_sendByte(W5200_Sn_IMR(n), 0xff);	
 252              		.loc 1 162 0 discriminator 2
 253 00e6 7B6A     		ldr	r3, [r7, #36]
 254 00e8 9BB2     		uxth	r3, r3
 255 00ea 1B02     		lsls	r3, r3, #8
 256 00ec 9BB2     		uxth	r3, r3
 257 00ee 03F58043 		add	r3, r3, #16384
 258 00f2 2C33     		adds	r3, r3, #44
 259 00f4 9BB2     		uxth	r3, r3
 260 00f6 1846     		mov	r0, r3
 261 00f8 FF21     		movs	r1, #255
 262 00fa FFF7FEFF 		bl	spi_dma_sendByte
 163:App/STM32F4-Discovery/W5200.c **** 		socket_flg[n] = 0;
 263              		.loc 1 163 0 discriminator 2
 264 00fe 244A     		ldr	r2, .L4+24
 265 0100 7B6A     		ldr	r3, [r7, #36]
 266 0102 1344     		add	r3, r3, r2
 267 0104 0022     		movs	r2, #0
 268 0106 1A70     		strb	r2, [r3]
 158:App/STM32F4-Discovery/W5200.c **** 	for (n = 0; n < 8; n++)
 269              		.loc 1 158 0 discriminator 2
 270 0108 7B6A     		ldr	r3, [r7, #36]
 271 010a 0133     		adds	r3, r3, #1
 272 010c 7B62     		str	r3, [r7, #36]
 273              	.L2:
 158:App/STM32F4-Discovery/W5200.c **** 	for (n = 0; n < 8; n++)
 274              		.loc 1 158 0 is_stmt 0 discriminator 1
 275 010e 7B6A     		ldr	r3, [r7, #36]
 276 0110 072B     		cmp	r3, #7
 277 0112 D0DD     		ble	.L3
 164:App/STM32F4-Discovery/W5200.c **** 			
 165:App/STM32F4-Discovery/W5200.c **** 	}	
 166:App/STM32F4-Discovery/W5200.c **** 	// =========================================================//
 167:App/STM32F4-Discovery/W5200.c **** 		
 168:App/STM32F4-Discovery/W5200.c **** 	vTaskDelayUntil(&xLastWakeTime, 500/portTICK_RATE_MS );		
 278              		.loc 1 168 0 is_stmt 1
 279 0114 07F10803 		add	r3, r7, #8
 280 0118 1846     		mov	r0, r3
 281 011a 4FF4FA71 		mov	r1, #500
 282 011e FFF7FEFF 		bl	vTaskDelayUntil
 169:App/STM32F4-Discovery/W5200.c **** 
 170:App/STM32F4-Discovery/W5200.c **** 	W5200_configure_network(ip, subnet, gw);
 283              		.loc 1 170 0
 284 0122 07F11401 		add	r1, r7, #20
 285 0126 07F11002 		add	r2, r7, #16
 286 012a 07F10C03 		add	r3, r7, #12
 287 012e 0846     		mov	r0, r1
 288 0130 1146     		mov	r1, r2
 289 0132 1A46     		mov	r2, r3
 290 0134 FFF7FEFF 		bl	W5200_configure_network
 171:App/STM32F4-Discovery/W5200.c **** 	W5200_set_hardware_address(address);
 291              		.loc 1 171 0
 292 0138 07F11803 		add	r3, r7, #24
 293 013c 1846     		mov	r0, r3
 294 013e FFF7FEFF 		bl	W5200_set_hardware_address
 172:App/STM32F4-Discovery/W5200.c **** 	
 173:App/STM32F4-Discovery/W5200.c **** 	vTaskDelayUntil(&xLastWakeTime, 500/portTICK_RATE_MS );		
 295              		.loc 1 173 0
 296 0142 07F10803 		add	r3, r7, #8
 297 0146 1846     		mov	r0, r3
 298 0148 4FF4FA71 		mov	r1, #500
 299 014c FFF7FEFF 		bl	vTaskDelayUntil
 174:App/STM32F4-Discovery/W5200.c **** 	// end of initialization W5200 
 175:App/STM32F4-Discovery/W5200.c **** 	// delete task
 176:App/STM32F4-Discovery/W5200.c **** 
 177:App/STM32F4-Discovery/W5200.c **** 	// unblock set_macTask
 178:App/STM32F4-Discovery/W5200.c **** 	
 179:App/STM32F4-Discovery/W5200.c **** 	socket_0 = socket(W5200_Sn_MR_TCP, 80, 0);
 300              		.loc 1 179 0
 301 0150 0120     		movs	r0, #1
 302 0152 5021     		movs	r1, #80
 303 0154 0022     		movs	r2, #0
 304 0156 FFF7FEFF 		bl	socket
 305 015a 0346     		mov	r3, r0
 306 015c 1A46     		mov	r2, r3
 307 015e 0D4B     		ldr	r3, .L4+28
 308 0160 1A60     		str	r2, [r3]
 180:App/STM32F4-Discovery/W5200.c **** 	listen(socket_0);
 309              		.loc 1 180 0
 310 0162 0C4B     		ldr	r3, .L4+28
 311 0164 1B68     		ldr	r3, [r3]
 312 0166 1846     		mov	r0, r3
 313 0168 FFF7FEFF 		bl	listen
 181:App/STM32F4-Discovery/W5200.c **** 
 182:App/STM32F4-Discovery/W5200.c **** 
 183:App/STM32F4-Discovery/W5200.c **** //	vTaskResume( set_macTaskHandle); 
 184:App/STM32F4-Discovery/W5200.c **** 	vTaskDelete ( NULL );
 314              		.loc 1 184 0
 315 016c 0020     		movs	r0, #0
 316 016e FFF7FEFF 		bl	vTaskDelete
 185:App/STM32F4-Discovery/W5200.c **** 	
 186:App/STM32F4-Discovery/W5200.c **** 	
 187:App/STM32F4-Discovery/W5200.c **** 	
 188:App/STM32F4-Discovery/W5200.c **** 	
 189:App/STM32F4-Discovery/W5200.c **** }
 317              		.loc 1 189 0
 318 0172 2837     		adds	r7, r7, #40
 319 0174 BD46     		mov	sp, r7
 320              		@ sp needed
 321 0176 80BD     		pop	{r7, pc}
 322              	.L5:
 323              		.align	2
 324              	.L4:
 325 0178 00000000 		.word	.LC0
 326 017c 08000000 		.word	.LC1
 327 0180 0C000000 		.word	.LC2
 328 0184 10000000 		.word	.LC3
 329 0188 00000000 		.word	xSemaphoreDMASPI
 330 018c 00080240 		.word	1073874944
 331 0190 00000000 		.word	socket_flg
 332 0194 00000000 		.word	socket_0
 333              		.cfi_endproc
 334              	.LFE110:
 336              		.section	.text.W5200_set_hardware_address,"ax",%progbits
 337              		.align	2
 338              		.global	W5200_set_hardware_address
 339              		.thumb
 340              		.thumb_func
 342              	W5200_set_hardware_address:
 343              	.LFB111:
 190:App/STM32F4-Discovery/W5200.c **** 
 191:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 192:App/STM32F4-Discovery/W5200.c **** //===	func W5200_set_hardware_address
 193:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 194:App/STM32F4-Discovery/W5200.c **** void  W5200_set_hardware_address(const macaddress_t address)
 195:App/STM32F4-Discovery/W5200.c **** {
 344              		.loc 1 195 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 8
 347              		@ frame_needed = 1, uses_anonymous_args = 0
 348 0000 80B5     		push	{r7, lr}
 349              	.LCFI3:
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 7, -8
 352              		.cfi_offset 14, -4
 353 0002 82B0     		sub	sp, sp, #8
 354              	.LCFI4:
 355              		.cfi_def_cfa_offset 16
 356 0004 00AF     		add	r7, sp, #0
 357              	.LCFI5:
 358              		.cfi_def_cfa_register 7
 359 0006 7860     		str	r0, [r7, #4]
 196:App/STM32F4-Discovery/W5200.c **** 
 197:App/STM32F4-Discovery/W5200.c **** 	/*! Function set wiznet register to address via SPI DMA
 198:App/STM32F4-Discovery/W5200.c **** 	 */
 199:App/STM32F4-Discovery/W5200.c **** 
 200:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send(W5200_SHAR, 6, address);
 360              		.loc 1 200 0
 361 0008 0920     		movs	r0, #9
 362 000a 0621     		movs	r1, #6
 363 000c 7A68     		ldr	r2, [r7, #4]
 364 000e FFF7FEFF 		bl	spi_dma_send
 201:App/STM32F4-Discovery/W5200.c **** }
 365              		.loc 1 201 0
 366 0012 0837     		adds	r7, r7, #8
 367 0014 BD46     		mov	sp, r7
 368              		@ sp needed
 369 0016 80BD     		pop	{r7, pc}
 370              		.cfi_endproc
 371              	.LFE111:
 373              		.section	.text.W5200_get_hardware_address,"ax",%progbits
 374              		.align	2
 375              		.global	W5200_get_hardware_address
 376              		.thumb
 377              		.thumb_func
 379              	W5200_get_hardware_address:
 380              	.LFB112:
 202:App/STM32F4-Discovery/W5200.c **** 
 203:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 204:App/STM32F4-Discovery/W5200.c **** //===	func W5200_get_hardware_address
 205:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 206:App/STM32F4-Discovery/W5200.c **** 
 207:App/STM32F4-Discovery/W5200.c **** 
 208:App/STM32F4-Discovery/W5200.c **** void  W5200_get_hardware_address(macaddress_t address)
 209:App/STM32F4-Discovery/W5200.c **** {
 381              		.loc 1 209 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 8
 384              		@ frame_needed = 1, uses_anonymous_args = 0
 385 0000 80B5     		push	{r7, lr}
 386              	.LCFI6:
 387              		.cfi_def_cfa_offset 8
 388              		.cfi_offset 7, -8
 389              		.cfi_offset 14, -4
 390 0002 82B0     		sub	sp, sp, #8
 391              	.LCFI7:
 392              		.cfi_def_cfa_offset 16
 393 0004 00AF     		add	r7, sp, #0
 394              	.LCFI8:
 395              		.cfi_def_cfa_register 7
 396 0006 7860     		str	r0, [r7, #4]
 210:App/STM32F4-Discovery/W5200.c **** 	/*! Function reads wiznet register mac address and copies it to address
 211:App/STM32F4-Discovery/W5200.c **** 	 * */
 212:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_SHAR, 6);
 397              		.loc 1 212 0
 398 0008 0920     		movs	r0, #9
 399 000a 0621     		movs	r1, #6
 400 000c FFF7FEFF 		bl	spi_dma_read
 213:App/STM32F4-Discovery/W5200.c **** 	memcpy(address, bufferRX+4, 6);
 401              		.loc 1 213 0
 402 0010 7868     		ldr	r0, [r7, #4]
 403 0012 0349     		ldr	r1, .L8
 404 0014 0622     		movs	r2, #6
 405 0016 FFF7FEFF 		bl	memcpy
 214:App/STM32F4-Discovery/W5200.c **** }
 406              		.loc 1 214 0
 407 001a 0837     		adds	r7, r7, #8
 408 001c BD46     		mov	sp, r7
 409              		@ sp needed
 410 001e 80BD     		pop	{r7, pc}
 411              	.L9:
 412              		.align	2
 413              	.L8:
 414 0020 04000000 		.word	bufferRX+4
 415              		.cfi_endproc
 416              	.LFE112:
 418              		.section	.text.W5200_configure_network,"ax",%progbits
 419              		.align	2
 420              		.global	W5200_configure_network
 421              		.thumb
 422              		.thumb_func
 424              	W5200_configure_network:
 425              	.LFB113:
 215:App/STM32F4-Discovery/W5200.c **** 
 216:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 217:App/STM32F4-Discovery/W5200.c **** //===	func W5200_configure network
 218:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 219:App/STM32F4-Discovery/W5200.c **** 
 220:App/STM32F4-Discovery/W5200.c **** 
 221:App/STM32F4-Discovery/W5200.c **** void  W5200_configure_network(const ipv4address_t address,
 222:App/STM32F4-Discovery/W5200.c ****                              const ipv4address_t subnet,
 223:App/STM32F4-Discovery/W5200.c ****                              const ipv4address_t gateway)
 224:App/STM32F4-Discovery/W5200.c **** {
 426              		.loc 1 224 0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 16
 429              		@ frame_needed = 1, uses_anonymous_args = 0
 430 0000 80B5     		push	{r7, lr}
 431              	.LCFI9:
 432              		.cfi_def_cfa_offset 8
 433              		.cfi_offset 7, -8
 434              		.cfi_offset 14, -4
 435 0002 84B0     		sub	sp, sp, #16
 436              	.LCFI10:
 437              		.cfi_def_cfa_offset 24
 438 0004 00AF     		add	r7, sp, #0
 439              	.LCFI11:
 440              		.cfi_def_cfa_register 7
 441 0006 F860     		str	r0, [r7, #12]
 442 0008 B960     		str	r1, [r7, #8]
 443 000a 7A60     		str	r2, [r7, #4]
 225:App/STM32F4-Discovery/W5200.c **** 	/*! It configures ip, subnet and gateway */
 226:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send(W5200_SIPR, 4, address);
 444              		.loc 1 226 0
 445 000c 0F20     		movs	r0, #15
 446 000e 0421     		movs	r1, #4
 447 0010 FA68     		ldr	r2, [r7, #12]
 448 0012 FFF7FEFF 		bl	spi_dma_send
 227:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send(W5200_SUBR, 4, subnet);
 449              		.loc 1 227 0
 450 0016 0520     		movs	r0, #5
 451 0018 0421     		movs	r1, #4
 452 001a BA68     		ldr	r2, [r7, #8]
 453 001c FFF7FEFF 		bl	spi_dma_send
 228:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send(W5200_GAR, 4 , gateway);
 454              		.loc 1 228 0
 455 0020 0120     		movs	r0, #1
 456 0022 0421     		movs	r1, #4
 457 0024 7A68     		ldr	r2, [r7, #4]
 458 0026 FFF7FEFF 		bl	spi_dma_send
 229:App/STM32F4-Discovery/W5200.c **** }
 459              		.loc 1 229 0
 460 002a 1037     		adds	r7, r7, #16
 461 002c BD46     		mov	sp, r7
 462              		@ sp needed
 463 002e 80BD     		pop	{r7, pc}
 464              		.cfi_endproc
 465              	.LFE113:
 467              		.section	.text.W5200_get_ipaddress,"ax",%progbits
 468              		.align	2
 469              		.global	W5200_get_ipaddress
 470              		.thumb
 471              		.thumb_func
 473              	W5200_get_ipaddress:
 474              	.LFB114:
 230:App/STM32F4-Discovery/W5200.c **** 
 231:App/STM32F4-Discovery/W5200.c **** 
 232:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 233:App/STM32F4-Discovery/W5200.c **** //===	func  W5200_get_ipaddress
 234:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 235:App/STM32F4-Discovery/W5200.c **** 
 236:App/STM32F4-Discovery/W5200.c **** 
 237:App/STM32F4-Discovery/W5200.c **** 
 238:App/STM32F4-Discovery/W5200.c **** void  W5200_get_ipaddress(ipv4address_t address)
 239:App/STM32F4-Discovery/W5200.c **** {
 475              		.loc 1 239 0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 8
 478              		@ frame_needed = 1, uses_anonymous_args = 0
 479 0000 80B5     		push	{r7, lr}
 480              	.LCFI12:
 481              		.cfi_def_cfa_offset 8
 482              		.cfi_offset 7, -8
 483              		.cfi_offset 14, -4
 484 0002 82B0     		sub	sp, sp, #8
 485              	.LCFI13:
 486              		.cfi_def_cfa_offset 16
 487 0004 00AF     		add	r7, sp, #0
 488              	.LCFI14:
 489              		.cfi_def_cfa_register 7
 490 0006 7860     		str	r0, [r7, #4]
 240:App/STM32F4-Discovery/W5200.c **** 	 spi_dma_read(W5200_SIPR, 4);
 491              		.loc 1 240 0
 492 0008 0F20     		movs	r0, #15
 493 000a 0421     		movs	r1, #4
 494 000c FFF7FEFF 		bl	spi_dma_read
 241:App/STM32F4-Discovery/W5200.c **** 	memcpy(address, bufferRX+4, 4);
 495              		.loc 1 241 0
 496 0010 7868     		ldr	r0, [r7, #4]
 497 0012 0349     		ldr	r1, .L12
 498 0014 0422     		movs	r2, #4
 499 0016 FFF7FEFF 		bl	memcpy
 242:App/STM32F4-Discovery/W5200.c **** }
 500              		.loc 1 242 0
 501 001a 0837     		adds	r7, r7, #8
 502 001c BD46     		mov	sp, r7
 503              		@ sp needed
 504 001e 80BD     		pop	{r7, pc}
 505              	.L13:
 506              		.align	2
 507              	.L12:
 508 0020 04000000 		.word	bufferRX+4
 509              		.cfi_endproc
 510              	.LFE114:
 512              		.section	.text.get_CRStatus,"ax",%progbits
 513              		.align	2
 514              		.thumb
 515              		.thumb_func
 517              	get_CRStatus:
 518              	.LFB115:
 243:App/STM32F4-Discovery/W5200.c **** 
 244:App/STM32F4-Discovery/W5200.c **** 
 245:App/STM32F4-Discovery/W5200.c **** 
 246:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 247:App/STM32F4-Discovery/W5200.c **** //	INNER STATIC FUNCTIONS FOR WRITING AND READING STATUSES 
 248:App/STM32F4-Discovery/W5200.c **** //	needed by socket, connect, send, closesocket, recv functions 
 249:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 250:App/STM32F4-Discovery/W5200.c **** 
 251:App/STM32F4-Discovery/W5200.c **** 
 252:App/STM32F4-Discovery/W5200.c **** 
 253:App/STM32F4-Discovery/W5200.c **** static uint8_t get_CRStatus(uint8_t sck_fd)
 254:App/STM32F4-Discovery/W5200.c **** {
 519              		.loc 1 254 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 16
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523 0000 80B5     		push	{r7, lr}
 524              	.LCFI15:
 525              		.cfi_def_cfa_offset 8
 526              		.cfi_offset 7, -8
 527              		.cfi_offset 14, -4
 528 0002 84B0     		sub	sp, sp, #16
 529              	.LCFI16:
 530              		.cfi_def_cfa_offset 24
 531 0004 00AF     		add	r7, sp, #0
 532              	.LCFI17:
 533              		.cfi_def_cfa_register 7
 534 0006 0346     		mov	r3, r0
 535 0008 FB71     		strb	r3, [r7, #7]
 255:App/STM32F4-Discovery/W5200.c **** 	uint8_t var; 
 256:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_CR(sck_fd),1);
 536              		.loc 1 256 0
 537 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 538 000c 9BB2     		uxth	r3, r3
 539 000e 1B02     		lsls	r3, r3, #8
 540 0010 9BB2     		uxth	r3, r3
 541 0012 03F58043 		add	r3, r3, #16384
 542 0016 0133     		adds	r3, r3, #1
 543 0018 9BB2     		uxth	r3, r3
 544 001a 1846     		mov	r0, r3
 545 001c 0121     		movs	r1, #1
 546 001e FFF7FEFF 		bl	spi_dma_read
 257:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 1);
 547              		.loc 1 257 0
 548 0022 044B     		ldr	r3, .L16
 549 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 550 0026 FB73     		strb	r3, [r7, #15]
 258:App/STM32F4-Discovery/W5200.c **** 	return var;
 551              		.loc 1 258 0
 552 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 259:App/STM32F4-Discovery/W5200.c **** }
 553              		.loc 1 259 0
 554 002a 1846     		mov	r0, r3
 555 002c 1037     		adds	r7, r7, #16
 556 002e BD46     		mov	sp, r7
 557              		@ sp needed
 558 0030 80BD     		pop	{r7, pc}
 559              	.L17:
 560 0032 00BF     		.align	2
 561              	.L16:
 562 0034 04000000 		.word	bufferRX+4
 563              		.cfi_endproc
 564              	.LFE115:
 566              		.section	.text.get_SRStatus,"ax",%progbits
 567              		.align	2
 568              		.thumb
 569              		.thumb_func
 571              	get_SRStatus:
 572              	.LFB116:
 260:App/STM32F4-Discovery/W5200.c **** 
 261:App/STM32F4-Discovery/W5200.c **** 
 262:App/STM32F4-Discovery/W5200.c **** static uint8_t get_SRStatus(uint8_t sck_fd)
 263:App/STM32F4-Discovery/W5200.c **** {
 573              		.loc 1 263 0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 16
 576              		@ frame_needed = 1, uses_anonymous_args = 0
 577 0000 80B5     		push	{r7, lr}
 578              	.LCFI18:
 579              		.cfi_def_cfa_offset 8
 580              		.cfi_offset 7, -8
 581              		.cfi_offset 14, -4
 582 0002 84B0     		sub	sp, sp, #16
 583              	.LCFI19:
 584              		.cfi_def_cfa_offset 24
 585 0004 00AF     		add	r7, sp, #0
 586              	.LCFI20:
 587              		.cfi_def_cfa_register 7
 588 0006 0346     		mov	r3, r0
 589 0008 FB71     		strb	r3, [r7, #7]
 264:App/STM32F4-Discovery/W5200.c **** 	uint8_t var; 
 265:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_SR(sck_fd), 1);
 590              		.loc 1 265 0
 591 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 592 000c 9BB2     		uxth	r3, r3
 593 000e 1B02     		lsls	r3, r3, #8
 594 0010 9BB2     		uxth	r3, r3
 595 0012 03F58043 		add	r3, r3, #16384
 596 0016 0333     		adds	r3, r3, #3
 597 0018 9BB2     		uxth	r3, r3
 598 001a 1846     		mov	r0, r3
 599 001c 0121     		movs	r1, #1
 600 001e FFF7FEFF 		bl	spi_dma_read
 266:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 1);
 601              		.loc 1 266 0
 602 0022 044B     		ldr	r3, .L20
 603 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 604 0026 FB73     		strb	r3, [r7, #15]
 267:App/STM32F4-Discovery/W5200.c **** 	return var;
 605              		.loc 1 267 0
 606 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 268:App/STM32F4-Discovery/W5200.c **** }
 607              		.loc 1 268 0
 608 002a 1846     		mov	r0, r3
 609 002c 1037     		adds	r7, r7, #16
 610 002e BD46     		mov	sp, r7
 611              		@ sp needed
 612 0030 80BD     		pop	{r7, pc}
 613              	.L21:
 614 0032 00BF     		.align	2
 615              	.L20:
 616 0034 04000000 		.word	bufferRX+4
 617              		.cfi_endproc
 618              	.LFE116:
 620              		.section	.text.get_TXFSRStatus,"ax",%progbits
 621              		.align	2
 622              		.thumb
 623              		.thumb_func
 625              	get_TXFSRStatus:
 626              	.LFB117:
 269:App/STM32F4-Discovery/W5200.c **** 
 270:App/STM32F4-Discovery/W5200.c **** static uint16_t get_TXFSRStatus(uint8_t sck_fd)
 271:App/STM32F4-Discovery/W5200.c **** {
 627              		.loc 1 271 0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 16
 630              		@ frame_needed = 1, uses_anonymous_args = 0
 631 0000 80B5     		push	{r7, lr}
 632              	.LCFI21:
 633              		.cfi_def_cfa_offset 8
 634              		.cfi_offset 7, -8
 635              		.cfi_offset 14, -4
 636 0002 84B0     		sub	sp, sp, #16
 637              	.LCFI22:
 638              		.cfi_def_cfa_offset 24
 639 0004 00AF     		add	r7, sp, #0
 640              	.LCFI23:
 641              		.cfi_def_cfa_register 7
 642 0006 0346     		mov	r3, r0
 643 0008 FB71     		strb	r3, [r7, #7]
 272:App/STM32F4-Discovery/W5200.c **** 	uint8_t var[2]; 
 273:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_TX_FSR(sck_fd), 2);
 644              		.loc 1 273 0
 645 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 646 000c 9BB2     		uxth	r3, r3
 647 000e 1B02     		lsls	r3, r3, #8
 648 0010 9BB2     		uxth	r3, r3
 649 0012 03F58043 		add	r3, r3, #16384
 650 0016 2033     		adds	r3, r3, #32
 651 0018 9BB2     		uxth	r3, r3
 652 001a 1846     		mov	r0, r3
 653 001c 0221     		movs	r1, #2
 654 001e FFF7FEFF 		bl	spi_dma_read
 274:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 2);
 655              		.loc 1 274 0
 656 0022 084A     		ldr	r2, .L24
 657 0024 07F10C03 		add	r3, r7, #12
 658 0028 1288     		ldrh	r2, [r2]	@ unaligned
 659 002a 1A80     		strh	r2, [r3]	@ unaligned
 275:App/STM32F4-Discovery/W5200.c **** 	
 276:App/STM32F4-Discovery/W5200.c **** 	return ((var[0] << 8) | var[1] );
 660              		.loc 1 276 0
 661 002c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 662 002e 1B02     		lsls	r3, r3, #8
 663 0030 9AB2     		uxth	r2, r3
 664 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 665 0034 1343     		orrs	r3, r3, r2
 666 0036 9BB2     		uxth	r3, r3
 667 0038 9BB2     		uxth	r3, r3
 277:App/STM32F4-Discovery/W5200.c **** 	
 278:App/STM32F4-Discovery/W5200.c **** }
 668              		.loc 1 278 0
 669 003a 1846     		mov	r0, r3
 670 003c 1037     		adds	r7, r7, #16
 671 003e BD46     		mov	sp, r7
 672              		@ sp needed
 673 0040 80BD     		pop	{r7, pc}
 674              	.L25:
 675 0042 00BF     		.align	2
 676              	.L24:
 677 0044 04000000 		.word	bufferRX+4
 678              		.cfi_endproc
 679              	.LFE117:
 681              		.section	.text.get_TXWRStatus,"ax",%progbits
 682              		.align	2
 683              		.thumb
 684              		.thumb_func
 686              	get_TXWRStatus:
 687              	.LFB118:
 279:App/STM32F4-Discovery/W5200.c **** 
 280:App/STM32F4-Discovery/W5200.c **** static uint16_t get_TXWRStatus(uint8_t sck_fd)
 281:App/STM32F4-Discovery/W5200.c **** {
 688              		.loc 1 281 0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 16
 691              		@ frame_needed = 1, uses_anonymous_args = 0
 692 0000 80B5     		push	{r7, lr}
 693              	.LCFI24:
 694              		.cfi_def_cfa_offset 8
 695              		.cfi_offset 7, -8
 696              		.cfi_offset 14, -4
 697 0002 84B0     		sub	sp, sp, #16
 698              	.LCFI25:
 699              		.cfi_def_cfa_offset 24
 700 0004 00AF     		add	r7, sp, #0
 701              	.LCFI26:
 702              		.cfi_def_cfa_register 7
 703 0006 0346     		mov	r3, r0
 704 0008 FB71     		strb	r3, [r7, #7]
 282:App/STM32F4-Discovery/W5200.c **** 	uint8_t var[2]; 
 283:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_TX_WR(sck_fd), 2 );
 705              		.loc 1 283 0
 706 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 707 000c 9BB2     		uxth	r3, r3
 708 000e 1B02     		lsls	r3, r3, #8
 709 0010 9BB2     		uxth	r3, r3
 710 0012 03F58043 		add	r3, r3, #16384
 711 0016 2433     		adds	r3, r3, #36
 712 0018 9BB2     		uxth	r3, r3
 713 001a 1846     		mov	r0, r3
 714 001c 0221     		movs	r1, #2
 715 001e FFF7FEFF 		bl	spi_dma_read
 284:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 2);
 716              		.loc 1 284 0
 717 0022 084A     		ldr	r2, .L28
 718 0024 07F10C03 		add	r3, r7, #12
 719 0028 1288     		ldrh	r2, [r2]	@ unaligned
 720 002a 1A80     		strh	r2, [r3]	@ unaligned
 285:App/STM32F4-Discovery/W5200.c **** 	
 286:App/STM32F4-Discovery/W5200.c **** 	return ((var[0] << 8) | var[1] );
 721              		.loc 1 286 0
 722 002c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 723 002e 1B02     		lsls	r3, r3, #8
 724 0030 9AB2     		uxth	r2, r3
 725 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 726 0034 1343     		orrs	r3, r3, r2
 727 0036 9BB2     		uxth	r3, r3
 728 0038 9BB2     		uxth	r3, r3
 287:App/STM32F4-Discovery/W5200.c **** 
 288:App/STM32F4-Discovery/W5200.c **** 	
 289:App/STM32F4-Discovery/W5200.c **** }
 729              		.loc 1 289 0
 730 003a 1846     		mov	r0, r3
 731 003c 1037     		adds	r7, r7, #16
 732 003e BD46     		mov	sp, r7
 733              		@ sp needed
 734 0040 80BD     		pop	{r7, pc}
 735              	.L29:
 736 0042 00BF     		.align	2
 737              	.L28:
 738 0044 04000000 		.word	bufferRX+4
 739              		.cfi_endproc
 740              	.LFE118:
 742              		.section	.text.get_TXRD,"ax",%progbits
 743              		.align	2
 744              		.thumb
 745              		.thumb_func
 747              	get_TXRD:
 748              	.LFB119:
 290:App/STM32F4-Discovery/W5200.c **** static uint16_t get_TXRD(uint8_t sck_fd)
 291:App/STM32F4-Discovery/W5200.c **** {
 749              		.loc 1 291 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 16
 752              		@ frame_needed = 1, uses_anonymous_args = 0
 753 0000 80B5     		push	{r7, lr}
 754              	.LCFI27:
 755              		.cfi_def_cfa_offset 8
 756              		.cfi_offset 7, -8
 757              		.cfi_offset 14, -4
 758 0002 84B0     		sub	sp, sp, #16
 759              	.LCFI28:
 760              		.cfi_def_cfa_offset 24
 761 0004 00AF     		add	r7, sp, #0
 762              	.LCFI29:
 763              		.cfi_def_cfa_register 7
 764 0006 0346     		mov	r3, r0
 765 0008 FB71     		strb	r3, [r7, #7]
 292:App/STM32F4-Discovery/W5200.c **** 	uint8_t var[2]; 
 293:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_TX_RD(sck_fd), 2);
 766              		.loc 1 293 0
 767 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 768 000c 9BB2     		uxth	r3, r3
 769 000e 1B02     		lsls	r3, r3, #8
 770 0010 9BB2     		uxth	r3, r3
 771 0012 03F58043 		add	r3, r3, #16384
 772 0016 2233     		adds	r3, r3, #34
 773 0018 9BB2     		uxth	r3, r3
 774 001a 1846     		mov	r0, r3
 775 001c 0221     		movs	r1, #2
 776 001e FFF7FEFF 		bl	spi_dma_read
 294:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 2);
 777              		.loc 1 294 0
 778 0022 084A     		ldr	r2, .L32
 779 0024 07F10C03 		add	r3, r7, #12
 780 0028 1288     		ldrh	r2, [r2]	@ unaligned
 781 002a 1A80     		strh	r2, [r3]	@ unaligned
 295:App/STM32F4-Discovery/W5200.c **** 	
 296:App/STM32F4-Discovery/W5200.c **** 	return ((var[0] << 8) | var[1] );
 782              		.loc 1 296 0
 783 002c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 784 002e 1B02     		lsls	r3, r3, #8
 785 0030 9AB2     		uxth	r2, r3
 786 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 787 0034 1343     		orrs	r3, r3, r2
 788 0036 9BB2     		uxth	r3, r3
 789 0038 9BB2     		uxth	r3, r3
 297:App/STM32F4-Discovery/W5200.c **** 	
 298:App/STM32F4-Discovery/W5200.c **** }
 790              		.loc 1 298 0
 791 003a 1846     		mov	r0, r3
 792 003c 1037     		adds	r7, r7, #16
 793 003e BD46     		mov	sp, r7
 794              		@ sp needed
 795 0040 80BD     		pop	{r7, pc}
 796              	.L33:
 797 0042 00BF     		.align	2
 798              	.L32:
 799 0044 04000000 		.word	bufferRX+4
 800              		.cfi_endproc
 801              	.LFE119:
 803              		.section	.text.set_TXWR,"ax",%progbits
 804              		.align	2
 805              		.thumb
 806              		.thumb_func
 808              	set_TXWR:
 809              	.LFB120:
 299:App/STM32F4-Discovery/W5200.c **** 
 300:App/STM32F4-Discovery/W5200.c **** static void  set_TXWR(uint8_t sck_fd, uint16_t val)
 301:App/STM32F4-Discovery/W5200.c **** {
 810              		.loc 1 301 0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 8
 813              		@ frame_needed = 1, uses_anonymous_args = 0
 814 0000 80B5     		push	{r7, lr}
 815              	.LCFI30:
 816              		.cfi_def_cfa_offset 8
 817              		.cfi_offset 7, -8
 818              		.cfi_offset 14, -4
 819 0002 82B0     		sub	sp, sp, #8
 820              	.LCFI31:
 821              		.cfi_def_cfa_offset 16
 822 0004 00AF     		add	r7, sp, #0
 823              	.LCFI32:
 824              		.cfi_def_cfa_register 7
 825 0006 0246     		mov	r2, r0
 826 0008 0B46     		mov	r3, r1
 827 000a FA71     		strb	r2, [r7, #7]
 828 000c BB80     		strh	r3, [r7, #4]	@ movhi
 302:App/STM32F4-Discovery/W5200.c ****  	spi_dma_send2B(W5200_Sn_TX_WR(sck_fd), val);
 829              		.loc 1 302 0
 830 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 831 0010 9BB2     		uxth	r3, r3
 832 0012 1B02     		lsls	r3, r3, #8
 833 0014 9BB2     		uxth	r3, r3
 834 0016 03F58043 		add	r3, r3, #16384
 835 001a 2433     		adds	r3, r3, #36
 836 001c 9AB2     		uxth	r2, r3
 837 001e BB88     		ldrh	r3, [r7, #4]
 838 0020 1046     		mov	r0, r2
 839 0022 1946     		mov	r1, r3
 840 0024 FFF7FEFF 		bl	spi_dma_send2B
 303:App/STM32F4-Discovery/W5200.c **** }
 841              		.loc 1 303 0
 842 0028 0837     		adds	r7, r7, #8
 843 002a BD46     		mov	sp, r7
 844              		@ sp needed
 845 002c 80BD     		pop	{r7, pc}
 846              		.cfi_endproc
 847              	.LFE120:
 849 002e 00BF     		.section	.text.get_RXRSR,"ax",%progbits
 850              		.align	2
 851              		.thumb
 852              		.thumb_func
 854              	get_RXRSR:
 855              	.LFB121:
 304:App/STM32F4-Discovery/W5200.c **** 
 305:App/STM32F4-Discovery/W5200.c **** static uint16_t get_RXRSR(uint8_t sck_fd)
 306:App/STM32F4-Discovery/W5200.c **** {
 856              		.loc 1 306 0
 857              		.cfi_startproc
 858              		@ args = 0, pretend = 0, frame = 16
 859              		@ frame_needed = 1, uses_anonymous_args = 0
 860 0000 80B5     		push	{r7, lr}
 861              	.LCFI33:
 862              		.cfi_def_cfa_offset 8
 863              		.cfi_offset 7, -8
 864              		.cfi_offset 14, -4
 865 0002 84B0     		sub	sp, sp, #16
 866              	.LCFI34:
 867              		.cfi_def_cfa_offset 24
 868 0004 00AF     		add	r7, sp, #0
 869              	.LCFI35:
 870              		.cfi_def_cfa_register 7
 871 0006 0346     		mov	r3, r0
 872 0008 FB71     		strb	r3, [r7, #7]
 307:App/STM32F4-Discovery/W5200.c **** 	uint8_t var[2]; 
 308:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_RX_RSR(sck_fd), 2);
 873              		.loc 1 308 0
 874 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 875 000c 9BB2     		uxth	r3, r3
 876 000e 1B02     		lsls	r3, r3, #8
 877 0010 9BB2     		uxth	r3, r3
 878 0012 03F58043 		add	r3, r3, #16384
 879 0016 2633     		adds	r3, r3, #38
 880 0018 9BB2     		uxth	r3, r3
 881 001a 1846     		mov	r0, r3
 882 001c 0221     		movs	r1, #2
 883 001e FFF7FEFF 		bl	spi_dma_read
 309:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 2);
 884              		.loc 1 309 0
 885 0022 084A     		ldr	r2, .L37
 886 0024 07F10C03 		add	r3, r7, #12
 887 0028 1288     		ldrh	r2, [r2]	@ unaligned
 888 002a 1A80     		strh	r2, [r3]	@ unaligned
 310:App/STM32F4-Discovery/W5200.c **** 	
 311:App/STM32F4-Discovery/W5200.c **** 	return ((var[0] << 8) | var[1] );
 889              		.loc 1 311 0
 890 002c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 891 002e 1B02     		lsls	r3, r3, #8
 892 0030 9AB2     		uxth	r2, r3
 893 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 894 0034 1343     		orrs	r3, r3, r2
 895 0036 9BB2     		uxth	r3, r3
 896 0038 9BB2     		uxth	r3, r3
 312:App/STM32F4-Discovery/W5200.c **** 
 313:App/STM32F4-Discovery/W5200.c **** }
 897              		.loc 1 313 0
 898 003a 1846     		mov	r0, r3
 899 003c 1037     		adds	r7, r7, #16
 900 003e BD46     		mov	sp, r7
 901              		@ sp needed
 902 0040 80BD     		pop	{r7, pc}
 903              	.L38:
 904 0042 00BF     		.align	2
 905              	.L37:
 906 0044 04000000 		.word	bufferRX+4
 907              		.cfi_endproc
 908              	.LFE121:
 910              		.section	.text.get_RXRD,"ax",%progbits
 911              		.align	2
 912              		.thumb
 913              		.thumb_func
 915              	get_RXRD:
 916              	.LFB122:
 314:App/STM32F4-Discovery/W5200.c **** 
 315:App/STM32F4-Discovery/W5200.c **** static uint16_t get_RXRD(uint8_t sck_fd)
 316:App/STM32F4-Discovery/W5200.c **** {
 917              		.loc 1 316 0
 918              		.cfi_startproc
 919              		@ args = 0, pretend = 0, frame = 16
 920              		@ frame_needed = 1, uses_anonymous_args = 0
 921 0000 80B5     		push	{r7, lr}
 922              	.LCFI36:
 923              		.cfi_def_cfa_offset 8
 924              		.cfi_offset 7, -8
 925              		.cfi_offset 14, -4
 926 0002 84B0     		sub	sp, sp, #16
 927              	.LCFI37:
 928              		.cfi_def_cfa_offset 24
 929 0004 00AF     		add	r7, sp, #0
 930              	.LCFI38:
 931              		.cfi_def_cfa_register 7
 932 0006 0346     		mov	r3, r0
 933 0008 FB71     		strb	r3, [r7, #7]
 317:App/STM32F4-Discovery/W5200.c **** 	uint8_t var[2]; 
 318:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_RX_RD(sck_fd), 2 );
 934              		.loc 1 318 0
 935 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 936 000c 9BB2     		uxth	r3, r3
 937 000e 1B02     		lsls	r3, r3, #8
 938 0010 9BB2     		uxth	r3, r3
 939 0012 03F58043 		add	r3, r3, #16384
 940 0016 2833     		adds	r3, r3, #40
 941 0018 9BB2     		uxth	r3, r3
 942 001a 1846     		mov	r0, r3
 943 001c 0221     		movs	r1, #2
 944 001e FFF7FEFF 		bl	spi_dma_read
 319:App/STM32F4-Discovery/W5200.c **** 	memcpy(&var, bufferRX+4, 2);
 945              		.loc 1 319 0
 946 0022 084A     		ldr	r2, .L41
 947 0024 07F10C03 		add	r3, r7, #12
 948 0028 1288     		ldrh	r2, [r2]	@ unaligned
 949 002a 1A80     		strh	r2, [r3]	@ unaligned
 320:App/STM32F4-Discovery/W5200.c **** 	
 321:App/STM32F4-Discovery/W5200.c **** 	return ((var[0] << 8) | var[1] );
 950              		.loc 1 321 0
 951 002c 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 952 002e 1B02     		lsls	r3, r3, #8
 953 0030 9AB2     		uxth	r2, r3
 954 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 955 0034 1343     		orrs	r3, r3, r2
 956 0036 9BB2     		uxth	r3, r3
 957 0038 9BB2     		uxth	r3, r3
 322:App/STM32F4-Discovery/W5200.c **** }
 958              		.loc 1 322 0
 959 003a 1846     		mov	r0, r3
 960 003c 1037     		adds	r7, r7, #16
 961 003e BD46     		mov	sp, r7
 962              		@ sp needed
 963 0040 80BD     		pop	{r7, pc}
 964              	.L42:
 965 0042 00BF     		.align	2
 966              	.L41:
 967 0044 04000000 		.word	bufferRX+4
 968              		.cfi_endproc
 969              	.LFE122:
 971              		.section	.text.set_RXRD,"ax",%progbits
 972              		.align	2
 973              		.thumb
 974              		.thumb_func
 976              	set_RXRD:
 977              	.LFB123:
 323:App/STM32F4-Discovery/W5200.c **** 
 324:App/STM32F4-Discovery/W5200.c **** static void set_RXRD(uint8_t sck_fd, uint16_t val)
 325:App/STM32F4-Discovery/W5200.c **** {
 978              		.loc 1 325 0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 8
 981              		@ frame_needed = 1, uses_anonymous_args = 0
 982 0000 80B5     		push	{r7, lr}
 983              	.LCFI39:
 984              		.cfi_def_cfa_offset 8
 985              		.cfi_offset 7, -8
 986              		.cfi_offset 14, -4
 987 0002 82B0     		sub	sp, sp, #8
 988              	.LCFI40:
 989              		.cfi_def_cfa_offset 16
 990 0004 00AF     		add	r7, sp, #0
 991              	.LCFI41:
 992              		.cfi_def_cfa_register 7
 993 0006 0246     		mov	r2, r0
 994 0008 0B46     		mov	r3, r1
 995 000a FA71     		strb	r2, [r7, #7]
 996 000c BB80     		strh	r3, [r7, #4]	@ movhi
 326:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send2B(W5200_Sn_RX_RD(sck_fd), val);
 997              		.loc 1 326 0
 998 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 999 0010 9BB2     		uxth	r3, r3
 1000 0012 1B02     		lsls	r3, r3, #8
 1001 0014 9BB2     		uxth	r3, r3
 1002 0016 03F58043 		add	r3, r3, #16384
 1003 001a 2833     		adds	r3, r3, #40
 1004 001c 9AB2     		uxth	r2, r3
 1005 001e BB88     		ldrh	r3, [r7, #4]
 1006 0020 1046     		mov	r0, r2
 1007 0022 1946     		mov	r1, r3
 1008 0024 FFF7FEFF 		bl	spi_dma_send2B
 327:App/STM32F4-Discovery/W5200.c **** }
 1009              		.loc 1 327 0
 1010 0028 0837     		adds	r7, r7, #8
 1011 002a BD46     		mov	sp, r7
 1012              		@ sp needed
 1013 002c 80BD     		pop	{r7, pc}
 1014              		.cfi_endproc
 1015              	.LFE123:
 1017 002e 00BF     		.section	.text.write_memory,"ax",%progbits
 1018              		.align	2
 1019              		.global	write_memory
 1020              		.thumb
 1021              		.thumb_func
 1023              	write_memory:
 1024              	.LFB124:
 328:App/STM32F4-Discovery/W5200.c **** //===============================================================================================//
 329:App/STM32F4-Discovery/W5200.c **** //		func write_memory 
 330:App/STM32F4-Discovery/W5200.c **** //===============================================================================================//
 331:App/STM32F4-Discovery/W5200.c **** 
 332:App/STM32F4-Discovery/W5200.c **** 
 333:App/STM32F4-Discovery/W5200.c **** void write_memory(uint8_t sck_fd, uint16_t write_ptr, uint8_t *buf, uint16_t len)
 334:App/STM32F4-Discovery/W5200.c **** {
 1025              		.loc 1 334 0
 1026              		.cfi_startproc
 1027              		@ args = 0, pretend = 0, frame = 24
 1028              		@ frame_needed = 1, uses_anonymous_args = 0
 1029 0000 80B5     		push	{r7, lr}
 1030              	.LCFI42:
 1031              		.cfi_def_cfa_offset 8
 1032              		.cfi_offset 7, -8
 1033              		.cfi_offset 14, -4
 1034 0002 86B0     		sub	sp, sp, #24
 1035              	.LCFI43:
 1036              		.cfi_def_cfa_offset 32
 1037 0004 00AF     		add	r7, sp, #0
 1038              	.LCFI44:
 1039              		.cfi_def_cfa_register 7
 1040 0006 BA60     		str	r2, [r7, #8]
 1041 0008 0246     		mov	r2, r0
 1042 000a FA73     		strb	r2, [r7, #15]
 1043 000c 0A46     		mov	r2, r1	@ movhi
 1044 000e BA81     		strh	r2, [r7, #12]	@ movhi
 1045 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 335:App/STM32F4-Discovery/W5200.c **** 
 336:App/STM32F4-Discovery/W5200.c **** 	/*! 	\fn void write_memory(uint8_t sck_fd, uint16_t write_ptr, uint8_t *buf, uint16_t len)
 337:App/STM32F4-Discovery/W5200.c ****  	*	\brief write memory buffer to SPI line 
 338:App/STM32F4-Discovery/W5200.c ****  	*	\param sck_fd - socket file descriptor returned by function socket
 339:App/STM32F4-Discovery/W5200.c **** 		\param write_ptr - write pointer to memory 
 340:App/STM32F4-Discovery/W5200.c **** 		\param *buf - pointer to memory buffer 
 341:App/STM32F4-Discovery/W5200.c **** 		\param len - length of memory block 
 342:App/STM32F4-Discovery/W5200.c **** 	*/
 343:App/STM32F4-Discovery/W5200.c **** 	uint16_t	memory_addr, offset;
 344:App/STM32F4-Discovery/W5200.c **** 	uint16_t	upper_size, left_size;
 345:App/STM32F4-Discovery/W5200.c **** 
 346:App/STM32F4-Discovery/W5200.c **** 	// calculate offset address 
 347:App/STM32F4-Discovery/W5200.c **** 	offset = write_ptr & 0x07ff;
 1046              		.loc 1 347 0
 1047 0012 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1048 0014 C3F30A03 		ubfx	r3, r3, #0, #11
 1049 0018 FB82     		strh	r3, [r7, #22]	@ movhi
 348:App/STM32F4-Discovery/W5200.c **** 
 349:App/STM32F4-Discovery/W5200.c **** 	// calculate physical memory start address
 350:App/STM32F4-Discovery/W5200.c **** 	memory_addr = W5200_SOCKET_TX_BASE(sck_fd)  + offset;
 1050              		.loc 1 350 0
 1051 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1052 001c 9BB2     		uxth	r3, r3
 1053 001e DB00     		lsls	r3, r3, #3
 1054 0020 9BB2     		uxth	r3, r3
 1055 0022 1B02     		lsls	r3, r3, #8
 1056 0024 9AB2     		uxth	r2, r3
 1057 0026 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1058 0028 1344     		add	r3, r3, r2
 1059 002a 9BB2     		uxth	r3, r3
 1060 002c A3F50043 		sub	r3, r3, #32768
 1061 0030 BB82     		strh	r3, [r7, #20]	@ movhi
 351:App/STM32F4-Discovery/W5200.c **** 
 352:App/STM32F4-Discovery/W5200.c **** 	// if overflow socket TX memory ?
 353:App/STM32F4-Discovery/W5200.c **** 	if(offset + len > W5200_Sn_TXMEM_SIZE(sck_fd) +1 ){
 1062              		.loc 1 353 0
 1063 0032 FA8A     		ldrh	r2, [r7, #22]
 1064 0034 FB88     		ldrh	r3, [r7, #6]
 1065 0036 1A44     		add	r2, r2, r3
 1066 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1067 003a 1B02     		lsls	r3, r3, #8
 1068 003c 03F58043 		add	r3, r3, #16384
 1069 0040 2033     		adds	r3, r3, #32
 1070 0042 9A42     		cmp	r2, r3
 1071 0044 2ADD     		ble	.L45
 354:App/STM32F4-Discovery/W5200.c **** 
 355:App/STM32F4-Discovery/W5200.c **** 		// copy upper_size bytes
 356:App/STM32F4-Discovery/W5200.c **** 		upper_size = W5200_SOCKET_TX_BASE(sck_fd) - offset;
 1072              		.loc 1 356 0
 1073 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1074 0048 9BB2     		uxth	r3, r3
 1075 004a DB00     		lsls	r3, r3, #3
 1076 004c 9BB2     		uxth	r3, r3
 1077 004e 1B02     		lsls	r3, r3, #8
 1078 0050 9AB2     		uxth	r2, r3
 1079 0052 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1080 0054 D31A     		subs	r3, r2, r3
 1081 0056 9BB2     		uxth	r3, r3
 1082 0058 A3F50043 		sub	r3, r3, #32768
 1083 005c 7B82     		strh	r3, [r7, #18]	@ movhi
 357:App/STM32F4-Discovery/W5200.c **** 		spi_dma_send( memory_addr,upper_size, buf);
 1084              		.loc 1 357 0
 1085 005e BA8A     		ldrh	r2, [r7, #20]
 1086 0060 7B8A     		ldrh	r3, [r7, #18]
 1087 0062 1046     		mov	r0, r2
 1088 0064 1946     		mov	r1, r3
 1089 0066 BA68     		ldr	r2, [r7, #8]
 1090 0068 FFF7FEFF 		bl	spi_dma_send
 358:App/STM32F4-Discovery/W5200.c **** 		buf += upper_size;
 1091              		.loc 1 358 0
 1092 006c 7B8A     		ldrh	r3, [r7, #18]
 1093 006e BA68     		ldr	r2, [r7, #8]
 1094 0070 1344     		add	r3, r3, r2
 1095 0072 BB60     		str	r3, [r7, #8]
 359:App/STM32F4-Discovery/W5200.c **** 
 360:App/STM32F4-Discovery/W5200.c **** 		// copy left size bytes
 361:App/STM32F4-Discovery/W5200.c **** 		left_size = len - upper_size;
 1096              		.loc 1 361 0
 1097 0074 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1098 0076 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1099 0078 D31A     		subs	r3, r2, r3
 1100 007a 3B82     		strh	r3, [r7, #16]	@ movhi
 362:App/STM32F4-Discovery/W5200.c **** 		spi_dma_send( W5200_SOCKET_TX_BASE(sck_fd),
 1101              		.loc 1 362 0
 1102 007c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1103 007e 9BB2     		uxth	r3, r3
 1104 0080 DB00     		lsls	r3, r3, #3
 1105 0082 9BB2     		uxth	r3, r3
 1106 0084 1B02     		lsls	r3, r3, #8
 1107 0086 9BB2     		uxth	r3, r3
 1108 0088 A3F50043 		sub	r3, r3, #32768
 1109 008c 9AB2     		uxth	r2, r3
 1110 008e 3B8A     		ldrh	r3, [r7, #16]
 1111 0090 1046     		mov	r0, r2
 1112 0092 1946     		mov	r1, r3
 1113 0094 BA68     		ldr	r2, [r7, #8]
 1114 0096 FFF7FEFF 		bl	spi_dma_send
 1115 009a 06E0     		b	.L44
 1116              	.L45:
 363:App/STM32F4-Discovery/W5200.c **** 		left_size,  buf);
 364:App/STM32F4-Discovery/W5200.c **** 
 365:App/STM32F4-Discovery/W5200.c **** 	}else{
 366:App/STM32F4-Discovery/W5200.c **** 
 367:App/STM32F4-Discovery/W5200.c **** 		// copy len size bytes
 368:App/STM32F4-Discovery/W5200.c **** 		spi_dma_send( memory_addr,len,  buf);
 1117              		.loc 1 368 0
 1118 009c BA8A     		ldrh	r2, [r7, #20]
 1119 009e FB88     		ldrh	r3, [r7, #6]
 1120 00a0 1046     		mov	r0, r2
 1121 00a2 1946     		mov	r1, r3
 1122 00a4 BA68     		ldr	r2, [r7, #8]
 1123 00a6 FFF7FEFF 		bl	spi_dma_send
 1124              	.L44:
 369:App/STM32F4-Discovery/W5200.c **** 	}
 370:App/STM32F4-Discovery/W5200.c **** }
 1125              		.loc 1 370 0
 1126 00aa 1837     		adds	r7, r7, #24
 1127 00ac BD46     		mov	sp, r7
 1128              		@ sp needed
 1129 00ae 80BD     		pop	{r7, pc}
 1130              		.cfi_endproc
 1131              	.LFE124:
 1133              		.section	.text.read_memory,"ax",%progbits
 1134              		.align	2
 1135              		.global	read_memory
 1136              		.thumb
 1137              		.thumb_func
 1139              	read_memory:
 1140              	.LFB125:
 371:App/STM32F4-Discovery/W5200.c **** 
 372:App/STM32F4-Discovery/W5200.c **** 
 373:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 374:App/STM32F4-Discovery/W5200.c **** // 			func read_memory
 375:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 376:App/STM32F4-Discovery/W5200.c **** 
 377:App/STM32F4-Discovery/W5200.c **** 
 378:App/STM32F4-Discovery/W5200.c **** void	read_memory(uint8_t sck_fd, uint16_t read_ptr, uint8_t *buf, uint16_t len)
 379:App/STM32F4-Discovery/W5200.c **** {
 1141              		.loc 1 379 0
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 24
 1144              		@ frame_needed = 1, uses_anonymous_args = 0
 1145 0000 80B5     		push	{r7, lr}
 1146              	.LCFI45:
 1147              		.cfi_def_cfa_offset 8
 1148              		.cfi_offset 7, -8
 1149              		.cfi_offset 14, -4
 1150 0002 86B0     		sub	sp, sp, #24
 1151              	.LCFI46:
 1152              		.cfi_def_cfa_offset 32
 1153 0004 00AF     		add	r7, sp, #0
 1154              	.LCFI47:
 1155              		.cfi_def_cfa_register 7
 1156 0006 BA60     		str	r2, [r7, #8]
 1157 0008 0246     		mov	r2, r0
 1158 000a FA73     		strb	r2, [r7, #15]
 1159 000c 0A46     		mov	r2, r1	@ movhi
 1160 000e BA81     		strh	r2, [r7, #12]	@ movhi
 1161 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 380:App/STM32F4-Discovery/W5200.c **** 	/*! 	\fn read_memory(uint8_t sck_fd, uint16_t read_ptr, uint8_t *buf, uint16_t len)
 381:App/STM32F4-Discovery/W5200.c ****  	*	\brief read memory buffer from SPI line 
 382:App/STM32F4-Discovery/W5200.c ****  	*	\param sck_fd - socket file descriptor returned by function socket
 383:App/STM32F4-Discovery/W5200.c **** 	*	\param write_ptr - read pointer to memory 
 384:App/STM32F4-Discovery/W5200.c **** 	*	\param *buf - pointer to memory buffer 
 385:App/STM32F4-Discovery/W5200.c **** 	*	\param len - length of memory block 
 386:App/STM32F4-Discovery/W5200.c **** 	*/
 387:App/STM32F4-Discovery/W5200.c **** 
 388:App/STM32F4-Discovery/W5200.c **** 	uint16_t	memory_addr, offset;
 389:App/STM32F4-Discovery/W5200.c **** 	uint16_t	upper_size, left_size;
 390:App/STM32F4-Discovery/W5200.c **** 
 391:App/STM32F4-Discovery/W5200.c **** 	// calculate offset address 
 392:App/STM32F4-Discovery/W5200.c **** 	offset = read_ptr & 0x07ff;
 1162              		.loc 1 392 0
 1163 0012 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1164 0014 C3F30A03 		ubfx	r3, r3, #0, #11
 1165 0018 FB82     		strh	r3, [r7, #22]	@ movhi
 393:App/STM32F4-Discovery/W5200.c **** 
 394:App/STM32F4-Discovery/W5200.c **** 	// calculate physical memory start address
 395:App/STM32F4-Discovery/W5200.c **** 	memory_addr = W5200_SOCKET_RX_BASE(sck_fd)  + offset;
 1166              		.loc 1 395 0
 1167 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1168 001c 9BB2     		uxth	r3, r3
 1169 001e DB00     		lsls	r3, r3, #3
 1170 0020 9BB2     		uxth	r3, r3
 1171 0022 1B02     		lsls	r3, r3, #8
 1172 0024 9AB2     		uxth	r2, r3
 1173 0026 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1174 0028 1344     		add	r3, r3, r2
 1175 002a 9BB2     		uxth	r3, r3
 1176 002c A3F58043 		sub	r3, r3, #16384
 1177 0030 BB82     		strh	r3, [r7, #20]	@ movhi
 396:App/STM32F4-Discovery/W5200.c **** 
 397:App/STM32F4-Discovery/W5200.c **** 	// if overflow socket RX memory ?
 398:App/STM32F4-Discovery/W5200.c **** 	if(offset + len > 0x0800){
 1178              		.loc 1 398 0
 1179 0032 FA8A     		ldrh	r2, [r7, #22]
 1180 0034 FB88     		ldrh	r3, [r7, #6]
 1181 0036 1344     		add	r3, r3, r2
 1182 0038 B3F5006F 		cmp	r3, #2048
 1183 003c 2FDD     		ble	.L48
 399:App/STM32F4-Discovery/W5200.c **** 
 400:App/STM32F4-Discovery/W5200.c **** 		// copy upper_size bytes
 401:App/STM32F4-Discovery/W5200.c **** 		upper_size = 0x0800 - offset;
 1184              		.loc 1 401 0
 1185 003e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 1186 0040 C3F50063 		rsb	r3, r3, #2048
 1187 0044 7B82     		strh	r3, [r7, #18]	@ movhi
 402:App/STM32F4-Discovery/W5200.c **** 		spi_dma_read( memory_addr,upper_size);
 1188              		.loc 1 402 0
 1189 0046 BA8A     		ldrh	r2, [r7, #20]
 1190 0048 7B8A     		ldrh	r3, [r7, #18]
 1191 004a 1046     		mov	r0, r2
 1192 004c 1946     		mov	r1, r3
 1193 004e FFF7FEFF 		bl	spi_dma_read
 403:App/STM32F4-Discovery/W5200.c **** 		memcpy(buf, bufferRX+4, upper_size);
 1194              		.loc 1 403 0
 1195 0052 7B8A     		ldrh	r3, [r7, #18]
 1196 0054 B868     		ldr	r0, [r7, #8]
 1197 0056 1949     		ldr	r1, .L50
 1198 0058 1A46     		mov	r2, r3
 1199 005a FFF7FEFF 		bl	memcpy
 404:App/STM32F4-Discovery/W5200.c **** 
 405:App/STM32F4-Discovery/W5200.c **** 		buf += upper_size;
 1200              		.loc 1 405 0
 1201 005e 7B8A     		ldrh	r3, [r7, #18]
 1202 0060 BA68     		ldr	r2, [r7, #8]
 1203 0062 1344     		add	r3, r3, r2
 1204 0064 BB60     		str	r3, [r7, #8]
 406:App/STM32F4-Discovery/W5200.c **** 
 407:App/STM32F4-Discovery/W5200.c **** 		// copy left size bytes
 408:App/STM32F4-Discovery/W5200.c **** 		left_size = len - upper_size;
 1205              		.loc 1 408 0
 1206 0066 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1207 0068 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1208 006a D31A     		subs	r3, r2, r3
 1209 006c 3B82     		strh	r3, [r7, #16]	@ movhi
 409:App/STM32F4-Discovery/W5200.c **** 		spi_dma_read(W5200_SOCKET_RX_BASE(sck_fd), left_size);
 1210              		.loc 1 409 0
 1211 006e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1212 0070 9BB2     		uxth	r3, r3
 1213 0072 DB00     		lsls	r3, r3, #3
 1214 0074 9BB2     		uxth	r3, r3
 1215 0076 1B02     		lsls	r3, r3, #8
 1216 0078 9BB2     		uxth	r3, r3
 1217 007a A3F58043 		sub	r3, r3, #16384
 1218 007e 9AB2     		uxth	r2, r3
 1219 0080 3B8A     		ldrh	r3, [r7, #16]
 1220 0082 1046     		mov	r0, r2
 1221 0084 1946     		mov	r1, r3
 1222 0086 FFF7FEFF 		bl	spi_dma_read
 410:App/STM32F4-Discovery/W5200.c **** 		memcpy(buf+upper_size, bufferRX+4, left_size);
 1223              		.loc 1 410 0
 1224 008a 7B8A     		ldrh	r3, [r7, #18]
 1225 008c BA68     		ldr	r2, [r7, #8]
 1226 008e 1A44     		add	r2, r2, r3
 1227 0090 3B8A     		ldrh	r3, [r7, #16]
 1228 0092 1046     		mov	r0, r2
 1229 0094 0949     		ldr	r1, .L50
 1230 0096 1A46     		mov	r2, r3
 1231 0098 FFF7FEFF 		bl	memcpy
 1232 009c 0BE0     		b	.L47
 1233              	.L48:
 411:App/STM32F4-Discovery/W5200.c **** 	}else{
 412:App/STM32F4-Discovery/W5200.c **** 
 413:App/STM32F4-Discovery/W5200.c **** 		// copy len size bytes
 414:App/STM32F4-Discovery/W5200.c **** 		spi_dma_read( memory_addr,len);
 1234              		.loc 1 414 0
 1235 009e BA8A     		ldrh	r2, [r7, #20]
 1236 00a0 FB88     		ldrh	r3, [r7, #6]
 1237 00a2 1046     		mov	r0, r2
 1238 00a4 1946     		mov	r1, r3
 1239 00a6 FFF7FEFF 		bl	spi_dma_read
 415:App/STM32F4-Discovery/W5200.c **** 		memcpy(buf, bufferRX+4, len);
 1240              		.loc 1 415 0
 1241 00aa FB88     		ldrh	r3, [r7, #6]
 1242 00ac B868     		ldr	r0, [r7, #8]
 1243 00ae 0349     		ldr	r1, .L50
 1244 00b0 1A46     		mov	r2, r3
 1245 00b2 FFF7FEFF 		bl	memcpy
 1246              	.L47:
 416:App/STM32F4-Discovery/W5200.c **** 	}
 417:App/STM32F4-Discovery/W5200.c **** }
 1247              		.loc 1 417 0
 1248 00b6 1837     		adds	r7, r7, #24
 1249 00b8 BD46     		mov	sp, r7
 1250              		@ sp needed
 1251 00ba 80BD     		pop	{r7, pc}
 1252              	.L51:
 1253              		.align	2
 1254              	.L50:
 1255 00bc 04000000 		.word	bufferRX+4
 1256              		.cfi_endproc
 1257              	.LFE125:
 1259              		.section	.text.socket,"ax",%progbits
 1260              		.align	2
 1261              		.global	socket
 1262              		.thumb
 1263              		.thumb_func
 1265              	socket:
 1266              	.LFB126:
 418:App/STM32F4-Discovery/W5200.c **** 
 419:App/STM32F4-Discovery/W5200.c **** /*==========================================================================
 420:App/STM32F4-Discovery/W5200.c **** 	socket()	create socket, handle open
 421:App/STM32F4-Discovery/W5200.c **** 		ip_proto, RAW mode only.
 422:App/STM32F4-Discovery/W5200.c **** ===========================================================================*/
 423:App/STM32F4-Discovery/W5200.c **** 
 424:App/STM32F4-Discovery/W5200.c **** uint8_t	socket(uint8_t  mode, uint16_t  port, uint8_t ip_proto)
 425:App/STM32F4-Discovery/W5200.c **** {
 1267              		.loc 1 425 0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 16
 1270              		@ frame_needed = 1, uses_anonymous_args = 0
 1271 0000 80B5     		push	{r7, lr}
 1272              	.LCFI48:
 1273              		.cfi_def_cfa_offset 8
 1274              		.cfi_offset 7, -8
 1275              		.cfi_offset 14, -4
 1276 0002 84B0     		sub	sp, sp, #16
 1277              	.LCFI49:
 1278              		.cfi_def_cfa_offset 24
 1279 0004 00AF     		add	r7, sp, #0
 1280              	.LCFI50:
 1281              		.cfi_def_cfa_register 7
 1282 0006 1346     		mov	r3, r2
 1283 0008 0246     		mov	r2, r0
 1284 000a FA71     		strb	r2, [r7, #7]
 1285 000c 0A46     		mov	r2, r1	@ movhi
 1286 000e BA80     		strh	r2, [r7, #4]	@ movhi
 1287 0010 BB71     		strb	r3, [r7, #6]
 426:App/STM32F4-Discovery/W5200.c **** 	uint8_t	sck_fd;
 427:App/STM32F4-Discovery/W5200.c **** 	uint8_t	stat;
 428:App/STM32F4-Discovery/W5200.c **** 
 429:App/STM32F4-Discovery/W5200.c **** 	
 430:App/STM32F4-Discovery/W5200.c **** 
 431:App/STM32F4-Discovery/W5200.c **** 	// check free socket exists? 
 432:App/STM32F4-Discovery/W5200.c **** 	for(sck_fd = 0; sck_fd < W5200_MAX_SOCKETS; sck_fd++){
 1288              		.loc 1 432 0
 1289 0012 0023     		movs	r3, #0
 1290 0014 FB73     		strb	r3, [r7, #15]
 1291 0016 0CE0     		b	.L53
 1292              	.L56:
 433:App/STM32F4-Discovery/W5200.c **** 		if(socket_flg[sck_fd] == 0){
 1293              		.loc 1 433 0
 1294 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1295 001a 4C4A     		ldr	r2, .L68
 1296 001c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1297 001e 002B     		cmp	r3, #0
 1298 0020 04D1     		bne	.L54
 434:App/STM32F4-Discovery/W5200.c **** 			socket_flg[sck_fd] = 1;
 1299              		.loc 1 434 0
 1300 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1301 0024 494A     		ldr	r2, .L68
 1302 0026 0121     		movs	r1, #1
 1303 0028 D154     		strb	r1, [r2, r3]
 435:App/STM32F4-Discovery/W5200.c **** 			break;
 1304              		.loc 1 435 0
 1305 002a 05E0     		b	.L55
 1306              	.L54:
 432:App/STM32F4-Discovery/W5200.c **** 	for(sck_fd = 0; sck_fd < W5200_MAX_SOCKETS; sck_fd++){
 1307              		.loc 1 432 0
 1308 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1309 002e 0133     		adds	r3, r3, #1
 1310 0030 FB73     		strb	r3, [r7, #15]
 1311              	.L53:
 432:App/STM32F4-Discovery/W5200.c **** 	for(sck_fd = 0; sck_fd < W5200_MAX_SOCKETS; sck_fd++){
 1312              		.loc 1 432 0 is_stmt 0 discriminator 1
 1313 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1314 0034 072B     		cmp	r3, #7
 1315 0036 EFD9     		bls	.L56
 1316              	.L55:
 436:App/STM32F4-Discovery/W5200.c **** 		}
 437:App/STM32F4-Discovery/W5200.c **** 	}
 438:App/STM32F4-Discovery/W5200.c **** 	if(sck_fd >= W5200_MAX_SOCKETS) return -1;	// no more sockets.
 1317              		.loc 1 438 0 is_stmt 1
 1318 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1319 003a 072B     		cmp	r3, #7
 1320 003c 01D9     		bls	.L57
 1321              		.loc 1 438 0 is_stmt 0 discriminator 1
 1322 003e FF23     		movs	r3, #255
 1323 0040 7FE0     		b	.L67
 1324              	.L57:
 439:App/STM32F4-Discovery/W5200.c **** 	// check mode parameter
 440:App/STM32F4-Discovery/W5200.c **** 	if((mode & 0x0f) > W5200_MR_PPPOE_ENABLE) return -1;	// mode error.
 1325              		.loc 1 440 0 is_stmt 1
 1326 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1327 0044 03F00F03 		and	r3, r3, #15
 1328 0048 082B     		cmp	r3, #8
 1329 004a 01DD     		ble	.L59
 1330              		.loc 1 440 0 is_stmt 0 discriminator 1
 1331 004c FF23     		movs	r3, #255
 1332 004e 78E0     		b	.L67
 1333              	.L59:
 441:App/STM32F4-Discovery/W5200.c **** 	if(((mode & 0x0f) != W5200_Sn_MR_UDP) && (mode & W5200_Sn_MR_MULTI)) return -1; // MULTI is UDP on
 1334              		.loc 1 441 0 is_stmt 1
 1335 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1336 0052 03F00F03 		and	r3, r3, #15
 1337 0056 022B     		cmp	r3, #2
 1338 0058 05D0     		beq	.L60
 1339              		.loc 1 441 0 is_stmt 0 discriminator 1
 1340 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1341 005c 5BB2     		sxtb	r3, r3
 1342 005e 002B     		cmp	r3, #0
 1343 0060 01DA     		bge	.L60
 1344 0062 FF23     		movs	r3, #255
 1345 0064 6DE0     		b	.L67
 1346              	.L60:
 442:App/STM32F4-Discovery/W5200.c **** 	if(((mode & 0x0f) != W5200_Sn_MR_TCP) && (mode & W5200_Sn_MR_ND)) return -1; // ND is TCP only.
 1347              		.loc 1 442 0 is_stmt 1
 1348 0066 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1349 0068 03F00F03 		and	r3, r3, #15
 1350 006c 012B     		cmp	r3, #1
 1351 006e 06D0     		beq	.L61
 1352              		.loc 1 442 0 is_stmt 0 discriminator 1
 1353 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1354 0072 03F02003 		and	r3, r3, #32
 1355 0076 002B     		cmp	r3, #0
 1356 0078 01D0     		beq	.L61
 1357 007a FF23     		movs	r3, #255
 1358 007c 61E0     		b	.L67
 1359              	.L61:
 443:App/STM32F4-Discovery/W5200.c **** 
 444:App/STM32F4-Discovery/W5200.c **** 	// set MODE register
 445:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_MR(sck_fd) , mode);
 1360              		.loc 1 445 0 is_stmt 1
 1361 007e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1362 0080 9BB2     		uxth	r3, r3
 1363 0082 1B02     		lsls	r3, r3, #8
 1364 0084 9BB2     		uxth	r3, r3
 1365 0086 03F58043 		add	r3, r3, #16384
 1366 008a 9AB2     		uxth	r2, r3
 1367 008c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1368 008e 1046     		mov	r0, r2
 1369 0090 1946     		mov	r1, r3
 1370 0092 FFF7FEFF 		bl	spi_dma_sendByte
 446:App/STM32F4-Discovery/W5200.c **** 	//socket_mode[sck_fd] = mode & 0x0f;	// omitting ND/MULTICAST
 447:App/STM32F4-Discovery/W5200.c **** 	mode &= 0x0f;
 1371              		.loc 1 447 0
 1372 0096 FB79     		ldrb	r3, [r7, #7]
 1373 0098 03F00F03 		and	r3, r3, #15
 1374 009c FB71     		strb	r3, [r7, #7]
 448:App/STM32F4-Discovery/W5200.c **** 
 449:App/STM32F4-Discovery/W5200.c **** 	uint8_t prt[2];
 450:App/STM32F4-Discovery/W5200.c **** 
 451:App/STM32F4-Discovery/W5200.c **** 	// set PORT, PROTOCOL 
 452:App/STM32F4-Discovery/W5200.c **** 	switch(mode){
 1375              		.loc 1 452 0
 1376 009e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1377 00a0 012B     		cmp	r3, #1
 1378 00a2 29DB     		blt	.L62
 1379 00a4 022B     		cmp	r3, #2
 1380 00a6 02DD     		ble	.L63
 1381 00a8 032B     		cmp	r3, #3
 1382 00aa 18D0     		beq	.L64
 1383 00ac 24E0     		b	.L62
 1384              	.L63:
 453:App/STM32F4-Discovery/W5200.c **** 	case W5200_Sn_MR_TCP:
 454:App/STM32F4-Discovery/W5200.c **** 	case W5200_Sn_MR_UDP:
 455:App/STM32F4-Discovery/W5200.c **** 
 456:App/STM32F4-Discovery/W5200.c **** 		// split port for sending on two 8bits
 457:App/STM32F4-Discovery/W5200.c **** 		prt[0] = (port & 0xff00) >> 8;
 1385              		.loc 1 457 0
 1386 00ae BB88     		ldrh	r3, [r7, #4]
 1387 00b0 1B0A     		lsrs	r3, r3, #8
 1388 00b2 9BB2     		uxth	r3, r3
 1389 00b4 DBB2     		uxtb	r3, r3
 1390 00b6 3B73     		strb	r3, [r7, #12]
 458:App/STM32F4-Discovery/W5200.c **** 		prt[1] =  (port & 0x00ff);
 1391              		.loc 1 458 0
 1392 00b8 BB88     		ldrh	r3, [r7, #4]	@ movhi
 1393 00ba DBB2     		uxtb	r3, r3
 1394 00bc 7B73     		strb	r3, [r7, #13]
 459:App/STM32F4-Discovery/W5200.c **** 		spi_dma_send(W5200_Sn_PORT(sck_fd), 2 , prt);
 1395              		.loc 1 459 0
 1396 00be FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1397 00c0 9BB2     		uxth	r3, r3
 1398 00c2 1B02     		lsls	r3, r3, #8
 1399 00c4 9BB2     		uxth	r3, r3
 1400 00c6 03F58043 		add	r3, r3, #16384
 1401 00ca 0433     		adds	r3, r3, #4
 1402 00cc 9AB2     		uxth	r2, r3
 1403 00ce 07F10C03 		add	r3, r7, #12
 1404 00d2 1046     		mov	r0, r2
 1405 00d4 0221     		movs	r1, #2
 1406 00d6 1A46     		mov	r2, r3
 1407 00d8 FFF7FEFF 		bl	spi_dma_send
 460:App/STM32F4-Discovery/W5200.c **** 		
 461:App/STM32F4-Discovery/W5200.c **** 		break;
 1408              		.loc 1 461 0
 1409 00dc 0CE0     		b	.L62
 1410              	.L64:
 462:App/STM32F4-Discovery/W5200.c **** 	case W5200_Sn_MR_IPRAW:
 463:App/STM32F4-Discovery/W5200.c **** 		spi_dma_sendByte(W5200_Sn_PROTO(sck_fd), ip_proto);
 1411              		.loc 1 463 0
 1412 00de FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1413 00e0 9BB2     		uxth	r3, r3
 1414 00e2 1B02     		lsls	r3, r3, #8
 1415 00e4 9BB2     		uxth	r3, r3
 1416 00e6 03F58043 		add	r3, r3, #16384
 1417 00ea 1433     		adds	r3, r3, #20
 1418 00ec 9AB2     		uxth	r2, r3
 1419 00ee BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1420 00f0 1046     		mov	r0, r2
 1421 00f2 1946     		mov	r1, r3
 1422 00f4 FFF7FEFF 		bl	spi_dma_sendByte
 1423              	.L62:
 464:App/STM32F4-Discovery/W5200.c **** 	}
 465:App/STM32F4-Discovery/W5200.c **** 
 466:App/STM32F4-Discovery/W5200.c **** 	// execute socket open
 467:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_CR(sck_fd), W5200_Sn_CR_OPEN);
 1424              		.loc 1 467 0
 1425 00f8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1426 00fa 9BB2     		uxth	r3, r3
 1427 00fc 1B02     		lsls	r3, r3, #8
 1428 00fe 9BB2     		uxth	r3, r3
 1429 0100 03F58043 		add	r3, r3, #16384
 1430 0104 0133     		adds	r3, r3, #1
 1431 0106 9BB2     		uxth	r3, r3
 1432 0108 1846     		mov	r0, r3
 1433 010a 0121     		movs	r1, #1
 1434 010c FFF7FEFF 		bl	spi_dma_sendByte
 468:App/STM32F4-Discovery/W5200.c **** 	// wait command complete.
 469:App/STM32F4-Discovery/W5200.c **** 	while(get_CRStatus(sck_fd)  != 0);	// 0 value is command complete. 
 1435              		.loc 1 469 0
 1436 0110 00BF     		nop
 1437              	.L65:
 1438              		.loc 1 469 0 is_stmt 0 discriminator 1
 1439 0112 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1440 0114 1846     		mov	r0, r3
 1441 0116 FFF7FEFF 		bl	get_CRStatus
 1442 011a 0346     		mov	r3, r0
 1443 011c 002B     		cmp	r3, #0
 1444 011e F8D1     		bne	.L65
 470:App/STM32F4-Discovery/W5200.c **** 
 471:App/STM32F4-Discovery/W5200.c **** 	// check status
 472:App/STM32F4-Discovery/W5200.c **** 	if(stat = get_SRStatus(sck_fd) != W5200_Sn_SR_SOCK_INIT) return -1;
 1445              		.loc 1 472 0 is_stmt 1
 1446 0120 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1447 0122 1846     		mov	r0, r3
 1448 0124 FFF7FEFF 		bl	get_SRStatus
 1449 0128 0346     		mov	r3, r0
 1450 012a 132B     		cmp	r3, #19
 1451 012c 0CBF     		ite	eq
 1452 012e 0023     		moveq	r3, #0
 1453 0130 0123     		movne	r3, #1
 1454 0132 DBB2     		uxtb	r3, r3
 1455 0134 BB73     		strb	r3, [r7, #14]
 1456 0136 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1457 0138 002B     		cmp	r3, #0
 1458 013a 01D0     		beq	.L66
 1459              		.loc 1 472 0 is_stmt 0 discriminator 1
 1460 013c FF23     		movs	r3, #255
 1461 013e 00E0     		b	.L67
 1462              	.L66:
 473:App/STM32F4-Discovery/W5200.c **** 
 474:App/STM32F4-Discovery/W5200.c **** 	// success return
 475:App/STM32F4-Discovery/W5200.c **** 	return sck_fd;
 1463              		.loc 1 475 0 is_stmt 1
 1464 0140 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1465              	.L67:
 476:App/STM32F4-Discovery/W5200.c **** }
 1466              		.loc 1 476 0
 1467 0142 1846     		mov	r0, r3
 1468 0144 1037     		adds	r7, r7, #16
 1469 0146 BD46     		mov	sp, r7
 1470              		@ sp needed
 1471 0148 80BD     		pop	{r7, pc}
 1472              	.L69:
 1473 014a 00BF     		.align	2
 1474              	.L68:
 1475 014c 00000000 		.word	socket_flg
 1476              		.cfi_endproc
 1477              	.LFE126:
 1479              		.section	.text.closesocket,"ax",%progbits
 1480              		.align	2
 1481              		.global	closesocket
 1482              		.thumb
 1483              		.thumb_func
 1485              	closesocket:
 1486              	.LFB127:
 477:App/STM32F4-Discovery/W5200.c **** 
 478:App/STM32F4-Discovery/W5200.c **** 
 479:App/STM32F4-Discovery/W5200.c **** /*==========================================================================
 480:App/STM32F4-Discovery/W5200.c **** 	closesocket()	socket handle close
 481:App/STM32F4-Discovery/W5200.c **** ===========================================================================*/
 482:App/STM32F4-Discovery/W5200.c **** 
 483:App/STM32F4-Discovery/W5200.c **** int	closesocket(int sck_fd)
 484:App/STM32F4-Discovery/W5200.c **** {
 1487              		.loc 1 484 0
 1488              		.cfi_startproc
 1489              		@ args = 0, pretend = 0, frame = 8
 1490              		@ frame_needed = 1, uses_anonymous_args = 0
 1491 0000 80B5     		push	{r7, lr}
 1492              	.LCFI51:
 1493              		.cfi_def_cfa_offset 8
 1494              		.cfi_offset 7, -8
 1495              		.cfi_offset 14, -4
 1496 0002 82B0     		sub	sp, sp, #8
 1497              	.LCFI52:
 1498              		.cfi_def_cfa_offset 16
 1499 0004 00AF     		add	r7, sp, #0
 1500              	.LCFI53:
 1501              		.cfi_def_cfa_register 7
 1502 0006 7860     		str	r0, [r7, #4]
 485:App/STM32F4-Discovery/W5200.c **** 	// check asign flag
 486:App/STM32F4-Discovery/W5200.c **** 	if(sck_fd < 0 || sck_fd >=W5200_MAX_SOCKETS||  socket_flg[sck_fd] != 1) return -1;
 1503              		.loc 1 486 0
 1504 0008 7B68     		ldr	r3, [r7, #4]
 1505 000a 002B     		cmp	r3, #0
 1506 000c 08DB     		blt	.L71
 1507              		.loc 1 486 0 is_stmt 0 discriminator 2
 1508 000e 7B68     		ldr	r3, [r7, #4]
 1509 0010 072B     		cmp	r3, #7
 1510 0012 05DC     		bgt	.L71
 1511              		.loc 1 486 0 discriminator 1
 1512 0014 184A     		ldr	r2, .L76
 1513 0016 7B68     		ldr	r3, [r7, #4]
 1514 0018 1344     		add	r3, r3, r2
 1515 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1516 001c 012B     		cmp	r3, #1
 1517 001e 02D0     		beq	.L72
 1518              	.L71:
 1519 0020 4FF0FF33 		mov	r3, #-1
 1520 0024 23E0     		b	.L73
 1521              	.L72:
 487:App/STM32F4-Discovery/W5200.c **** 
 488:App/STM32F4-Discovery/W5200.c **** 	// release socket
 489:App/STM32F4-Discovery/W5200.c **** 	socket_flg[sck_fd] = 0;
 1522              		.loc 1 489 0 is_stmt 1
 1523 0026 144A     		ldr	r2, .L76
 1524 0028 7B68     		ldr	r3, [r7, #4]
 1525 002a 1344     		add	r3, r3, r2
 1526 002c 0022     		movs	r2, #0
 1527 002e 1A70     		strb	r2, [r3]
 490:App/STM32F4-Discovery/W5200.c **** 	
 491:App/STM32F4-Discovery/W5200.c **** 	// execute socket close
 492:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_CR(sck_fd), W5200_Sn_CR_CLOSE);
 1528              		.loc 1 492 0
 1529 0030 7B68     		ldr	r3, [r7, #4]
 1530 0032 9BB2     		uxth	r3, r3
 1531 0034 1B02     		lsls	r3, r3, #8
 1532 0036 9BB2     		uxth	r3, r3
 1533 0038 03F58043 		add	r3, r3, #16384
 1534 003c 0133     		adds	r3, r3, #1
 1535 003e 9BB2     		uxth	r3, r3
 1536 0040 1846     		mov	r0, r3
 1537 0042 1021     		movs	r1, #16
 1538 0044 FFF7FEFF 		bl	spi_dma_sendByte
 493:App/STM32F4-Discovery/W5200.c **** 	// wait command complete.
 494:App/STM32F4-Discovery/W5200.c **** 	while(get_CRStatus(sck_fd)  != 0);	// 0 value is command complete. 
 1539              		.loc 1 494 0
 1540 0048 00BF     		nop
 1541              	.L74:
 1542              		.loc 1 494 0 is_stmt 0 discriminator 1
 1543 004a 7B68     		ldr	r3, [r7, #4]
 1544 004c DBB2     		uxtb	r3, r3
 1545 004e 1846     		mov	r0, r3
 1546 0050 FFF7FEFF 		bl	get_CRStatus
 1547 0054 0346     		mov	r3, r0
 1548 0056 002B     		cmp	r3, #0
 1549 0058 F7D1     		bne	.L74
 495:App/STM32F4-Discovery/W5200.c **** 
 496:App/STM32F4-Discovery/W5200.c **** 	// check status
 497:App/STM32F4-Discovery/W5200.c **** 	while( get_SRStatus(sck_fd) != W5200_Sn_SR_SOCK_CLOSED);
 1550              		.loc 1 497 0 is_stmt 1
 1551 005a 00BF     		nop
 1552              	.L75:
 1553              		.loc 1 497 0 is_stmt 0 discriminator 1
 1554 005c 7B68     		ldr	r3, [r7, #4]
 1555 005e DBB2     		uxtb	r3, r3
 1556 0060 1846     		mov	r0, r3
 1557 0062 FFF7FEFF 		bl	get_SRStatus
 1558 0066 0346     		mov	r3, r0
 1559 0068 002B     		cmp	r3, #0
 1560 006a F7D1     		bne	.L75
 498:App/STM32F4-Discovery/W5200.c **** 
 499:App/STM32F4-Discovery/W5200.c **** 	// close success
 500:App/STM32F4-Discovery/W5200.c **** 	return 0;
 1561              		.loc 1 500 0 is_stmt 1
 1562 006c 0023     		movs	r3, #0
 1563              	.L73:
 501:App/STM32F4-Discovery/W5200.c **** }
 1564              		.loc 1 501 0
 1565 006e 1846     		mov	r0, r3
 1566 0070 0837     		adds	r7, r7, #8
 1567 0072 BD46     		mov	sp, r7
 1568              		@ sp needed
 1569 0074 80BD     		pop	{r7, pc}
 1570              	.L77:
 1571 0076 00BF     		.align	2
 1572              	.L76:
 1573 0078 00000000 		.word	socket_flg
 1574              		.cfi_endproc
 1575              	.LFE127:
 1577              		.section	.text.connect,"ax",%progbits
 1578              		.align	2
 1579              		.global	connect
 1580              		.thumb
 1581              		.thumb_func
 1583              	connect:
 1584              	.LFB128:
 502:App/STM32F4-Discovery/W5200.c **** 
 503:App/STM32F4-Discovery/W5200.c **** 
 504:App/STM32F4-Discovery/W5200.c **** /*==========================================================================
 505:App/STM32F4-Discovery/W5200.c **** 	connect()	connect to remote host (TCP only)
 506:App/STM32F4-Discovery/W5200.c **** ===========================================================================*/
 507:App/STM32F4-Discovery/W5200.c **** 
 508:App/STM32F4-Discovery/W5200.c **** int	connect(uint8_t sck_fd, uint8_t *to_ip, uint16_t to_port)
 509:App/STM32F4-Discovery/W5200.c **** {
 1585              		.loc 1 509 0
 1586              		.cfi_startproc
 1587              		@ args = 0, pretend = 0, frame = 16
 1588              		@ frame_needed = 1, uses_anonymous_args = 0
 1589 0000 80B5     		push	{r7, lr}
 1590              	.LCFI54:
 1591              		.cfi_def_cfa_offset 8
 1592              		.cfi_offset 7, -8
 1593              		.cfi_offset 14, -4
 1594 0002 84B0     		sub	sp, sp, #16
 1595              	.LCFI55:
 1596              		.cfi_def_cfa_offset 24
 1597 0004 00AF     		add	r7, sp, #0
 1598              	.LCFI56:
 1599              		.cfi_def_cfa_register 7
 1600 0006 3960     		str	r1, [r7]
 1601 0008 1346     		mov	r3, r2
 1602 000a 0246     		mov	r2, r0
 1603 000c FA71     		strb	r2, [r7, #7]
 1604 000e BB80     		strh	r3, [r7, #4]	@ movhi
 510:App/STM32F4-Discovery/W5200.c **** 	uint8_t	status;
 511:App/STM32F4-Discovery/W5200.c **** 
 512:App/STM32F4-Discovery/W5200.c **** 	// check socket asign flag
 513:App/STM32F4-Discovery/W5200.c **** 	if(sck_fd < 0 || sck_fd >= W5200_MAX_SOCKETS ||  socket_flg[sck_fd] != 1) return -1;
 1605              		.loc 1 513 0
 1606 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1607 0012 072B     		cmp	r3, #7
 1608 0014 04D8     		bhi	.L79
 1609              		.loc 1 513 0 is_stmt 0 discriminator 2
 1610 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1611 0018 3A4A     		ldr	r2, .L89
 1612 001a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1613 001c 012B     		cmp	r3, #1
 1614 001e 02D0     		beq	.L80
 1615              	.L79:
 1616              		.loc 1 513 0 discriminator 1
 1617 0020 4FF0FF33 		mov	r3, #-1
 1618 0024 6AE0     		b	.L88
 1619              	.L80:
 514:App/STM32F4-Discovery/W5200.c **** 
 515:App/STM32F4-Discovery/W5200.c **** 	// check parameter
 516:App/STM32F4-Discovery/W5200.c **** 	if(to_ip == NULL || to_port == 0) return -1;
 1620              		.loc 1 516 0 is_stmt 1
 1621 0026 3B68     		ldr	r3, [r7]
 1622 0028 002B     		cmp	r3, #0
 1623 002a 02D0     		beq	.L82
 1624              		.loc 1 516 0 is_stmt 0 discriminator 2
 1625 002c BB88     		ldrh	r3, [r7, #4]
 1626 002e 002B     		cmp	r3, #0
 1627 0030 02D1     		bne	.L83
 1628              	.L82:
 1629              		.loc 1 516 0 discriminator 1
 1630 0032 4FF0FF33 		mov	r3, #-1
 1631 0036 61E0     		b	.L88
 1632              	.L83:
 517:App/STM32F4-Discovery/W5200.c **** 	if(get_SRStatus(sck_fd) !=  W5200_Sn_SR_SOCK_INIT) return -1;
 1633              		.loc 1 517 0 is_stmt 1
 1634 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1635 003a 1846     		mov	r0, r3
 1636 003c FFF7FEFF 		bl	get_SRStatus
 1637 0040 0346     		mov	r3, r0
 1638 0042 132B     		cmp	r3, #19
 1639 0044 02D0     		beq	.L84
 1640              		.loc 1 517 0 is_stmt 0 discriminator 1
 1641 0046 4FF0FF33 		mov	r3, #-1
 1642 004a 57E0     		b	.L88
 1643              	.L84:
 518:App/STM32F4-Discovery/W5200.c **** 	status = get_SRStatus(sck_fd);
 1644              		.loc 1 518 0 is_stmt 1
 1645 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1646 004e 1846     		mov	r0, r3
 1647 0050 FFF7FEFF 		bl	get_SRStatus
 1648 0054 0346     		mov	r3, r0
 1649 0056 FB73     		strb	r3, [r7, #15]
 519:App/STM32F4-Discovery/W5200.c **** 	
 520:App/STM32F4-Discovery/W5200.c **** 	// set IP/PORT
 521:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send(W5200_Sn_DIPR(sck_fd), 4, to_ip);
 1650              		.loc 1 521 0
 1651 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1652 005a 9BB2     		uxth	r3, r3
 1653 005c 1B02     		lsls	r3, r3, #8
 1654 005e 9BB2     		uxth	r3, r3
 1655 0060 03F58043 		add	r3, r3, #16384
 1656 0064 0C33     		adds	r3, r3, #12
 1657 0066 9BB2     		uxth	r3, r3
 1658 0068 1846     		mov	r0, r3
 1659 006a 0421     		movs	r1, #4
 1660 006c 3A68     		ldr	r2, [r7]
 1661 006e FFF7FEFF 		bl	spi_dma_send
 522:App/STM32F4-Discovery/W5200.c **** 	// split port for sending on two 8bits
 523:App/STM32F4-Discovery/W5200.c **** 	uint8_t prt[2];
 524:App/STM32F4-Discovery/W5200.c **** 		prt[0] = (to_port & 0xff00) >> 8;
 1662              		.loc 1 524 0
 1663 0072 BB88     		ldrh	r3, [r7, #4]
 1664 0074 1B0A     		lsrs	r3, r3, #8
 1665 0076 9BB2     		uxth	r3, r3
 1666 0078 DBB2     		uxtb	r3, r3
 1667 007a 3B73     		strb	r3, [r7, #12]
 525:App/STM32F4-Discovery/W5200.c **** 		prt[1] =  (to_port & 0x00ff);
 1668              		.loc 1 525 0
 1669 007c BB88     		ldrh	r3, [r7, #4]	@ movhi
 1670 007e DBB2     		uxtb	r3, r3
 1671 0080 7B73     		strb	r3, [r7, #13]
 526:App/STM32F4-Discovery/W5200.c **** 	spi_dma_send(W5200_Sn_DPORT(sck_fd), 2 , prt);
 1672              		.loc 1 526 0
 1673 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1674 0084 9BB2     		uxth	r3, r3
 1675 0086 1B02     		lsls	r3, r3, #8
 1676 0088 9BB2     		uxth	r3, r3
 1677 008a 03F58043 		add	r3, r3, #16384
 1678 008e 1033     		adds	r3, r3, #16
 1679 0090 9AB2     		uxth	r2, r3
 1680 0092 07F10C03 		add	r3, r7, #12
 1681 0096 1046     		mov	r0, r2
 1682 0098 0221     		movs	r1, #2
 1683 009a 1A46     		mov	r2, r3
 1684 009c FFF7FEFF 		bl	spi_dma_send
 527:App/STM32F4-Discovery/W5200.c **** 	
 528:App/STM32F4-Discovery/W5200.c **** 	// CONNECT command
 529:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_CR(sck_fd), W5200_Sn_CR_CONNECT);
 1685              		.loc 1 529 0
 1686 00a0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1687 00a2 9BB2     		uxth	r3, r3
 1688 00a4 1B02     		lsls	r3, r3, #8
 1689 00a6 9BB2     		uxth	r3, r3
 1690 00a8 03F58043 		add	r3, r3, #16384
 1691 00ac 0133     		adds	r3, r3, #1
 1692 00ae 9BB2     		uxth	r3, r3
 1693 00b0 1846     		mov	r0, r3
 1694 00b2 0421     		movs	r1, #4
 1695 00b4 FFF7FEFF 		bl	spi_dma_sendByte
 530:App/STM32F4-Discovery/W5200.c **** 	while(get_CRStatus(sck_fd) != 0);	// command complete
 1696              		.loc 1 530 0
 1697 00b8 00BF     		nop
 1698              	.L85:
 1699              		.loc 1 530 0 is_stmt 0 discriminator 1
 1700 00ba FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1701 00bc 1846     		mov	r0, r3
 1702 00be FFF7FEFF 		bl	get_CRStatus
 1703 00c2 0346     		mov	r3, r0
 1704 00c4 002B     		cmp	r3, #0
 1705 00c6 F8D1     		bne	.L85
 531:App/STM32F4-Discovery/W5200.c **** 
 532:App/STM32F4-Discovery/W5200.c **** 	// check status
 533:App/STM32F4-Discovery/W5200.c **** 	while(status = get_SRStatus(sck_fd) !=  W5200_Sn_SR_SOCK_ESTABLISHED){
 1706              		.loc 1 533 0 is_stmt 1
 1707 00c8 09E0     		b	.L86
 1708              	.L87:
 534:App/STM32F4-Discovery/W5200.c **** 		if(status == W5200_Sn_SR_SOCK_CLOSED) {
 1709              		.loc 1 534 0
 1710 00ca FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1711 00cc 002B     		cmp	r3, #0
 1712 00ce 06D1     		bne	.L86
 535:App/STM32F4-Discovery/W5200.c **** 			socket_flg[sck_fd] = 0;
 1713              		.loc 1 535 0
 1714 00d0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1715 00d2 0C4A     		ldr	r2, .L89
 1716 00d4 0021     		movs	r1, #0
 1717 00d6 D154     		strb	r1, [r2, r3]
 536:App/STM32F4-Discovery/W5200.c **** 			return -1;
 1718              		.loc 1 536 0
 1719 00d8 4FF0FF33 		mov	r3, #-1
 1720 00dc 0EE0     		b	.L88
 1721              	.L86:
 533:App/STM32F4-Discovery/W5200.c **** 	while(status = get_SRStatus(sck_fd) !=  W5200_Sn_SR_SOCK_ESTABLISHED){
 1722              		.loc 1 533 0 discriminator 1
 1723 00de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1724 00e0 1846     		mov	r0, r3
 1725 00e2 FFF7FEFF 		bl	get_SRStatus
 1726 00e6 0346     		mov	r3, r0
 1727 00e8 172B     		cmp	r3, #23
 1728 00ea 0CBF     		ite	eq
 1729 00ec 0023     		moveq	r3, #0
 1730 00ee 0123     		movne	r3, #1
 1731 00f0 DBB2     		uxtb	r3, r3
 1732 00f2 FB73     		strb	r3, [r7, #15]
 1733 00f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1734 00f6 002B     		cmp	r3, #0
 1735 00f8 E7D1     		bne	.L87
 537:App/STM32F4-Discovery/W5200.c **** 		}
 538:App/STM32F4-Discovery/W5200.c **** 	}
 539:App/STM32F4-Discovery/W5200.c **** 
 540:App/STM32F4-Discovery/W5200.c **** 	
 541:App/STM32F4-Discovery/W5200.c **** 
 542:App/STM32F4-Discovery/W5200.c **** 	return 0;	// connect success complete
 1736              		.loc 1 542 0
 1737 00fa 0023     		movs	r3, #0
 1738              	.L88:
 543:App/STM32F4-Discovery/W5200.c **** }
 1739              		.loc 1 543 0
 1740 00fc 1846     		mov	r0, r3
 1741 00fe 1037     		adds	r7, r7, #16
 1742 0100 BD46     		mov	sp, r7
 1743              		@ sp needed
 1744 0102 80BD     		pop	{r7, pc}
 1745              	.L90:
 1746              		.align	2
 1747              	.L89:
 1748 0104 00000000 		.word	socket_flg
 1749              		.cfi_endproc
 1750              	.LFE128:
 1752              		.section	.text.send,"ax",%progbits
 1753              		.align	2
 1754              		.global	send
 1755              		.thumb
 1756              		.thumb_func
 1758              	send:
 1759              	.LFB129:
 544:App/STM32F4-Discovery/W5200.c **** 
 545:App/STM32F4-Discovery/W5200.c **** /*==========================================================================
 546:App/STM32F4-Discovery/W5200.c **** 	send()	send *buf to  (TCP only)
 547:App/STM32F4-Discovery/W5200.c **** ===========================================================================*/
 548:App/STM32F4-Discovery/W5200.c **** 
 549:App/STM32F4-Discovery/W5200.c **** int	send(uint8_t sck_fd, uint8_t *buf, uint16_t len, uint16_t flag)
 550:App/STM32F4-Discovery/W5200.c **** {
 1760              		.loc 1 550 0
 1761              		.cfi_startproc
 1762              		@ args = 0, pretend = 0, frame = 40
 1763              		@ frame_needed = 1, uses_anonymous_args = 0
 1764 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1765              	.LCFI57:
 1766              		.cfi_def_cfa_offset 28
 1767              		.cfi_offset 4, -28
 1768              		.cfi_offset 5, -24
 1769              		.cfi_offset 6, -20
 1770              		.cfi_offset 7, -16
 1771              		.cfi_offset 8, -12
 1772              		.cfi_offset 9, -8
 1773              		.cfi_offset 14, -4
 1774 0004 8BB0     		sub	sp, sp, #44
 1775              	.LCFI58:
 1776              		.cfi_def_cfa_offset 72
 1777 0006 00AF     		add	r7, sp, #0
 1778              	.LCFI59:
 1779              		.cfi_def_cfa_register 7
 1780 0008 B960     		str	r1, [r7, #8]
 1781 000a 0146     		mov	r1, r0
 1782 000c F973     		strb	r1, [r7, #15]
 1783 000e BA81     		strh	r2, [r7, #12]	@ movhi
 1784 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 551:App/STM32F4-Discovery/W5200.c **** 	uint16_t	send_size;
 552:App/STM32F4-Discovery/W5200.c **** 	uint16_t	write_ptr;
 553:App/STM32F4-Discovery/W5200.c **** 	
 554:App/STM32F4-Discovery/W5200.c **** 	/// get real len 
 555:App/STM32F4-Discovery/W5200.c **** 	int i = 0; 
 1785              		.loc 1 555 0
 1786 0012 0023     		movs	r3, #0
 1787 0014 3B62     		str	r3, [r7, #32]
 556:App/STM32F4-Discovery/W5200.c **** 
 557:App/STM32F4-Discovery/W5200.c **** 	while ( buf[i] != '\0' && i < len) i++; 
 1788              		.loc 1 557 0
 1789 0016 02E0     		b	.L92
 1790              	.L94:
 1791              		.loc 1 557 0 is_stmt 0 discriminator 1
 1792 0018 3B6A     		ldr	r3, [r7, #32]
 1793 001a 0133     		adds	r3, r3, #1
 1794 001c 3B62     		str	r3, [r7, #32]
 1795              	.L92:
 1796 001e 3B6A     		ldr	r3, [r7, #32]
 1797 0020 BA68     		ldr	r2, [r7, #8]
 1798 0022 1344     		add	r3, r3, r2
 1799 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1800 0026 002B     		cmp	r3, #0
 1801 0028 03D0     		beq	.L93
 1802              		.loc 1 557 0 discriminator 2
 1803 002a BA89     		ldrh	r2, [r7, #12]
 1804 002c 3B6A     		ldr	r3, [r7, #32]
 1805 002e 9A42     		cmp	r2, r3
 1806 0030 F2DC     		bgt	.L94
 1807              	.L93:
 558:App/STM32F4-Discovery/W5200.c **** 
 559:App/STM32F4-Discovery/W5200.c **** 	len = i;
 1808              		.loc 1 559 0 is_stmt 1
 1809 0032 3B6A     		ldr	r3, [r7, #32]
 1810 0034 BB81     		strh	r3, [r7, #12]	@ movhi
 560:App/STM32F4-Discovery/W5200.c **** 	
 561:App/STM32F4-Discovery/W5200.c **** 	uint16_t status = get_SRStatus(sck_fd);
 1811              		.loc 1 561 0
 1812 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1813 0038 1846     		mov	r0, r3
 1814 003a FFF7FEFF 		bl	get_SRStatus
 1815 003e 0346     		mov	r3, r0
 1816 0040 FB83     		strh	r3, [r7, #30]	@ movhi
 562:App/STM32F4-Discovery/W5200.c **** 
 563:App/STM32F4-Discovery/W5200.c **** 	
 564:App/STM32F4-Discovery/W5200.c **** 	// check socket asign flag
 565:App/STM32F4-Discovery/W5200.c **** 	if(sck_fd < 0 || sck_fd >= W5200_MAX_SOCKETS ||  socket_flg[sck_fd] != 1) return -1;
 1817              		.loc 1 565 0
 1818 0042 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1819 0044 072B     		cmp	r3, #7
 1820 0046 04D8     		bhi	.L95
 1821              		.loc 1 565 0 is_stmt 0 discriminator 2
 1822 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1823 004a 564A     		ldr	r2, .L106
 1824 004c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1825 004e 012B     		cmp	r3, #1
 1826 0050 02D0     		beq	.L96
 1827              	.L95:
 1828              		.loc 1 565 0 discriminator 1
 1829 0052 4FF0FF33 		mov	r3, #-1
 1830 0056 A0E0     		b	.L97
 1831              	.L96:
 566:App/STM32F4-Discovery/W5200.c **** 
 567:App/STM32F4-Discovery/W5200.c **** 	// check parameter
 568:App/STM32F4-Discovery/W5200.c **** 	if(buf == NULL || len == 0) return -1;
 1832              		.loc 1 568 0 is_stmt 1
 1833 0058 BB68     		ldr	r3, [r7, #8]
 1834 005a 002B     		cmp	r3, #0
 1835 005c 02D0     		beq	.L98
 1836              		.loc 1 568 0 is_stmt 0 discriminator 2
 1837 005e BB89     		ldrh	r3, [r7, #12]
 1838 0060 002B     		cmp	r3, #0
 1839 0062 02D1     		bne	.L99
 1840              	.L98:
 1841              		.loc 1 568 0 discriminator 1
 1842 0064 4FF0FF33 		mov	r3, #-1
 1843 0068 97E0     		b	.L97
 1844              	.L99:
 569:App/STM32F4-Discovery/W5200.c **** 	
 570:App/STM32F4-Discovery/W5200.c **** 	// check status
 571:App/STM32F4-Discovery/W5200.c **** 	if(get_SRStatus(sck_fd) != W5200_Sn_SR_SOCK_ESTABLISHED) return 0; // closing or fin close wait.
 1845              		.loc 1 571 0 is_stmt 1
 1846 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1847 006c 1846     		mov	r0, r3
 1848 006e FFF7FEFF 		bl	get_SRStatus
 1849 0072 0346     		mov	r3, r0
 1850 0074 172B     		cmp	r3, #23
 1851 0076 01D0     		beq	.L100
 1852              		.loc 1 571 0 is_stmt 0 discriminator 1
 1853 0078 0023     		movs	r3, #0
 1854 007a 8EE0     		b	.L97
 1855              	.L100:
 572:App/STM32F4-Discovery/W5200.c **** 
 573:App/STM32F4-Discovery/W5200.c **** 	// check TX memory free size?
 574:App/STM32F4-Discovery/W5200.c **** 	while((send_size = get_TXFSRStatus(sck_fd)) == 0){
 1856              		.loc 1 574 0 is_stmt 1
 1857 007c 04E0     		b	.L101
 1858              	.L102:
 575:App/STM32F4-Discovery/W5200.c **** 		if(flag == 1) return 0;	// NONE BLOCKING
 1859              		.loc 1 575 0
 1860 007e FB88     		ldrh	r3, [r7, #6]
 1861 0080 012B     		cmp	r3, #1
 1862 0082 01D1     		bne	.L101
 1863              		.loc 1 575 0 is_stmt 0 discriminator 1
 1864 0084 0023     		movs	r3, #0
 1865 0086 88E0     		b	.L97
 1866              	.L101:
 574:App/STM32F4-Discovery/W5200.c **** 	while((send_size = get_TXFSRStatus(sck_fd)) == 0){
 1867              		.loc 1 574 0 is_stmt 1 discriminator 1
 1868 0088 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1869 008a 1846     		mov	r0, r3
 1870 008c FFF7FEFF 		bl	get_TXFSRStatus
 1871 0090 0346     		mov	r3, r0
 1872 0092 FB84     		strh	r3, [r7, #38]	@ movhi
 1873 0094 FB8C     		ldrh	r3, [r7, #38]
 1874 0096 002B     		cmp	r3, #0
 1875 0098 F1D0     		beq	.L102
 576:App/STM32F4-Discovery/W5200.c **** 	}
 577:App/STM32F4-Discovery/W5200.c **** 
 578:App/STM32F4-Discovery/W5200.c **** 	// get write pointer
 579:App/STM32F4-Discovery/W5200.c **** 	write_ptr = get_TXWRStatus(sck_fd);
 1876              		.loc 1 579 0
 1877 009a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1878 009c 1846     		mov	r0, r3
 1879 009e FFF7FEFF 		bl	get_TXWRStatus
 1880 00a2 0346     		mov	r3, r0
 1881 00a4 BB83     		strh	r3, [r7, #28]	@ movhi
 580:App/STM32F4-Discovery/W5200.c **** 
 581:App/STM32F4-Discovery/W5200.c **** 	// check write length
 582:App/STM32F4-Discovery/W5200.c **** 	if(send_size > len) send_size = len;
 1882              		.loc 1 582 0
 1883 00a6 FA8C     		ldrh	r2, [r7, #38]
 1884 00a8 BB89     		ldrh	r3, [r7, #12]
 1885 00aa 9A42     		cmp	r2, r3
 1886 00ac 01D9     		bls	.L103
 1887              		.loc 1 582 0 is_stmt 0 discriminator 1
 1888 00ae BB89     		ldrh	r3, [r7, #12]	@ movhi
 1889 00b0 FB84     		strh	r3, [r7, #38]	@ movhi
 1890              	.L103:
 583:App/STM32F4-Discovery/W5200.c **** 
 584:App/STM32F4-Discovery/W5200.c **** 	// data write to memory
 585:App/STM32F4-Discovery/W5200.c **** 	write_memory(sck_fd, write_ptr, buf, send_size);
 1891              		.loc 1 585 0 is_stmt 1
 1892 00b2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 1893 00b4 BA8B     		ldrh	r2, [r7, #28]
 1894 00b6 FB8C     		ldrh	r3, [r7, #38]
 1895 00b8 0846     		mov	r0, r1
 1896 00ba 1146     		mov	r1, r2
 1897 00bc BA68     		ldr	r2, [r7, #8]
 1898 00be FFF7FEFF 		bl	write_memory
 586:App/STM32F4-Discovery/W5200.c **** 
 587:App/STM32F4-Discovery/W5200.c **** 	// pointer update
 588:App/STM32F4-Discovery/W5200.c **** 	write_ptr += send_size;
 1899              		.loc 1 588 0
 1900 00c2 BA8B     		ldrh	r2, [r7, #28]	@ movhi
 1901 00c4 FB8C     		ldrh	r3, [r7, #38]	@ movhi
 1902 00c6 1344     		add	r3, r3, r2
 1903 00c8 BB83     		strh	r3, [r7, #28]	@ movhi
 589:App/STM32F4-Discovery/W5200.c **** 	set_TXWR(sck_fd, write_ptr);
 1904              		.loc 1 589 0
 1905 00ca FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1906 00cc BB8B     		ldrh	r3, [r7, #28]
 1907 00ce 1046     		mov	r0, r2
 1908 00d0 1946     		mov	r1, r3
 1909 00d2 FFF7FEFF 		bl	set_TXWR
 590:App/STM32F4-Discovery/W5200.c **** 		
 591:App/STM32F4-Discovery/W5200.c **** 	// test function 
 592:App/STM32F4-Discovery/W5200.c **** 	
 593:App/STM32F4-Discovery/W5200.c **** 
 594:App/STM32F4-Discovery/W5200.c **** 	uint16_t start = get_TXRD(sck_fd);
 1910              		.loc 1 594 0
 1911 00d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1912 00d8 1846     		mov	r0, r3
 1913 00da FFF7FEFF 		bl	get_TXRD
 1914 00de 0346     		mov	r3, r0
 1915 00e0 7B83     		strh	r3, [r7, #26]	@ movhi
 595:App/STM32F4-Discovery/W5200.c **** 	uint16_t end   = get_TXWRStatus(sck_fd); 
 1916              		.loc 1 595 0
 1917 00e2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1918 00e4 1846     		mov	r0, r3
 1919 00e6 FFF7FEFF 		bl	get_TXWRStatus
 1920 00ea 0346     		mov	r3, r0
 1921 00ec 3B83     		strh	r3, [r7, #24]	@ movhi
 596:App/STM32F4-Discovery/W5200.c **** 	uint8_t data [write_ptr-start]; 	
 1922              		.loc 1 596 0
 1923 00ee BA8B     		ldrh	r2, [r7, #28]
 1924 00f0 7B8B     		ldrh	r3, [r7, #26]
 1925 00f2 D11A     		subs	r1, r2, r3
 1926 00f4 6B46     		mov	r3, sp
 1927 00f6 1E46     		mov	r6, r3
 1928 00f8 4B1E     		subs	r3, r1, #1
 1929 00fa 7B61     		str	r3, [r7, #20]
 1930 00fc 0B46     		mov	r3, r1
 1931 00fe 1A46     		mov	r2, r3
 1932 0100 4FF00003 		mov	r3, #0
 1933 0104 4FEAC309 		lsl	r9, r3, #3
 1934 0108 49EA5279 		orr	r9, r9, r2, lsr #29
 1935 010c 4FEAC208 		lsl	r8, r2, #3
 1936 0110 0B46     		mov	r3, r1
 1937 0112 1A46     		mov	r2, r3
 1938 0114 4FF00003 		mov	r3, #0
 1939 0118 DD00     		lsls	r5, r3, #3
 1940 011a 45EA5275 		orr	r5, r5, r2, lsr #29
 1941 011e D400     		lsls	r4, r2, #3
 1942 0120 0B46     		mov	r3, r1
 1943 0122 0733     		adds	r3, r3, #7
 1944 0124 DB08     		lsrs	r3, r3, #3
 1945 0126 DB00     		lsls	r3, r3, #3
 1946 0128 ADEB030D 		sub	sp, sp, r3
 1947 012c 6B46     		mov	r3, sp
 1948 012e 0033     		adds	r3, r3, #0
 1949 0130 3B61     		str	r3, [r7, #16]
 597:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(start+0x8000, write_ptr-start );
 1950              		.loc 1 597 0
 1951 0132 7B8B     		ldrh	r3, [r7, #26]	@ movhi
 1952 0134 A3F50043 		sub	r3, r3, #32768
 1953 0138 9AB2     		uxth	r2, r3
 1954 013a B98B     		ldrh	r1, [r7, #28]	@ movhi
 1955 013c 7B8B     		ldrh	r3, [r7, #26]	@ movhi
 1956 013e CB1A     		subs	r3, r1, r3
 1957 0140 9BB2     		uxth	r3, r3
 1958 0142 1046     		mov	r0, r2
 1959 0144 1946     		mov	r1, r3
 1960 0146 FFF7FEFF 		bl	spi_dma_read
 598:App/STM32F4-Discovery/W5200.c **** 	memcpy(data, bufferRX +4, write_ptr-start);
 1961              		.loc 1 598 0
 1962 014a 3A69     		ldr	r2, [r7, #16]
 1963 014c B98B     		ldrh	r1, [r7, #28]
 1964 014e 7B8B     		ldrh	r3, [r7, #26]
 1965 0150 CB1A     		subs	r3, r1, r3
 1966 0152 1046     		mov	r0, r2
 1967 0154 1449     		ldr	r1, .L106+4
 1968 0156 1A46     		mov	r2, r3
 1969 0158 FFF7FEFF 		bl	memcpy
 599:App/STM32F4-Discovery/W5200.c **** 
 600:App/STM32F4-Discovery/W5200.c **** 	
 601:App/STM32F4-Discovery/W5200.c **** 	// test function 
 602:App/STM32F4-Discovery/W5200.c **** 	
 603:App/STM32F4-Discovery/W5200.c **** 	// send command
 604:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_CR(sck_fd), W5200_Sn_CR_SEND);
 1970              		.loc 1 604 0
 1971 015c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1972 015e 9BB2     		uxth	r3, r3
 1973 0160 1B02     		lsls	r3, r3, #8
 1974 0162 9BB2     		uxth	r3, r3
 1975 0164 03F58043 		add	r3, r3, #16384
 1976 0168 0133     		adds	r3, r3, #1
 1977 016a 9BB2     		uxth	r3, r3
 1978 016c 1846     		mov	r0, r3
 1979 016e 2021     		movs	r1, #32
 1980 0170 FFF7FEFF 		bl	spi_dma_sendByte
 605:App/STM32F4-Discovery/W5200.c **** 	// wait command complete.
 606:App/STM32F4-Discovery/W5200.c **** 	while(get_CRStatus(sck_fd) != 0);	// 0 value is command complete. 
 1981              		.loc 1 606 0
 1982 0174 00BF     		nop
 1983              	.L104:
 1984              		.loc 1 606 0 is_stmt 0 discriminator 1
 1985 0176 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1986 0178 1846     		mov	r0, r3
 1987 017a FFF7FEFF 		bl	get_CRStatus
 1988 017e 0346     		mov	r3, r0
 1989 0180 002B     		cmp	r3, #0
 1990 0182 F8D1     		bne	.L104
 607:App/STM32F4-Discovery/W5200.c **** 
 608:App/STM32F4-Discovery/W5200.c **** 	// wait sending complete
 609:App/STM32F4-Discovery/W5200.c **** 	while(get_TXRD(sck_fd) != write_ptr);
 1991              		.loc 1 609 0 is_stmt 1
 1992 0184 00BF     		nop
 1993              	.L105:
 1994              		.loc 1 609 0 is_stmt 0 discriminator 1
 1995 0186 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1996 0188 1846     		mov	r0, r3
 1997 018a FFF7FEFF 		bl	get_TXRD
 1998 018e 0346     		mov	r3, r0
 1999 0190 BA8B     		ldrh	r2, [r7, #28]
 2000 0192 9A42     		cmp	r2, r3
 2001 0194 F7D1     		bne	.L105
 610:App/STM32F4-Discovery/W5200.c **** 
 611:App/STM32F4-Discovery/W5200.c **** 	return send_size;
 2002              		.loc 1 611 0 is_stmt 1
 2003 0196 FB8C     		ldrh	r3, [r7, #38]
 2004 0198 B546     		mov	sp, r6
 2005              	.L97:
 612:App/STM32F4-Discovery/W5200.c **** }
 2006              		.loc 1 612 0
 2007 019a 1846     		mov	r0, r3
 2008 019c 2C37     		adds	r7, r7, #44
 2009 019e BD46     		mov	sp, r7
 2010              		@ sp needed
 2011 01a0 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 2012              	.L107:
 2013              		.align	2
 2014              	.L106:
 2015 01a4 00000000 		.word	socket_flg
 2016 01a8 04000000 		.word	bufferRX+4
 2017              		.cfi_endproc
 2018              	.LFE129:
 2020              		.section	.text.recv,"ax",%progbits
 2021              		.align	2
 2022              		.global	recv
 2023              		.thumb
 2024              		.thumb_func
 2026              	recv:
 2027              	.LFB130:
 613:App/STM32F4-Discovery/W5200.c **** 
 614:App/STM32F4-Discovery/W5200.c **** /*==========================================================================
 615:App/STM32F4-Discovery/W5200.c **** 	recv()	receiving data from remote terminal (TCP)
 616:App/STM32F4-Discovery/W5200.c **** 	flag is NONE_BLOCK / BLOCK
 617:App/STM32F4-Discovery/W5200.c **** 	return code is received data size.
 618:App/STM32F4-Discovery/W5200.c **** 	if received disconnect from peer, size was set to Zero, 
 619:App/STM32F4-Discovery/W5200.c **** ===========================================================================*/
 620:App/STM32F4-Discovery/W5200.c **** 
 621:App/STM32F4-Discovery/W5200.c **** int	recv(uint8_t sck_fd, uint8_t *buf, uint16_t len, uint16_t flag)
 622:App/STM32F4-Discovery/W5200.c **** {
 2028              		.loc 1 622 0
 2029              		.cfi_startproc
 2030              		@ args = 0, pretend = 0, frame = 24
 2031              		@ frame_needed = 1, uses_anonymous_args = 0
 2032 0000 80B5     		push	{r7, lr}
 2033              	.LCFI60:
 2034              		.cfi_def_cfa_offset 8
 2035              		.cfi_offset 7, -8
 2036              		.cfi_offset 14, -4
 2037 0002 86B0     		sub	sp, sp, #24
 2038              	.LCFI61:
 2039              		.cfi_def_cfa_offset 32
 2040 0004 00AF     		add	r7, sp, #0
 2041              	.LCFI62:
 2042              		.cfi_def_cfa_register 7
 2043 0006 B960     		str	r1, [r7, #8]
 2044 0008 0146     		mov	r1, r0
 2045 000a F973     		strb	r1, [r7, #15]
 2046 000c BA81     		strh	r2, [r7, #12]	@ movhi
 2047 000e FB80     		strh	r3, [r7, #6]	@ movhi
 623:App/STM32F4-Discovery/W5200.c **** 	uint16_t	read_len;
 624:App/STM32F4-Discovery/W5200.c **** 	uint16_t	read_ptr;
 625:App/STM32F4-Discovery/W5200.c **** 
 626:App/STM32F4-Discovery/W5200.c **** 	// check asign flag
 627:App/STM32F4-Discovery/W5200.c **** 	if(sck_fd < 0 || sck_fd >= W5200_MAX_SOCKETS ||  socket_flg[sck_fd] != 1) return -1;
 2048              		.loc 1 627 0
 2049 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2050 0012 072B     		cmp	r3, #7
 2051 0014 04D8     		bhi	.L109
 2052              		.loc 1 627 0 is_stmt 0 discriminator 2
 2053 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2054 0018 314A     		ldr	r2, .L118
 2055 001a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2056 001c 012B     		cmp	r3, #1
 2057 001e 02D0     		beq	.L110
 2058              	.L109:
 2059              		.loc 1 627 0 discriminator 1
 2060 0020 4FF0FF33 		mov	r3, #-1
 2061 0024 57E0     		b	.L111
 2062              	.L110:
 628:App/STM32F4-Discovery/W5200.c **** 
 629:App/STM32F4-Discovery/W5200.c **** 	// check parameter
 630:App/STM32F4-Discovery/W5200.c **** 	if(buf == NULL || len == 0) return -1;
 2063              		.loc 1 630 0 is_stmt 1
 2064 0026 BB68     		ldr	r3, [r7, #8]
 2065 0028 002B     		cmp	r3, #0
 2066 002a 02D0     		beq	.L112
 2067              		.loc 1 630 0 is_stmt 0 discriminator 2
 2068 002c BB89     		ldrh	r3, [r7, #12]
 2069 002e 002B     		cmp	r3, #0
 2070 0030 02D1     		bne	.L113
 2071              	.L112:
 2072              		.loc 1 630 0 discriminator 1
 2073 0032 4FF0FF33 		mov	r3, #-1
 2074 0036 4EE0     		b	.L111
 2075              	.L113:
 631:App/STM32F4-Discovery/W5200.c **** 
 632:App/STM32F4-Discovery/W5200.c **** 	// check status
 633:App/STM32F4-Discovery/W5200.c **** 	if(get_SRStatus(sck_fd) != W5200_Sn_SR_SOCK_ESTABLISHED) return 0;	// closing or fin close wait.
 2076              		.loc 1 633 0 is_stmt 1
 2077 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2078 003a 1846     		mov	r0, r3
 2079 003c FFF7FEFF 		bl	get_SRStatus
 2080 0040 0346     		mov	r3, r0
 2081 0042 172B     		cmp	r3, #23
 2082 0044 01D0     		beq	.L114
 2083              		.loc 1 633 0 is_stmt 0 discriminator 1
 2084 0046 0023     		movs	r3, #0
 2085 0048 45E0     		b	.L111
 2086              	.L114:
 634:App/STM32F4-Discovery/W5200.c **** 
 635:App/STM32F4-Discovery/W5200.c **** 	// received data exists?
 636:App/STM32F4-Discovery/W5200.c **** 	while((read_len = get_RXRSR(sck_fd)) == 0){
 2087              		.loc 1 636 0 is_stmt 1
 2088 004a 04E0     		b	.L115
 2089              	.L116:
 637:App/STM32F4-Discovery/W5200.c **** 		if(flag == 1) return 0;	// NONE BLOCKING
 2090              		.loc 1 637 0
 2091 004c FB88     		ldrh	r3, [r7, #6]
 2092 004e 012B     		cmp	r3, #1
 2093 0050 01D1     		bne	.L115
 2094              		.loc 1 637 0 is_stmt 0 discriminator 1
 2095 0052 0023     		movs	r3, #0
 2096 0054 3FE0     		b	.L111
 2097              	.L115:
 636:App/STM32F4-Discovery/W5200.c **** 	while((read_len = get_RXRSR(sck_fd)) == 0){
 2098              		.loc 1 636 0 is_stmt 1 discriminator 1
 2099 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2100 0058 1846     		mov	r0, r3
 2101 005a FFF7FEFF 		bl	get_RXRSR
 2102 005e 0346     		mov	r3, r0
 2103 0060 FB82     		strh	r3, [r7, #22]	@ movhi
 2104 0062 FB8A     		ldrh	r3, [r7, #22]
 2105 0064 002B     		cmp	r3, #0
 2106 0066 F1D0     		beq	.L116
 638:App/STM32F4-Discovery/W5200.c **** 	}
 639:App/STM32F4-Discovery/W5200.c **** 
 640:App/STM32F4-Discovery/W5200.c **** 	// set read length
 641:App/STM32F4-Discovery/W5200.c **** 	//if(read_len > len) read_len = len;
 642:App/STM32F4-Discovery/W5200.c **** 
 643:App/STM32F4-Discovery/W5200.c **** 	// get read pointer
 644:App/STM32F4-Discovery/W5200.c **** 	read_ptr = get_RXRD(sck_fd);
 2107              		.loc 1 644 0
 2108 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2109 006a 1846     		mov	r0, r3
 2110 006c FFF7FEFF 		bl	get_RXRD
 2111 0070 0346     		mov	r3, r0
 2112 0072 BB82     		strh	r3, [r7, #20]	@ movhi
 645:App/STM32F4-Discovery/W5200.c **** 
 646:App/STM32F4-Discovery/W5200.c **** 	// read from RX memory
 647:App/STM32F4-Discovery/W5200.c **** 	read_memory(sck_fd, read_ptr, buf, read_len < len ? read_len: len);
 2113              		.loc 1 647 0
 2114 0074 BA89     		ldrh	r2, [r7, #12]
 2115 0076 FB8A     		ldrh	r3, [r7, #22]
 2116 0078 9A42     		cmp	r2, r3
 2117 007a 38BF     		it	cc
 2118 007c 1346     		movcc	r3, r2
 2119 007e 9BB2     		uxth	r3, r3
 2120 0080 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 2121 0082 BA8A     		ldrh	r2, [r7, #20]
 2122 0084 0846     		mov	r0, r1
 2123 0086 1146     		mov	r1, r2
 2124 0088 BA68     		ldr	r2, [r7, #8]
 2125 008a FFF7FEFF 		bl	read_memory
 648:App/STM32F4-Discovery/W5200.c **** 
 649:App/STM32F4-Discovery/W5200.c **** 	// update pointer
 650:App/STM32F4-Discovery/W5200.c **** 	read_ptr += read_len;
 2126              		.loc 1 650 0
 2127 008e BA8A     		ldrh	r2, [r7, #20]	@ movhi
 2128 0090 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 2129 0092 1344     		add	r3, r3, r2
 2130 0094 BB82     		strh	r3, [r7, #20]	@ movhi
 651:App/STM32F4-Discovery/W5200.c **** 	set_RXRD(sck_fd, read_ptr);
 2131              		.loc 1 651 0
 2132 0096 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 2133 0098 BB8A     		ldrh	r3, [r7, #20]
 2134 009a 1046     		mov	r0, r2
 2135 009c 1946     		mov	r1, r3
 2136 009e FFF7FEFF 		bl	set_RXRD
 652:App/STM32F4-Discovery/W5200.c **** 
 653:App/STM32F4-Discovery/W5200.c **** 	// recive command
 654:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_CR(sck_fd), W5200_Sn_CR_RECV);
 2137              		.loc 1 654 0
 2138 00a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2139 00a4 9BB2     		uxth	r3, r3
 2140 00a6 1B02     		lsls	r3, r3, #8
 2141 00a8 9BB2     		uxth	r3, r3
 2142 00aa 03F58043 		add	r3, r3, #16384
 2143 00ae 0133     		adds	r3, r3, #1
 2144 00b0 9BB2     		uxth	r3, r3
 2145 00b2 1846     		mov	r0, r3
 2146 00b4 4021     		movs	r1, #64
 2147 00b6 FFF7FEFF 		bl	spi_dma_sendByte
 655:App/STM32F4-Discovery/W5200.c **** 	// wait command complete.
 656:App/STM32F4-Discovery/W5200.c **** 	while(get_CRStatus(sck_fd) != 0);	// 0 value is command complete. 
 2148              		.loc 1 656 0
 2149 00ba 00BF     		nop
 2150              	.L117:
 2151              		.loc 1 656 0 is_stmt 0 discriminator 1
 2152 00bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2153 00be 1846     		mov	r0, r3
 2154 00c0 FFF7FEFF 		bl	get_CRStatus
 2155 00c4 0346     		mov	r3, r0
 2156 00c6 002B     		cmp	r3, #0
 2157 00c8 F8D1     		bne	.L117
 657:App/STM32F4-Discovery/W5200.c **** 	
 658:App/STM32F4-Discovery/W5200.c **** 
 659:App/STM32F4-Discovery/W5200.c ****  	return	(read_len < len ? read_len: len);
 2158              		.loc 1 659 0 is_stmt 1
 2159 00ca BA89     		ldrh	r2, [r7, #12]
 2160 00cc FB8A     		ldrh	r3, [r7, #22]
 2161 00ce 9A42     		cmp	r2, r3
 2162 00d0 38BF     		it	cc
 2163 00d2 1346     		movcc	r3, r2
 2164 00d4 9BB2     		uxth	r3, r3
 2165              	.L111:
 660:App/STM32F4-Discovery/W5200.c **** }
 2166              		.loc 1 660 0
 2167 00d6 1846     		mov	r0, r3
 2168 00d8 1837     		adds	r7, r7, #24
 2169 00da BD46     		mov	sp, r7
 2170              		@ sp needed
 2171 00dc 80BD     		pop	{r7, pc}
 2172              	.L119:
 2173 00de 00BF     		.align	2
 2174              	.L118:
 2175 00e0 00000000 		.word	socket_flg
 2176              		.cfi_endproc
 2177              	.LFE130:
 2179              		.section	.text.listen,"ax",%progbits
 2180              		.align	2
 2181              		.global	listen
 2182              		.thumb
 2183              		.thumb_func
 2185              	listen:
 2186              	.LFB131:
 661:App/STM32F4-Discovery/W5200.c **** 
 662:App/STM32F4-Discovery/W5200.c **** 
 663:App/STM32F4-Discovery/W5200.c **** //==================================================================================
 664:App/STM32F4-Discovery/W5200.c **** //	func listen 
 665:App/STM32F4-Discovery/W5200.c **** //==================================================================================//
 666:App/STM32F4-Discovery/W5200.c **** 
 667:App/STM32F4-Discovery/W5200.c **** 
 668:App/STM32F4-Discovery/W5200.c **** int	listen(int sck_fd)
 669:App/STM32F4-Discovery/W5200.c **** {
 2187              		.loc 1 669 0
 2188              		.cfi_startproc
 2189              		@ args = 0, pretend = 0, frame = 16
 2190              		@ frame_needed = 1, uses_anonymous_args = 0
 2191 0000 80B5     		push	{r7, lr}
 2192              	.LCFI63:
 2193              		.cfi_def_cfa_offset 8
 2194              		.cfi_offset 7, -8
 2195              		.cfi_offset 14, -4
 2196 0002 84B0     		sub	sp, sp, #16
 2197              	.LCFI64:
 2198              		.cfi_def_cfa_offset 24
 2199 0004 00AF     		add	r7, sp, #0
 2200              	.LCFI65:
 2201              		.cfi_def_cfa_register 7
 2202 0006 7860     		str	r0, [r7, #4]
 670:App/STM32F4-Discovery/W5200.c **** 	// check socket asign flag
 671:App/STM32F4-Discovery/W5200.c **** 	if(sck_fd < 0 || sck_fd >=W5200_MAX_SOCKETS||  socket_flg[sck_fd] != 1) return -1;
 2203              		.loc 1 671 0
 2204 0008 7B68     		ldr	r3, [r7, #4]
 2205 000a 002B     		cmp	r3, #0
 2206 000c 08DB     		blt	.L121
 2207              		.loc 1 671 0 is_stmt 0 discriminator 2
 2208 000e 7B68     		ldr	r3, [r7, #4]
 2209 0010 072B     		cmp	r3, #7
 2210 0012 05DC     		bgt	.L121
 2211              		.loc 1 671 0 discriminator 1
 2212 0014 224A     		ldr	r2, .L128
 2213 0016 7B68     		ldr	r3, [r7, #4]
 2214 0018 1344     		add	r3, r3, r2
 2215 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2216 001c 012B     		cmp	r3, #1
 2217 001e 02D0     		beq	.L122
 2218              	.L121:
 2219 0020 4FF0FF33 		mov	r3, #-1
 2220 0024 38E0     		b	.L127
 2221              	.L122:
 672:App/STM32F4-Discovery/W5200.c **** 
 673:App/STM32F4-Discovery/W5200.c **** 	// LISTEN start from INIT only.
 674:App/STM32F4-Discovery/W5200.c **** 	if(get_SRStatus(sck_fd)  != W5200_Sn_SR_SOCK_INIT) return -1;
 2222              		.loc 1 674 0 is_stmt 1
 2223 0026 7B68     		ldr	r3, [r7, #4]
 2224 0028 DBB2     		uxtb	r3, r3
 2225 002a 1846     		mov	r0, r3
 2226 002c FFF7FEFF 		bl	get_SRStatus
 2227 0030 0346     		mov	r3, r0
 2228 0032 132B     		cmp	r3, #19
 2229 0034 02D0     		beq	.L124
 2230              		.loc 1 674 0 is_stmt 0 discriminator 1
 2231 0036 4FF0FF33 		mov	r3, #-1
 2232 003a 2DE0     		b	.L127
 2233              	.L124:
 675:App/STM32F4-Discovery/W5200.c **** 
 676:App/STM32F4-Discovery/W5200.c **** 
 677:App/STM32F4-Discovery/W5200.c **** 	uint8_t b;
 678:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_IR(sck_fd), 1);
 2234              		.loc 1 678 0 is_stmt 1
 2235 003c 7B68     		ldr	r3, [r7, #4]
 2236 003e 9BB2     		uxth	r3, r3
 2237 0040 1B02     		lsls	r3, r3, #8
 2238 0042 9BB2     		uxth	r3, r3
 2239 0044 03F58043 		add	r3, r3, #16384
 2240 0048 0233     		adds	r3, r3, #2
 2241 004a 9BB2     		uxth	r3, r3
 2242 004c 1846     		mov	r0, r3
 2243 004e 0121     		movs	r1, #1
 2244 0050 FFF7FEFF 		bl	spi_dma_read
 679:App/STM32F4-Discovery/W5200.c **** 	memcpy(&b, bufferRX + 4, 1);
 2245              		.loc 1 679 0
 2246 0054 134B     		ldr	r3, .L128+4
 2247 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2248 0058 FB73     		strb	r3, [r7, #15]
 680:App/STM32F4-Discovery/W5200.c **** 
 681:App/STM32F4-Discovery/W5200.c **** 	// CONNECT command
 682:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_CR(sck_fd), W5200_Sn_CR_LISTEN);
 2249              		.loc 1 682 0
 2250 005a 7B68     		ldr	r3, [r7, #4]
 2251 005c 9BB2     		uxth	r3, r3
 2252 005e 1B02     		lsls	r3, r3, #8
 2253 0060 9BB2     		uxth	r3, r3
 2254 0062 03F58043 		add	r3, r3, #16384
 2255 0066 0133     		adds	r3, r3, #1
 2256 0068 9BB2     		uxth	r3, r3
 2257 006a 1846     		mov	r0, r3
 2258 006c 0221     		movs	r1, #2
 2259 006e FFF7FEFF 		bl	spi_dma_sendByte
 683:App/STM32F4-Discovery/W5200.c **** 	while(get_CRStatus(sck_fd) != 0);	// 0 value is command complete. 
 2260              		.loc 1 683 0
 2261 0072 00BF     		nop
 2262              	.L125:
 2263              		.loc 1 683 0 is_stmt 0 discriminator 1
 2264 0074 7B68     		ldr	r3, [r7, #4]
 2265 0076 DBB2     		uxtb	r3, r3
 2266 0078 1846     		mov	r0, r3
 2267 007a FFF7FEFF 		bl	get_CRStatus
 2268 007e 0346     		mov	r3, r0
 2269 0080 002B     		cmp	r3, #0
 2270 0082 F7D1     		bne	.L125
 684:App/STM32F4-Discovery/W5200.c **** 
 685:App/STM32F4-Discovery/W5200.c **** 	// wait for status change to LISTEN
 686:App/STM32F4-Discovery/W5200.c **** 	while(get_SRStatus(sck_fd) != W5200_Sn_SR_SOCK_LISTEN);
 2271              		.loc 1 686 0 is_stmt 1
 2272 0084 00BF     		nop
 2273              	.L126:
 2274              		.loc 1 686 0 is_stmt 0 discriminator 1
 2275 0086 7B68     		ldr	r3, [r7, #4]
 2276 0088 DBB2     		uxtb	r3, r3
 2277 008a 1846     		mov	r0, r3
 2278 008c FFF7FEFF 		bl	get_SRStatus
 2279 0090 0346     		mov	r3, r0
 2280 0092 142B     		cmp	r3, #20
 2281 0094 F7D1     		bne	.L126
 687:App/STM32F4-Discovery/W5200.c **** 	 
 688:App/STM32F4-Discovery/W5200.c **** 	return 0;	// listen success complete
 2282              		.loc 1 688 0 is_stmt 1
 2283 0096 0023     		movs	r3, #0
 2284              	.L127:
 689:App/STM32F4-Discovery/W5200.c **** }
 2285              		.loc 1 689 0
 2286 0098 1846     		mov	r0, r3
 2287 009a 1037     		adds	r7, r7, #16
 2288 009c BD46     		mov	sp, r7
 2289              		@ sp needed
 2290 009e 80BD     		pop	{r7, pc}
 2291              	.L129:
 2292              		.align	2
 2293              	.L128:
 2294 00a0 00000000 		.word	socket_flg
 2295 00a4 04000000 		.word	bufferRX+4
 2296              		.cfi_endproc
 2297              	.LFE131:
 2299              		.section	.text.locate_interrupt,"ax",%progbits
 2300              		.align	2
 2301              		.global	locate_interrupt
 2302              		.thumb
 2303              		.thumb_func
 2305              	locate_interrupt:
 2306              	.LFB132:
 690:App/STM32F4-Discovery/W5200.c **** 
 691:App/STM32F4-Discovery/W5200.c **** 
 692:App/STM32F4-Discovery/W5200.c **** 
 693:App/STM32F4-Discovery/W5200.c **** //==================================================================================
 694:App/STM32F4-Discovery/W5200.c **** ////	func locate_interrupt
 695:App/STM32F4-Discovery/W5200.c **** //==================================================================================
 696:App/STM32F4-Discovery/W5200.c **** void locate_interrupt()
 697:App/STM32F4-Discovery/W5200.c **** {
 2307              		.loc 1 697 0
 2308              		.cfi_startproc
 2309              		@ args = 0, pretend = 0, frame = 8
 2310              		@ frame_needed = 1, uses_anonymous_args = 0
 2311 0000 80B5     		push	{r7, lr}
 2312              	.LCFI66:
 2313              		.cfi_def_cfa_offset 8
 2314              		.cfi_offset 7, -8
 2315              		.cfi_offset 14, -4
 2316 0002 82B0     		sub	sp, sp, #8
 2317              	.LCFI67:
 2318              		.cfi_def_cfa_offset 16
 2319 0004 00AF     		add	r7, sp, #0
 2320              	.LCFI68:
 2321              		.cfi_def_cfa_register 7
 698:App/STM32F4-Discovery/W5200.c **** 
 699:App/STM32F4-Discovery/W5200.c **** 	/*!************************************************
 700:App/STM32F4-Discovery/W5200.c **** 	*  Function used by interrupt service routine. \n
 701:App/STM32F4-Discovery/W5200.c **** 	* Reads wiznet interrupt registers and identify 
 702:App/STM32F4-Discovery/W5200.c **** 	* interupt plus on which socket interrupt occured. \n
 703:App/STM32F4-Discovery/W5200.c **** 	* It depends on interrupt what follows
 704:App/STM32F4-Discovery/W5200.c **** 	* ****************************************************** */
 705:App/STM32F4-Discovery/W5200.c **** 	uint8_t sckt,		code; 
 706:App/STM32F4-Discovery/W5200.c **** 	// read on which socket interrupt occured 
 707:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_IMR2, 1);
 2322              		.loc 1 707 0
 2323 0006 3620     		movs	r0, #54
 2324 0008 0121     		movs	r1, #1
 2325 000a FFF7FEFF 		bl	spi_dma_read
 708:App/STM32F4-Discovery/W5200.c **** 	memcpy(&sckt, bufferRX + 4, 1);
 2326              		.loc 1 708 0
 2327 000e 354B     		ldr	r3, .L139
 2328 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2329 0012 FB71     		strb	r3, [r7, #7]
 709:App/STM32F4-Discovery/W5200.c **** 
 710:App/STM32F4-Discovery/W5200.c **** 	// read interrupt code 
 711:App/STM32F4-Discovery/W5200.c **** 	spi_dma_read(W5200_Sn_IR(sckt), 1);
 2330              		.loc 1 711 0
 2331 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2332 0016 1B02     		lsls	r3, r3, #8
 2333 0018 9BB2     		uxth	r3, r3
 2334 001a 03F58043 		add	r3, r3, #16384
 2335 001e 0233     		adds	r3, r3, #2
 2336 0020 9BB2     		uxth	r3, r3
 2337 0022 1846     		mov	r0, r3
 2338 0024 0121     		movs	r1, #1
 2339 0026 FFF7FEFF 		bl	spi_dma_read
 712:App/STM32F4-Discovery/W5200.c **** 	memcpy(&code, bufferRX +4 , 1);
 2340              		.loc 1 712 0
 2341 002a 2E4B     		ldr	r3, .L139
 2342 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2343 002e BB71     		strb	r3, [r7, #6]
 713:App/STM32F4-Discovery/W5200.c ****        
 714:App/STM32F4-Discovery/W5200.c **** 	// clear interrupt on W5200
 715:App/STM32F4-Discovery/W5200.c **** 	spi_dma_sendByte(W5200_Sn_IR(sckt), 0xff);
 2344              		.loc 1 715 0
 2345 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2346 0032 1B02     		lsls	r3, r3, #8
 2347 0034 9BB2     		uxth	r3, r3
 2348 0036 03F58043 		add	r3, r3, #16384
 2349 003a 0233     		adds	r3, r3, #2
 2350 003c 9BB2     		uxth	r3, r3
 2351 003e 1846     		mov	r0, r3
 2352 0040 FF21     		movs	r1, #255
 2353 0042 FFF7FEFF 		bl	spi_dma_sendByte
 716:App/STM32F4-Discovery/W5200.c **** 
 717:App/STM32F4-Discovery/W5200.c **** 
 718:App/STM32F4-Discovery/W5200.c **** 
 719:App/STM32F4-Discovery/W5200.c **** 	switch (code )
 2354              		.loc 1 719 0
 2355 0046 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2356 0048 013B     		subs	r3, r3, #1
 2357 004a 0F2B     		cmp	r3, #15
 2358 004c 46D8     		bhi	.L138
 2359 004e 01A2     		adr	r2, .L133
 2360 0050 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2361              		.p2align 2
 2362              	.L133:
 2363 0054 95000000 		.word	.L132+1
 2364 0058 AD000000 		.word	.L134+1
 2365 005c DD000000 		.word	.L138+1
 2366 0060 C5000000 		.word	.L135+1
 2367 0064 DD000000 		.word	.L138+1
 2368 0068 DD000000 		.word	.L138+1
 2369 006c DD000000 		.word	.L138+1
 2370 0070 DD000000 		.word	.L138+1
 2371 0074 DD000000 		.word	.L138+1
 2372 0078 DD000000 		.word	.L138+1
 2373 007c DD000000 		.word	.L138+1
 2374 0080 DD000000 		.word	.L138+1
 2375 0084 DD000000 		.word	.L138+1
 2376 0088 DD000000 		.word	.L138+1
 2377 008c DD000000 		.word	.L138+1
 2378 0090 DD000000 		.word	.L138+1
 2379              		.p2align 1
 2380              	.L132:
 720:App/STM32F4-Discovery/W5200.c **** 	{
 721:App/STM32F4-Discovery/W5200.c **** 		case 0x1:// Connect interrupts when a connection is established with a peer  
 722:App/STM32F4-Discovery/W5200.c **** 			telegram.Qcmd = TCP_CONNECTED;
 2381              		.loc 1 722 0
 2382 0094 144B     		ldr	r3, .L139+4
 2383 0096 0822     		movs	r2, #8
 2384 0098 1A70     		strb	r2, [r3]
 723:App/STM32F4-Discovery/W5200.c **** 			xQueueSend ( QTCP_handle, (void *)&telegram, 0);
 2385              		.loc 1 723 0
 2386 009a 144B     		ldr	r3, .L139+8
 2387 009c 1B68     		ldr	r3, [r3]
 2388 009e 1846     		mov	r0, r3
 2389 00a0 1149     		ldr	r1, .L139+4
 2390 00a2 0022     		movs	r2, #0
 2391 00a4 0023     		movs	r3, #0
 2392 00a6 FFF7FEFF 		bl	xQueueGenericSend
 724:App/STM32F4-Discovery/W5200.c **** 			// do nothing wait for input. 
 725:App/STM32F4-Discovery/W5200.c **** 			break;
 2393              		.loc 1 725 0
 2394 00aa 18E0     		b	.L130
 2395              	.L134:
 726:App/STM32F4-Discovery/W5200.c **** 		case 0x2:// disconnect interrupt 
 727:App/STM32F4-Discovery/W5200.c **** 			
 728:App/STM32F4-Discovery/W5200.c **** 			telegram.Qcmd = TCP_CLOSE;
 2396              		.loc 1 728 0
 2397 00ac 0E4B     		ldr	r3, .L139+4
 2398 00ae 0A22     		movs	r2, #10
 2399 00b0 1A70     		strb	r2, [r3]
 729:App/STM32F4-Discovery/W5200.c **** 			xQueueSend ( QTCP_handle, (void *)&telegram, 0);
 2400              		.loc 1 729 0
 2401 00b2 0E4B     		ldr	r3, .L139+8
 2402 00b4 1B68     		ldr	r3, [r3]
 2403 00b6 1846     		mov	r0, r3
 2404 00b8 0B49     		ldr	r1, .L139+4
 2405 00ba 0022     		movs	r2, #0
 2406 00bc 0023     		movs	r3, #0
 2407 00be FFF7FEFF 		bl	xQueueGenericSend
 730:App/STM32F4-Discovery/W5200.c **** 
 731:App/STM32F4-Discovery/W5200.c **** 
 732:App/STM32F4-Discovery/W5200.c **** 			// do nothing 
 733:App/STM32F4-Discovery/W5200.c **** 			break;
 2408              		.loc 1 733 0
 2409 00c2 0CE0     		b	.L130
 2410              	.L135:
 734:App/STM32F4-Discovery/W5200.c **** 		case 0x4:// Receive interuppts whenever data packet is received from a peer 		
 735:App/STM32F4-Discovery/W5200.c **** 			telegram.Qcmd = TCP_RECEIVE;
 2411              		.loc 1 735 0
 2412 00c4 084B     		ldr	r3, .L139+4
 2413 00c6 0922     		movs	r2, #9
 2414 00c8 1A70     		strb	r2, [r3]
 736:App/STM32F4-Discovery/W5200.c **** 			xQueueSend ( QTCP_handle, (void *)&telegram, 0);
 2415              		.loc 1 736 0
 2416 00ca 084B     		ldr	r3, .L139+8
 2417 00cc 1B68     		ldr	r3, [r3]
 2418 00ce 1846     		mov	r0, r3
 2419 00d0 0549     		ldr	r1, .L139+4
 2420 00d2 0022     		movs	r2, #0
 2421 00d4 0023     		movs	r3, #0
 2422 00d6 FFF7FEFF 		bl	xQueueGenericSend
 737:App/STM32F4-Discovery/W5200.c **** 
 738:App/STM32F4-Discovery/W5200.c **** 			break;
 2423              		.loc 1 738 0
 2424 00da 00E0     		b	.L130
 2425              	.L138:
 739:App/STM32F4-Discovery/W5200.c **** 		case 0x10:
 740:App/STM32F4-Discovery/W5200.c **** 			break;
 741:App/STM32F4-Discovery/W5200.c **** 		default:
 742:App/STM32F4-Discovery/W5200.c **** 			break;		
 2426              		.loc 1 742 0
 2427 00dc 00BF     		nop
 2428              	.L130:
 743:App/STM32F4-Discovery/W5200.c **** 	}
 744:App/STM32F4-Discovery/W5200.c **** }
 2429              		.loc 1 744 0
 2430 00de 0837     		adds	r7, r7, #8
 2431 00e0 BD46     		mov	sp, r7
 2432              		@ sp needed
 2433 00e2 80BD     		pop	{r7, pc}
 2434              	.L140:
 2435              		.align	2
 2436              	.L139:
 2437 00e4 04000000 		.word	bufferRX+4
 2438 00e8 00000000 		.word	telegram
 2439 00ec 00000000 		.word	QTCP_handle
 2440              		.cfi_endproc
 2441              	.LFE132:
 2443              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
 2444              		.align	2
 2445              		.global	EXTI4_IRQHandler
 2446              		.thumb
 2447              		.thumb_func
 2449              	EXTI4_IRQHandler:
 2450              	.LFB133:
 745:App/STM32F4-Discovery/W5200.c **** 
 746:App/STM32F4-Discovery/W5200.c **** //==================================================================================
 747:App/STM32F4-Discovery/W5200.c **** //// EXTI4_IRQHandler
 748:App/STM32F4-Discovery/W5200.c **** //==================================================================================
 749:App/STM32F4-Discovery/W5200.c **** void EXTI4_IRQHandler(void) //EXTI0 ISR
 750:App/STM32F4-Discovery/W5200.c **** {
 2451              		.loc 1 750 0
 2452              		.cfi_startproc
 2453              		@ args = 0, pretend = 0, frame = 0
 2454              		@ frame_needed = 1, uses_anonymous_args = 0
 2455 0000 80B5     		push	{r7, lr}
 2456              	.LCFI69:
 2457              		.cfi_def_cfa_offset 8
 2458              		.cfi_offset 7, -8
 2459              		.cfi_offset 14, -4
 2460 0002 00AF     		add	r7, sp, #0
 2461              	.LCFI70:
 2462              		.cfi_def_cfa_register 7
 751:App/STM32F4-Discovery/W5200.c ****  	/*!***************************************************************** 
 752:App/STM32F4-Discovery/W5200.c **** 	 * \fn void EXTI4_IRQHandler(void) 
 753:App/STM32F4-Discovery/W5200.c **** 	 * Interuppt service routine for wiznet it locates interrupt and resets 
 754:App/STM32F4-Discovery/W5200.c **** 	 * interrupt line. 
 755:App/STM32F4-Discovery/W5200.c **** 	 * *******************************************************************/
 756:App/STM32F4-Discovery/W5200.c **** 	
 757:App/STM32F4-Discovery/W5200.c **** 	
 758:App/STM32F4-Discovery/W5200.c **** 	if(EXTI_GetITStatus(WIZ_IT_EXTI_LINE) != RESET) //check if EXTI line is asserted
 2463              		.loc 1 758 0
 2464 0004 1020     		movs	r0, #16
 2465 0006 FFF7FEFF 		bl	EXTI_GetITStatus
 2466 000a 0346     		mov	r3, r0
 2467 000c 002B     		cmp	r3, #0
 2468 000e 04D0     		beq	.L141
 759:App/STM32F4-Discovery/W5200.c **** 	{
 760:App/STM32F4-Discovery/W5200.c **** 		
 761:App/STM32F4-Discovery/W5200.c **** 	//	taskENTER_CRITICAL();
 762:App/STM32F4-Discovery/W5200.c **** 		locate_interrupt();	
 2469              		.loc 1 762 0
 2470 0010 FFF7FEFF 		bl	locate_interrupt
 763:App/STM32F4-Discovery/W5200.c **** 		
 764:App/STM32F4-Discovery/W5200.c **** 		EXTI_ClearFlag(WIZ_IT_EXTI_LINE); //clear interrupt
 2471              		.loc 1 764 0
 2472 0014 1020     		movs	r0, #16
 2473 0016 FFF7FEFF 		bl	EXTI_ClearFlag
 2474              	.L141:
 765:App/STM32F4-Discovery/W5200.c **** 
 766:App/STM32F4-Discovery/W5200.c **** 	//	taskEXIT_CRITICAL();
 767:App/STM32F4-Discovery/W5200.c ****  	
 768:App/STM32F4-Discovery/W5200.c **** 	}
 769:App/STM32F4-Discovery/W5200.c **** }
 2475              		.loc 1 769 0
 2476 001a 80BD     		pop	{r7, pc}
 2477              		.cfi_endproc
 2478              	.LFE133:
 2480              		.section	.rodata
 2481              		.align	2
 2482              	.LC4:
 2483 0014 48656C6C 		.ascii	"Hello i'm dummy server!\012\012\000\000"
 2483      6F206927 
 2483      6D206475 
 2483      6D6D7920 
 2483      73657276 
 2484 002f 00       		.align	2
 2485              	.LC5:
 2486 0030 5468616E 		.ascii	"Thank you, come again!\012\012\000\000"
 2486      6B20796F 
 2486      752C2063 
 2486      6F6D6520 
 2486      61676169 
 2487 004a 0000     		.align	2
 2488              	.LC6:
 2489 004c 436C6965 		.ascii	"Client connected.\012\000"
 2489      6E742063 
 2489      6F6E6E65 
 2489      63746564 
 2489      2E0A00
 2490 005f 00       		.align	2
 2491              	.LC7:
 2492 0060 5061636B 		.ascii	"Packet received.\012\000"
 2492      65742072 
 2492      65636569 
 2492      7665642E 
 2492      0A00
 2493 0072 0000     		.align	2
 2494              	.LC8:
 2495 0074 436C6965 		.ascii	"Client closed connection.\012\000"
 2495      6E742063 
 2495      6C6F7365 
 2495      6420636F 
 2495      6E6E6563 
 2496 008f 00       		.section	.text.tcp_srv_Task,"ax",%progbits
 2497              		.align	2
 2498              		.global	tcp_srv_Task
 2499              		.thumb
 2500              		.thumb_func
 2502              	tcp_srv_Task:
 2503              	.LFB134:
 770:App/STM32F4-Discovery/W5200.c **** 
 771:App/STM32F4-Discovery/W5200.c **** 
 772:App/STM32F4-Discovery/W5200.c **** //============================================================================/
 773:App/STM32F4-Discovery/W5200.c **** // func set_macTask 
 774:App/STM32F4-Discovery/W5200.c **** //==================================================================================
 775:App/STM32F4-Discovery/W5200.c **** 
 776:App/STM32F4-Discovery/W5200.c **** void tcp_srv_Task(void *pvParameters)
 777:App/STM32F4-Discovery/W5200.c **** {
 2504              		.loc 1 777 0
 2505              		.cfi_startproc
 2506              		@ args = 0, pretend = 0, frame = 424
 2507              		@ frame_needed = 1, uses_anonymous_args = 0
 2508 0000 90B5     		push	{r4, r7, lr}
 2509              	.LCFI71:
 2510              		.cfi_def_cfa_offset 12
 2511              		.cfi_offset 4, -12
 2512              		.cfi_offset 7, -8
 2513              		.cfi_offset 14, -4
 2514 0002 EBB0     		sub	sp, sp, #428
 2515              	.LCFI72:
 2516              		.cfi_def_cfa_offset 440
 2517 0004 00AF     		add	r7, sp, #0
 2518              	.LCFI73:
 2519              		.cfi_def_cfa_register 7
 2520 0006 3B1D     		adds	r3, r7, #4
 2521 0008 1860     		str	r0, [r3]
 778:App/STM32F4-Discovery/W5200.c **** 
 779:App/STM32F4-Discovery/W5200.c **** 	/*!**********************************************************************
 780:App/STM32F4-Discovery/W5200.c **** 	 * 
 781:App/STM32F4-Discovery/W5200.c **** 	 * Task opens socket on port 80,  starts listening on port and susped 
 782:App/STM32F4-Discovery/W5200.c **** 	 * suspend itself. If interrupt occures it process CLI command 
 783:App/STM32F4-Discovery/W5200.c **** 	 * **********************************************************************/
 784:App/STM32F4-Discovery/W5200.c **** //	vTaskSuspend(NULL);
 785:App/STM32F4-Discovery/W5200.c **** 
 786:App/STM32F4-Discovery/W5200.c **** 	/* suspend task until init_W5200 is finished */
 787:App/STM32F4-Discovery/W5200.c **** 	//vTaskSuspend(set_macTaskHandle);
 788:App/STM32F4-Discovery/W5200.c **** //	vTaskSuspend(NULL);
 789:App/STM32F4-Discovery/W5200.c **** 	uint8_t	buf[50], buf1[256], oldbuf[50]; 
 790:App/STM32F4-Discovery/W5200.c **** 	QueueTelegram telegram;
 791:App/STM32F4-Discovery/W5200.c **** 	int len; 
 792:App/STM32F4-Discovery/W5200.c **** 	int gl;
 793:App/STM32F4-Discovery/W5200.c **** 	uint8_t * hello = "Hello i'm dummy server!\n\n\0";
 2522              		.loc 1 793 0
 2523 000a 6A4B     		ldr	r3, .L154
 2524 000c C7F8A031 		str	r3, [r7, #416]
 794:App/STM32F4-Discovery/W5200.c **** 	uint8_t * bye	= "Thank you, come again!\n\n\0";
 2525              		.loc 1 794 0
 2526 0010 694B     		ldr	r3, .L154+4
 2527 0012 C7F89C31 		str	r3, [r7, #412]
 2528              	.L153:
 795:App/STM32F4-Discovery/W5200.c **** 	/*create socket and send byte */
 796:App/STM32F4-Discovery/W5200.c **** 	
 797:App/STM32F4-Discovery/W5200.c **** 
 798:App/STM32F4-Discovery/W5200.c **** 	for( ;; )
 799:App/STM32F4-Discovery/W5200.c ****         {
 800:App/STM32F4-Discovery/W5200.c **** 		
 801:App/STM32F4-Discovery/W5200.c **** 		/* wait for queue */
 802:App/STM32F4-Discovery/W5200.c **** 		if ( xQueueReceive ( QTCP_handle, (void *)&telegram, portMAX_DELAY))
 2529              		.loc 1 802 0
 2530 0016 694B     		ldr	r3, .L154+8
 2531 0018 1A68     		ldr	r2, [r3]
 2532 001a 07F10C03 		add	r3, r7, #12
 2533 001e 1046     		mov	r0, r2
 2534 0020 1946     		mov	r1, r3
 2535 0022 4FF0FF32 		mov	r2, #-1
 2536 0026 0023     		movs	r3, #0
 2537 0028 FFF7FEFF 		bl	xQueueGenericReceive
 2538 002c 0346     		mov	r3, r0
 2539 002e 002B     		cmp	r3, #0
 2540 0030 00F0BF80 		beq	.L144
 803:App/STM32F4-Discovery/W5200.c **** 		{
 804:App/STM32F4-Discovery/W5200.c **** 			switch ( telegram.Qcmd)
 2541              		.loc 1 804 0
 2542 0034 07F10C03 		add	r3, r7, #12
 2543 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2544 003a 092B     		cmp	r3, #9
 2545 003c 19D0     		beq	.L146
 2546 003e 0A2B     		cmp	r3, #10
 2547 0040 00F09080 		beq	.L147
 2548 0044 082B     		cmp	r3, #8
 2549 0046 00D0     		beq	.L148
 805:App/STM32F4-Discovery/W5200.c **** 			{
 806:App/STM32F4-Discovery/W5200.c **** 				case TCP_CONNECTED:
 807:App/STM32F4-Discovery/W5200.c **** #ifdef DEBUG
 808:App/STM32F4-Discovery/W5200.c **** 	t_printf("Client connected.\n");
 809:App/STM32F4-Discovery/W5200.c **** #endif
 810:App/STM32F4-Discovery/W5200.c **** 
 811:App/STM32F4-Discovery/W5200.c **** 					send ( socket_0, hello, strlen(hello), 0);
 812:App/STM32F4-Discovery/W5200.c **** 					/* send hello */
 813:App/STM32F4-Discovery/W5200.c **** 					break;
 814:App/STM32F4-Discovery/W5200.c **** 				case TCP_RECEIVE:
 815:App/STM32F4-Discovery/W5200.c **** 					/* receive and process data*/
 816:App/STM32F4-Discovery/W5200.c **** 						// receive data 
 817:App/STM32F4-Discovery/W5200.c **** #ifdef DEBUG
 818:App/STM32F4-Discovery/W5200.c **** 	t_printf("Packet received.\n");
 819:App/STM32F4-Discovery/W5200.c **** #endif
 820:App/STM32F4-Discovery/W5200.c **** 
 821:App/STM32F4-Discovery/W5200.c **** 					len = recv(socket_0, buf, 100, 0);
 822:App/STM32F4-Discovery/W5200.c **** 
 823:App/STM32F4-Discovery/W5200.c **** 					if ( len < 3 )
 824:App/STM32F4-Discovery/W5200.c **** 					{
 825:App/STM32F4-Discovery/W5200.c **** 				
 826:App/STM32F4-Discovery/W5200.c **** 						FreeRTOS_CLIProcessCommand ( oldbuf, buf1, 256);
 827:App/STM32F4-Discovery/W5200.c **** 			
 828:App/STM32F4-Discovery/W5200.c **** 						int slen = strlen(buf1);
 829:App/STM32F4-Discovery/W5200.c **** 			
 830:App/STM32F4-Discovery/W5200.c **** 						send(socket_0, buf1,  slen, gl);
 831:App/STM32F4-Discovery/W5200.c **** 
 832:App/STM32F4-Discovery/W5200.c **** 				
 833:App/STM32F4-Discovery/W5200.c **** 
 834:App/STM32F4-Discovery/W5200.c **** 					}	
 835:App/STM32F4-Discovery/W5200.c **** 	
 836:App/STM32F4-Discovery/W5200.c **** 					else 
 837:App/STM32F4-Discovery/W5200.c **** 					{		
 838:App/STM32F4-Discovery/W5200.c **** 						buf[len-2]='\0';
 839:App/STM32F4-Discovery/W5200.c **** 						// proces data with CLI 
 840:App/STM32F4-Discovery/W5200.c **** 		
 841:App/STM32F4-Discovery/W5200.c **** 						FreeRTOS_CLIProcessCommand ( buf, buf1, 256);
 842:App/STM32F4-Discovery/W5200.c **** 			
 843:App/STM32F4-Discovery/W5200.c **** 						int slen = strlen(buf1);
 844:App/STM32F4-Discovery/W5200.c **** 			
 845:App/STM32F4-Discovery/W5200.c **** 						send(socket_0, buf1,  slen, gl);
 846:App/STM32F4-Discovery/W5200.c **** 
 847:App/STM32F4-Discovery/W5200.c **** 						strcpy(oldbuf, buf);
 848:App/STM32F4-Discovery/W5200.c **** 
 849:App/STM32F4-Discovery/W5200.c **** 						for (slen = 0 ; slen < 10; slen++) buf[slen] = NULL;
 850:App/STM32F4-Discovery/W5200.c **** 					}
 851:App/STM32F4-Discovery/W5200.c **** 		
 852:App/STM32F4-Discovery/W5200.c **** 
 853:App/STM32F4-Discovery/W5200.c **** 					
 854:App/STM32F4-Discovery/W5200.c **** 
 855:App/STM32F4-Discovery/W5200.c **** 					break;
 856:App/STM32F4-Discovery/W5200.c **** 				case TCP_CLOSE: 
 857:App/STM32F4-Discovery/W5200.c **** 					/*close current socket and 
 858:App/STM32F4-Discovery/W5200.c **** 					 * open new socket */
 859:App/STM32F4-Discovery/W5200.c **** #ifdef DEBUG
 860:App/STM32F4-Discovery/W5200.c **** 	t_printf("Client closed connection.\n");
 861:App/STM32F4-Discovery/W5200.c **** #endif
 862:App/STM32F4-Discovery/W5200.c **** 
 863:App/STM32F4-Discovery/W5200.c **** 					send ( socket_0, bye, strlen(bye), 0);
 864:App/STM32F4-Discovery/W5200.c **** 					closesocket(socket_0);
 865:App/STM32F4-Discovery/W5200.c **** 					socket_0 = socket(W5200_Sn_MR_TCP, 80, 0);
 866:App/STM32F4-Discovery/W5200.c **** 					listen(socket_0);
 867:App/STM32F4-Discovery/W5200.c **** 
 868:App/STM32F4-Discovery/W5200.c **** 					break;
 869:App/STM32F4-Discovery/W5200.c **** 				default:
 870:App/STM32F4-Discovery/W5200.c **** 					break;
 2550              		.loc 1 870 0
 2551 0048 B3E0     		b	.L144
 2552              	.L148:
 808:App/STM32F4-Discovery/W5200.c **** 	t_printf("Client connected.\n");
 2553              		.loc 1 808 0
 2554 004a 5D48     		ldr	r0, .L154+12
 2555 004c FFF7FEFF 		bl	t_printf
 811:App/STM32F4-Discovery/W5200.c **** 					send ( socket_0, hello, strlen(hello), 0);
 2556              		.loc 1 811 0
 2557 0050 5C4B     		ldr	r3, .L154+16
 2558 0052 1B68     		ldr	r3, [r3]
 2559 0054 DCB2     		uxtb	r4, r3
 2560 0056 D7F8A001 		ldr	r0, [r7, #416]
 2561 005a FFF7FEFF 		bl	strlen
 2562 005e 0346     		mov	r3, r0
 2563 0060 9BB2     		uxth	r3, r3
 2564 0062 2046     		mov	r0, r4
 2565 0064 D7F8A011 		ldr	r1, [r7, #416]
 2566 0068 1A46     		mov	r2, r3
 2567 006a 0023     		movs	r3, #0
 2568 006c FFF7FEFF 		bl	send
 813:App/STM32F4-Discovery/W5200.c **** 					break;
 2569              		.loc 1 813 0
 2570 0070 9FE0     		b	.L144
 2571              	.L146:
 818:App/STM32F4-Discovery/W5200.c **** 	t_printf("Packet received.\n");
 2572              		.loc 1 818 0
 2573 0072 5548     		ldr	r0, .L154+20
 2574 0074 FFF7FEFF 		bl	t_printf
 821:App/STM32F4-Discovery/W5200.c **** 					len = recv(socket_0, buf, 100, 0);
 2575              		.loc 1 821 0
 2576 0078 524B     		ldr	r3, .L154+16
 2577 007a 1B68     		ldr	r3, [r3]
 2578 007c DAB2     		uxtb	r2, r3
 2579 007e 07F5AE73 		add	r3, r7, #348
 2580 0082 1046     		mov	r0, r2
 2581 0084 1946     		mov	r1, r3
 2582 0086 6422     		movs	r2, #100
 2583 0088 0023     		movs	r3, #0
 2584 008a FFF7FEFF 		bl	recv
 2585 008e C7F89801 		str	r0, [r7, #408]
 823:App/STM32F4-Discovery/W5200.c **** 					if ( len < 3 )
 2586              		.loc 1 823 0
 2587 0092 D7F89831 		ldr	r3, [r7, #408]
 2588 0096 022B     		cmp	r3, #2
 2589 0098 1FDC     		bgt	.L149
 2590              	.LBB2:
 826:App/STM32F4-Discovery/W5200.c **** 						FreeRTOS_CLIProcessCommand ( oldbuf, buf1, 256);
 2591              		.loc 1 826 0
 2592 009a 07F12802 		add	r2, r7, #40
 2593 009e 07F15C03 		add	r3, r7, #92
 2594 00a2 1046     		mov	r0, r2
 2595 00a4 1946     		mov	r1, r3
 2596 00a6 4FF48072 		mov	r2, #256
 2597 00aa FFF7FEFF 		bl	FreeRTOS_CLIProcessCommand
 828:App/STM32F4-Discovery/W5200.c **** 						int slen = strlen(buf1);
 2598              		.loc 1 828 0
 2599 00ae 07F15C03 		add	r3, r7, #92
 2600 00b2 1846     		mov	r0, r3
 2601 00b4 FFF7FEFF 		bl	strlen
 2602 00b8 0346     		mov	r3, r0
 2603 00ba C7F89431 		str	r3, [r7, #404]
 830:App/STM32F4-Discovery/W5200.c **** 						send(socket_0, buf1,  slen, gl);
 2604              		.loc 1 830 0
 2605 00be 414B     		ldr	r3, .L154+16
 2606 00c0 1B68     		ldr	r3, [r3]
 2607 00c2 D8B2     		uxtb	r0, r3
 2608 00c4 D7F89431 		ldr	r3, [r7, #404]
 2609 00c8 9AB2     		uxth	r2, r3
 2610 00ca D7F89031 		ldr	r3, [r7, #400]
 2611 00ce 9BB2     		uxth	r3, r3
 2612 00d0 07F15C01 		add	r1, r7, #92
 2613 00d4 FFF7FEFF 		bl	send
 2614              	.LBE2:
 2615 00d8 43E0     		b	.L150
 2616              	.L149:
 2617              	.LBB3:
 838:App/STM32F4-Discovery/W5200.c **** 						buf[len-2]='\0';
 2618              		.loc 1 838 0
 2619 00da D7F89831 		ldr	r3, [r7, #408]
 2620 00de 023B     		subs	r3, r3, #2
 2621 00e0 07F5D472 		add	r2, r7, #424
 2622 00e4 1344     		add	r3, r3, r2
 2623 00e6 0022     		movs	r2, #0
 2624 00e8 03F84C2C 		strb	r2, [r3, #-76]
 841:App/STM32F4-Discovery/W5200.c **** 						FreeRTOS_CLIProcessCommand ( buf, buf1, 256);
 2625              		.loc 1 841 0
 2626 00ec 07F5AE72 		add	r2, r7, #348
 2627 00f0 07F15C03 		add	r3, r7, #92
 2628 00f4 1046     		mov	r0, r2
 2629 00f6 1946     		mov	r1, r3
 2630 00f8 4FF48072 		mov	r2, #256
 2631 00fc FFF7FEFF 		bl	FreeRTOS_CLIProcessCommand
 843:App/STM32F4-Discovery/W5200.c **** 						int slen = strlen(buf1);
 2632              		.loc 1 843 0
 2633 0100 07F15C03 		add	r3, r7, #92
 2634 0104 1846     		mov	r0, r3
 2635 0106 FFF7FEFF 		bl	strlen
 2636 010a 0346     		mov	r3, r0
 2637 010c C7F8A431 		str	r3, [r7, #420]
 845:App/STM32F4-Discovery/W5200.c **** 						send(socket_0, buf1,  slen, gl);
 2638              		.loc 1 845 0
 2639 0110 2C4B     		ldr	r3, .L154+16
 2640 0112 1B68     		ldr	r3, [r3]
 2641 0114 D8B2     		uxtb	r0, r3
 2642 0116 D7F8A431 		ldr	r3, [r7, #420]
 2643 011a 9AB2     		uxth	r2, r3
 2644 011c D7F89031 		ldr	r3, [r7, #400]
 2645 0120 9BB2     		uxth	r3, r3
 2646 0122 07F15C01 		add	r1, r7, #92
 2647 0126 FFF7FEFF 		bl	send
 847:App/STM32F4-Discovery/W5200.c **** 						strcpy(oldbuf, buf);
 2648              		.loc 1 847 0
 2649 012a 07F12802 		add	r2, r7, #40
 2650 012e 07F5AE73 		add	r3, r7, #348
 2651 0132 1046     		mov	r0, r2
 2652 0134 1946     		mov	r1, r3
 2653 0136 FFF7FEFF 		bl	strcpy
 849:App/STM32F4-Discovery/W5200.c **** 						for (slen = 0 ; slen < 10; slen++) buf[slen] = NULL;
 2654              		.loc 1 849 0
 2655 013a 0023     		movs	r3, #0
 2656 013c C7F8A431 		str	r3, [r7, #420]
 2657 0140 0BE0     		b	.L151
 2658              	.L152:
 849:App/STM32F4-Discovery/W5200.c **** 						for (slen = 0 ; slen < 10; slen++) buf[slen] = NULL;
 2659              		.loc 1 849 0 is_stmt 0 discriminator 2
 2660 0142 07F5AE72 		add	r2, r7, #348
 2661 0146 D7F8A431 		ldr	r3, [r7, #420]
 2662 014a 1344     		add	r3, r3, r2
 2663 014c 0022     		movs	r2, #0
 2664 014e 1A70     		strb	r2, [r3]
 2665 0150 D7F8A431 		ldr	r3, [r7, #420]
 2666 0154 0133     		adds	r3, r3, #1
 2667 0156 C7F8A431 		str	r3, [r7, #420]
 2668              	.L151:
 849:App/STM32F4-Discovery/W5200.c **** 						for (slen = 0 ; slen < 10; slen++) buf[slen] = NULL;
 2669              		.loc 1 849 0 discriminator 1
 2670 015a D7F8A431 		ldr	r3, [r7, #420]
 2671 015e 092B     		cmp	r3, #9
 2672 0160 EFDD     		ble	.L152
 2673              	.L150:
 2674              	.LBE3:
 855:App/STM32F4-Discovery/W5200.c **** 					break;
 2675              		.loc 1 855 0 is_stmt 1
 2676 0162 26E0     		b	.L144
 2677              	.L147:
 860:App/STM32F4-Discovery/W5200.c **** 	t_printf("Client closed connection.\n");
 2678              		.loc 1 860 0
 2679 0164 1948     		ldr	r0, .L154+24
 2680 0166 FFF7FEFF 		bl	t_printf
 863:App/STM32F4-Discovery/W5200.c **** 					send ( socket_0, bye, strlen(bye), 0);
 2681              		.loc 1 863 0
 2682 016a 164B     		ldr	r3, .L154+16
 2683 016c 1B68     		ldr	r3, [r3]
 2684 016e DCB2     		uxtb	r4, r3
 2685 0170 D7F89C01 		ldr	r0, [r7, #412]
 2686 0174 FFF7FEFF 		bl	strlen
 2687 0178 0346     		mov	r3, r0
 2688 017a 9BB2     		uxth	r3, r3
 2689 017c 2046     		mov	r0, r4
 2690 017e D7F89C11 		ldr	r1, [r7, #412]
 2691 0182 1A46     		mov	r2, r3
 2692 0184 0023     		movs	r3, #0
 2693 0186 FFF7FEFF 		bl	send
 864:App/STM32F4-Discovery/W5200.c **** 					closesocket(socket_0);
 2694              		.loc 1 864 0
 2695 018a 0E4B     		ldr	r3, .L154+16
 2696 018c 1B68     		ldr	r3, [r3]
 2697 018e 1846     		mov	r0, r3
 2698 0190 FFF7FEFF 		bl	closesocket
 865:App/STM32F4-Discovery/W5200.c **** 					socket_0 = socket(W5200_Sn_MR_TCP, 80, 0);
 2699              		.loc 1 865 0
 2700 0194 0120     		movs	r0, #1
 2701 0196 5021     		movs	r1, #80
 2702 0198 0022     		movs	r2, #0
 2703 019a FFF7FEFF 		bl	socket
 2704 019e 0346     		mov	r3, r0
 2705 01a0 1A46     		mov	r2, r3
 2706 01a2 084B     		ldr	r3, .L154+16
 2707 01a4 1A60     		str	r2, [r3]
 866:App/STM32F4-Discovery/W5200.c **** 					listen(socket_0);
 2708              		.loc 1 866 0
 2709 01a6 074B     		ldr	r3, .L154+16
 2710 01a8 1B68     		ldr	r3, [r3]
 2711 01aa 1846     		mov	r0, r3
 2712 01ac FFF7FEFF 		bl	listen
 868:App/STM32F4-Discovery/W5200.c **** 					break;
 2713              		.loc 1 868 0
 2714 01b0 00BF     		nop
 2715              	.L144:
 871:App/STM32F4-Discovery/W5200.c **** 			}
 872:App/STM32F4-Discovery/W5200.c **** 		}
 873:App/STM32F4-Discovery/W5200.c **** 					
 874:App/STM32F4-Discovery/W5200.c **** 			
 875:App/STM32F4-Discovery/W5200.c **** 	}	
 2716              		.loc 1 875 0
 2717 01b2 30E7     		b	.L153
 2718              	.L155:
 2719              		.align	2
 2720              	.L154:
 2721 01b4 14000000 		.word	.LC4
 2722 01b8 30000000 		.word	.LC5
 2723 01bc 00000000 		.word	QTCP_handle
 2724 01c0 4C000000 		.word	.LC6
 2725 01c4 00000000 		.word	socket_0
 2726 01c8 60000000 		.word	.LC7
 2727 01cc 74000000 		.word	.LC8
 2728              		.cfi_endproc
 2729              	.LFE134:
 2731              		.text
 2732              	.Letext0:
 2733              		.file 2 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/lib/gcc/arm-none-eabi/4.8.4/include/std
 2734              		.file 3 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/machine/_default_
 2735              		.file 4 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/stdint.h"
 2736              		.file 5 "App/STM32F4-Discovery/Libraries/CMSIS/ST/STM32F4xx/Include/stm32f4xx.h"
 2737              		.file 6 "Source/portable/GCC/ARM_CM4F/portmacro.h"
 2738              		.file 7 "Source/include/task.h"
 2739              		.file 8 "Source/include/queue.h"
 2740              		.file 9 "Source/include/semphr.h"
 2741              		.file 10 "App/STM32F4-Discovery/main.h"
 2742              		.file 11 "App/STM32F4-Discovery/Libraries/CMSIS/Include/core_cm4.h"
 2743              		.file 12 "App/STM32F4-Discovery/spi.h"
 2744              		.file 13 "App/STM32F4-Discovery/W5200.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 W5200.c
                            *COM*:0000000000000004 xSemaphoreDMASPI
                            *COM*:0000000000000004 xSmphrUSART
                            *COM*:0000000000000004 xSemaphoreREADLEN
                            *COM*:0000000000000004 motorHeartBeatHandle
                            *COM*:0000000000000004 motorHBHandle
                            *COM*:0000000000000004 QSpd_handle
                            *COM*:0000000000000004 QTCP_handle
                            *COM*:0000000000000004 socket_0
                            *COM*:00000000000007d0 bufferTX
                            *COM*:00000000000007d0 bufferRX
                            *COM*:0000000000000004 bufferRXidx
                            *COM*:0000000000000004 bufferTXidx
                            *COM*:0000000000000004 dat_lengthRX
                            *COM*:0000000000000004 dat_lengthTX
                            *COM*:0000000000000004 set_macTaskHandle
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:35     .rodata.RAMSIZE_TABLE:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:38     .rodata.RAMSIZE_TABLE:0000000000000000 RAMSIZE_TABLE
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:58     .bss.socket_table:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:61     .bss.socket_table:0000000000000000 socket_table
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:64     .bss.socket_flg:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:67     .bss.socket_flg:0000000000000000 socket_flg
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:70     .bss.telegram:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:73     .bss.telegram:0000000000000000 telegram
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:76     .rodata.socket_open_status:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:79     .rodata.socket_open_status:0000000000000000 socket_open_status
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:87     .rodata:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:114    .text.init_W5200:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:119    .text.init_W5200:0000000000000000 init_W5200
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:424    .text.W5200_configure_network:0000000000000000 W5200_configure_network
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:342    .text.W5200_set_hardware_address:0000000000000000 W5200_set_hardware_address
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:1265   .text.socket:0000000000000000 socket
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:2185   .text.listen:0000000000000000 listen
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:325    .text.init_W5200:0000000000000178 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:337    .text.W5200_set_hardware_address:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:374    .text.W5200_get_hardware_address:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:379    .text.W5200_get_hardware_address:0000000000000000 W5200_get_hardware_address
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:414    .text.W5200_get_hardware_address:0000000000000020 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:419    .text.W5200_configure_network:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:468    .text.W5200_get_ipaddress:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:473    .text.W5200_get_ipaddress:0000000000000000 W5200_get_ipaddress
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:508    .text.W5200_get_ipaddress:0000000000000020 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:513    .text.get_CRStatus:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:517    .text.get_CRStatus:0000000000000000 get_CRStatus
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:562    .text.get_CRStatus:0000000000000034 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:567    .text.get_SRStatus:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:571    .text.get_SRStatus:0000000000000000 get_SRStatus
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:616    .text.get_SRStatus:0000000000000034 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:621    .text.get_TXFSRStatus:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:625    .text.get_TXFSRStatus:0000000000000000 get_TXFSRStatus
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:677    .text.get_TXFSRStatus:0000000000000044 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:682    .text.get_TXWRStatus:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:686    .text.get_TXWRStatus:0000000000000000 get_TXWRStatus
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:738    .text.get_TXWRStatus:0000000000000044 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:743    .text.get_TXRD:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:747    .text.get_TXRD:0000000000000000 get_TXRD
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:799    .text.get_TXRD:0000000000000044 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:804    .text.set_TXWR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:808    .text.set_TXWR:0000000000000000 set_TXWR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:850    .text.get_RXRSR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:854    .text.get_RXRSR:0000000000000000 get_RXRSR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:906    .text.get_RXRSR:0000000000000044 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:911    .text.get_RXRD:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:915    .text.get_RXRD:0000000000000000 get_RXRD
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:967    .text.get_RXRD:0000000000000044 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:972    .text.set_RXRD:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:976    .text.set_RXRD:0000000000000000 set_RXRD
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:1018   .text.write_memory:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:1023   .text.write_memory:0000000000000000 write_memory
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:1134   .text.read_memory:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:1139   .text.read_memory:0000000000000000 read_memory
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:1255   .text.read_memory:00000000000000bc $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:1260   .text.socket:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:1475   .text.socket:000000000000014c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:1480   .text.closesocket:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:1485   .text.closesocket:0000000000000000 closesocket
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:1573   .text.closesocket:0000000000000078 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:1578   .text.connect:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:1583   .text.connect:0000000000000000 connect
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:1748   .text.connect:0000000000000104 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:1753   .text.send:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:1758   .text.send:0000000000000000 send
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:2015   .text.send:00000000000001a4 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:2021   .text.recv:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:2026   .text.recv:0000000000000000 recv
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:2175   .text.recv:00000000000000e0 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:2180   .text.listen:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:2294   .text.listen:00000000000000a0 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:2300   .text.locate_interrupt:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:2305   .text.locate_interrupt:0000000000000000 locate_interrupt
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:2363   .text.locate_interrupt:0000000000000054 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:2379   .text.locate_interrupt:0000000000000094 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:2437   .text.locate_interrupt:00000000000000e4 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:2444   .text.EXTI4_IRQHandler:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:2449   .text.EXTI4_IRQHandler:0000000000000000 EXTI4_IRQHandler
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:2497   .text.tcp_srv_Task:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:2502   .text.tcp_srv_Task:0000000000000000 tcp_srv_Task
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccvT1IZe.s:2721   .text.tcp_srv_Task:00000000000001b4 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
xQueueGenericCreate
xTaskGetTickCount
vTaskDelay
spi_dma_sendByte
vTaskDelayUntil
vTaskDelete
spi_dma_send
spi_dma_read
memcpy
spi_dma_send2B
xQueueGenericSend
EXTI_GetITStatus
EXTI_ClearFlag
xQueueGenericReceive
t_printf
strlen
FreeRTOS_CLIProcessCommand
strcpy
