   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"modbus_mk.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	xSemaphoreDMASPI,4,4
  20              		.section	.bss.xHigherPriorityTaskWoken,"aw",%nobits
  21              		.align	2
  24              	xHigherPriorityTaskWoken:
  25 0000 00000000 		.space	4
  26              		.comm	xSmphrUSART,4,4
  27              		.comm	motorHeartBeatHandle,4,4
  28              		.comm	motorHBHandle,4,4
  29              		.comm	QSpd_handle,4,4
  30              		.comm	QStatus_handle,4,4
  31              		.comm	socket_0,4,4
  32              		.comm	bufferTX,2000,4
  33              		.comm	bufferRX,2000,4
  34              		.comm	bufferRXidx,4,4
  35              		.comm	bufferTXidx,4,4
  36              		.comm	dat_lengthRX,4,4
  37              		.comm	dat_lengthTX,4,4
  38              		.comm	set_macTaskHandle,4,4
  39              		.section	.rodata
  40              		.align	2
  41              	.LC0:
  42 0000 6D6F746F 		.ascii	"motor\000"
  42      7200
  43 0006 0000     		.align	2
  44              	.LC1:
  45 0008 6D6F746F 		.ascii	"motor  [options]\302\240[parameters]\302\240- Type "
  45      7220205B 
  45      6F707469 
  45      6F6E735D 
  45      C2A05B70 
  46 002f 6D6F746F 		.ascii	"motor help for more help\015\012\012\000\000"
  46      72206865 
  46      6C702066 
  46      6F72206D 
  46      6F726520 
  47              		.section	.rodata.xMotorCommand,"a",%progbits
  48              		.align	2
  51              	xMotorCommand:
  52 0000 00000000 		.word	.LC0
  53 0004 08000000 		.word	.LC1
  54 0008 00000000 		.word	prvMotorCommand
  55 000c FF       		.byte	-1
  56 000d 000000   		.space	3
  57              		.section	.rodata
  58              		.align	2
  59              	.LC2:
  60 004c 7461736B 		.ascii	"task\000"
  60      00
  61 0051 000000   		.align	2
  62              	.LC3:
  63 0054 7461736B 		.ascii	"task - return tasks list\015\012\012\000\000"
  63      202D2072 
  63      65747572 
  63      6E207461 
  63      736B7320 
  64 0071 000000   		.section	.rodata.xTaskStatsCommand,"a",%progbits
  65              		.align	2
  68              	xTaskStatsCommand:
  69 0000 4C000000 		.word	.LC2
  70 0004 54000000 		.word	.LC3
  71 0008 00000000 		.word	prvTaskStatsCommand
  72 000c FF       		.byte	-1
  73 000d 000000   		.space	3
  74              		.section	.rodata.table_crc_hi,"a",%progbits
  75              		.align	2
  78              	table_crc_hi:
  79 0000 00       		.byte	0
  80 0001 C1       		.byte	-63
  81 0002 81       		.byte	-127
  82 0003 40       		.byte	64
  83 0004 01       		.byte	1
  84 0005 C0       		.byte	-64
  85 0006 80       		.byte	-128
  86 0007 41       		.byte	65
  87 0008 01       		.byte	1
  88 0009 C0       		.byte	-64
  89 000a 80       		.byte	-128
  90 000b 41       		.byte	65
  91 000c 00       		.byte	0
  92 000d C1       		.byte	-63
  93 000e 81       		.byte	-127
  94 000f 40       		.byte	64
  95 0010 01       		.byte	1
  96 0011 C0       		.byte	-64
  97 0012 80       		.byte	-128
  98 0013 41       		.byte	65
  99 0014 00       		.byte	0
 100 0015 C1       		.byte	-63
 101 0016 81       		.byte	-127
 102 0017 40       		.byte	64
 103 0018 00       		.byte	0
 104 0019 C1       		.byte	-63
 105 001a 81       		.byte	-127
 106 001b 40       		.byte	64
 107 001c 01       		.byte	1
 108 001d C0       		.byte	-64
 109 001e 80       		.byte	-128
 110 001f 41       		.byte	65
 111 0020 01       		.byte	1
 112 0021 C0       		.byte	-64
 113 0022 80       		.byte	-128
 114 0023 41       		.byte	65
 115 0024 00       		.byte	0
 116 0025 C1       		.byte	-63
 117 0026 81       		.byte	-127
 118 0027 40       		.byte	64
 119 0028 00       		.byte	0
 120 0029 C1       		.byte	-63
 121 002a 81       		.byte	-127
 122 002b 40       		.byte	64
 123 002c 01       		.byte	1
 124 002d C0       		.byte	-64
 125 002e 80       		.byte	-128
 126 002f 41       		.byte	65
 127 0030 00       		.byte	0
 128 0031 C1       		.byte	-63
 129 0032 81       		.byte	-127
 130 0033 40       		.byte	64
 131 0034 01       		.byte	1
 132 0035 C0       		.byte	-64
 133 0036 80       		.byte	-128
 134 0037 41       		.byte	65
 135 0038 01       		.byte	1
 136 0039 C0       		.byte	-64
 137 003a 80       		.byte	-128
 138 003b 41       		.byte	65
 139 003c 00       		.byte	0
 140 003d C1       		.byte	-63
 141 003e 81       		.byte	-127
 142 003f 40       		.byte	64
 143 0040 01       		.byte	1
 144 0041 C0       		.byte	-64
 145 0042 80       		.byte	-128
 146 0043 41       		.byte	65
 147 0044 00       		.byte	0
 148 0045 C1       		.byte	-63
 149 0046 81       		.byte	-127
 150 0047 40       		.byte	64
 151 0048 00       		.byte	0
 152 0049 C1       		.byte	-63
 153 004a 81       		.byte	-127
 154 004b 40       		.byte	64
 155 004c 01       		.byte	1
 156 004d C0       		.byte	-64
 157 004e 80       		.byte	-128
 158 004f 41       		.byte	65
 159 0050 00       		.byte	0
 160 0051 C1       		.byte	-63
 161 0052 81       		.byte	-127
 162 0053 40       		.byte	64
 163 0054 01       		.byte	1
 164 0055 C0       		.byte	-64
 165 0056 80       		.byte	-128
 166 0057 41       		.byte	65
 167 0058 01       		.byte	1
 168 0059 C0       		.byte	-64
 169 005a 80       		.byte	-128
 170 005b 41       		.byte	65
 171 005c 00       		.byte	0
 172 005d C1       		.byte	-63
 173 005e 81       		.byte	-127
 174 005f 40       		.byte	64
 175 0060 00       		.byte	0
 176 0061 C1       		.byte	-63
 177 0062 81       		.byte	-127
 178 0063 40       		.byte	64
 179 0064 01       		.byte	1
 180 0065 C0       		.byte	-64
 181 0066 80       		.byte	-128
 182 0067 41       		.byte	65
 183 0068 01       		.byte	1
 184 0069 C0       		.byte	-64
 185 006a 80       		.byte	-128
 186 006b 41       		.byte	65
 187 006c 00       		.byte	0
 188 006d C1       		.byte	-63
 189 006e 81       		.byte	-127
 190 006f 40       		.byte	64
 191 0070 01       		.byte	1
 192 0071 C0       		.byte	-64
 193 0072 80       		.byte	-128
 194 0073 41       		.byte	65
 195 0074 00       		.byte	0
 196 0075 C1       		.byte	-63
 197 0076 81       		.byte	-127
 198 0077 40       		.byte	64
 199 0078 00       		.byte	0
 200 0079 C1       		.byte	-63
 201 007a 81       		.byte	-127
 202 007b 40       		.byte	64
 203 007c 01       		.byte	1
 204 007d C0       		.byte	-64
 205 007e 80       		.byte	-128
 206 007f 41       		.byte	65
 207 0080 01       		.byte	1
 208 0081 C0       		.byte	-64
 209 0082 80       		.byte	-128
 210 0083 41       		.byte	65
 211 0084 00       		.byte	0
 212 0085 C1       		.byte	-63
 213 0086 81       		.byte	-127
 214 0087 40       		.byte	64
 215 0088 00       		.byte	0
 216 0089 C1       		.byte	-63
 217 008a 81       		.byte	-127
 218 008b 40       		.byte	64
 219 008c 01       		.byte	1
 220 008d C0       		.byte	-64
 221 008e 80       		.byte	-128
 222 008f 41       		.byte	65
 223 0090 00       		.byte	0
 224 0091 C1       		.byte	-63
 225 0092 81       		.byte	-127
 226 0093 40       		.byte	64
 227 0094 01       		.byte	1
 228 0095 C0       		.byte	-64
 229 0096 80       		.byte	-128
 230 0097 41       		.byte	65
 231 0098 01       		.byte	1
 232 0099 C0       		.byte	-64
 233 009a 80       		.byte	-128
 234 009b 41       		.byte	65
 235 009c 00       		.byte	0
 236 009d C1       		.byte	-63
 237 009e 81       		.byte	-127
 238 009f 40       		.byte	64
 239 00a0 00       		.byte	0
 240 00a1 C1       		.byte	-63
 241 00a2 81       		.byte	-127
 242 00a3 40       		.byte	64
 243 00a4 01       		.byte	1
 244 00a5 C0       		.byte	-64
 245 00a6 80       		.byte	-128
 246 00a7 41       		.byte	65
 247 00a8 01       		.byte	1
 248 00a9 C0       		.byte	-64
 249 00aa 80       		.byte	-128
 250 00ab 41       		.byte	65
 251 00ac 00       		.byte	0
 252 00ad C1       		.byte	-63
 253 00ae 81       		.byte	-127
 254 00af 40       		.byte	64
 255 00b0 01       		.byte	1
 256 00b1 C0       		.byte	-64
 257 00b2 80       		.byte	-128
 258 00b3 41       		.byte	65
 259 00b4 00       		.byte	0
 260 00b5 C1       		.byte	-63
 261 00b6 81       		.byte	-127
 262 00b7 40       		.byte	64
 263 00b8 00       		.byte	0
 264 00b9 C1       		.byte	-63
 265 00ba 81       		.byte	-127
 266 00bb 40       		.byte	64
 267 00bc 01       		.byte	1
 268 00bd C0       		.byte	-64
 269 00be 80       		.byte	-128
 270 00bf 41       		.byte	65
 271 00c0 00       		.byte	0
 272 00c1 C1       		.byte	-63
 273 00c2 81       		.byte	-127
 274 00c3 40       		.byte	64
 275 00c4 01       		.byte	1
 276 00c5 C0       		.byte	-64
 277 00c6 80       		.byte	-128
 278 00c7 41       		.byte	65
 279 00c8 01       		.byte	1
 280 00c9 C0       		.byte	-64
 281 00ca 80       		.byte	-128
 282 00cb 41       		.byte	65
 283 00cc 00       		.byte	0
 284 00cd C1       		.byte	-63
 285 00ce 81       		.byte	-127
 286 00cf 40       		.byte	64
 287 00d0 01       		.byte	1
 288 00d1 C0       		.byte	-64
 289 00d2 80       		.byte	-128
 290 00d3 41       		.byte	65
 291 00d4 00       		.byte	0
 292 00d5 C1       		.byte	-63
 293 00d6 81       		.byte	-127
 294 00d7 40       		.byte	64
 295 00d8 00       		.byte	0
 296 00d9 C1       		.byte	-63
 297 00da 81       		.byte	-127
 298 00db 40       		.byte	64
 299 00dc 01       		.byte	1
 300 00dd C0       		.byte	-64
 301 00de 80       		.byte	-128
 302 00df 41       		.byte	65
 303 00e0 01       		.byte	1
 304 00e1 C0       		.byte	-64
 305 00e2 80       		.byte	-128
 306 00e3 41       		.byte	65
 307 00e4 00       		.byte	0
 308 00e5 C1       		.byte	-63
 309 00e6 81       		.byte	-127
 310 00e7 40       		.byte	64
 311 00e8 00       		.byte	0
 312 00e9 C1       		.byte	-63
 313 00ea 81       		.byte	-127
 314 00eb 40       		.byte	64
 315 00ec 01       		.byte	1
 316 00ed C0       		.byte	-64
 317 00ee 80       		.byte	-128
 318 00ef 41       		.byte	65
 319 00f0 00       		.byte	0
 320 00f1 C1       		.byte	-63
 321 00f2 81       		.byte	-127
 322 00f3 40       		.byte	64
 323 00f4 01       		.byte	1
 324 00f5 C0       		.byte	-64
 325 00f6 80       		.byte	-128
 326 00f7 41       		.byte	65
 327 00f8 01       		.byte	1
 328 00f9 C0       		.byte	-64
 329 00fa 80       		.byte	-128
 330 00fb 41       		.byte	65
 331 00fc 00       		.byte	0
 332 00fd C1       		.byte	-63
 333 00fe 81       		.byte	-127
 334 00ff 40       		.byte	64
 335              		.section	.rodata.table_crc_lo,"a",%progbits
 336              		.align	2
 339              	table_crc_lo:
 340 0000 00       		.byte	0
 341 0001 C0       		.byte	-64
 342 0002 C1       		.byte	-63
 343 0003 01       		.byte	1
 344 0004 C3       		.byte	-61
 345 0005 03       		.byte	3
 346 0006 02       		.byte	2
 347 0007 C2       		.byte	-62
 348 0008 C6       		.byte	-58
 349 0009 06       		.byte	6
 350 000a 07       		.byte	7
 351 000b C7       		.byte	-57
 352 000c 05       		.byte	5
 353 000d C5       		.byte	-59
 354 000e C4       		.byte	-60
 355 000f 04       		.byte	4
 356 0010 CC       		.byte	-52
 357 0011 0C       		.byte	12
 358 0012 0D       		.byte	13
 359 0013 CD       		.byte	-51
 360 0014 0F       		.byte	15
 361 0015 CF       		.byte	-49
 362 0016 CE       		.byte	-50
 363 0017 0E       		.byte	14
 364 0018 0A       		.byte	10
 365 0019 CA       		.byte	-54
 366 001a CB       		.byte	-53
 367 001b 0B       		.byte	11
 368 001c C9       		.byte	-55
 369 001d 09       		.byte	9
 370 001e 08       		.byte	8
 371 001f C8       		.byte	-56
 372 0020 D8       		.byte	-40
 373 0021 18       		.byte	24
 374 0022 19       		.byte	25
 375 0023 D9       		.byte	-39
 376 0024 1B       		.byte	27
 377 0025 DB       		.byte	-37
 378 0026 DA       		.byte	-38
 379 0027 1A       		.byte	26
 380 0028 1E       		.byte	30
 381 0029 DE       		.byte	-34
 382 002a DF       		.byte	-33
 383 002b 1F       		.byte	31
 384 002c DD       		.byte	-35
 385 002d 1D       		.byte	29
 386 002e 1C       		.byte	28
 387 002f DC       		.byte	-36
 388 0030 14       		.byte	20
 389 0031 D4       		.byte	-44
 390 0032 D5       		.byte	-43
 391 0033 15       		.byte	21
 392 0034 D7       		.byte	-41
 393 0035 17       		.byte	23
 394 0036 16       		.byte	22
 395 0037 D6       		.byte	-42
 396 0038 D2       		.byte	-46
 397 0039 12       		.byte	18
 398 003a 13       		.byte	19
 399 003b D3       		.byte	-45
 400 003c 11       		.byte	17
 401 003d D1       		.byte	-47
 402 003e D0       		.byte	-48
 403 003f 10       		.byte	16
 404 0040 F0       		.byte	-16
 405 0041 30       		.byte	48
 406 0042 31       		.byte	49
 407 0043 F1       		.byte	-15
 408 0044 33       		.byte	51
 409 0045 F3       		.byte	-13
 410 0046 F2       		.byte	-14
 411 0047 32       		.byte	50
 412 0048 36       		.byte	54
 413 0049 F6       		.byte	-10
 414 004a F7       		.byte	-9
 415 004b 37       		.byte	55
 416 004c F5       		.byte	-11
 417 004d 35       		.byte	53
 418 004e 34       		.byte	52
 419 004f F4       		.byte	-12
 420 0050 3C       		.byte	60
 421 0051 FC       		.byte	-4
 422 0052 FD       		.byte	-3
 423 0053 3D       		.byte	61
 424 0054 FF       		.byte	-1
 425 0055 3F       		.byte	63
 426 0056 3E       		.byte	62
 427 0057 FE       		.byte	-2
 428 0058 FA       		.byte	-6
 429 0059 3A       		.byte	58
 430 005a 3B       		.byte	59
 431 005b FB       		.byte	-5
 432 005c 39       		.byte	57
 433 005d F9       		.byte	-7
 434 005e F8       		.byte	-8
 435 005f 38       		.byte	56
 436 0060 28       		.byte	40
 437 0061 E8       		.byte	-24
 438 0062 E9       		.byte	-23
 439 0063 29       		.byte	41
 440 0064 EB       		.byte	-21
 441 0065 2B       		.byte	43
 442 0066 2A       		.byte	42
 443 0067 EA       		.byte	-22
 444 0068 EE       		.byte	-18
 445 0069 2E       		.byte	46
 446 006a 2F       		.byte	47
 447 006b EF       		.byte	-17
 448 006c 2D       		.byte	45
 449 006d ED       		.byte	-19
 450 006e EC       		.byte	-20
 451 006f 2C       		.byte	44
 452 0070 E4       		.byte	-28
 453 0071 24       		.byte	36
 454 0072 25       		.byte	37
 455 0073 E5       		.byte	-27
 456 0074 27       		.byte	39
 457 0075 E7       		.byte	-25
 458 0076 E6       		.byte	-26
 459 0077 26       		.byte	38
 460 0078 22       		.byte	34
 461 0079 E2       		.byte	-30
 462 007a E3       		.byte	-29
 463 007b 23       		.byte	35
 464 007c E1       		.byte	-31
 465 007d 21       		.byte	33
 466 007e 20       		.byte	32
 467 007f E0       		.byte	-32
 468 0080 A0       		.byte	-96
 469 0081 60       		.byte	96
 470 0082 61       		.byte	97
 471 0083 A1       		.byte	-95
 472 0084 63       		.byte	99
 473 0085 A3       		.byte	-93
 474 0086 A2       		.byte	-94
 475 0087 62       		.byte	98
 476 0088 66       		.byte	102
 477 0089 A6       		.byte	-90
 478 008a A7       		.byte	-89
 479 008b 67       		.byte	103
 480 008c A5       		.byte	-91
 481 008d 65       		.byte	101
 482 008e 64       		.byte	100
 483 008f A4       		.byte	-92
 484 0090 6C       		.byte	108
 485 0091 AC       		.byte	-84
 486 0092 AD       		.byte	-83
 487 0093 6D       		.byte	109
 488 0094 AF       		.byte	-81
 489 0095 6F       		.byte	111
 490 0096 6E       		.byte	110
 491 0097 AE       		.byte	-82
 492 0098 AA       		.byte	-86
 493 0099 6A       		.byte	106
 494 009a 6B       		.byte	107
 495 009b AB       		.byte	-85
 496 009c 69       		.byte	105
 497 009d A9       		.byte	-87
 498 009e A8       		.byte	-88
 499 009f 68       		.byte	104
 500 00a0 78       		.byte	120
 501 00a1 B8       		.byte	-72
 502 00a2 B9       		.byte	-71
 503 00a3 79       		.byte	121
 504 00a4 BB       		.byte	-69
 505 00a5 7B       		.byte	123
 506 00a6 7A       		.byte	122
 507 00a7 BA       		.byte	-70
 508 00a8 BE       		.byte	-66
 509 00a9 7E       		.byte	126
 510 00aa 7F       		.byte	127
 511 00ab BF       		.byte	-65
 512 00ac 7D       		.byte	125
 513 00ad BD       		.byte	-67
 514 00ae BC       		.byte	-68
 515 00af 7C       		.byte	124
 516 00b0 B4       		.byte	-76
 517 00b1 74       		.byte	116
 518 00b2 75       		.byte	117
 519 00b3 B5       		.byte	-75
 520 00b4 77       		.byte	119
 521 00b5 B7       		.byte	-73
 522 00b6 B6       		.byte	-74
 523 00b7 76       		.byte	118
 524 00b8 72       		.byte	114
 525 00b9 B2       		.byte	-78
 526 00ba B3       		.byte	-77
 527 00bb 73       		.byte	115
 528 00bc B1       		.byte	-79
 529 00bd 71       		.byte	113
 530 00be 70       		.byte	112
 531 00bf B0       		.byte	-80
 532 00c0 50       		.byte	80
 533 00c1 90       		.byte	-112
 534 00c2 91       		.byte	-111
 535 00c3 51       		.byte	81
 536 00c4 93       		.byte	-109
 537 00c5 53       		.byte	83
 538 00c6 52       		.byte	82
 539 00c7 92       		.byte	-110
 540 00c8 96       		.byte	-106
 541 00c9 56       		.byte	86
 542 00ca 57       		.byte	87
 543 00cb 97       		.byte	-105
 544 00cc 55       		.byte	85
 545 00cd 95       		.byte	-107
 546 00ce 94       		.byte	-108
 547 00cf 54       		.byte	84
 548 00d0 9C       		.byte	-100
 549 00d1 5C       		.byte	92
 550 00d2 5D       		.byte	93
 551 00d3 9D       		.byte	-99
 552 00d4 5F       		.byte	95
 553 00d5 9F       		.byte	-97
 554 00d6 9E       		.byte	-98
 555 00d7 5E       		.byte	94
 556 00d8 5A       		.byte	90
 557 00d9 9A       		.byte	-102
 558 00da 9B       		.byte	-101
 559 00db 5B       		.byte	91
 560 00dc 99       		.byte	-103
 561 00dd 59       		.byte	89
 562 00de 58       		.byte	88
 563 00df 98       		.byte	-104
 564 00e0 88       		.byte	-120
 565 00e1 48       		.byte	72
 566 00e2 49       		.byte	73
 567 00e3 89       		.byte	-119
 568 00e4 4B       		.byte	75
 569 00e5 8B       		.byte	-117
 570 00e6 8A       		.byte	-118
 571 00e7 4A       		.byte	74
 572 00e8 4E       		.byte	78
 573 00e9 8E       		.byte	-114
 574 00ea 8F       		.byte	-113
 575 00eb 4F       		.byte	79
 576 00ec 8D       		.byte	-115
 577 00ed 4D       		.byte	77
 578 00ee 4C       		.byte	76
 579 00ef 8C       		.byte	-116
 580 00f0 44       		.byte	68
 581 00f1 84       		.byte	-124
 582 00f2 85       		.byte	-123
 583 00f3 45       		.byte	69
 584 00f4 87       		.byte	-121
 585 00f5 47       		.byte	71
 586 00f6 46       		.byte	70
 587 00f7 86       		.byte	-122
 588 00f8 82       		.byte	-126
 589 00f9 42       		.byte	66
 590 00fa 43       		.byte	67
 591 00fb 83       		.byte	-125
 592 00fc 41       		.byte	65
 593 00fd 81       		.byte	-127
 594 00fe 80       		.byte	-128
 595 00ff 40       		.byte	64
 596              		.comm	fd,4,4
 597              		.comm	received_string,513,4
 598              		.comm	rx_length,4,4
 599              		.section	.bss.xHigherPriorityTaskWoken_usart,"aw",%nobits
 600              		.align	2
 603              	xHigherPriorityTaskWoken_usart:
 604 0000 00000000 		.space	4
 605              		.comm	input_Register,20,4
 606              		.section	.text.init_USARTx,"ax",%progbits
 607              		.align	2
 608              		.global	init_USARTx
 609              		.thumb
 610              		.thumb_func
 612              	init_USARTx:
 613              	.LFB110:
 614              		.file 1 "App/STM32F4-Discovery/modbus_mk.c"
   1:App/STM32F4-Discovery/modbus_mk.c **** /*! \file modbus_mk.c
   2:App/STM32F4-Discovery/modbus_mk.c ****  *  \brief modbus protocol functions and motor control
   3:App/STM32F4-Discovery/modbus_mk.c ****  */
   4:App/STM32F4-Discovery/modbus_mk.c **** 
   5:App/STM32F4-Discovery/modbus_mk.c **** 
   6:App/STM32F4-Discovery/modbus_mk.c **** #include "modbus_mk.h"
   7:App/STM32F4-Discovery/modbus_mk.c **** 
   8:App/STM32F4-Discovery/modbus_mk.c **** 
   9:App/STM32F4-Discovery/modbus_mk.c **** /* This funcion initializes the USART1 peripheral
  10:App/STM32F4-Discovery/modbus_mk.c ****  * 
  11:App/STM32F4-Discovery/modbus_mk.c ****  * Arguments: baudrate --> the baudrate at which the USART is 
  12:App/STM32F4-Discovery/modbus_mk.c ****  * 						   supposed to operate
  13:App/STM32F4-Discovery/modbus_mk.c ****  */
  14:App/STM32F4-Discovery/modbus_mk.c **** 
  15:App/STM32F4-Discovery/modbus_mk.c **** #define pdFalse 0
  16:App/STM32F4-Discovery/modbus_mk.c **** #define pdTrue 	1
  17:App/STM32F4-Discovery/modbus_mk.c **** 
  18:App/STM32F4-Discovery/modbus_mk.c **** 
  19:App/STM32F4-Discovery/modbus_mk.c **** void init_USARTx(void)
  20:App/STM32F4-Discovery/modbus_mk.c **** {
 615              		.loc 1 20 0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 32
 618              		@ frame_needed = 1, uses_anonymous_args = 0
 619 0000 80B5     		push	{r7, lr}
 620              	.LCFI0:
 621              		.cfi_def_cfa_offset 8
 622              		.cfi_offset 7, -8
 623              		.cfi_offset 14, -4
 624 0002 88B0     		sub	sp, sp, #32
 625              	.LCFI1:
 626              		.cfi_def_cfa_offset 40
 627 0004 00AF     		add	r7, sp, #0
 628              	.LCFI2:
 629              		.cfi_def_cfa_register 7
  21:App/STM32F4-Discovery/modbus_mk.c **** 	
  22:App/STM32F4-Discovery/modbus_mk.c **** 	
  23:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitTypeDef GPIO_InitStruct; // this is for the GPIO pins used as TX and RX
  24:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitTypeDef USART_InitStruct; // this is for the USART1 initilization
  25:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitTypeDef NVIC_InitStructure; // this is used to configure the NVIC (nested vector interrup
  26:App/STM32F4-Discovery/modbus_mk.c **** 	
  27:App/STM32F4-Discovery/modbus_mk.c **** 	/* enable APB2 peripheral clock for USART1 
  28:App/STM32F4-Discovery/modbus_mk.c **** 	 * note that only USART1 and USART6 are connected to APB2
  29:App/STM32F4-Discovery/modbus_mk.c **** 	 * the other USARTs are connected to APB1
  30:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  31:App/STM32F4-Discovery/modbus_mk.c **** 	RCC_APB2PeriphClockCmd(USARTx_CLK, ENABLE);
 630              		.loc 1 31 0
 631 0006 2020     		movs	r0, #32
 632 0008 0121     		movs	r1, #1
 633 000a FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
  32:App/STM32F4-Discovery/modbus_mk.c **** 	
  33:App/STM32F4-Discovery/modbus_mk.c **** 	/* enable the peripheral clock for the pins used by 
  34:App/STM32F4-Discovery/modbus_mk.c **** 	 * USART1, PB6 for TX and PB7 for RX 
  35:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  36:App/STM32F4-Discovery/modbus_mk.c **** 	RCC_AHB1PeriphClockCmd(USARTx_TX_GPIO_CLK, ENABLE);
 634              		.loc 1 36 0
 635 000e 0420     		movs	r0, #4
 636 0010 0121     		movs	r1, #1
 637 0012 FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  37:App/STM32F4-Discovery/modbus_mk.c **** 	RCC_AHB1PeriphClockCmd(USARTx_RX_GPIO_CLK, ENABLE);
 638              		.loc 1 37 0
 639 0016 0420     		movs	r0, #4
 640 0018 0121     		movs	r1, #1
 641 001a FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  38:App/STM32F4-Discovery/modbus_mk.c **** 	RCC_AHB1PeriphClockCmd(USARTx_CS_GPIO_CLK, ENABLE);
 642              		.loc 1 38 0
 643 001e 4020     		movs	r0, #64
 644 0020 0121     		movs	r1, #1
 645 0022 FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  39:App/STM32F4-Discovery/modbus_mk.c **** 
  40:App/STM32F4-Discovery/modbus_mk.c **** 	
  41:App/STM32F4-Discovery/modbus_mk.c **** 	/* This sequence sets up the TX and RX pins 
  42:App/STM32F4-Discovery/modbus_mk.c **** 	 * so they work correctly with the USART1 peripheral
  43:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  44:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Pin = USARTx_RX_GPIO_PIN | USARTx_TX_GPIO_PIN; // Pins 6 (TX) and 7 (RX) are 
 646              		.loc 1 44 0
 647 0026 C023     		movs	r3, #192
 648 0028 BB61     		str	r3, [r7, #24]
  45:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF; 			// the pins are configured as alternate function so t
 649              		.loc 1 45 0
 650 002a 0223     		movs	r3, #2
 651 002c 3B77     		strb	r3, [r7, #28]
  46:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;		// this defines the IO speed and has nothing to d
 652              		.loc 1 46 0
 653 002e 0323     		movs	r3, #3
 654 0030 7B77     		strb	r3, [r7, #29]
  47:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;			// this defines the output type as push pull mode (a
 655              		.loc 1 47 0
 656 0032 0023     		movs	r3, #0
 657 0034 BB77     		strb	r3, [r7, #30]
  48:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;			// this activates the pullup resistors on the IO pins
 658              		.loc 1 48 0
 659 0036 0123     		movs	r3, #1
 660 0038 FB77     		strb	r3, [r7, #31]
  49:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_Init(USARTx_TX_GPIO_PORT, &GPIO_InitStruct);					// now all the values are passed to the GPIO
 661              		.loc 1 49 0
 662 003a 07F11803 		add	r3, r7, #24
 663 003e 2948     		ldr	r0, .L2
 664 0040 1946     		mov	r1, r3
 665 0042 FFF7FEFF 		bl	GPIO_Init
  50:App/STM32F4-Discovery/modbus_mk.c **** 	
  51:App/STM32F4-Discovery/modbus_mk.c **** 	
  52:App/STM32F4-Discovery/modbus_mk.c **** 	
  53:App/STM32F4-Discovery/modbus_mk.c **** 	/* Configure the chip select pin in this case we will use PG8 */
  54:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Pin = USARTx_CS_GPIO_PIN;
 666              		.loc 1 54 0
 667 0046 4FF48073 		mov	r3, #256
 668 004a BB61     		str	r3, [r7, #24]
  55:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_OUT;
 669              		.loc 1 55 0
 670 004c 0123     		movs	r3, #1
 671 004e 3B77     		strb	r3, [r7, #28]
  56:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;
 672              		.loc 1 56 0
 673 0050 0023     		movs	r3, #0
 674 0052 BB77     		strb	r3, [r7, #30]
  57:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;
 675              		.loc 1 57 0
 676 0054 0323     		movs	r3, #3
 677 0056 7B77     		strb	r3, [r7, #29]
  58:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;
 678              		.loc 1 58 0
 679 0058 0123     		movs	r3, #1
 680 005a FB77     		strb	r3, [r7, #31]
  59:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_Init(USARTx_CS_GPIO_PORT, &GPIO_InitStruct);
 681              		.loc 1 59 0
 682 005c 07F11803 		add	r3, r7, #24
 683 0060 2148     		ldr	r0, .L2+4
 684 0062 1946     		mov	r1, r3
 685 0064 FFF7FEFF 		bl	GPIO_Init
  60:App/STM32F4-Discovery/modbus_mk.c **** 
  61:App/STM32F4-Discovery/modbus_mk.c **** 	DD() // set PG8 high
 686              		.loc 1 61 0
 687 0068 1F4B     		ldr	r3, .L2+4
 688 006a 1F4A     		ldr	r2, .L2+4
 689 006c 128B     		ldrh	r2, [r2, #24]	@ movhi
 690 006e 92B2     		uxth	r2, r2
 691 0070 42F48072 		orr	r2, r2, #256
 692 0074 92B2     		uxth	r2, r2
 693 0076 1A83     		strh	r2, [r3, #24]	@ movhi
  62:App/STM32F4-Discovery/modbus_mk.c **** 	
  63:App/STM32F4-Discovery/modbus_mk.c **** 	
  64:App/STM32F4-Discovery/modbus_mk.c **** 	/* The RX and TX pins are now connected to their AF
  65:App/STM32F4-Discovery/modbus_mk.c **** 	 * so that the USART1 can take over control of the 
  66:App/STM32F4-Discovery/modbus_mk.c **** 	 * pins
  67:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  68:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_PinAFConfig(GPIOC, GPIO_PinSource6, GPIO_AF_USART6); //
 694              		.loc 1 68 0
 695 0078 1A48     		ldr	r0, .L2
 696 007a 0621     		movs	r1, #6
 697 007c 0822     		movs	r2, #8
 698 007e FFF7FEFF 		bl	GPIO_PinAFConfig
  69:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_PinAFConfig(GPIOC, GPIO_PinSource7, GPIO_AF_USART6);
 699              		.loc 1 69 0
 700 0082 1848     		ldr	r0, .L2
 701 0084 0721     		movs	r1, #7
 702 0086 0822     		movs	r2, #8
 703 0088 FFF7FEFF 		bl	GPIO_PinAFConfig
  70:App/STM32F4-Discovery/modbus_mk.c **** 	
  71:App/STM32F4-Discovery/modbus_mk.c **** 	/* Now the USART_InitStruct is used to define the 
  72:App/STM32F4-Discovery/modbus_mk.c **** 	 * properties of USART1 
  73:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  74:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_BaudRate = 38400;				// the baudrate is set to the value we passed into thi
 704              		.loc 1 74 0
 705 008c 4FF41643 		mov	r3, #38400
 706 0090 BB60     		str	r3, [r7, #8]
  75:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_WordLength = USART_WordLength_8b;// we want the data frame size to be 8 bit
 707              		.loc 1 75 0
 708 0092 0023     		movs	r3, #0
 709 0094 BB81     		strh	r3, [r7, #12]	@ movhi
  76:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_StopBits = USART_StopBits_1;		// we want 1 stop bit (standard)
 710              		.loc 1 76 0
 711 0096 0023     		movs	r3, #0
 712 0098 FB81     		strh	r3, [r7, #14]	@ movhi
  77:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_Parity = USART_Parity_No;		// we don't want a parity bit (standard)
 713              		.loc 1 77 0
 714 009a 0023     		movs	r3, #0
 715 009c 3B82     		strh	r3, [r7, #16]	@ movhi
  78:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_HardwareFlowControl = USART_HardwareFlowControl_None; // we don't want flow
 716              		.loc 1 78 0
 717 009e 0023     		movs	r3, #0
 718 00a0 BB82     		strh	r3, [r7, #20]	@ movhi
  79:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_Mode = USART_Mode_Tx | USART_Mode_Rx; // we want to enable the transmitter 
 719              		.loc 1 79 0
 720 00a2 0C23     		movs	r3, #12
 721 00a4 7B82     		strh	r3, [r7, #18]	@ movhi
  80:App/STM32F4-Discovery/modbus_mk.c **** 	USART_Init(USART6, &USART_InitStruct);					// again all the properties are passed to the USART_Ini
 722              		.loc 1 80 0
 723 00a6 07F10803 		add	r3, r7, #8
 724 00aa 1048     		ldr	r0, .L2+8
 725 00ac 1946     		mov	r1, r3
 726 00ae FFF7FEFF 		bl	USART_Init
  81:App/STM32F4-Discovery/modbus_mk.c **** 	
  82:App/STM32F4-Discovery/modbus_mk.c **** 	
  83:App/STM32F4-Discovery/modbus_mk.c **** 	/* Here the USART1 receive interrupt is enabled
  84:App/STM32F4-Discovery/modbus_mk.c **** 	 * and the interrupt controller is configured 
  85:App/STM32F4-Discovery/modbus_mk.c **** 	 * to jump to the USART1_IRQHandler() function
  86:App/STM32F4-Discovery/modbus_mk.c **** 	 * if the USART1 receive interrupt occurs
  87:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  88:App/STM32F4-Discovery/modbus_mk.c **** 	USART_ITConfig(USART6, USART_IT_RXNE, ENABLE); // enable the USART1 receive interrupt 
 727              		.loc 1 88 0
 728 00b2 0E48     		ldr	r0, .L2+8
 729 00b4 40F22551 		movw	r1, #1317
 730 00b8 0122     		movs	r2, #1
 731 00ba FFF7FEFF 		bl	USART_ITConfig
  89:App/STM32F4-Discovery/modbus_mk.c **** 	
  90:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitStructure.NVIC_IRQChannel = USART6_IRQn;		 // we want to configure the USART interrupts
 732              		.loc 1 90 0
 733 00be 4723     		movs	r3, #71
 734 00c0 3B71     		strb	r3, [r7, #4]
  91:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORIT
 735              		.loc 1 91 0
 736 00c2 0723     		movs	r3, #7
 737 00c4 7B71     		strb	r3, [r7, #5]
  92:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x6;		 // this sets the subpriority inside the gro
 738              		.loc 1 92 0
 739 00c6 0623     		movs	r3, #6
 740 00c8 BB71     		strb	r3, [r7, #6]
  93:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;			 // the USART1 interrupts are globally enabled
 741              		.loc 1 93 0
 742 00ca 0123     		movs	r3, #1
 743 00cc FB71     		strb	r3, [r7, #7]
  94:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_Init(&NVIC_InitStructure);	 // the properties are passed to the NVIC_Init function which take
 744              		.loc 1 94 0
 745 00ce 3B1D     		adds	r3, r7, #4
 746 00d0 1846     		mov	r0, r3
 747 00d2 FFF7FEFF 		bl	NVIC_Init
  95:App/STM32F4-Discovery/modbus_mk.c **** 
  96:App/STM32F4-Discovery/modbus_mk.c **** 	// finally this enables the complete USART1 peripheral
  97:App/STM32F4-Discovery/modbus_mk.c **** 	USART_Cmd(USART6, ENABLE);
 748              		.loc 1 97 0
 749 00d6 0548     		ldr	r0, .L2+8
 750 00d8 0121     		movs	r1, #1
 751 00da FFF7FEFF 		bl	USART_Cmd
  98:App/STM32F4-Discovery/modbus_mk.c **** }
 752              		.loc 1 98 0
 753 00de 2037     		adds	r7, r7, #32
 754 00e0 BD46     		mov	sp, r7
 755              		@ sp needed
 756 00e2 80BD     		pop	{r7, pc}
 757              	.L3:
 758              		.align	2
 759              	.L2:
 760 00e4 00080240 		.word	1073874944
 761 00e8 00180240 		.word	1073879040
 762 00ec 00140140 		.word	1073812480
 763              		.cfi_endproc
 764              	.LFE110:
 766              		.section	.text.USART_puts,"ax",%progbits
 767              		.align	2
 768              		.global	USART_puts
 769              		.thumb
 770              		.thumb_func
 772              	USART_puts:
 773              	.LFB111:
  99:App/STM32F4-Discovery/modbus_mk.c **** 
 100:App/STM32F4-Discovery/modbus_mk.c **** 
 101:App/STM32F4-Discovery/modbus_mk.c **** void USART_puts(uint8_t *s, int nb)
 102:App/STM32F4-Discovery/modbus_mk.c **** {
 774              		.loc 1 102 0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 16
 777              		@ frame_needed = 1, uses_anonymous_args = 0
 778              		@ link register save eliminated.
 779 0000 80B4     		push	{r7}
 780              	.LCFI3:
 781              		.cfi_def_cfa_offset 4
 782              		.cfi_offset 7, -4
 783 0002 85B0     		sub	sp, sp, #20
 784              	.LCFI4:
 785              		.cfi_def_cfa_offset 24
 786 0004 00AF     		add	r7, sp, #0
 787              	.LCFI5:
 788              		.cfi_def_cfa_register 7
 789 0006 7860     		str	r0, [r7, #4]
 790 0008 3960     		str	r1, [r7]
 103:App/STM32F4-Discovery/modbus_mk.c **** 
 104:App/STM32F4-Discovery/modbus_mk.c **** 	/*! This function is used to transmit a string of characters via 
 105:App/STM32F4-Discovery/modbus_mk.c **** 	 * the USART specified in USARTx.
 106:App/STM32F4-Discovery/modbus_mk.c **** 	 * 
 107:App/STM32F4-Discovery/modbus_mk.c **** 	 * It takes two arguments: USARTx --> can be any of the USARTs e.g. USART1, USART2 etc.
 108:App/STM32F4-Discovery/modbus_mk.c **** 	 * 						   (volatile) char *s is the string you want to send
 109:App/STM32F4-Discovery/modbus_mk.c **** 	 * 
 110:App/STM32F4-Discovery/modbus_mk.c **** 	 * Note: The string has to be passed to the function as a pointer because
 111:App/STM32F4-Discovery/modbus_mk.c **** 	 * 		 the compiler doesn't know the 'string' data type. In standard
 112:App/STM32F4-Discovery/modbus_mk.c **** 	 * 		 C a string is just an array of characters
 113:App/STM32F4-Discovery/modbus_mk.c **** 	 * 
 114:App/STM32F4-Discovery/modbus_mk.c **** 	 * Note 2: At the moment it takes a volatile char because the received_string variable
 115:App/STM32F4-Discovery/modbus_mk.c **** 	 * 		   declared as volatile char --> otherwise the compiler will spit out warnings
 116:App/STM32F4-Discovery/modbus_mk.c **** 	 * */
 117:App/STM32F4-Discovery/modbus_mk.c **** 
 118:App/STM32F4-Discovery/modbus_mk.c **** 	int i = 0;
 791              		.loc 1 118 0
 792 000a 0023     		movs	r3, #0
 793 000c FB60     		str	r3, [r7, #12]
 119:App/STM32F4-Discovery/modbus_mk.c **** 	while(i < nb && *s){
 794              		.loc 1 119 0
 795 000e 10E0     		b	.L5
 796              	.L8:
 120:App/STM32F4-Discovery/modbus_mk.c **** 		// wait until data register is empty
 121:App/STM32F4-Discovery/modbus_mk.c **** 		while( !(USARTx->SR & 0x00000040) ); 
 797              		.loc 1 121 0
 798 0010 00BF     		nop
 799              	.L6:
 800              		.loc 1 121 0 is_stmt 0 discriminator 1
 801 0012 0E4B     		ldr	r3, .L9
 802 0014 1B88     		ldrh	r3, [r3]	@ movhi
 803 0016 9BB2     		uxth	r3, r3
 804 0018 03F04003 		and	r3, r3, #64
 805 001c 002B     		cmp	r3, #0
 806 001e F8D0     		beq	.L6
 122:App/STM32F4-Discovery/modbus_mk.c **** 		//USART_SendData(USART6, s[i]);
 123:App/STM32F4-Discovery/modbus_mk.c **** 		USARTx->DR = s[i];
 807              		.loc 1 123 0 is_stmt 1
 808 0020 0A4B     		ldr	r3, .L9
 809 0022 FA68     		ldr	r2, [r7, #12]
 810 0024 7968     		ldr	r1, [r7, #4]
 811 0026 0A44     		add	r2, r2, r1
 812 0028 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 813 002a 9A80     		strh	r2, [r3, #4]	@ movhi
 124:App/STM32F4-Discovery/modbus_mk.c **** 		i++;
 814              		.loc 1 124 0
 815 002c FB68     		ldr	r3, [r7, #12]
 816 002e 0133     		adds	r3, r3, #1
 817 0030 FB60     		str	r3, [r7, #12]
 818              	.L5:
 119:App/STM32F4-Discovery/modbus_mk.c **** 	while(i < nb && *s){
 819              		.loc 1 119 0 discriminator 1
 820 0032 FA68     		ldr	r2, [r7, #12]
 821 0034 3B68     		ldr	r3, [r7]
 822 0036 9A42     		cmp	r2, r3
 823 0038 03DA     		bge	.L4
 119:App/STM32F4-Discovery/modbus_mk.c **** 	while(i < nb && *s){
 824              		.loc 1 119 0 is_stmt 0 discriminator 2
 825 003a 7B68     		ldr	r3, [r7, #4]
 826 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 827 003e 002B     		cmp	r3, #0
 828 0040 E6D1     		bne	.L8
 829              	.L4:
 125:App/STM32F4-Discovery/modbus_mk.c **** 	
 126:App/STM32F4-Discovery/modbus_mk.c **** 	}
 127:App/STM32F4-Discovery/modbus_mk.c **** 	
 128:App/STM32F4-Discovery/modbus_mk.c **** 	
 129:App/STM32F4-Discovery/modbus_mk.c **** }
 830              		.loc 1 129 0 is_stmt 1
 831 0042 1437     		adds	r7, r7, #20
 832 0044 BD46     		mov	sp, r7
 833              		@ sp needed
 834 0046 5DF8047B 		ldr	r7, [sp], #4
 835 004a 7047     		bx	lr
 836              	.L10:
 837              		.align	2
 838              	.L9:
 839 004c 00140140 		.word	1073812480
 840              		.cfi_endproc
 841              	.LFE111:
 843              		.section	.text.USART6_IRQHandler,"ax",%progbits
 844              		.align	2
 845              		.global	USART6_IRQHandler
 846              		.thumb
 847              		.thumb_func
 849              	USART6_IRQHandler:
 850              	.LFB112:
 130:App/STM32F4-Discovery/modbus_mk.c **** 
 131:App/STM32F4-Discovery/modbus_mk.c **** // this is the interrupt request handler (IRQ) for ALL USART6 interrupts
 132:App/STM32F4-Discovery/modbus_mk.c **** void USART6_IRQHandler(void){
 851              		.loc 1 132 0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 8
 854              		@ frame_needed = 1, uses_anonymous_args = 0
 855 0000 80B5     		push	{r7, lr}
 856              	.LCFI6:
 857              		.cfi_def_cfa_offset 8
 858              		.cfi_offset 7, -8
 859              		.cfi_offset 14, -4
 860 0002 82B0     		sub	sp, sp, #8
 861              	.LCFI7:
 862              		.cfi_def_cfa_offset 16
 863 0004 00AF     		add	r7, sp, #0
 864              	.LCFI8:
 865              		.cfi_def_cfa_register 7
 133:App/STM32F4-Discovery/modbus_mk.c **** 	
 134:App/STM32F4-Discovery/modbus_mk.c **** 	
 135:App/STM32F4-Discovery/modbus_mk.c **** 
 136:App/STM32F4-Discovery/modbus_mk.c **** 	// check if the USART1 receive interrupt flag was set
 137:App/STM32F4-Discovery/modbus_mk.c **** 	if( USART_GetITStatus(USARTx, USART_IT_RXNE) ){
 866              		.loc 1 137 0
 867 0006 2448     		ldr	r0, .L15
 868 0008 40F22551 		movw	r1, #1317
 869 000c FFF7FEFF 		bl	USART_GetITStatus
 870 0010 0346     		mov	r3, r0
 871 0012 002B     		cmp	r3, #0
 872 0014 35D0     		beq	.L12
 873              	.LBB2:
 138:App/STM32F4-Discovery/modbus_mk.c **** 		
 139:App/STM32F4-Discovery/modbus_mk.c **** 		
 140:App/STM32F4-Discovery/modbus_mk.c **** 	//	USART_ClearITPendingBit ( USARTx, USART_IT_RXNE ) ;
 141:App/STM32F4-Discovery/modbus_mk.c **** 		static uint8_t cnt = 0; // this counter is used to determine the string length
 142:App/STM32F4-Discovery/modbus_mk.c **** 		volatile char t = USARTx->DR; // the character from the USART1 data register is saved in t
 874              		.loc 1 142 0
 875 0016 204B     		ldr	r3, .L15
 876 0018 9B88     		ldrh	r3, [r3, #4]	@ movhi
 877 001a 9BB2     		uxth	r3, r3
 878 001c DBB2     		uxtb	r3, r3
 879 001e FB71     		strb	r3, [r7, #7]
 143:App/STM32F4-Discovery/modbus_mk.c **** 		
 144:App/STM32F4-Discovery/modbus_mk.c **** 		/* check if the received character is not the LF character (used to determine end of string) 
 145:App/STM32F4-Discovery/modbus_mk.c **** 		 * or the if the maximum string length has been been reached 
 146:App/STM32F4-Discovery/modbus_mk.c **** 		 */
 147:App/STM32F4-Discovery/modbus_mk.c **** 		xHigherPriorityTaskWoken_usart = pdFalse;
 880              		.loc 1 147 0
 881 0020 1E4B     		ldr	r3, .L15+4
 882 0022 0022     		movs	r2, #0
 883 0024 1A60     		str	r2, [r3]
 148:App/STM32F4-Discovery/modbus_mk.c **** 
 149:App/STM32F4-Discovery/modbus_mk.c **** 		
 150:App/STM32F4-Discovery/modbus_mk.c **** 		if( (cnt < rx_length  ) && (cnt < MAX_STRLEN) ){ 
 884              		.loc 1 150 0
 885 0026 1E4B     		ldr	r3, .L15+8
 886 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 887 002a 1A46     		mov	r2, r3
 888 002c 1D4B     		ldr	r3, .L15+12
 889 002e 1B68     		ldr	r3, [r3]
 890 0030 9A42     		cmp	r2, r3
 891 0032 0CDA     		bge	.L13
 151:App/STM32F4-Discovery/modbus_mk.c **** 			received_string[cnt] = t;
 892              		.loc 1 151 0
 893 0034 1A4B     		ldr	r3, .L15+8
 894 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 895 0038 FA79     		ldrb	r2, [r7, #7]
 896 003a D1B2     		uxtb	r1, r2
 897 003c 1A4A     		ldr	r2, .L15+16
 898 003e D154     		strb	r1, [r2, r3]
 152:App/STM32F4-Discovery/modbus_mk.c **** 			cnt++;
 899              		.loc 1 152 0
 900 0040 174B     		ldr	r3, .L15+8
 901 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 902 0044 0133     		adds	r3, r3, #1
 903 0046 DAB2     		uxtb	r2, r3
 904 0048 154B     		ldr	r3, .L15+8
 905 004a 1A70     		strb	r2, [r3]
 906 004c 19E0     		b	.L12
 907              	.L13:
 153:App/STM32F4-Discovery/modbus_mk.c **** 		}
 154:App/STM32F4-Discovery/modbus_mk.c **** 		else{ // otherwise reset the character counter and print the received string
 155:App/STM32F4-Discovery/modbus_mk.c **** 			received_string[cnt] = t; 
 908              		.loc 1 155 0
 909 004e 144B     		ldr	r3, .L15+8
 910 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 911 0052 FA79     		ldrb	r2, [r7, #7]
 912 0054 D1B2     		uxtb	r1, r2
 913 0056 144A     		ldr	r2, .L15+16
 914 0058 D154     		strb	r1, [r2, r3]
 156:App/STM32F4-Discovery/modbus_mk.c **** 			cnt = 0;
 915              		.loc 1 156 0
 916 005a 114B     		ldr	r3, .L15+8
 917 005c 0022     		movs	r2, #0
 918 005e 1A70     		strb	r2, [r3]
 157:App/STM32F4-Discovery/modbus_mk.c **** 		//	USART_ITConfig(USART6, USART_IT_RXNE, DISABLE); 
 158:App/STM32F4-Discovery/modbus_mk.c **** 		taskENTER_CRITICAL();
 919              		.loc 1 158 0
 920 0060 FFF7FEFF 		bl	vPortEnterCritical
 159:App/STM32F4-Discovery/modbus_mk.c **** 				USART_ClearITPendingBit ( USARTx, USART_IT_RXNE ) ;
 921              		.loc 1 159 0
 922 0064 0C48     		ldr	r0, .L15
 923 0066 40F22551 		movw	r1, #1317
 924 006a FFF7FEFF 		bl	USART_ClearITPendingBit
 160:App/STM32F4-Discovery/modbus_mk.c **** 
 161:App/STM32F4-Discovery/modbus_mk.c **** 			xSemaphoreGiveFromISR(xSmphrUSART,&xHigherPriorityTaskWoken_usart );
 925              		.loc 1 161 0
 926 006e 0F4B     		ldr	r3, .L15+20
 927 0070 1B68     		ldr	r3, [r3]
 928 0072 1846     		mov	r0, r3
 929 0074 0021     		movs	r1, #0
 930 0076 094A     		ldr	r2, .L15+4
 931 0078 0023     		movs	r3, #0
 932 007a FFF7FEFF 		bl	xQueueGenericSendFromISR
 162:App/STM32F4-Discovery/modbus_mk.c **** 		taskEXIT_CRITICAL();
 933              		.loc 1 162 0
 934 007e FFF7FEFF 		bl	vPortExitCritical
 935              	.L12:
 936              	.LBE2:
 163:App/STM32F4-Discovery/modbus_mk.c **** 			//USART_puts(USART1, received_string);
 164:App/STM32F4-Discovery/modbus_mk.c **** 		}
 165:App/STM32F4-Discovery/modbus_mk.c **** 
 166:App/STM32F4-Discovery/modbus_mk.c **** 
 167:App/STM32F4-Discovery/modbus_mk.c **** 	}
 168:App/STM32F4-Discovery/modbus_mk.c ****  portEND_SWITCHING_ISR( xHigherPriorityTaskWoken_usart );	
 937              		.loc 1 168 0
 938 0082 064B     		ldr	r3, .L15+4
 939 0084 1B68     		ldr	r3, [r3]
 940 0086 002B     		cmp	r3, #0
 941 0088 03D0     		beq	.L11
 942              		.loc 1 168 0 is_stmt 0 discriminator 1
 943 008a 094B     		ldr	r3, .L15+24
 944 008c 4FF08052 		mov	r2, #268435456
 945 0090 1A60     		str	r2, [r3]
 946              	.L11:
 169:App/STM32F4-Discovery/modbus_mk.c **** }
 947              		.loc 1 169 0 is_stmt 1
 948 0092 0837     		adds	r7, r7, #8
 949 0094 BD46     		mov	sp, r7
 950              		@ sp needed
 951 0096 80BD     		pop	{r7, pc}
 952              	.L16:
 953              		.align	2
 954              	.L15:
 955 0098 00140140 		.word	1073812480
 956 009c 00000000 		.word	xHigherPriorityTaskWoken_usart
 957 00a0 00000000 		.word	cnt.9315
 958 00a4 00000000 		.word	rx_length
 959 00a8 00000000 		.word	received_string
 960 00ac 00000000 		.word	xSmphrUSART
 961 00b0 04ED00E0 		.word	-536810236
 962              		.cfi_endproc
 963              	.LFE112:
 965              		.section	.text.crc16,"ax",%progbits
 966              		.align	2
 967              		.global	crc16
 968              		.thumb
 969              		.thumb_func
 971              	crc16:
 972              	.LFB113:
 170:App/STM32F4-Discovery/modbus_mk.c **** 
 171:App/STM32F4-Discovery/modbus_mk.c **** 
 172:App/STM32F4-Discovery/modbus_mk.c **** 
 173:App/STM32F4-Discovery/modbus_mk.c **** /* function for  */
 174:App/STM32F4-Discovery/modbus_mk.c **** uint16_t crc16(uint8_t *buffer, uint16_t buffer_length)
 175:App/STM32F4-Discovery/modbus_mk.c **** {
 973              		.loc 1 175 0
 974              		.cfi_startproc
 975              		@ args = 0, pretend = 0, frame = 16
 976              		@ frame_needed = 1, uses_anonymous_args = 0
 977              		@ link register save eliminated.
 978 0000 80B4     		push	{r7}
 979              	.LCFI9:
 980              		.cfi_def_cfa_offset 4
 981              		.cfi_offset 7, -4
 982 0002 85B0     		sub	sp, sp, #20
 983              	.LCFI10:
 984              		.cfi_def_cfa_offset 24
 985 0004 00AF     		add	r7, sp, #0
 986              	.LCFI11:
 987              		.cfi_def_cfa_register 7
 988 0006 7860     		str	r0, [r7, #4]
 989 0008 0B46     		mov	r3, r1
 990 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 176:App/STM32F4-Discovery/modbus_mk.c ****      uint8_t crc_hi = 0xFF; /* high CRC byte initialized */
 991              		.loc 1 176 0
 992 000c FF23     		movs	r3, #255
 993 000e FB73     		strb	r3, [r7, #15]
 177:App/STM32F4-Discovery/modbus_mk.c ****      uint8_t crc_lo = 0xFF; /* low CRC byte initialized */
 994              		.loc 1 177 0
 995 0010 FF23     		movs	r3, #255
 996 0012 BB73     		strb	r3, [r7, #14]
 178:App/STM32F4-Discovery/modbus_mk.c ****      unsigned int i; /* will index into CRC lookup */
 179:App/STM32F4-Discovery/modbus_mk.c ****  
 180:App/STM32F4-Discovery/modbus_mk.c ****      /* pass through message buffer */
 181:App/STM32F4-Discovery/modbus_mk.c ****      while (buffer_length--) {
 997              		.loc 1 181 0
 998 0014 13E0     		b	.L18
 999              	.L19:
 182:App/STM32F4-Discovery/modbus_mk.c ****          i = crc_hi ^ *buffer++; /* calculate the CRC  */
 1000              		.loc 1 182 0
 1001 0016 7B68     		ldr	r3, [r7, #4]
 1002 0018 5A1C     		adds	r2, r3, #1
 1003 001a 7A60     		str	r2, [r7, #4]
 1004 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1005 001e FB7B     		ldrb	r3, [r7, #15]
 1006 0020 5340     		eors	r3, r3, r2
 1007 0022 DBB2     		uxtb	r3, r3
 1008 0024 BB60     		str	r3, [r7, #8]
 183:App/STM32F4-Discovery/modbus_mk.c ****          crc_hi = crc_lo ^ table_crc_hi[i];
 1009              		.loc 1 183 0
 1010 0026 0F4A     		ldr	r2, .L21
 1011 0028 BB68     		ldr	r3, [r7, #8]
 1012 002a 1344     		add	r3, r3, r2
 1013 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1014 002e BB7B     		ldrb	r3, [r7, #14]
 1015 0030 5340     		eors	r3, r3, r2
 1016 0032 FB73     		strb	r3, [r7, #15]
 184:App/STM32F4-Discovery/modbus_mk.c ****          crc_lo = table_crc_lo[i];
 1017              		.loc 1 184 0
 1018 0034 0C4A     		ldr	r2, .L21+4
 1019 0036 BB68     		ldr	r3, [r7, #8]
 1020 0038 1344     		add	r3, r3, r2
 1021 003a 1B78     		ldrb	r3, [r3]
 1022 003c BB73     		strb	r3, [r7, #14]
 1023              	.L18:
 181:App/STM32F4-Discovery/modbus_mk.c ****      while (buffer_length--) {
 1024              		.loc 1 181 0 discriminator 1
 1025 003e 7B88     		ldrh	r3, [r7, #2]
 1026 0040 5A1E     		subs	r2, r3, #1
 1027 0042 7A80     		strh	r2, [r7, #2]	@ movhi
 1028 0044 002B     		cmp	r3, #0
 1029 0046 E6D1     		bne	.L19
 185:App/STM32F4-Discovery/modbus_mk.c ****      }
 186:App/STM32F4-Discovery/modbus_mk.c ****  
 187:App/STM32F4-Discovery/modbus_mk.c ****      return (crc_hi << 8 | crc_lo);
 1030              		.loc 1 187 0
 1031 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1032 004a 1B02     		lsls	r3, r3, #8
 1033 004c 9AB2     		uxth	r2, r3
 1034 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1035 0050 9BB2     		uxth	r3, r3
 1036 0052 1343     		orrs	r3, r3, r2
 1037 0054 9BB2     		uxth	r3, r3
 1038 0056 9BB2     		uxth	r3, r3
 188:App/STM32F4-Discovery/modbus_mk.c **** }
 1039              		.loc 1 188 0
 1040 0058 1846     		mov	r0, r3
 1041 005a 1437     		adds	r7, r7, #20
 1042 005c BD46     		mov	sp, r7
 1043              		@ sp needed
 1044 005e 5DF8047B 		ldr	r7, [sp], #4
 1045 0062 7047     		bx	lr
 1046              	.L22:
 1047              		.align	2
 1048              	.L21:
 1049 0064 00000000 		.word	table_crc_hi
 1050 0068 00000000 		.word	table_crc_lo
 1051              		.cfi_endproc
 1052              	.LFE113:
 1054              		.section	.text.modbus_confirmation,"ax",%progbits
 1055              		.align	2
 1056              		.global	modbus_confirmation
 1057              		.thumb
 1058              		.thumb_func
 1060              	modbus_confirmation:
 1061              	.LFB114:
 189:App/STM32F4-Discovery/modbus_mk.c **** 
 190:App/STM32F4-Discovery/modbus_mk.c **** /* modbus_confirmation */ 
 191:App/STM32F4-Discovery/modbus_mk.c **** 
 192:App/STM32F4-Discovery/modbus_mk.c **** int modbus_confirmation ( uint8_t * req, uint8_t * rsp, uint16_t write_len, uint16_t read_len)
 193:App/STM32F4-Discovery/modbus_mk.c **** {
 1062              		.loc 1 193 0
 1063              		.cfi_startproc
 1064              		@ args = 0, pretend = 0, frame = 24
 1065              		@ frame_needed = 1, uses_anonymous_args = 0
 1066 0000 80B5     		push	{r7, lr}
 1067              	.LCFI12:
 1068              		.cfi_def_cfa_offset 8
 1069              		.cfi_offset 7, -8
 1070              		.cfi_offset 14, -4
 1071 0002 86B0     		sub	sp, sp, #24
 1072              	.LCFI13:
 1073              		.cfi_def_cfa_offset 32
 1074 0004 00AF     		add	r7, sp, #0
 1075              	.LCFI14:
 1076              		.cfi_def_cfa_register 7
 1077 0006 F860     		str	r0, [r7, #12]
 1078 0008 B960     		str	r1, [r7, #8]
 1079 000a FA80     		strh	r2, [r7, #6]	@ movhi
 1080 000c BB80     		strh	r3, [r7, #4]	@ movhi
 194:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(rsp, read_len - 2 );
 1081              		.loc 1 194 0
 1082 000e BB88     		ldrh	r3, [r7, #4]	@ movhi
 1083 0010 023B     		subs	r3, r3, #2
 1084 0012 9BB2     		uxth	r3, r3
 1085 0014 B868     		ldr	r0, [r7, #8]
 1086 0016 1946     		mov	r1, r3
 1087 0018 FFF7FEFF 		bl	crc16
 1088 001c 0346     		mov	r3, r0
 1089 001e FB82     		strh	r3, [r7, #22]	@ movhi
 195:App/STM32F4-Discovery/modbus_mk.c **** 
 196:App/STM32F4-Discovery/modbus_mk.c **** 	if (	rsp[read_len -1 ] == ( crc & 0x00ff ) && 
 1090              		.loc 1 196 0
 1091 0020 BB88     		ldrh	r3, [r7, #4]
 1092 0022 013B     		subs	r3, r3, #1
 1093 0024 BA68     		ldr	r2, [r7, #8]
 1094 0026 1344     		add	r3, r3, r2
 1095 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1096 002a 1A46     		mov	r2, r3
 1097 002c FB8A     		ldrh	r3, [r7, #22]
 1098 002e DBB2     		uxtb	r3, r3
 1099 0030 9A42     		cmp	r2, r3
 1100 0032 0CD1     		bne	.L24
 197:App/STM32F4-Discovery/modbus_mk.c **** 		rsp[read_len - 2 ] == ( crc >> 8 ) ) return 1; 
 1101              		.loc 1 197 0 discriminator 1
 1102 0034 BB88     		ldrh	r3, [r7, #4]
 1103 0036 023B     		subs	r3, r3, #2
 1104 0038 BA68     		ldr	r2, [r7, #8]
 1105 003a 1344     		add	r3, r3, r2
 1106 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1107 003e 1A46     		mov	r2, r3
 1108 0040 FB8A     		ldrh	r3, [r7, #22]
 1109 0042 1B0A     		lsrs	r3, r3, #8
 1110 0044 9BB2     		uxth	r3, r3
 196:App/STM32F4-Discovery/modbus_mk.c **** 	if (	rsp[read_len -1 ] == ( crc & 0x00ff ) && 
 1111              		.loc 1 196 0 discriminator 1
 1112 0046 9A42     		cmp	r2, r3
 1113 0048 01D1     		bne	.L24
 1114              		.loc 1 197 0
 1115 004a 0123     		movs	r3, #1
 1116 004c 00E0     		b	.L25
 1117              	.L24:
 198:App/STM32F4-Discovery/modbus_mk.c **** 	return 0; 
 1118              		.loc 1 198 0
 1119 004e 0023     		movs	r3, #0
 1120              	.L25:
 199:App/STM32F4-Discovery/modbus_mk.c **** 	
 200:App/STM32F4-Discovery/modbus_mk.c **** }
 1121              		.loc 1 200 0
 1122 0050 1846     		mov	r0, r3
 1123 0052 1837     		adds	r7, r7, #24
 1124 0054 BD46     		mov	sp, r7
 1125              		@ sp needed
 1126 0056 80BD     		pop	{r7, pc}
 1127              		.cfi_endproc
 1128              	.LFE114:
 1130              		.section	.text.write_read_modbus,"ax",%progbits
 1131              		.align	2
 1132              		.global	write_read_modbus
 1133              		.thumb
 1134              		.thumb_func
 1136              	write_read_modbus:
 1137              	.LFB115:
 201:App/STM32F4-Discovery/modbus_mk.c **** 
 202:App/STM32F4-Discovery/modbus_mk.c **** /* write to modbus */
 203:App/STM32F4-Discovery/modbus_mk.c **** void write_read_modbus( uint8_t * req, uint8_t * rsp, int write_len, int read_len )
 204:App/STM32F4-Discovery/modbus_mk.c **** {
 1138              		.loc 1 204 0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 24
 1141              		@ frame_needed = 1, uses_anonymous_args = 0
 1142 0000 80B5     		push	{r7, lr}
 1143              	.LCFI15:
 1144              		.cfi_def_cfa_offset 8
 1145              		.cfi_offset 7, -8
 1146              		.cfi_offset 14, -4
 1147 0002 86B0     		sub	sp, sp, #24
 1148              	.LCFI16:
 1149              		.cfi_def_cfa_offset 32
 1150 0004 00AF     		add	r7, sp, #0
 1151              	.LCFI17:
 1152              		.cfi_def_cfa_register 7
 1153 0006 F860     		str	r0, [r7, #12]
 1154 0008 B960     		str	r1, [r7, #8]
 1155 000a 7A60     		str	r2, [r7, #4]
 1156 000c 3B60     		str	r3, [r7]
 205:App/STM32F4-Discovery/modbus_mk.c **** 	int i; 
 206:App/STM32F4-Discovery/modbus_mk.c **** 
 207:App/STM32F4-Discovery/modbus_mk.c **** 	// tell ISR we expect only specific amount of data
 208:App/STM32F4-Discovery/modbus_mk.c **** 	rx_length = read_len + write_len - 1 ; 
 1157              		.loc 1 208 0
 1158 000e 3A68     		ldr	r2, [r7]
 1159 0010 7B68     		ldr	r3, [r7, #4]
 1160 0012 1344     		add	r3, r3, r2
 1161 0014 5A1E     		subs	r2, r3, #1
 1162 0016 254B     		ldr	r3, .L33
 1163 0018 1A60     		str	r2, [r3]
 209:App/STM32F4-Discovery/modbus_mk.c **** 
 210:App/STM32F4-Discovery/modbus_mk.c **** 	// driver disable 
 211:App/STM32F4-Discovery/modbus_mk.c **** 	DD();
 1164              		.loc 1 211 0
 1165 001a 254B     		ldr	r3, .L33+4
 1166 001c 244A     		ldr	r2, .L33+4
 1167 001e 128B     		ldrh	r2, [r2, #24]	@ movhi
 1168 0020 92B2     		uxth	r2, r2
 1169 0022 42F48072 		orr	r2, r2, #256
 1170 0026 92B2     		uxth	r2, r2
 1171 0028 1A83     		strh	r2, [r3, #24]	@ movhi
 212:App/STM32F4-Discovery/modbus_mk.c **** 	for (i=0; i < 4000; i++) ;
 1172              		.loc 1 212 0
 1173 002a 0023     		movs	r3, #0
 1174 002c 7B61     		str	r3, [r7, #20]
 1175 002e 02E0     		b	.L27
 1176              	.L28:
 1177              		.loc 1 212 0 is_stmt 0 discriminator 2
 1178 0030 7B69     		ldr	r3, [r7, #20]
 1179 0032 0133     		adds	r3, r3, #1
 1180 0034 7B61     		str	r3, [r7, #20]
 1181              	.L27:
 1182              		.loc 1 212 0 discriminator 1
 1183 0036 7B69     		ldr	r3, [r7, #20]
 1184 0038 B3F57A6F 		cmp	r3, #4000
 1185 003c F8DB     		blt	.L28
 213:App/STM32F4-Discovery/modbus_mk.c **** 	USART_puts(req,write_len);
 1186              		.loc 1 213 0 is_stmt 1
 1187 003e F868     		ldr	r0, [r7, #12]
 1188 0040 7968     		ldr	r1, [r7, #4]
 1189 0042 FFF7FEFF 		bl	USART_puts
 214:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < 4100; i++);
 1190              		.loc 1 214 0
 1191 0046 0023     		movs	r3, #0
 1192 0048 7B61     		str	r3, [r7, #20]
 1193 004a 02E0     		b	.L29
 1194              	.L30:
 1195              		.loc 1 214 0 is_stmt 0 discriminator 2
 1196 004c 7B69     		ldr	r3, [r7, #20]
 1197 004e 0133     		adds	r3, r3, #1
 1198 0050 7B61     		str	r3, [r7, #20]
 1199              	.L29:
 1200              		.loc 1 214 0 discriminator 1
 1201 0052 7A69     		ldr	r2, [r7, #20]
 1202 0054 41F20303 		movw	r3, #4099
 1203 0058 9A42     		cmp	r2, r3
 1204 005a F7DD     		ble	.L30
 215:App/STM32F4-Discovery/modbus_mk.c **** 	// driver enable 
 216:App/STM32F4-Discovery/modbus_mk.c **** 	DE();
 1205              		.loc 1 216 0 is_stmt 1
 1206 005c 144B     		ldr	r3, .L33+4
 1207 005e 144A     		ldr	r2, .L33+4
 1208 0060 528B     		ldrh	r2, [r2, #26]	@ movhi
 1209 0062 92B2     		uxth	r2, r2
 1210 0064 42F48072 		orr	r2, r2, #256
 1211 0068 92B2     		uxth	r2, r2
 1212 006a 5A83     		strh	r2, [r3, #26]	@ movhi
 217:App/STM32F4-Discovery/modbus_mk.c **** 
 218:App/STM32F4-Discovery/modbus_mk.c **** 	xSemaphoreTake(xSmphrUSART, portMAX_DELAY);
 1213              		.loc 1 218 0
 1214 006c 114B     		ldr	r3, .L33+8
 1215 006e 1B68     		ldr	r3, [r3]
 1216 0070 1846     		mov	r0, r3
 1217 0072 0021     		movs	r1, #0
 1218 0074 4FF0FF32 		mov	r2, #-1
 1219 0078 0023     		movs	r3, #0
 1220 007a FFF7FEFF 		bl	xQueueGenericReceive
 219:App/STM32F4-Discovery/modbus_mk.c **** 	
 220:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < read_len; i++) 
 1221              		.loc 1 220 0
 1222 007e 0023     		movs	r3, #0
 1223 0080 7B61     		str	r3, [r7, #20]
 1224 0082 0CE0     		b	.L31
 1225              	.L32:
 221:App/STM32F4-Discovery/modbus_mk.c **** 		rsp[i] = received_string[i+write_len]; 
 1226              		.loc 1 221 0 discriminator 2
 1227 0084 7B69     		ldr	r3, [r7, #20]
 1228 0086 BA68     		ldr	r2, [r7, #8]
 1229 0088 1344     		add	r3, r3, r2
 1230 008a 7969     		ldr	r1, [r7, #20]
 1231 008c 7A68     		ldr	r2, [r7, #4]
 1232 008e 0A44     		add	r2, r2, r1
 1233 0090 0949     		ldr	r1, .L33+12
 1234 0092 8A5C     		ldrb	r2, [r1, r2]
 1235 0094 D2B2     		uxtb	r2, r2
 1236 0096 1A70     		strb	r2, [r3]
 220:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < read_len; i++) 
 1237              		.loc 1 220 0 discriminator 2
 1238 0098 7B69     		ldr	r3, [r7, #20]
 1239 009a 0133     		adds	r3, r3, #1
 1240 009c 7B61     		str	r3, [r7, #20]
 1241              	.L31:
 220:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < read_len; i++) 
 1242              		.loc 1 220 0 is_stmt 0 discriminator 1
 1243 009e 7A69     		ldr	r2, [r7, #20]
 1244 00a0 3B68     		ldr	r3, [r7]
 1245 00a2 9A42     		cmp	r2, r3
 1246 00a4 EEDB     		blt	.L32
 222:App/STM32F4-Discovery/modbus_mk.c **** 
 223:App/STM32F4-Discovery/modbus_mk.c **** }
 1247              		.loc 1 223 0 is_stmt 1
 1248 00a6 1837     		adds	r7, r7, #24
 1249 00a8 BD46     		mov	sp, r7
 1250              		@ sp needed
 1251 00aa 80BD     		pop	{r7, pc}
 1252              	.L34:
 1253              		.align	2
 1254              	.L33:
 1255 00ac 00000000 		.word	rx_length
 1256 00b0 00180240 		.word	1073879040
 1257 00b4 00000000 		.word	xSmphrUSART
 1258 00b8 00000000 		.word	received_string
 1259              		.cfi_endproc
 1260              	.LFE115:
 1262              		.section	.text.modbus_RIB,"ax",%progbits
 1263              		.align	2
 1264              		.global	modbus_RIB
 1265              		.thumb
 1266              		.thumb_func
 1268              	modbus_RIB:
 1269              	.LFB116:
 224:App/STM32F4-Discovery/modbus_mk.c **** 
 225:App/STM32F4-Discovery/modbus_mk.c **** 
 226:App/STM32F4-Discovery/modbus_mk.c **** /* modbus read input bits */
 227:App/STM32F4-Discovery/modbus_mk.c **** uint8_t modbus_RIB( int16_t address, int nb, uint8_t *dst )
 228:App/STM32F4-Discovery/modbus_mk.c **** {
 1270              		.loc 1 228 0
 1271              		.cfi_startproc
 1272              		@ args = 0, pretend = 0, frame = 536
 1273              		@ frame_needed = 1, uses_anonymous_args = 0
 1274 0000 80B5     		push	{r7, lr}
 1275              	.LCFI18:
 1276              		.cfi_def_cfa_offset 8
 1277              		.cfi_offset 7, -8
 1278              		.cfi_offset 14, -4
 1279 0002 ADF5067D 		sub	sp, sp, #536
 1280              	.LCFI19:
 1281              		.cfi_def_cfa_offset 544
 1282 0006 00AF     		add	r7, sp, #0
 1283              	.LCFI20:
 1284              		.cfi_def_cfa_register 7
 1285 0008 07F10803 		add	r3, r7, #8
 1286 000c 1960     		str	r1, [r3]
 1287 000e 3B1D     		adds	r3, r7, #4
 1288 0010 1A60     		str	r2, [r3]
 1289 0012 07F10E03 		add	r3, r7, #14
 1290 0016 0246     		mov	r2, r0	@ movhi
 1291 0018 1A80     		strh	r2, [r3]	@ movhi
 229:App/STM32F4-Discovery/modbus_mk.c **** 	/* first send request */
 230:App/STM32F4-Discovery/modbus_mk.c **** 
 231:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t req[REQ_MAX_LEN];
 232:App/STM32F4-Discovery/modbus_mk.c **** 	int req_length; 
 233:App/STM32F4-Discovery/modbus_mk.c **** 	
 234:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 1292              		.loc 1 234 0
 1293 001a 07F11003 		add	r3, r7, #16
 1294 001e 3622     		movs	r2, #54
 1295 0020 1A70     		strb	r2, [r3]
 235:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0x2;
 1296              		.loc 1 235 0
 1297 0022 07F11003 		add	r3, r7, #16
 1298 0026 0222     		movs	r2, #2
 1299 0028 5A70     		strb	r2, [r3, #1]
 236:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 1300              		.loc 1 236 0
 1301 002a 07F10E03 		add	r3, r7, #14
 1302 002e B3F90030 		ldrsh	r3, [r3]
 1303 0032 1B12     		asrs	r3, r3, #8
 1304 0034 9BB2     		uxth	r3, r3
 1305 0036 DAB2     		uxtb	r2, r3
 1306 0038 07F11003 		add	r3, r7, #16
 1307 003c 9A70     		strb	r2, [r3, #2]
 237:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 1308              		.loc 1 237 0
 1309 003e 07F10E03 		add	r3, r7, #14
 1310 0042 1B88     		ldrh	r3, [r3]	@ movhi
 1311 0044 DAB2     		uxtb	r2, r3
 1312 0046 07F11003 		add	r3, r7, #16
 1313 004a DA70     		strb	r2, [r3, #3]
 238:App/STM32F4-Discovery/modbus_mk.c **** 	req[4] = nb >> 8;
 1314              		.loc 1 238 0
 1315 004c 07F10803 		add	r3, r7, #8
 1316 0050 1B68     		ldr	r3, [r3]
 1317 0052 1B12     		asrs	r3, r3, #8
 1318 0054 DAB2     		uxtb	r2, r3
 1319 0056 07F11003 		add	r3, r7, #16
 1320 005a 1A71     		strb	r2, [r3, #4]
 239:App/STM32F4-Discovery/modbus_mk.c **** 	req[5] = nb & 0x00ff; 
 1321              		.loc 1 239 0
 1322 005c 07F10803 		add	r3, r7, #8
 1323 0060 1B68     		ldr	r3, [r3]
 1324 0062 DAB2     		uxtb	r2, r3
 1325 0064 07F11003 		add	r3, r7, #16
 1326 0068 5A71     		strb	r2, [r3, #5]
 240:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 6;
 1327              		.loc 1 240 0
 1328 006a 0623     		movs	r3, #6
 1329 006c C7F81432 		str	r3, [r7, #532]
 241:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 1330              		.loc 1 241 0
 1331 0070 D7F81432 		ldr	r3, [r7, #532]
 1332 0074 9BB2     		uxth	r3, r3
 1333 0076 07F11002 		add	r2, r7, #16
 1334 007a 1046     		mov	r0, r2
 1335 007c 1946     		mov	r1, r3
 1336 007e FFF7FEFF 		bl	crc16
 1337 0082 0346     		mov	r3, r0
 1338 0084 A7F81232 		strh	r3, [r7, #530]	@ movhi
 242:App/STM32F4-Discovery/modbus_mk.c **** 
 243:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 1339              		.loc 1 243 0
 1340 0088 D7F81432 		ldr	r3, [r7, #532]
 1341 008c 5A1C     		adds	r2, r3, #1
 1342 008e C7F81422 		str	r2, [r7, #532]
 1343 0092 B7F81222 		ldrh	r2, [r7, #530]
 1344 0096 120A     		lsrs	r2, r2, #8
 1345 0098 92B2     		uxth	r2, r2
 1346 009a D1B2     		uxtb	r1, r2
 1347 009c 07F11002 		add	r2, r7, #16
 1348 00a0 D154     		strb	r1, [r2, r3]
 244:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff; 
 1349              		.loc 1 244 0
 1350 00a2 D7F81432 		ldr	r3, [r7, #532]
 1351 00a6 5A1C     		adds	r2, r3, #1
 1352 00a8 C7F81422 		str	r2, [r7, #532]
 1353 00ac B7F81222 		ldrh	r2, [r7, #530]	@ movhi
 1354 00b0 D1B2     		uxtb	r1, r2
 1355 00b2 07F11002 		add	r2, r7, #16
 1356 00b6 D154     		strb	r1, [r2, r3]
 245:App/STM32F4-Discovery/modbus_mk.c **** 	
 246:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req, dst, req_length, 6);
 1357              		.loc 1 246 0
 1358 00b8 07F11002 		add	r2, r7, #16
 1359 00bc 3B1D     		adds	r3, r7, #4
 1360 00be 1046     		mov	r0, r2
 1361 00c0 1968     		ldr	r1, [r3]
 1362 00c2 D7F81422 		ldr	r2, [r7, #532]
 1363 00c6 0623     		movs	r3, #6
 1364 00c8 FFF7FEFF 		bl	write_read_modbus
 247:App/STM32F4-Discovery/modbus_mk.c **** 	return modbus_confirmation (req, dst, req_length, 6);
 1365              		.loc 1 247 0
 1366 00cc D7F81432 		ldr	r3, [r7, #532]
 1367 00d0 9BB2     		uxth	r3, r3
 1368 00d2 07F11001 		add	r1, r7, #16
 1369 00d6 3A1D     		adds	r2, r7, #4
 1370 00d8 0846     		mov	r0, r1
 1371 00da 1168     		ldr	r1, [r2]
 1372 00dc 1A46     		mov	r2, r3
 1373 00de 0623     		movs	r3, #6
 1374 00e0 FFF7FEFF 		bl	modbus_confirmation
 1375 00e4 0346     		mov	r3, r0
 1376 00e6 DBB2     		uxtb	r3, r3
 248:App/STM32F4-Discovery/modbus_mk.c **** 
 249:App/STM32F4-Discovery/modbus_mk.c **** }
 1377              		.loc 1 249 0
 1378 00e8 1846     		mov	r0, r3
 1379 00ea 07F50677 		add	r7, r7, #536
 1380 00ee BD46     		mov	sp, r7
 1381              		@ sp needed
 1382 00f0 80BD     		pop	{r7, pc}
 1383              		.cfi_endproc
 1384              	.LFE116:
 1386 00f2 00BF     		.section	.text.modbus_WIB,"ax",%progbits
 1387              		.align	2
 1388              		.global	modbus_WIB
 1389              		.thumb
 1390              		.thumb_func
 1392              	modbus_WIB:
 1393              	.LFB117:
 250:App/STM32F4-Discovery/modbus_mk.c **** 
 251:App/STM32F4-Discovery/modbus_mk.c **** 
 252:App/STM32F4-Discovery/modbus_mk.c **** /* modbus write input bits */
 253:App/STM32F4-Discovery/modbus_mk.c **** uint8_t modbus_WIB( uint16_t address, int nb, uint8_t *src )
 254:App/STM32F4-Discovery/modbus_mk.c **** {
 1394              		.loc 1 254 0
 1395              		.cfi_startproc
 1396              		@ args = 0, pretend = 0, frame = 1072
 1397              		@ frame_needed = 1, uses_anonymous_args = 0
 1398 0000 80B5     		push	{r7, lr}
 1399              	.LCFI21:
 1400              		.cfi_def_cfa_offset 8
 1401              		.cfi_offset 7, -8
 1402              		.cfi_offset 14, -4
 1403 0002 ADF5866D 		sub	sp, sp, #1072
 1404              	.LCFI22:
 1405              		.cfi_def_cfa_offset 1080
 1406 0006 00AF     		add	r7, sp, #0
 1407              	.LCFI23:
 1408              		.cfi_def_cfa_register 7
 1409 0008 07F10803 		add	r3, r7, #8
 1410 000c 1960     		str	r1, [r3]
 1411 000e 3B1D     		adds	r3, r7, #4
 1412 0010 1A60     		str	r2, [r3]
 1413 0012 07F10E03 		add	r3, r7, #14
 1414 0016 0246     		mov	r2, r0	@ movhi
 1415 0018 1A80     		strh	r2, [r3]	@ movhi
 255:App/STM32F4-Discovery/modbus_mk.c **** 	/* first send request */
 256:App/STM32F4-Discovery/modbus_mk.c **** 
 257:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t req[REQ_MAX_LEN];
 258:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t rsp[REQ_MAX_LEN];
 259:App/STM32F4-Discovery/modbus_mk.c **** 	int byte_count; 
 260:App/STM32F4-Discovery/modbus_mk.c **** 	int req_length; 
 261:App/STM32F4-Discovery/modbus_mk.c **** 	int bit_check = 0; 
 1416              		.loc 1 261 0
 1417 001a 0023     		movs	r3, #0
 1418 001c C7F82834 		str	r3, [r7, #1064]
 262:App/STM32F4-Discovery/modbus_mk.c **** 	int pos = 0; 
 1419              		.loc 1 262 0
 1420 0020 0023     		movs	r3, #0
 1421 0022 C7F82434 		str	r3, [r7, #1060]
 263:App/STM32F4-Discovery/modbus_mk.c **** 	
 264:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 1422              		.loc 1 264 0
 1423 0026 07F50573 		add	r3, r7, #532
 1424 002a 3622     		movs	r2, #54
 1425 002c 1A70     		strb	r2, [r3]
 265:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0xF;
 1426              		.loc 1 265 0
 1427 002e 07F50573 		add	r3, r7, #532
 1428 0032 0F22     		movs	r2, #15
 1429 0034 5A70     		strb	r2, [r3, #1]
 266:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 1430              		.loc 1 266 0
 1431 0036 07F10E03 		add	r3, r7, #14
 1432 003a 1B88     		ldrh	r3, [r3]
 1433 003c 1B0A     		lsrs	r3, r3, #8
 1434 003e 9BB2     		uxth	r3, r3
 1435 0040 DAB2     		uxtb	r2, r3
 1436 0042 07F50573 		add	r3, r7, #532
 1437 0046 9A70     		strb	r2, [r3, #2]
 267:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 1438              		.loc 1 267 0
 1439 0048 07F10E03 		add	r3, r7, #14
 1440 004c 1B88     		ldrh	r3, [r3]	@ movhi
 1441 004e DAB2     		uxtb	r2, r3
 1442 0050 07F50573 		add	r3, r7, #532
 1443 0054 DA70     		strb	r2, [r3, #3]
 268:App/STM32F4-Discovery/modbus_mk.c **** 	req[4] = nb >> 8;
 1444              		.loc 1 268 0
 1445 0056 07F10803 		add	r3, r7, #8
 1446 005a 1B68     		ldr	r3, [r3]
 1447 005c 1B12     		asrs	r3, r3, #8
 1448 005e DAB2     		uxtb	r2, r3
 1449 0060 07F50573 		add	r3, r7, #532
 1450 0064 1A71     		strb	r2, [r3, #4]
 269:App/STM32F4-Discovery/modbus_mk.c **** 	req[5] = nb & 0x00ff; 
 1451              		.loc 1 269 0
 1452 0066 07F10803 		add	r3, r7, #8
 1453 006a 1B68     		ldr	r3, [r3]
 1454 006c DAB2     		uxtb	r2, r3
 1455 006e 07F50573 		add	r3, r7, #532
 1456 0072 5A71     		strb	r2, [r3, #5]
 270:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 6; 
 1457              		.loc 1 270 0
 1458 0074 0623     		movs	r3, #6
 1459 0076 C7F82C34 		str	r3, [r7, #1068]
 271:App/STM32F4-Discovery/modbus_mk.c **** 	
 272:App/STM32F4-Discovery/modbus_mk.c ****     	byte_count = (nb / 8) + ((nb % 8) ? 1 : 0);
 1460              		.loc 1 272 0
 1461 007a 07F10803 		add	r3, r7, #8
 1462 007e 1B68     		ldr	r3, [r3]
 1463 0080 002B     		cmp	r3, #0
 1464 0082 00DA     		bge	.L38
 1465 0084 0733     		adds	r3, r3, #7
 1466              	.L38:
 1467 0086 DB10     		asrs	r3, r3, #3
 1468 0088 1A46     		mov	r2, r3
 1469 008a 07F10803 		add	r3, r7, #8
 1470 008e 1B68     		ldr	r3, [r3]
 1471 0090 03F00703 		and	r3, r3, #7
 1472 0094 002B     		cmp	r3, #0
 1473 0096 0CBF     		ite	eq
 1474 0098 0023     		moveq	r3, #0
 1475 009a 0123     		movne	r3, #1
 1476 009c DBB2     		uxtb	r3, r3
 1477 009e 1344     		add	r3, r3, r2
 1478 00a0 C7F81834 		str	r3, [r7, #1048]
 273:App/STM32F4-Discovery/modbus_mk.c ****   	req[req_length++] = byte_count;
 1479              		.loc 1 273 0
 1480 00a4 D7F82C34 		ldr	r3, [r7, #1068]
 1481 00a8 5A1C     		adds	r2, r3, #1
 1482 00aa C7F82C24 		str	r2, [r7, #1068]
 1483 00ae D7F81824 		ldr	r2, [r7, #1048]
 1484 00b2 D1B2     		uxtb	r1, r2
 1485 00b4 07F50572 		add	r2, r7, #532
 1486 00b8 D154     		strb	r1, [r2, r3]
 274:App/STM32F4-Discovery/modbus_mk.c **** 
 275:App/STM32F4-Discovery/modbus_mk.c **** 	int i; 
 276:App/STM32F4-Discovery/modbus_mk.c ****     	for (i = 0; i < byte_count; i++) {
 1487              		.loc 1 276 0
 1488 00ba 0023     		movs	r3, #0
 1489 00bc C7F82034 		str	r3, [r7, #1056]
 1490 00c0 5CE0     		b	.L39
 1491              	.L45:
 1492              	.LBB3:
 277:App/STM32F4-Discovery/modbus_mk.c ****         
 278:App/STM32F4-Discovery/modbus_mk.c **** 		int bit;
 279:App/STM32F4-Discovery/modbus_mk.c **** 		bit = 0x01;
 1493              		.loc 1 279 0
 1494 00c2 0123     		movs	r3, #1
 1495 00c4 C7F81C34 		str	r3, [r7, #1052]
 280:App/STM32F4-Discovery/modbus_mk.c ****         	req[req_length] = 0;
 1496              		.loc 1 280 0
 1497 00c8 07F50572 		add	r2, r7, #532
 1498 00cc D7F82C34 		ldr	r3, [r7, #1068]
 1499 00d0 1344     		add	r3, r3, r2
 1500 00d2 0022     		movs	r2, #0
 1501 00d4 1A70     		strb	r2, [r3]
 281:App/STM32F4-Discovery/modbus_mk.c **** 
 282:App/STM32F4-Discovery/modbus_mk.c ****         	while ((bit & 0xFF) && (bit_check++ < nb)) {
 1502              		.loc 1 282 0
 1503 00d6 38E0     		b	.L40
 1504              	.L44:
 283:App/STM32F4-Discovery/modbus_mk.c ****             		if (src[pos++])
 1505              		.loc 1 283 0
 1506 00d8 D7F82434 		ldr	r3, [r7, #1060]
 1507 00dc 5A1C     		adds	r2, r3, #1
 1508 00de C7F82424 		str	r2, [r7, #1060]
 1509 00e2 3A1D     		adds	r2, r7, #4
 1510 00e4 1268     		ldr	r2, [r2]
 1511 00e6 1344     		add	r3, r3, r2
 1512 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1513 00ea 002B     		cmp	r3, #0
 1514 00ec 13D0     		beq	.L41
 284:App/STM32F4-Discovery/modbus_mk.c ****                 		req[req_length] |= bit;
 1515              		.loc 1 284 0
 1516 00ee 07F50572 		add	r2, r7, #532
 1517 00f2 D7F82C34 		ldr	r3, [r7, #1068]
 1518 00f6 1344     		add	r3, r3, r2
 1519 00f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1520 00fa DAB2     		uxtb	r2, r3
 1521 00fc D7F81C34 		ldr	r3, [r7, #1052]
 1522 0100 DBB2     		uxtb	r3, r3
 1523 0102 1343     		orrs	r3, r3, r2
 1524 0104 DBB2     		uxtb	r3, r3
 1525 0106 DAB2     		uxtb	r2, r3
 1526 0108 07F50571 		add	r1, r7, #532
 1527 010c D7F82C34 		ldr	r3, [r7, #1068]
 1528 0110 0B44     		add	r3, r3, r1
 1529 0112 1A70     		strb	r2, [r3]
 1530 0114 14E0     		b	.L42
 1531              	.L41:
 285:App/STM32F4-Discovery/modbus_mk.c ****             		else
 286:App/STM32F4-Discovery/modbus_mk.c ****                 		req[req_length] &=~ bit;
 1532              		.loc 1 286 0
 1533 0116 07F50572 		add	r2, r7, #532
 1534 011a D7F82C34 		ldr	r3, [r7, #1068]
 1535 011e 1344     		add	r3, r3, r2
 1536 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1537 0122 DAB2     		uxtb	r2, r3
 1538 0124 D7F81C34 		ldr	r3, [r7, #1052]
 1539 0128 DBB2     		uxtb	r3, r3
 1540 012a DB43     		mvns	r3, r3
 1541 012c DBB2     		uxtb	r3, r3
 1542 012e 1340     		ands	r3, r3, r2
 1543 0130 DBB2     		uxtb	r3, r3
 1544 0132 DAB2     		uxtb	r2, r3
 1545 0134 07F50571 		add	r1, r7, #532
 1546 0138 D7F82C34 		ldr	r3, [r7, #1068]
 1547 013c 0B44     		add	r3, r3, r1
 1548 013e 1A70     		strb	r2, [r3]
 1549              	.L42:
 287:App/STM32F4-Discovery/modbus_mk.c **** 
 288:App/STM32F4-Discovery/modbus_mk.c ****             		bit = bit << 1;
 1550              		.loc 1 288 0
 1551 0140 D7F81C34 		ldr	r3, [r7, #1052]
 1552 0144 5B00     		lsls	r3, r3, #1
 1553 0146 C7F81C34 		str	r3, [r7, #1052]
 1554              	.L40:
 282:App/STM32F4-Discovery/modbus_mk.c ****         	while ((bit & 0xFF) && (bit_check++ < nb)) {
 1555              		.loc 1 282 0 discriminator 1
 1556 014a D7F81C34 		ldr	r3, [r7, #1052]
 1557 014e DBB2     		uxtb	r3, r3
 1558 0150 002B     		cmp	r3, #0
 1559 0152 09D0     		beq	.L43
 282:App/STM32F4-Discovery/modbus_mk.c ****         	while ((bit & 0xFF) && (bit_check++ < nb)) {
 1560              		.loc 1 282 0 is_stmt 0 discriminator 2
 1561 0154 D7F82834 		ldr	r3, [r7, #1064]
 1562 0158 5A1C     		adds	r2, r3, #1
 1563 015a C7F82824 		str	r2, [r7, #1064]
 1564 015e 07F10802 		add	r2, r7, #8
 1565 0162 1268     		ldr	r2, [r2]
 1566 0164 9342     		cmp	r3, r2
 1567 0166 B7DB     		blt	.L44
 1568              	.L43:
 289:App/STM32F4-Discovery/modbus_mk.c ****         	}	
 290:App/STM32F4-Discovery/modbus_mk.c ****         	
 291:App/STM32F4-Discovery/modbus_mk.c **** 		req_length++;
 1569              		.loc 1 291 0 is_stmt 1
 1570 0168 D7F82C34 		ldr	r3, [r7, #1068]
 1571 016c 0133     		adds	r3, r3, #1
 1572 016e C7F82C34 		str	r3, [r7, #1068]
 1573              	.LBE3:
 276:App/STM32F4-Discovery/modbus_mk.c ****     	for (i = 0; i < byte_count; i++) {
 1574              		.loc 1 276 0
 1575 0172 D7F82034 		ldr	r3, [r7, #1056]
 1576 0176 0133     		adds	r3, r3, #1
 1577 0178 C7F82034 		str	r3, [r7, #1056]
 1578              	.L39:
 276:App/STM32F4-Discovery/modbus_mk.c ****     	for (i = 0; i < byte_count; i++) {
 1579              		.loc 1 276 0 is_stmt 0 discriminator 1
 1580 017c D7F82024 		ldr	r2, [r7, #1056]
 1581 0180 D7F81834 		ldr	r3, [r7, #1048]
 1582 0184 9A42     		cmp	r2, r3
 1583 0186 9CDB     		blt	.L45
 292:App/STM32F4-Discovery/modbus_mk.c **** 	 }
 293:App/STM32F4-Discovery/modbus_mk.c **** 
 294:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 1584              		.loc 1 294 0 is_stmt 1
 1585 0188 D7F82C34 		ldr	r3, [r7, #1068]
 1586 018c 9BB2     		uxth	r3, r3
 1587 018e 07F50572 		add	r2, r7, #532
 1588 0192 1046     		mov	r0, r2
 1589 0194 1946     		mov	r1, r3
 1590 0196 FFF7FEFF 		bl	crc16
 1591 019a 0346     		mov	r3, r0
 1592 019c A7F81634 		strh	r3, [r7, #1046]	@ movhi
 295:App/STM32F4-Discovery/modbus_mk.c **** 
 296:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 1593              		.loc 1 296 0
 1594 01a0 D7F82C34 		ldr	r3, [r7, #1068]
 1595 01a4 5A1C     		adds	r2, r3, #1
 1596 01a6 C7F82C24 		str	r2, [r7, #1068]
 1597 01aa B7F81624 		ldrh	r2, [r7, #1046]
 1598 01ae 120A     		lsrs	r2, r2, #8
 1599 01b0 92B2     		uxth	r2, r2
 1600 01b2 D1B2     		uxtb	r1, r2
 1601 01b4 07F50572 		add	r2, r7, #532
 1602 01b8 D154     		strb	r1, [r2, r3]
 297:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff; 
 1603              		.loc 1 297 0
 1604 01ba D7F82C34 		ldr	r3, [r7, #1068]
 1605 01be 5A1C     		adds	r2, r3, #1
 1606 01c0 C7F82C24 		str	r2, [r7, #1068]
 1607 01c4 B7F81624 		ldrh	r2, [r7, #1046]	@ movhi
 1608 01c8 D1B2     		uxtb	r1, r2
 1609 01ca 07F50572 		add	r2, r7, #532
 1610 01ce D154     		strb	r1, [r2, r3]
 298:App/STM32F4-Discovery/modbus_mk.c **** 	
 299:App/STM32F4-Discovery/modbus_mk.c **** 	/* write request  to modbus line */
 300:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req,rsp, req_length ,8); 
 1611              		.loc 1 300 0
 1612 01d0 07F50572 		add	r2, r7, #532
 1613 01d4 07F11403 		add	r3, r7, #20
 1614 01d8 1046     		mov	r0, r2
 1615 01da 1946     		mov	r1, r3
 1616 01dc D7F82C24 		ldr	r2, [r7, #1068]
 1617 01e0 0823     		movs	r3, #8
 1618 01e2 FFF7FEFF 		bl	write_read_modbus
 301:App/STM32F4-Discovery/modbus_mk.c **** 	return modbus_confirmation (req, rsp,req_length, 8); 
 1619              		.loc 1 301 0
 1620 01e6 D7F82C34 		ldr	r3, [r7, #1068]
 1621 01ea 9BB2     		uxth	r3, r3
 1622 01ec 07F50571 		add	r1, r7, #532
 1623 01f0 07F11402 		add	r2, r7, #20
 1624 01f4 0846     		mov	r0, r1
 1625 01f6 1146     		mov	r1, r2
 1626 01f8 1A46     		mov	r2, r3
 1627 01fa 0823     		movs	r3, #8
 1628 01fc FFF7FEFF 		bl	modbus_confirmation
 1629 0200 0346     		mov	r3, r0
 1630 0202 DBB2     		uxtb	r3, r3
 302:App/STM32F4-Discovery/modbus_mk.c **** 
 303:App/STM32F4-Discovery/modbus_mk.c **** 	
 304:App/STM32F4-Discovery/modbus_mk.c **** }
 1631              		.loc 1 304 0
 1632 0204 1846     		mov	r0, r3
 1633 0206 07F58667 		add	r7, r7, #1072
 1634 020a BD46     		mov	sp, r7
 1635              		@ sp needed
 1636 020c 80BD     		pop	{r7, pc}
 1637              		.cfi_endproc
 1638              	.LFE117:
 1640 020e 00BF     		.section	.text.modbus_WR,"ax",%progbits
 1641              		.align	2
 1642              		.global	modbus_WR
 1643              		.thumb
 1644              		.thumb_func
 1646              	modbus_WR:
 1647              	.LFB118:
 305:App/STM32F4-Discovery/modbus_mk.c **** 
 306:App/STM32F4-Discovery/modbus_mk.c **** /* Write the values from the array to the registers of the remote device */
 307:App/STM32F4-Discovery/modbus_mk.c **** uint8_t modbus_WR( int address, int nb, const uint16_t *src)
 308:App/STM32F4-Discovery/modbus_mk.c **** {
 1648              		.loc 1 308 0
 1649              		.cfi_startproc
 1650              		@ args = 0, pretend = 0, frame = 1056
 1651              		@ frame_needed = 1, uses_anonymous_args = 0
 1652 0000 80B5     		push	{r7, lr}
 1653              	.LCFI24:
 1654              		.cfi_def_cfa_offset 8
 1655              		.cfi_offset 7, -8
 1656              		.cfi_offset 14, -4
 1657 0002 ADF5846D 		sub	sp, sp, #1056
 1658              	.LCFI25:
 1659              		.cfi_def_cfa_offset 1064
 1660 0006 00AF     		add	r7, sp, #0
 1661              	.LCFI26:
 1662              		.cfi_def_cfa_register 7
 1663 0008 07F10C03 		add	r3, r7, #12
 1664 000c 1860     		str	r0, [r3]
 1665 000e 07F10803 		add	r3, r7, #8
 1666 0012 1960     		str	r1, [r3]
 1667 0014 3B1D     		adds	r3, r7, #4
 1668 0016 1A60     		str	r2, [r3]
 309:App/STM32F4-Discovery/modbus_mk.c **** 	int rc;
 310:App/STM32F4-Discovery/modbus_mk.c **** 	int i;
 311:App/STM32F4-Discovery/modbus_mk.c ****     	int req_length;
 312:App/STM32F4-Discovery/modbus_mk.c ****     	int byte_count;
 313:App/STM32F4-Discovery/modbus_mk.c **** 
 314:App/STM32F4-Discovery/modbus_mk.c ****     	uint8_t req[REQ_MAX_LEN];
 315:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t rsp[REQ_MAX_LEN];
 316:App/STM32F4-Discovery/modbus_mk.c **** 
 317:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 1669              		.loc 1 317 0
 1670 0018 07F50473 		add	r3, r7, #528
 1671 001c 3622     		movs	r2, #54
 1672 001e 1A70     		strb	r2, [r3]
 318:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0x10;
 1673              		.loc 1 318 0
 1674 0020 07F50473 		add	r3, r7, #528
 1675 0024 1022     		movs	r2, #16
 1676 0026 5A70     		strb	r2, [r3, #1]
 319:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 1677              		.loc 1 319 0
 1678 0028 07F10C03 		add	r3, r7, #12
 1679 002c 1B68     		ldr	r3, [r3]
 1680 002e 1B12     		asrs	r3, r3, #8
 1681 0030 DAB2     		uxtb	r2, r3
 1682 0032 07F50473 		add	r3, r7, #528
 1683 0036 9A70     		strb	r2, [r3, #2]
 320:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 1684              		.loc 1 320 0
 1685 0038 07F10C03 		add	r3, r7, #12
 1686 003c 1B68     		ldr	r3, [r3]
 1687 003e DAB2     		uxtb	r2, r3
 1688 0040 07F50473 		add	r3, r7, #528
 1689 0044 DA70     		strb	r2, [r3, #3]
 321:App/STM32F4-Discovery/modbus_mk.c **** 	req[4] = nb >> 8;
 1690              		.loc 1 321 0
 1691 0046 07F10803 		add	r3, r7, #8
 1692 004a 1B68     		ldr	r3, [r3]
 1693 004c 1B12     		asrs	r3, r3, #8
 1694 004e DAB2     		uxtb	r2, r3
 1695 0050 07F50473 		add	r3, r7, #528
 1696 0054 1A71     		strb	r2, [r3, #4]
 322:App/STM32F4-Discovery/modbus_mk.c **** 	req[5] = nb & 0x00ff; 
 1697              		.loc 1 322 0
 1698 0056 07F10803 		add	r3, r7, #8
 1699 005a 1B68     		ldr	r3, [r3]
 1700 005c DAB2     		uxtb	r2, r3
 1701 005e 07F50473 		add	r3, r7, #528
 1702 0062 5A71     		strb	r2, [r3, #5]
 323:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 6; 
 1703              		.loc 1 323 0
 1704 0064 0623     		movs	r3, #6
 1705 0066 C7F81834 		str	r3, [r7, #1048]
 324:App/STM32F4-Discovery/modbus_mk.c **** 	
 325:App/STM32F4-Discovery/modbus_mk.c ****    	byte_count = nb * 2;
 1706              		.loc 1 325 0
 1707 006a 07F10803 		add	r3, r7, #8
 1708 006e 1B68     		ldr	r3, [r3]
 1709 0070 5B00     		lsls	r3, r3, #1
 1710 0072 C7F81434 		str	r3, [r7, #1044]
 326:App/STM32F4-Discovery/modbus_mk.c ****     	req[req_length++] = byte_count;
 1711              		.loc 1 326 0
 1712 0076 D7F81834 		ldr	r3, [r7, #1048]
 1713 007a 5A1C     		adds	r2, r3, #1
 1714 007c C7F81824 		str	r2, [r7, #1048]
 1715 0080 D7F81424 		ldr	r2, [r7, #1044]
 1716 0084 D1B2     		uxtb	r1, r2
 1717 0086 07F50472 		add	r2, r7, #528
 1718 008a D154     		strb	r1, [r2, r3]
 327:App/STM32F4-Discovery/modbus_mk.c **** 
 328:App/STM32F4-Discovery/modbus_mk.c ****     for (i = 0; i < nb; i++) {
 1719              		.loc 1 328 0
 1720 008c 0023     		movs	r3, #0
 1721 008e C7F81C34 		str	r3, [r7, #1052]
 1722 0092 26E0     		b	.L48
 1723              	.L49:
 329:App/STM32F4-Discovery/modbus_mk.c **** 		req[req_length++] = src[i] >> 8;
 1724              		.loc 1 329 0 discriminator 2
 1725 0094 D7F81834 		ldr	r3, [r7, #1048]
 1726 0098 5A1C     		adds	r2, r3, #1
 1727 009a C7F81824 		str	r2, [r7, #1048]
 1728 009e D7F81C24 		ldr	r2, [r7, #1052]
 1729 00a2 5200     		lsls	r2, r2, #1
 1730 00a4 391D     		adds	r1, r7, #4
 1731 00a6 0968     		ldr	r1, [r1]
 1732 00a8 0A44     		add	r2, r2, r1
 1733 00aa 1288     		ldrh	r2, [r2]
 1734 00ac 120A     		lsrs	r2, r2, #8
 1735 00ae 92B2     		uxth	r2, r2
 1736 00b0 D1B2     		uxtb	r1, r2
 1737 00b2 07F50472 		add	r2, r7, #528
 1738 00b6 D154     		strb	r1, [r2, r3]
 330:App/STM32F4-Discovery/modbus_mk.c ****         	req[req_length++] = src[i] & 0x00ff;
 1739              		.loc 1 330 0 discriminator 2
 1740 00b8 D7F81834 		ldr	r3, [r7, #1048]
 1741 00bc 5A1C     		adds	r2, r3, #1
 1742 00be C7F81824 		str	r2, [r7, #1048]
 1743 00c2 D7F81C24 		ldr	r2, [r7, #1052]
 1744 00c6 5200     		lsls	r2, r2, #1
 1745 00c8 391D     		adds	r1, r7, #4
 1746 00ca 0968     		ldr	r1, [r1]
 1747 00cc 0A44     		add	r2, r2, r1
 1748 00ce 1288     		ldrh	r2, [r2]
 1749 00d0 D1B2     		uxtb	r1, r2
 1750 00d2 07F50472 		add	r2, r7, #528
 1751 00d6 D154     		strb	r1, [r2, r3]
 328:App/STM32F4-Discovery/modbus_mk.c ****     for (i = 0; i < nb; i++) {
 1752              		.loc 1 328 0 discriminator 2
 1753 00d8 D7F81C34 		ldr	r3, [r7, #1052]
 1754 00dc 0133     		adds	r3, r3, #1
 1755 00de C7F81C34 		str	r3, [r7, #1052]
 1756              	.L48:
 328:App/STM32F4-Discovery/modbus_mk.c ****     for (i = 0; i < nb; i++) {
 1757              		.loc 1 328 0 is_stmt 0 discriminator 1
 1758 00e2 07F10803 		add	r3, r7, #8
 1759 00e6 D7F81C24 		ldr	r2, [r7, #1052]
 1760 00ea 1B68     		ldr	r3, [r3]
 1761 00ec 9A42     		cmp	r2, r3
 1762 00ee D1DB     		blt	.L49
 331:App/STM32F4-Discovery/modbus_mk.c ****     	}
 332:App/STM32F4-Discovery/modbus_mk.c **** 
 333:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 1763              		.loc 1 333 0 is_stmt 1
 1764 00f0 D7F81834 		ldr	r3, [r7, #1048]
 1765 00f4 9BB2     		uxth	r3, r3
 1766 00f6 07F50472 		add	r2, r7, #528
 1767 00fa 1046     		mov	r0, r2
 1768 00fc 1946     		mov	r1, r3
 1769 00fe FFF7FEFF 		bl	crc16
 1770 0102 0346     		mov	r3, r0
 1771 0104 A7F81234 		strh	r3, [r7, #1042]	@ movhi
 334:App/STM32F4-Discovery/modbus_mk.c **** 
 335:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 1772              		.loc 1 335 0
 1773 0108 D7F81834 		ldr	r3, [r7, #1048]
 1774 010c 5A1C     		adds	r2, r3, #1
 1775 010e C7F81824 		str	r2, [r7, #1048]
 1776 0112 B7F81224 		ldrh	r2, [r7, #1042]
 1777 0116 120A     		lsrs	r2, r2, #8
 1778 0118 92B2     		uxth	r2, r2
 1779 011a D1B2     		uxtb	r1, r2
 1780 011c 07F50472 		add	r2, r7, #528
 1781 0120 D154     		strb	r1, [r2, r3]
 336:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff;
 1782              		.loc 1 336 0
 1783 0122 D7F81834 		ldr	r3, [r7, #1048]
 1784 0126 5A1C     		adds	r2, r3, #1
 1785 0128 C7F81824 		str	r2, [r7, #1048]
 1786 012c B7F81224 		ldrh	r2, [r7, #1042]	@ movhi
 1787 0130 D1B2     		uxtb	r1, r2
 1788 0132 07F50472 		add	r2, r7, #528
 1789 0136 D154     		strb	r1, [r2, r3]
 337:App/STM32F4-Discovery/modbus_mk.c **** 
 338:App/STM32F4-Discovery/modbus_mk.c **** 	/* write request  to modbus line */
 339:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req, rsp, req_length, 8); 
 1790              		.loc 1 339 0
 1791 0138 07F50472 		add	r2, r7, #528
 1792 013c 07F11003 		add	r3, r7, #16
 1793 0140 1046     		mov	r0, r2
 1794 0142 1946     		mov	r1, r3
 1795 0144 D7F81824 		ldr	r2, [r7, #1048]
 1796 0148 0823     		movs	r3, #8
 1797 014a FFF7FEFF 		bl	write_read_modbus
 340:App/STM32F4-Discovery/modbus_mk.c **** 	return modbus_confirmation (req, rsp,req_length, 8); 
 1798              		.loc 1 340 0
 1799 014e D7F81834 		ldr	r3, [r7, #1048]
 1800 0152 9BB2     		uxth	r3, r3
 1801 0154 07F50471 		add	r1, r7, #528
 1802 0158 07F11002 		add	r2, r7, #16
 1803 015c 0846     		mov	r0, r1
 1804 015e 1146     		mov	r1, r2
 1805 0160 1A46     		mov	r2, r3
 1806 0162 0823     		movs	r3, #8
 1807 0164 FFF7FEFF 		bl	modbus_confirmation
 1808 0168 0346     		mov	r3, r0
 1809 016a DBB2     		uxtb	r3, r3
 341:App/STM32F4-Discovery/modbus_mk.c **** 
 342:App/STM32F4-Discovery/modbus_mk.c **** 
 343:App/STM32F4-Discovery/modbus_mk.c **** 
 344:App/STM32F4-Discovery/modbus_mk.c **** }
 1810              		.loc 1 344 0
 1811 016c 1846     		mov	r0, r3
 1812 016e 07F58467 		add	r7, r7, #1056
 1813 0172 BD46     		mov	sp, r7
 1814              		@ sp needed
 1815 0174 80BD     		pop	{r7, pc}
 1816              		.cfi_endproc
 1817              	.LFE118:
 1819 0176 00BF     		.section	.text.modbus_WSR,"ax",%progbits
 1820              		.align	2
 1821              		.global	modbus_WSR
 1822              		.thumb
 1823              		.thumb_func
 1825              	modbus_WSR:
 1826              	.LFB119:
 345:App/STM32F4-Discovery/modbus_mk.c **** 
 346:App/STM32F4-Discovery/modbus_mk.c **** /* Write the values from the array to the registers of the remote device */
 347:App/STM32F4-Discovery/modbus_mk.c **** uint8_t modbus_WSR( int address, const uint16_t src)
 348:App/STM32F4-Discovery/modbus_mk.c **** {
 1827              		.loc 1 348 0
 1828              		.cfi_startproc
 1829              		@ args = 0, pretend = 0, frame = 1048
 1830              		@ frame_needed = 1, uses_anonymous_args = 0
 1831 0000 80B5     		push	{r7, lr}
 1832              	.LCFI27:
 1833              		.cfi_def_cfa_offset 8
 1834              		.cfi_offset 7, -8
 1835              		.cfi_offset 14, -4
 1836 0002 ADF5836D 		sub	sp, sp, #1048
 1837              	.LCFI28:
 1838              		.cfi_def_cfa_offset 1056
 1839 0006 00AF     		add	r7, sp, #0
 1840              	.LCFI29:
 1841              		.cfi_def_cfa_register 7
 1842 0008 3B1D     		adds	r3, r7, #4
 1843 000a 1860     		str	r0, [r3]
 1844 000c 0A46     		mov	r2, r1
 1845 000e BB1C     		adds	r3, r7, #2
 1846 0010 1A80     		strh	r2, [r3]	@ movhi
 349:App/STM32F4-Discovery/modbus_mk.c **** 	int nb = 1; 
 1847              		.loc 1 349 0
 1848 0012 0123     		movs	r3, #1
 1849 0014 C7F81434 		str	r3, [r7, #1044]
 350:App/STM32F4-Discovery/modbus_mk.c **** 	int rc;
 351:App/STM32F4-Discovery/modbus_mk.c **** 	int i;
 352:App/STM32F4-Discovery/modbus_mk.c ****     	int req_length;
 353:App/STM32F4-Discovery/modbus_mk.c ****     	int byte_count;
 354:App/STM32F4-Discovery/modbus_mk.c **** 
 355:App/STM32F4-Discovery/modbus_mk.c ****     	uint8_t req[REQ_MAX_LEN];
 356:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t rsp[REQ_MAX_LEN];
 357:App/STM32F4-Discovery/modbus_mk.c **** 
 358:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 1850              		.loc 1 358 0
 1851 0018 07F50273 		add	r3, r7, #520
 1852 001c 3622     		movs	r2, #54
 1853 001e 1A70     		strb	r2, [r3]
 359:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0x6;
 1854              		.loc 1 359 0
 1855 0020 07F50273 		add	r3, r7, #520
 1856 0024 0622     		movs	r2, #6
 1857 0026 5A70     		strb	r2, [r3, #1]
 360:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 1858              		.loc 1 360 0
 1859 0028 3B1D     		adds	r3, r7, #4
 1860 002a 1B68     		ldr	r3, [r3]
 1861 002c 1B12     		asrs	r3, r3, #8
 1862 002e DAB2     		uxtb	r2, r3
 1863 0030 07F50273 		add	r3, r7, #520
 1864 0034 9A70     		strb	r2, [r3, #2]
 361:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 1865              		.loc 1 361 0
 1866 0036 3B1D     		adds	r3, r7, #4
 1867 0038 1B68     		ldr	r3, [r3]
 1868 003a DAB2     		uxtb	r2, r3
 1869 003c 07F50273 		add	r3, r7, #520
 1870 0040 DA70     		strb	r2, [r3, #3]
 362:App/STM32F4-Discovery/modbus_mk.c **** //	req[4] = nb >> 8;
 363:App/STM32F4-Discovery/modbus_mk.c **** //	req[5] = nb & 0x00ff; 
 364:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 4; 
 1871              		.loc 1 364 0
 1872 0042 0423     		movs	r3, #4
 1873 0044 C7F81034 		str	r3, [r7, #1040]
 365:App/STM32F4-Discovery/modbus_mk.c **** 	
 366:App/STM32F4-Discovery/modbus_mk.c ****    	byte_count = nb * 2;
 1874              		.loc 1 366 0
 1875 0048 D7F81434 		ldr	r3, [r7, #1044]
 1876 004c 5B00     		lsls	r3, r3, #1
 1877 004e C7F80C34 		str	r3, [r7, #1036]
 367:App/STM32F4-Discovery/modbus_mk.c ****     	req[req_length++] = byte_count;
 1878              		.loc 1 367 0
 1879 0052 D7F81034 		ldr	r3, [r7, #1040]
 1880 0056 5A1C     		adds	r2, r3, #1
 1881 0058 C7F81024 		str	r2, [r7, #1040]
 1882 005c D7F80C24 		ldr	r2, [r7, #1036]
 1883 0060 D1B2     		uxtb	r1, r2
 1884 0062 07F50272 		add	r2, r7, #520
 1885 0066 D154     		strb	r1, [r2, r3]
 368:App/STM32F4-Discovery/modbus_mk.c **** 
 369:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = src >> 8;
 1886              		.loc 1 369 0
 1887 0068 D7F81034 		ldr	r3, [r7, #1040]
 1888 006c 5A1C     		adds	r2, r3, #1
 1889 006e C7F81024 		str	r2, [r7, #1040]
 1890 0072 BA1C     		adds	r2, r7, #2
 1891 0074 1288     		ldrh	r2, [r2]
 1892 0076 120A     		lsrs	r2, r2, #8
 1893 0078 92B2     		uxth	r2, r2
 1894 007a D1B2     		uxtb	r1, r2
 1895 007c 07F50272 		add	r2, r7, #520
 1896 0080 D154     		strb	r1, [r2, r3]
 370:App/STM32F4-Discovery/modbus_mk.c ****        	req[req_length++] = src & 0x00ff;
 1897              		.loc 1 370 0
 1898 0082 D7F81034 		ldr	r3, [r7, #1040]
 1899 0086 5A1C     		adds	r2, r3, #1
 1900 0088 C7F81024 		str	r2, [r7, #1040]
 1901 008c BA1C     		adds	r2, r7, #2
 1902 008e 1288     		ldrh	r2, [r2]	@ movhi
 1903 0090 D1B2     		uxtb	r1, r2
 1904 0092 07F50272 		add	r2, r7, #520
 1905 0096 D154     		strb	r1, [r2, r3]
 371:App/STM32F4-Discovery/modbus_mk.c ****     	
 372:App/STM32F4-Discovery/modbus_mk.c **** 
 373:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 1906              		.loc 1 373 0
 1907 0098 D7F81034 		ldr	r3, [r7, #1040]
 1908 009c 9BB2     		uxth	r3, r3
 1909 009e 07F50272 		add	r2, r7, #520
 1910 00a2 1046     		mov	r0, r2
 1911 00a4 1946     		mov	r1, r3
 1912 00a6 FFF7FEFF 		bl	crc16
 1913 00aa 0346     		mov	r3, r0
 1914 00ac A7F80A34 		strh	r3, [r7, #1034]	@ movhi
 374:App/STM32F4-Discovery/modbus_mk.c **** 
 375:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 1915              		.loc 1 375 0
 1916 00b0 D7F81034 		ldr	r3, [r7, #1040]
 1917 00b4 5A1C     		adds	r2, r3, #1
 1918 00b6 C7F81024 		str	r2, [r7, #1040]
 1919 00ba B7F80A24 		ldrh	r2, [r7, #1034]
 1920 00be 120A     		lsrs	r2, r2, #8
 1921 00c0 92B2     		uxth	r2, r2
 1922 00c2 D1B2     		uxtb	r1, r2
 1923 00c4 07F50272 		add	r2, r7, #520
 1924 00c8 D154     		strb	r1, [r2, r3]
 376:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff;
 1925              		.loc 1 376 0
 1926 00ca D7F81034 		ldr	r3, [r7, #1040]
 1927 00ce 5A1C     		adds	r2, r3, #1
 1928 00d0 C7F81024 		str	r2, [r7, #1040]
 1929 00d4 B7F80A24 		ldrh	r2, [r7, #1034]	@ movhi
 1930 00d8 D1B2     		uxtb	r1, r2
 1931 00da 07F50272 		add	r2, r7, #520
 1932 00de D154     		strb	r1, [r2, r3]
 377:App/STM32F4-Discovery/modbus_mk.c **** 
 378:App/STM32F4-Discovery/modbus_mk.c **** 	/* write request  to modbus line */
 379:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req, rsp, req_length, 5); 
 1933              		.loc 1 379 0
 1934 00e0 07F50272 		add	r2, r7, #520
 1935 00e4 07F10803 		add	r3, r7, #8
 1936 00e8 1046     		mov	r0, r2
 1937 00ea 1946     		mov	r1, r3
 1938 00ec D7F81024 		ldr	r2, [r7, #1040]
 1939 00f0 0523     		movs	r3, #5
 1940 00f2 FFF7FEFF 		bl	write_read_modbus
 380:App/STM32F4-Discovery/modbus_mk.c **** 	return modbus_confirmation (req, rsp,req_length, 5); 
 1941              		.loc 1 380 0
 1942 00f6 D7F81034 		ldr	r3, [r7, #1040]
 1943 00fa 9BB2     		uxth	r3, r3
 1944 00fc 07F50271 		add	r1, r7, #520
 1945 0100 07F10802 		add	r2, r7, #8
 1946 0104 0846     		mov	r0, r1
 1947 0106 1146     		mov	r1, r2
 1948 0108 1A46     		mov	r2, r3
 1949 010a 0523     		movs	r3, #5
 1950 010c FFF7FEFF 		bl	modbus_confirmation
 1951 0110 0346     		mov	r3, r0
 1952 0112 DBB2     		uxtb	r3, r3
 381:App/STM32F4-Discovery/modbus_mk.c **** 
 382:App/STM32F4-Discovery/modbus_mk.c **** 
 383:App/STM32F4-Discovery/modbus_mk.c **** 
 384:App/STM32F4-Discovery/modbus_mk.c **** }
 1953              		.loc 1 384 0
 1954 0114 1846     		mov	r0, r3
 1955 0116 07F58367 		add	r7, r7, #1048
 1956 011a BD46     		mov	sp, r7
 1957              		@ sp needed
 1958 011c 80BD     		pop	{r7, pc}
 1959              		.cfi_endproc
 1960              	.LFE119:
 1962 011e 00BF     		.section	.text.modbus_RR,"ax",%progbits
 1963              		.align	2
 1964              		.global	modbus_RR
 1965              		.thumb
 1966              		.thumb_func
 1968              	modbus_RR:
 1969              	.LFB120:
 385:App/STM32F4-Discovery/modbus_mk.c **** 
 386:App/STM32F4-Discovery/modbus_mk.c **** 
 387:App/STM32F4-Discovery/modbus_mk.c **** /* Read the values from the array to the registers of the remote device */
 388:App/STM32F4-Discovery/modbus_mk.c **** uint8_t modbus_RR( int address, int nb, uint16_t *src)
 389:App/STM32F4-Discovery/modbus_mk.c **** {
 1970              		.loc 1 389 0
 1971              		.cfi_startproc
 1972              		@ args = 0, pretend = 0, frame = 1064
 1973              		@ frame_needed = 1, uses_anonymous_args = 0
 1974 0000 80B5     		push	{r7, lr}
 1975              	.LCFI30:
 1976              		.cfi_def_cfa_offset 8
 1977              		.cfi_offset 7, -8
 1978              		.cfi_offset 14, -4
 1979 0002 ADF5856D 		sub	sp, sp, #1064
 1980              	.LCFI31:
 1981              		.cfi_def_cfa_offset 1072
 1982 0006 00AF     		add	r7, sp, #0
 1983              	.LCFI32:
 1984              		.cfi_def_cfa_register 7
 1985 0008 07F10C03 		add	r3, r7, #12
 1986 000c 1860     		str	r0, [r3]
 1987 000e 07F10803 		add	r3, r7, #8
 1988 0012 1960     		str	r1, [r3]
 1989 0014 3B1D     		adds	r3, r7, #4
 1990 0016 1A60     		str	r2, [r3]
 390:App/STM32F4-Discovery/modbus_mk.c ****     	int rc;
 391:App/STM32F4-Discovery/modbus_mk.c ****     	int i;
 392:App/STM32F4-Discovery/modbus_mk.c ****     	int req_length;
 393:App/STM32F4-Discovery/modbus_mk.c **** 	int byte_count;
 394:App/STM32F4-Discovery/modbus_mk.c ****     	uint8_t req[REQ_MAX_LEN];
 395:App/STM32F4-Discovery/modbus_mk.c ****   	uint8_t rsp[REQ_MAX_LEN];
 396:App/STM32F4-Discovery/modbus_mk.c **** 
 397:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 1991              		.loc 1 397 0
 1992 0018 07F50573 		add	r3, r7, #532
 1993 001c 3622     		movs	r2, #54
 1994 001e 1A70     		strb	r2, [r3]
 398:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0x4;
 1995              		.loc 1 398 0
 1996 0020 07F50573 		add	r3, r7, #532
 1997 0024 0422     		movs	r2, #4
 1998 0026 5A70     		strb	r2, [r3, #1]
 399:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 1999              		.loc 1 399 0
 2000 0028 07F10C03 		add	r3, r7, #12
 2001 002c 1B68     		ldr	r3, [r3]
 2002 002e 1B12     		asrs	r3, r3, #8
 2003 0030 DAB2     		uxtb	r2, r3
 2004 0032 07F50573 		add	r3, r7, #532
 2005 0036 9A70     		strb	r2, [r3, #2]
 400:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 2006              		.loc 1 400 0
 2007 0038 07F10C03 		add	r3, r7, #12
 2008 003c 1B68     		ldr	r3, [r3]
 2009 003e DAB2     		uxtb	r2, r3
 2010 0040 07F50573 		add	r3, r7, #532
 2011 0044 DA70     		strb	r2, [r3, #3]
 401:App/STM32F4-Discovery/modbus_mk.c **** 	req[4] = nb >> 8;
 2012              		.loc 1 401 0
 2013 0046 07F10803 		add	r3, r7, #8
 2014 004a 1B68     		ldr	r3, [r3]
 2015 004c 1B12     		asrs	r3, r3, #8
 2016 004e DAB2     		uxtb	r2, r3
 2017 0050 07F50573 		add	r3, r7, #532
 2018 0054 1A71     		strb	r2, [r3, #4]
 402:App/STM32F4-Discovery/modbus_mk.c **** 	req[5] = nb & 0x00ff; 
 2019              		.loc 1 402 0
 2020 0056 07F10803 		add	r3, r7, #8
 2021 005a 1B68     		ldr	r3, [r3]
 2022 005c DAB2     		uxtb	r2, r3
 2023 005e 07F50573 		add	r3, r7, #532
 2024 0062 5A71     		strb	r2, [r3, #5]
 403:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 6; 
 2025              		.loc 1 403 0
 2026 0064 0623     		movs	r3, #6
 2027 0066 C7F82034 		str	r3, [r7, #1056]
 404:App/STM32F4-Discovery/modbus_mk.c ****    	
 405:App/STM32F4-Discovery/modbus_mk.c **** 	byte_count = nb * 2;
 2028              		.loc 1 405 0
 2029 006a 07F10803 		add	r3, r7, #8
 2030 006e 1B68     		ldr	r3, [r3]
 2031 0070 5B00     		lsls	r3, r3, #1
 2032 0072 C7F81C34 		str	r3, [r7, #1052]
 406:App/STM32F4-Discovery/modbus_mk.c ****     	req[req_length++] = byte_count;
 2033              		.loc 1 406 0
 2034 0076 D7F82034 		ldr	r3, [r7, #1056]
 2035 007a 5A1C     		adds	r2, r3, #1
 2036 007c C7F82024 		str	r2, [r7, #1056]
 2037 0080 D7F81C24 		ldr	r2, [r7, #1052]
 2038 0084 D1B2     		uxtb	r1, r2
 2039 0086 07F50572 		add	r2, r7, #532
 2040 008a D154     		strb	r1, [r2, r3]
 407:App/STM32F4-Discovery/modbus_mk.c **** 	
 408:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 2041              		.loc 1 408 0
 2042 008c D7F82034 		ldr	r3, [r7, #1056]
 2043 0090 9BB2     		uxth	r3, r3
 2044 0092 07F50572 		add	r2, r7, #532
 2045 0096 1046     		mov	r0, r2
 2046 0098 1946     		mov	r1, r3
 2047 009a FFF7FEFF 		bl	crc16
 2048 009e 0346     		mov	r3, r0
 2049 00a0 A7F81A34 		strh	r3, [r7, #1050]	@ movhi
 409:App/STM32F4-Discovery/modbus_mk.c **** 
 410:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 2050              		.loc 1 410 0
 2051 00a4 D7F82034 		ldr	r3, [r7, #1056]
 2052 00a8 5A1C     		adds	r2, r3, #1
 2053 00aa C7F82024 		str	r2, [r7, #1056]
 2054 00ae B7F81A24 		ldrh	r2, [r7, #1050]
 2055 00b2 120A     		lsrs	r2, r2, #8
 2056 00b4 92B2     		uxth	r2, r2
 2057 00b6 D1B2     		uxtb	r1, r2
 2058 00b8 07F50572 		add	r2, r7, #532
 2059 00bc D154     		strb	r1, [r2, r3]
 411:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff; 
 2060              		.loc 1 411 0
 2061 00be D7F82034 		ldr	r3, [r7, #1056]
 2062 00c2 5A1C     		adds	r2, r3, #1
 2063 00c4 C7F82024 		str	r2, [r7, #1056]
 2064 00c8 B7F81A24 		ldrh	r2, [r7, #1050]	@ movhi
 2065 00cc D1B2     		uxtb	r1, r2
 2066 00ce 07F50572 		add	r2, r7, #532
 2067 00d2 D154     		strb	r1, [r2, r3]
 412:App/STM32F4-Discovery/modbus_mk.c **** 	
 413:App/STM32F4-Discovery/modbus_mk.c **** 	/* write request  to modbus line */
 414:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req, rsp,  req_length, nb*2 + 5); 
 2068              		.loc 1 414 0
 2069 00d4 07F10803 		add	r3, r7, #8
 2070 00d8 1B68     		ldr	r3, [r3]
 2071 00da 5B00     		lsls	r3, r3, #1
 2072 00dc 0533     		adds	r3, r3, #5
 2073 00de 07F50571 		add	r1, r7, #532
 2074 00e2 07F11402 		add	r2, r7, #20
 2075 00e6 0846     		mov	r0, r1
 2076 00e8 1146     		mov	r1, r2
 2077 00ea D7F82024 		ldr	r2, [r7, #1056]
 2078 00ee FFF7FEFF 		bl	write_read_modbus
 415:App/STM32F4-Discovery/modbus_mk.c **** 	
 416:App/STM32F4-Discovery/modbus_mk.c **** 	int offset = 2;
 2079              		.loc 1 416 0
 2080 00f2 0223     		movs	r3, #2
 2081 00f4 C7F81434 		str	r3, [r7, #1044]
 417:App/STM32F4-Discovery/modbus_mk.c **** 	
 418:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < nb; i++) {
 2082              		.loc 1 418 0
 2083 00f8 0023     		movs	r3, #0
 2084 00fa C7F82434 		str	r3, [r7, #1060]
 2085 00fe 24E0     		b	.L54
 2086              	.L55:
 419:App/STM32F4-Discovery/modbus_mk.c ****             /* shift reg hi_byte to temp OR with lo_byte */
 420:App/STM32F4-Discovery/modbus_mk.c ****             src[i] = (rsp[offset + 1 + (i << 1)] << 8) |
 2087              		.loc 1 420 0 discriminator 2
 2088 0100 D7F82434 		ldr	r3, [r7, #1060]
 2089 0104 5B00     		lsls	r3, r3, #1
 2090 0106 3A1D     		adds	r2, r7, #4
 2091 0108 1268     		ldr	r2, [r2]
 2092 010a 1344     		add	r3, r3, r2
 2093 010c D7F81424 		ldr	r2, [r7, #1044]
 2094 0110 511C     		adds	r1, r2, #1
 2095 0112 D7F82424 		ldr	r2, [r7, #1060]
 2096 0116 5200     		lsls	r2, r2, #1
 2097 0118 0A44     		add	r2, r2, r1
 2098 011a 07F11401 		add	r1, r7, #20
 2099 011e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 2100 0120 1202     		lsls	r2, r2, #8
 2101 0122 91B2     		uxth	r1, r2
 421:App/STM32F4-Discovery/modbus_mk.c ****                 rsp[offset + 2 + (i << 1)];
 2102              		.loc 1 421 0 discriminator 2
 2103 0124 D7F81424 		ldr	r2, [r7, #1044]
 2104 0128 901C     		adds	r0, r2, #2
 2105 012a D7F82424 		ldr	r2, [r7, #1060]
 2106 012e 5200     		lsls	r2, r2, #1
 2107 0130 0244     		add	r2, r2, r0
 2108 0132 07F11400 		add	r0, r7, #20
 2109 0136 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 420:App/STM32F4-Discovery/modbus_mk.c ****             src[i] = (rsp[offset + 1 + (i << 1)] << 8) |
 2110              		.loc 1 420 0 discriminator 2
 2111 0138 0A43     		orrs	r2, r2, r1
 2112 013a 92B2     		uxth	r2, r2
 2113 013c 92B2     		uxth	r2, r2
 2114 013e 1A80     		strh	r2, [r3]	@ movhi
 418:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < nb; i++) {
 2115              		.loc 1 418 0 discriminator 2
 2116 0140 D7F82434 		ldr	r3, [r7, #1060]
 2117 0144 0133     		adds	r3, r3, #1
 2118 0146 C7F82434 		str	r3, [r7, #1060]
 2119              	.L54:
 418:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < nb; i++) {
 2120              		.loc 1 418 0 is_stmt 0 discriminator 1
 2121 014a 07F10803 		add	r3, r7, #8
 2122 014e D7F82424 		ldr	r2, [r7, #1060]
 2123 0152 1B68     		ldr	r3, [r3]
 2124 0154 9A42     		cmp	r2, r3
 2125 0156 D3DB     		blt	.L55
 422:App/STM32F4-Discovery/modbus_mk.c **** 		
 423:App/STM32F4-Discovery/modbus_mk.c ****         }
 424:App/STM32F4-Discovery/modbus_mk.c **** 
 425:App/STM32F4-Discovery/modbus_mk.c **** 	return modbus_confirmation (req, rsp,req_length, nb*2 + 5); 
 2126              		.loc 1 425 0 is_stmt 1
 2127 0158 D7F82034 		ldr	r3, [r7, #1056]
 2128 015c 9AB2     		uxth	r2, r3
 2129 015e 07F10803 		add	r3, r7, #8
 2130 0162 1B68     		ldr	r3, [r3]
 2131 0164 9BB2     		uxth	r3, r3
 2132 0166 5B00     		lsls	r3, r3, #1
 2133 0168 9BB2     		uxth	r3, r3
 2134 016a 0533     		adds	r3, r3, #5
 2135 016c 9BB2     		uxth	r3, r3
 2136 016e 07F50570 		add	r0, r7, #532
 2137 0172 07F11401 		add	r1, r7, #20
 2138 0176 FFF7FEFF 		bl	modbus_confirmation
 2139 017a 0346     		mov	r3, r0
 2140 017c DBB2     		uxtb	r3, r3
 426:App/STM32F4-Discovery/modbus_mk.c **** 
 427:App/STM32F4-Discovery/modbus_mk.c **** 
 428:App/STM32F4-Discovery/modbus_mk.c **** }
 2141              		.loc 1 428 0
 2142 017e 1846     		mov	r0, r3
 2143 0180 07F58567 		add	r7, r7, #1064
 2144 0184 BD46     		mov	sp, r7
 2145              		@ sp needed
 2146 0186 80BD     		pop	{r7, pc}
 2147              		.cfi_endproc
 2148              	.LFE120:
 2150              		.section	.text.motorHeartBeat_task,"ax",%progbits
 2151              		.align	2
 2152              		.global	motorHeartBeat_task
 2153              		.thumb
 2154              		.thumb_func
 2156              	motorHeartBeat_task:
 2157              	.LFB121:
 429:App/STM32F4-Discovery/modbus_mk.c **** 
 430:App/STM32F4-Discovery/modbus_mk.c **** 
 431:App/STM32F4-Discovery/modbus_mk.c **** 
 432:App/STM32F4-Discovery/modbus_mk.c **** /*===================================================================================
 433:App/STM32F4-Discovery/modbus_mk.c **** =====================================================================================
 434:App/STM32F4-Discovery/modbus_mk.c **** ============    		TASKS SECTION			===================== 
 435:App/STM32F4-Discovery/modbus_mk.c **** =====================================================================================
 436:App/STM32F4-Discovery/modbus_mk.c **** ====================================================================================*/
 437:App/STM32F4-Discovery/modbus_mk.c **** void motorHeartBeat_task(void * pvParameters)
 438:App/STM32F4-Discovery/modbus_mk.c **** {
 2158              		.loc 1 438 0
 2159              		.cfi_startproc
 2160              		@ args = 0, pretend = 0, frame = 32
 2161              		@ frame_needed = 1, uses_anonymous_args = 0
 2162 0000 80B5     		push	{r7, lr}
 2163              	.LCFI33:
 2164              		.cfi_def_cfa_offset 8
 2165              		.cfi_offset 7, -8
 2166              		.cfi_offset 14, -4
 2167 0002 88B0     		sub	sp, sp, #32
 2168              	.LCFI34:
 2169              		.cfi_def_cfa_offset 40
 2170 0004 00AF     		add	r7, sp, #0
 2171              	.LCFI35:
 2172              		.cfi_def_cfa_register 7
 2173 0006 7860     		str	r0, [r7, #4]
 2174              	.L58:
 439:App/STM32F4-Discovery/modbus_mk.c **** 	/*! sets speed of motor */
 440:App/STM32F4-Discovery/modbus_mk.c **** 
 441:App/STM32F4-Discovery/modbus_mk.c **** 	
 442:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t tab_reg[10];
 443:App/STM32F4-Discovery/modbus_mk.c **** 	//vTaskDelay(portMAX_DELAY);	
 444:App/STM32F4-Discovery/modbus_mk.c **** 	//vTaskSuspend(NULL); 
 445:App/STM32F4-Discovery/modbus_mk.c **** 	
 446:App/STM32F4-Discovery/modbus_mk.c **** 	for(;;)
 447:App/STM32F4-Discovery/modbus_mk.c **** 	{
 448:App/STM32F4-Discovery/modbus_mk.c **** 
 449:App/STM32F4-Discovery/modbus_mk.c **** 		
 450:App/STM32F4-Discovery/modbus_mk.c **** 		modbus_RR(0,10,tab_reg);
 2175              		.loc 1 450 0 discriminator 1
 2176 0008 07F10C03 		add	r3, r7, #12
 2177 000c 0020     		movs	r0, #0
 2178 000e 0A21     		movs	r1, #10
 2179 0010 1A46     		mov	r2, r3
 2180 0012 FFF7FEFF 		bl	modbus_RR
 451:App/STM32F4-Discovery/modbus_mk.c **** 
 452:App/STM32F4-Discovery/modbus_mk.c **** 		vTaskDelay(500/portTICK_RATE_MS);
 2181              		.loc 1 452 0 discriminator 1
 2182 0016 4FF4FA70 		mov	r0, #500
 2183 001a FFF7FEFF 		bl	vTaskDelay
 453:App/STM32F4-Discovery/modbus_mk.c **** 
 454:App/STM32F4-Discovery/modbus_mk.c **** 	}
 2184              		.loc 1 454 0 discriminator 1
 2185 001e F3E7     		b	.L58
 2186              		.cfi_endproc
 2187              	.LFE121:
 2189              		.section	.text.motorControl_task,"ax",%progbits
 2190              		.align	2
 2191              		.global	motorControl_task
 2192              		.thumb
 2193              		.thumb_func
 2195              	motorControl_task:
 2196              	.LFB122:
 455:App/STM32F4-Discovery/modbus_mk.c **** 	/* Tasks must not attempt to return from their implementing
 456:App/STM32F4-Discovery/modbus_mk.c ****         function or otherwise exit.  In newer FreeRTOS port
 457:App/STM32F4-Discovery/modbus_mk.c ****         attempting to do so will result in an configASSERT() being
 458:App/STM32F4-Discovery/modbus_mk.c ****         called if it is defined.  If it is necessary for a task to
 459:App/STM32F4-Discovery/modbus_mk.c ****         exit then have the task call vTaskDelete( NULL ) to ensure
 460:App/STM32F4-Discovery/modbus_mk.c ****         its exit is clean. */
 461:App/STM32F4-Discovery/modbus_mk.c **** 	closesocket(socket_0);		
 462:App/STM32F4-Discovery/modbus_mk.c ****         vTaskDelete( NULL );
 463:App/STM32F4-Discovery/modbus_mk.c **** 
 464:App/STM32F4-Discovery/modbus_mk.c **** 
 465:App/STM32F4-Discovery/modbus_mk.c **** 
 466:App/STM32F4-Discovery/modbus_mk.c **** 
 467:App/STM32F4-Discovery/modbus_mk.c **** }
 468:App/STM32F4-Discovery/modbus_mk.c **** 
 469:App/STM32F4-Discovery/modbus_mk.c **** void motorControl_task(void * pvParameters)
 470:App/STM32F4-Discovery/modbus_mk.c **** {
 2197              		.loc 1 470 0
 2198              		.cfi_startproc
 2199              		@ args = 0, pretend = 0, frame = 88
 2200              		@ frame_needed = 1, uses_anonymous_args = 0
 2201 0000 80B5     		push	{r7, lr}
 2202              	.LCFI36:
 2203              		.cfi_def_cfa_offset 8
 2204              		.cfi_offset 7, -8
 2205              		.cfi_offset 14, -4
 2206 0002 96B0     		sub	sp, sp, #88
 2207              	.LCFI37:
 2208              		.cfi_def_cfa_offset 96
 2209 0004 00AF     		add	r7, sp, #0
 2210              	.LCFI38:
 2211              		.cfi_def_cfa_register 7
 2212 0006 7860     		str	r0, [r7, #4]
 471:App/STM32F4-Discovery/modbus_mk.c **** 	
 472:App/STM32F4-Discovery/modbus_mk.c **** 
 473:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t src[4];
 474:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t spd[5]; 
 475:App/STM32F4-Discovery/modbus_mk.c **** 	
 476:App/STM32F4-Discovery/modbus_mk.c **** 
 477:App/STM32F4-Discovery/modbus_mk.c **** 	
 478:App/STM32F4-Discovery/modbus_mk.c **** 
 479:App/STM32F4-Discovery/modbus_mk.c **** 	src[0]=1; src[1]=1; src[2]=1; src[3]=1;
 2213              		.loc 1 479 0
 2214 0008 0123     		movs	r3, #1
 2215 000a 87F84C30 		strb	r3, [r7, #76]
 2216 000e 0123     		movs	r3, #1
 2217 0010 87F84D30 		strb	r3, [r7, #77]
 2218 0014 0123     		movs	r3, #1
 2219 0016 87F84E30 		strb	r3, [r7, #78]
 2220 001a 0123     		movs	r3, #1
 2221 001c 87F84F30 		strb	r3, [r7, #79]
 480:App/STM32F4-Discovery/modbus_mk.c **** 	
 481:App/STM32F4-Discovery/modbus_mk.c **** //	spd[0]=1500;spd[1]=0;spd[2]=2250;spd[3]=10;spd[4]=10;
 482:App/STM32F4-Discovery/modbus_mk.c **** 	
 483:App/STM32F4-Discovery/modbus_mk.c **** 	// create usart semaphore 
 484:App/STM32F4-Discovery/modbus_mk.c **** 	xSmphrUSART = xSemaphoreCreateBinary();	
 2222              		.loc 1 484 0
 2223 0020 0120     		movs	r0, #1
 2224 0022 0021     		movs	r1, #0
 2225 0024 0322     		movs	r2, #3
 2226 0026 FFF7FEFF 		bl	xQueueGenericCreate
 2227 002a 0246     		mov	r2, r0
 2228 002c 824B     		ldr	r3, .L74
 2229 002e 1A60     		str	r2, [r3]
 485:App/STM32F4-Discovery/modbus_mk.c **** 	
 486:App/STM32F4-Discovery/modbus_mk.c **** 	portTickType xDelay = portMAX_DELAY;//3000 / portTICK_RATE_MS;	
 2230              		.loc 1 486 0
 2231 0030 4FF0FF33 		mov	r3, #-1
 2232 0034 7B65     		str	r3, [r7, #84]
 487:App/STM32F4-Discovery/modbus_mk.c **** 	
 488:App/STM32F4-Discovery/modbus_mk.c **** 
 489:App/STM32F4-Discovery/modbus_mk.c **** 	QueueTelegram telegramR, telegramS; 
 490:App/STM32F4-Discovery/modbus_mk.c **** 
 491:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.data[0] = 1000;
 2233              		.loc 1 491 0
 2234 0036 4FF47A73 		mov	r3, #1000
 2235 003a BB85     		strh	r3, [r7, #44]	@ movhi
 492:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.data[1] = 0;	
 2236              		.loc 1 492 0
 2237 003c 0023     		movs	r3, #0
 2238 003e FB85     		strh	r3, [r7, #46]	@ movhi
 493:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.data[2] = 2250;
 2239              		.loc 1 493 0
 2240 0040 40F6CA03 		movw	r3, #2250
 2241 0044 3B86     		strh	r3, [r7, #48]	@ movhi
 494:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.data[3] = 10;	
 2242              		.loc 1 494 0
 2243 0046 0A23     		movs	r3, #10
 2244 0048 7B86     		strh	r3, [r7, #50]	@ movhi
 495:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.data[4] = 10;	
 2245              		.loc 1 495 0
 2246 004a 0A23     		movs	r3, #10
 2247 004c BB86     		strh	r3, [r7, #52]	@ movhi
 496:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.size = 5;
 2248              		.loc 1 496 0
 2249 004e 0523     		movs	r3, #5
 2250 0050 BB62     		str	r3, [r7, #40]
 497:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.Qcmd = SETDATA;	
 2251              		.loc 1 497 0
 2252 0052 0023     		movs	r3, #0
 2253 0054 87F82430 		strb	r3, [r7, #36]
 498:App/STM32F4-Discovery/modbus_mk.c **** 
 499:App/STM32F4-Discovery/modbus_mk.c **** 	
 500:App/STM32F4-Discovery/modbus_mk.c **** 
 501:App/STM32F4-Discovery/modbus_mk.c **** 	int HB_flag = 0;
 2254              		.loc 1 501 0
 2255 0058 0023     		movs	r3, #0
 2256 005a 3B65     		str	r3, [r7, #80]
 2257              	.L73:
 502:App/STM32F4-Discovery/modbus_mk.c **** 	
 503:App/STM32F4-Discovery/modbus_mk.c **** 	while (1)
 504:App/STM32F4-Discovery/modbus_mk.c **** 	{
 505:App/STM32F4-Discovery/modbus_mk.c **** 
 506:App/STM32F4-Discovery/modbus_mk.c **** 		
 507:App/STM32F4-Discovery/modbus_mk.c **** 	
 508:App/STM32F4-Discovery/modbus_mk.c **** 		if (xQueueReceive(QSpd_handle, (void *)&telegramR, xDelay  ) == pdPASS)
 2258              		.loc 1 508 0
 2259 005c 774B     		ldr	r3, .L74+4
 2260 005e 1A68     		ldr	r2, [r3]
 2261 0060 07F12403 		add	r3, r7, #36
 2262 0064 1046     		mov	r0, r2
 2263 0066 1946     		mov	r1, r3
 2264 0068 7A6D     		ldr	r2, [r7, #84]
 2265 006a 0023     		movs	r3, #0
 2266 006c FFF7FEFF 		bl	xQueueGenericReceive
 2267 0070 0346     		mov	r3, r0
 2268 0072 012B     		cmp	r3, #1
 2269 0074 40F0DE80 		bne	.L60
 509:App/STM32F4-Discovery/modbus_mk.c **** 		{
 510:App/STM32F4-Discovery/modbus_mk.c **** 			switch ( telegramR.Qcmd )
 2270              		.loc 1 510 0
 2271 0078 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 2272 007c 052B     		cmp	r3, #5
 2273 007e 00F2CC80 		bhi	.L61
 2274 0082 01A2     		adr	r2, .L63
 2275 0084 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2276              		.p2align 2
 2277              	.L63:
 2278 0088 A1000000 		.word	.L62+1
 2279 008c 15010000 		.word	.L64+1
 2280 0090 1B020000 		.word	.L61+1
 2281 0094 1B020000 		.word	.L61+1
 2282 0098 51010000 		.word	.L65+1
 2283 009c C9010000 		.word	.L66+1
 2284              		.p2align 1
 2285              	.L62:
 511:App/STM32F4-Discovery/modbus_mk.c **** 			{
 512:App/STM32F4-Discovery/modbus_mk.c **** 				case SETDATA:
 513:App/STM32F4-Discovery/modbus_mk.c **** 
 514:App/STM32F4-Discovery/modbus_mk.c **** 					src[0]=1; src[1]=1; src[2]=1; src[3]=1;
 2286              		.loc 1 514 0
 2287 00a0 0123     		movs	r3, #1
 2288 00a2 87F84C30 		strb	r3, [r7, #76]
 2289 00a6 0123     		movs	r3, #1
 2290 00a8 87F84D30 		strb	r3, [r7, #77]
 2291 00ac 0123     		movs	r3, #1
 2292 00ae 87F84E30 		strb	r3, [r7, #78]
 2293 00b2 0123     		movs	r3, #1
 2294 00b4 87F84F30 		strb	r3, [r7, #79]
 515:App/STM32F4-Discovery/modbus_mk.c **** 
 516:App/STM32F4-Discovery/modbus_mk.c **** 					if ( !modbus_WIB( 0 , 3, src))
 2295              		.loc 1 516 0
 2296 00b8 07F14C03 		add	r3, r7, #76
 2297 00bc 0020     		movs	r0, #0
 2298 00be 0321     		movs	r1, #3
 2299 00c0 1A46     		mov	r2, r3
 2300 00c2 FFF7FEFF 		bl	modbus_WIB
 2301 00c6 0346     		mov	r3, r0
 2302 00c8 002B     		cmp	r3, #0
 2303 00ca 01D1     		bne	.L67
 517:App/STM32F4-Discovery/modbus_mk.c **** 					{
 518:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 519:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2304              		.loc 1 519 0
 2305 00cc 0723     		movs	r3, #7
 2306 00ce 3B72     		strb	r3, [r7, #8]
 2307              	.L67:
 520:App/STM32F4-Discovery/modbus_mk.c **** 					//	xQueueSend(QSpd_handle, &telegramS, xDelay);
 521:App/STM32F4-Discovery/modbus_mk.c **** 					//	break;
 522:App/STM32F4-Discovery/modbus_mk.c **** 					}
 523:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2308              		.loc 1 523 0
 2309 00d0 4FF47A70 		mov	r0, #1000
 2310 00d4 FFF7FEFF 		bl	vTaskDelay
 524:App/STM32F4-Discovery/modbus_mk.c **** 					
 525:App/STM32F4-Discovery/modbus_mk.c **** 					if (!modbus_WR(0, 5, telegramR.data))
 2311              		.loc 1 525 0
 2312 00d8 07F12403 		add	r3, r7, #36
 2313 00dc 0833     		adds	r3, r3, #8
 2314 00de 0020     		movs	r0, #0
 2315 00e0 0521     		movs	r1, #5
 2316 00e2 1A46     		mov	r2, r3
 2317 00e4 FFF7FEFF 		bl	modbus_WR
 2318 00e8 0346     		mov	r3, r0
 2319 00ea 002B     		cmp	r3, #0
 2320 00ec 01D1     		bne	.L68
 526:App/STM32F4-Discovery/modbus_mk.c **** 					{
 527:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 528:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2321              		.loc 1 528 0
 2322 00ee 0723     		movs	r3, #7
 2323 00f0 3B72     		strb	r3, [r7, #8]
 2324              	.L68:
 529:App/STM32F4-Discovery/modbus_mk.c **** 					//	xQueueSend(QSpd_handle, &telegramS, xDelay);
 530:App/STM32F4-Discovery/modbus_mk.c **** 					//	break;
 531:App/STM32F4-Discovery/modbus_mk.c **** 					}
 532:App/STM32F4-Discovery/modbus_mk.c **** 
 533:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2325              		.loc 1 533 0
 2326 00f2 4FF47A70 		mov	r0, #1000
 2327 00f6 FFF7FEFF 		bl	vTaskDelay
 534:App/STM32F4-Discovery/modbus_mk.c **** 
 535:App/STM32F4-Discovery/modbus_mk.c **** 				// send response to CLI 
 536:App/STM32F4-Discovery/modbus_mk.c **** 					telegramS.Qcmd = SUCCSESS;
 2328              		.loc 1 536 0
 2329 00fa 0623     		movs	r3, #6
 2330 00fc 3B72     		strb	r3, [r7, #8]
 537:App/STM32F4-Discovery/modbus_mk.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2331              		.loc 1 537 0
 2332 00fe 4F4B     		ldr	r3, .L74+4
 2333 0100 1A68     		ldr	r2, [r3]
 2334 0102 07F10803 		add	r3, r7, #8
 2335 0106 1046     		mov	r0, r2
 2336 0108 1946     		mov	r1, r3
 2337 010a 7A6D     		ldr	r2, [r7, #84]
 2338 010c 0023     		movs	r3, #0
 2339 010e FFF7FEFF 		bl	xQueueGenericSend
 538:App/STM32F4-Discovery/modbus_mk.c **** 
 539:App/STM32F4-Discovery/modbus_mk.c **** 					break;
 2340              		.loc 1 539 0
 2341 0112 8FE0     		b	.L60
 2342              	.L64:
 540:App/STM32F4-Discovery/modbus_mk.c **** 				       	
 541:App/STM32F4-Discovery/modbus_mk.c **** 				
 542:App/STM32F4-Discovery/modbus_mk.c **** 				case GETDATA:
 543:App/STM32F4-Discovery/modbus_mk.c **** 				
 544:App/STM32F4-Discovery/modbus_mk.c **** 					if ( !modbus_RR(0, 10, telegramS.data))
 2343              		.loc 1 544 0
 2344 0114 07F10803 		add	r3, r7, #8
 2345 0118 0833     		adds	r3, r3, #8
 2346 011a 0020     		movs	r0, #0
 2347 011c 0A21     		movs	r1, #10
 2348 011e 1A46     		mov	r2, r3
 2349 0120 FFF7FEFF 		bl	modbus_RR
 2350 0124 0346     		mov	r3, r0
 2351 0126 002B     		cmp	r3, #0
 2352 0128 01D1     		bne	.L69
 545:App/STM32F4-Discovery/modbus_mk.c **** 					{
 546:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 547:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2353              		.loc 1 547 0
 2354 012a 0723     		movs	r3, #7
 2355 012c 3B72     		strb	r3, [r7, #8]
 2356              	.L69:
 548:App/STM32F4-Discovery/modbus_mk.c **** 					//	xQueueSend(QSpd_handle, &telegramS, xDelay);
 549:App/STM32F4-Discovery/modbus_mk.c **** 					//	break;
 550:App/STM32F4-Discovery/modbus_mk.c **** 					}
 551:App/STM32F4-Discovery/modbus_mk.c **** 
 552:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2357              		.loc 1 552 0
 2358 012e 4FF47A70 		mov	r0, #1000
 2359 0132 FFF7FEFF 		bl	vTaskDelay
 553:App/STM32F4-Discovery/modbus_mk.c **** 
 554:App/STM32F4-Discovery/modbus_mk.c **** 					// send response to CLI 
 555:App/STM32F4-Discovery/modbus_mk.c **** 					telegramS.Qcmd = SUCCSESS;
 2360              		.loc 1 555 0
 2361 0136 0623     		movs	r3, #6
 2362 0138 3B72     		strb	r3, [r7, #8]
 556:App/STM32F4-Discovery/modbus_mk.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2363              		.loc 1 556 0
 2364 013a 404B     		ldr	r3, .L74+4
 2365 013c 1A68     		ldr	r2, [r3]
 2366 013e 07F10803 		add	r3, r7, #8
 2367 0142 1046     		mov	r0, r2
 2368 0144 1946     		mov	r1, r3
 2369 0146 7A6D     		ldr	r2, [r7, #84]
 2370 0148 0023     		movs	r3, #0
 2371 014a FFF7FEFF 		bl	xQueueGenericSend
 557:App/STM32F4-Discovery/modbus_mk.c **** 
 558:App/STM32F4-Discovery/modbus_mk.c **** 					break;
 2372              		.loc 1 558 0
 2373 014e 71E0     		b	.L60
 2374              	.L65:
 559:App/STM32F4-Discovery/modbus_mk.c **** 
 560:App/STM32F4-Discovery/modbus_mk.c **** 				
 561:App/STM32F4-Discovery/modbus_mk.c **** 				case START: 
 562:App/STM32F4-Discovery/modbus_mk.c **** 					HB_flag = 1; 
 2375              		.loc 1 562 0
 2376 0150 0123     		movs	r3, #1
 2377 0152 3B65     		str	r3, [r7, #80]
 563:App/STM32F4-Discovery/modbus_mk.c **** 				//	vTaskResume(motorHeartBeatHandle);
 564:App/STM32F4-Discovery/modbus_mk.c **** 
 565:App/STM32F4-Discovery/modbus_mk.c **** 					// set motor speed to 10% 
 566:App/STM32F4-Discovery/modbus_mk.c **** 				         src[0]=1; src[1]=1; src[2]=1; src[3]=1;
 2378              		.loc 1 566 0
 2379 0154 0123     		movs	r3, #1
 2380 0156 87F84C30 		strb	r3, [r7, #76]
 2381 015a 0123     		movs	r3, #1
 2382 015c 87F84D30 		strb	r3, [r7, #77]
 2383 0160 0123     		movs	r3, #1
 2384 0162 87F84E30 		strb	r3, [r7, #78]
 2385 0166 0123     		movs	r3, #1
 2386 0168 87F84F30 		strb	r3, [r7, #79]
 567:App/STM32F4-Discovery/modbus_mk.c **** 
 568:App/STM32F4-Discovery/modbus_mk.c **** 					if( !modbus_WIB( 0 , 3, src) )
 2387              		.loc 1 568 0
 2388 016c 07F14C03 		add	r3, r7, #76
 2389 0170 0020     		movs	r0, #0
 2390 0172 0321     		movs	r1, #3
 2391 0174 1A46     		mov	r2, r3
 2392 0176 FFF7FEFF 		bl	modbus_WIB
 2393 017a 0346     		mov	r3, r0
 2394 017c 002B     		cmp	r3, #0
 2395 017e 01D1     		bne	.L70
 569:App/STM32F4-Discovery/modbus_mk.c **** 					{
 570:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 571:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2396              		.loc 1 571 0
 2397 0180 0723     		movs	r3, #7
 2398 0182 3B72     		strb	r3, [r7, #8]
 2399              	.L70:
 572:App/STM32F4-Discovery/modbus_mk.c **** 					//	xQueueSend(QSpd_handle, &telegramS, xDelay);
 573:App/STM32F4-Discovery/modbus_mk.c **** 					//	break;
 574:App/STM32F4-Discovery/modbus_mk.c **** 					}
 575:App/STM32F4-Discovery/modbus_mk.c **** 
 576:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2400              		.loc 1 576 0
 2401 0184 4FF47A70 		mov	r0, #1000
 2402 0188 FFF7FEFF 		bl	vTaskDelay
 577:App/STM32F4-Discovery/modbus_mk.c **** 					if (!modbus_WR( 0, 5, telegramR.data))
 2403              		.loc 1 577 0
 2404 018c 07F12403 		add	r3, r7, #36
 2405 0190 0833     		adds	r3, r3, #8
 2406 0192 0020     		movs	r0, #0
 2407 0194 0521     		movs	r1, #5
 2408 0196 1A46     		mov	r2, r3
 2409 0198 FFF7FEFF 		bl	modbus_WR
 2410 019c 0346     		mov	r3, r0
 2411 019e 002B     		cmp	r3, #0
 2412 01a0 01D1     		bne	.L71
 578:App/STM32F4-Discovery/modbus_mk.c **** 					{
 579:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 580:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2413              		.loc 1 580 0
 2414 01a2 0723     		movs	r3, #7
 2415 01a4 3B72     		strb	r3, [r7, #8]
 2416              	.L71:
 581:App/STM32F4-Discovery/modbus_mk.c **** 					//	xQueueSend(QSpd_handle, &telegramS, xDelay);
 582:App/STM32F4-Discovery/modbus_mk.c **** 					//	break;
 583:App/STM32F4-Discovery/modbus_mk.c **** 					}
 584:App/STM32F4-Discovery/modbus_mk.c **** 
 585:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2417              		.loc 1 585 0
 2418 01a6 4FF47A70 		mov	r0, #1000
 2419 01aa FFF7FEFF 		bl	vTaskDelay
 586:App/STM32F4-Discovery/modbus_mk.c **** 			
 587:App/STM32F4-Discovery/modbus_mk.c **** 					// send response to CLI 
 588:App/STM32F4-Discovery/modbus_mk.c **** 					telegramS.Qcmd = SUCCSESS;
 2420              		.loc 1 588 0
 2421 01ae 0623     		movs	r3, #6
 2422 01b0 3B72     		strb	r3, [r7, #8]
 589:App/STM32F4-Discovery/modbus_mk.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2423              		.loc 1 589 0
 2424 01b2 224B     		ldr	r3, .L74+4
 2425 01b4 1A68     		ldr	r2, [r3]
 2426 01b6 07F10803 		add	r3, r7, #8
 2427 01ba 1046     		mov	r0, r2
 2428 01bc 1946     		mov	r1, r3
 2429 01be 7A6D     		ldr	r2, [r7, #84]
 2430 01c0 0023     		movs	r3, #0
 2431 01c2 FFF7FEFF 		bl	xQueueGenericSend
 590:App/STM32F4-Discovery/modbus_mk.c **** 
 591:App/STM32F4-Discovery/modbus_mk.c **** 					break;
 2432              		.loc 1 591 0
 2433 01c6 35E0     		b	.L60
 2434              	.L66:
 592:App/STM32F4-Discovery/modbus_mk.c **** 				
 593:App/STM32F4-Discovery/modbus_mk.c **** 				case STOP:
 594:App/STM32F4-Discovery/modbus_mk.c **** 					
 595:App/STM32F4-Discovery/modbus_mk.c **** 				//	vTaskSuspend (motorHeartBeatHandle);	
 596:App/STM32F4-Discovery/modbus_mk.c **** 					// send stop bits to motor 
 597:App/STM32F4-Discovery/modbus_mk.c **** 					src[0]=0; src[1]=1; src[2]=1; src[3]=1;
 2435              		.loc 1 597 0
 2436 01c8 0023     		movs	r3, #0
 2437 01ca 87F84C30 		strb	r3, [r7, #76]
 2438 01ce 0123     		movs	r3, #1
 2439 01d0 87F84D30 		strb	r3, [r7, #77]
 2440 01d4 0123     		movs	r3, #1
 2441 01d6 87F84E30 		strb	r3, [r7, #78]
 2442 01da 0123     		movs	r3, #1
 2443 01dc 87F84F30 		strb	r3, [r7, #79]
 598:App/STM32F4-Discovery/modbus_mk.c **** 
 599:App/STM32F4-Discovery/modbus_mk.c **** 					if (!modbus_WIB( 0 , 3, src)) 
 2444              		.loc 1 599 0
 2445 01e0 07F14C03 		add	r3, r7, #76
 2446 01e4 0020     		movs	r0, #0
 2447 01e6 0321     		movs	r1, #3
 2448 01e8 1A46     		mov	r2, r3
 2449 01ea FFF7FEFF 		bl	modbus_WIB
 2450 01ee 0346     		mov	r3, r0
 2451 01f0 002B     		cmp	r3, #0
 2452 01f2 01D1     		bne	.L72
 600:App/STM32F4-Discovery/modbus_mk.c **** 					{
 601:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 602:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2453              		.loc 1 602 0
 2454 01f4 0723     		movs	r3, #7
 2455 01f6 3B72     		strb	r3, [r7, #8]
 2456              	.L72:
 603:App/STM32F4-Discovery/modbus_mk.c **** 				//		xQueueSend(QSpd_handle, &telegramS, xDelay);
 604:App/STM32F4-Discovery/modbus_mk.c **** 					//	break;
 605:App/STM32F4-Discovery/modbus_mk.c **** 					}
 606:App/STM32F4-Discovery/modbus_mk.c **** 
 607:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2457              		.loc 1 607 0
 2458 01f8 4FF47A70 		mov	r0, #1000
 2459 01fc FFF7FEFF 		bl	vTaskDelay
 608:App/STM32F4-Discovery/modbus_mk.c **** 
 609:App/STM32F4-Discovery/modbus_mk.c **** 
 610:App/STM32F4-Discovery/modbus_mk.c **** 								// send response to CLI 
 611:App/STM32F4-Discovery/modbus_mk.c **** 					telegramS.Qcmd = SUCCSESS;
 2460              		.loc 1 611 0
 2461 0200 0623     		movs	r3, #6
 2462 0202 3B72     		strb	r3, [r7, #8]
 612:App/STM32F4-Discovery/modbus_mk.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2463              		.loc 1 612 0
 2464 0204 0D4B     		ldr	r3, .L74+4
 2465 0206 1A68     		ldr	r2, [r3]
 2466 0208 07F10803 		add	r3, r7, #8
 2467 020c 1046     		mov	r0, r2
 2468 020e 1946     		mov	r1, r3
 2469 0210 7A6D     		ldr	r2, [r7, #84]
 2470 0212 0023     		movs	r3, #0
 2471 0214 FFF7FEFF 		bl	xQueueGenericSend
 613:App/STM32F4-Discovery/modbus_mk.c **** 
 614:App/STM32F4-Discovery/modbus_mk.c **** 					break; 
 2472              		.loc 1 614 0
 2473 0218 0CE0     		b	.L60
 2474              	.L61:
 615:App/STM32F4-Discovery/modbus_mk.c **** 
 616:App/STM32F4-Discovery/modbus_mk.c **** 				default:
 617:App/STM32F4-Discovery/modbus_mk.c **** 
 618:App/STM32F4-Discovery/modbus_mk.c **** 					telegramS.Qcmd = ERROR_MODBUS;
 2475              		.loc 1 618 0
 2476 021a 0723     		movs	r3, #7
 2477 021c 3B72     		strb	r3, [r7, #8]
 619:App/STM32F4-Discovery/modbus_mk.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2478              		.loc 1 619 0
 2479 021e 074B     		ldr	r3, .L74+4
 2480 0220 1A68     		ldr	r2, [r3]
 2481 0222 07F10803 		add	r3, r7, #8
 2482 0226 1046     		mov	r0, r2
 2483 0228 1946     		mov	r1, r3
 2484 022a 7A6D     		ldr	r2, [r7, #84]
 2485 022c 0023     		movs	r3, #0
 2486 022e FFF7FEFF 		bl	xQueueGenericSend
 620:App/STM32F4-Discovery/modbus_mk.c **** 					break;
 2487              		.loc 1 620 0
 2488 0232 00BF     		nop
 2489              	.L60:
 621:App/STM32F4-Discovery/modbus_mk.c **** 
 622:App/STM32F4-Discovery/modbus_mk.c **** 					
 623:App/STM32F4-Discovery/modbus_mk.c **** 
 624:App/STM32F4-Discovery/modbus_mk.c **** 
 625:App/STM32F4-Discovery/modbus_mk.c **** 					
 626:App/STM32F4-Discovery/modbus_mk.c **** 			}
 627:App/STM32F4-Discovery/modbus_mk.c **** 		}
 628:App/STM32F4-Discovery/modbus_mk.c **** 	
 629:App/STM32F4-Discovery/modbus_mk.c **** 		
 630:App/STM32F4-Discovery/modbus_mk.c **** 	
 631:App/STM32F4-Discovery/modbus_mk.c **** 	}
 2490              		.loc 1 631 0
 2491 0234 12E7     		b	.L73
 2492              	.L75:
 2493 0236 00BF     		.align	2
 2494              	.L74:
 2495 0238 00000000 		.word	xSmphrUSART
 2496 023c 00000000 		.word	QSpd_handle
 2497              		.cfi_endproc
 2498              	.LFE122:
 2500              		.section	.bss.cnt.9315,"aw",%nobits
 2503              	cnt.9315:
 2504 0000 00       		.space	1
 2505              		.text
 2506              	.Letext0:
 2507              		.file 2 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/lib/gcc/arm-none-eabi/4.8.4/include/std
 2508              		.file 3 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/machine/_default_
 2509              		.file 4 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/stdint.h"
 2510              		.file 5 "App/STM32F4-Discovery/Libraries/CMSIS/ST/STM32F4xx/Include/stm32f4xx.h"
 2511              		.file 6 "App/STM32F4-Discovery/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_gpio.h"
 2512              		.file 7 "App/STM32F4-Discovery/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
 2513              		.file 8 "App/STM32F4-Discovery/Libraries/STM32F4xx_StdPeriph_Driver/inc/misc.h"
 2514              		.file 9 "Source/portable/GCC/ARM_CM4F/portmacro.h"
 2515              		.file 10 "Source/include/task.h"
 2516              		.file 11 "Source/include/queue.h"
 2517              		.file 12 "Source/include/semphr.h"
 2518              		.file 13 "Source/FreeRTOS-Plus-CLI/FreeRTOS_CLI.h"
 2519              		.file 14 "App/STM32F4-Discovery/tcpCLI.h"
 2520              		.file 15 "App/STM32F4-Discovery/main.h"
 2521              		.file 16 "App/STM32F4-Discovery/modbus_mk.h"
 2522              		.file 17 "App/STM32F4-Discovery/Libraries/CMSIS/Include/core_cm4.h"
 2523              		.file 18 "App/STM32F4-Discovery/spi.h"
 2524              		.file 19 "App/STM32F4-Discovery/W5200.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 modbus_mk.c
                            *COM*:0000000000000004 xSemaphoreDMASPI
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:21     .bss.xHigherPriorityTaskWoken:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:24     .bss.xHigherPriorityTaskWoken:0000000000000000 xHigherPriorityTaskWoken
                            *COM*:0000000000000004 xSmphrUSART
                            *COM*:0000000000000004 motorHeartBeatHandle
                            *COM*:0000000000000004 motorHBHandle
                            *COM*:0000000000000004 QSpd_handle
                            *COM*:0000000000000004 QStatus_handle
                            *COM*:0000000000000004 socket_0
                            *COM*:00000000000007d0 bufferTX
                            *COM*:00000000000007d0 bufferRX
                            *COM*:0000000000000004 bufferRXidx
                            *COM*:0000000000000004 bufferTXidx
                            *COM*:0000000000000004 dat_lengthRX
                            *COM*:0000000000000004 dat_lengthTX
                            *COM*:0000000000000004 set_macTaskHandle
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:40     .rodata:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:48     .rodata.xMotorCommand:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:51     .rodata.xMotorCommand:0000000000000000 xMotorCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:65     .rodata.xTaskStatsCommand:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:68     .rodata.xTaskStatsCommand:0000000000000000 xTaskStatsCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:75     .rodata.table_crc_hi:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:78     .rodata.table_crc_hi:0000000000000000 table_crc_hi
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:336    .rodata.table_crc_lo:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:339    .rodata.table_crc_lo:0000000000000000 table_crc_lo
                            *COM*:0000000000000004 fd
                            *COM*:0000000000000201 received_string
                            *COM*:0000000000000004 rx_length
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:600    .bss.xHigherPriorityTaskWoken_usart:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:603    .bss.xHigherPriorityTaskWoken_usart:0000000000000000 xHigherPriorityTaskWoken_usart
                            *COM*:0000000000000014 input_Register
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:607    .text.init_USARTx:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:612    .text.init_USARTx:0000000000000000 init_USARTx
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:760    .text.init_USARTx:00000000000000e4 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:767    .text.USART_puts:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:772    .text.USART_puts:0000000000000000 USART_puts
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:839    .text.USART_puts:000000000000004c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:844    .text.USART6_IRQHandler:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:849    .text.USART6_IRQHandler:0000000000000000 USART6_IRQHandler
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:955    .text.USART6_IRQHandler:0000000000000098 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:2503   .bss.cnt.9315:0000000000000000 cnt.9315
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:966    .text.crc16:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:971    .text.crc16:0000000000000000 crc16
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:1049   .text.crc16:0000000000000064 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:1055   .text.modbus_confirmation:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:1060   .text.modbus_confirmation:0000000000000000 modbus_confirmation
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:1131   .text.write_read_modbus:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:1136   .text.write_read_modbus:0000000000000000 write_read_modbus
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:1255   .text.write_read_modbus:00000000000000ac $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:1263   .text.modbus_RIB:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:1268   .text.modbus_RIB:0000000000000000 modbus_RIB
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:1387   .text.modbus_WIB:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:1392   .text.modbus_WIB:0000000000000000 modbus_WIB
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:1641   .text.modbus_WR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:1646   .text.modbus_WR:0000000000000000 modbus_WR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:1820   .text.modbus_WSR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:1825   .text.modbus_WSR:0000000000000000 modbus_WSR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:1963   .text.modbus_RR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:1968   .text.modbus_RR:0000000000000000 modbus_RR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:2151   .text.motorHeartBeat_task:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:2156   .text.motorHeartBeat_task:0000000000000000 motorHeartBeat_task
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:2190   .text.motorControl_task:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:2195   .text.motorControl_task:0000000000000000 motorControl_task
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:2278   .text.motorControl_task:0000000000000088 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:2284   .text.motorControl_task:00000000000000a0 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:2495   .text.motorControl_task:0000000000000238 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cclrn3bG.s:2504   .bss.cnt.9315:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
prvMotorCommand
prvTaskStatsCommand
RCC_APB2PeriphClockCmd
RCC_AHB1PeriphClockCmd
GPIO_Init
GPIO_PinAFConfig
USART_Init
USART_ITConfig
NVIC_Init
USART_Cmd
USART_GetITStatus
vPortEnterCritical
USART_ClearITPendingBit
xQueueGenericSendFromISR
vPortExitCritical
xQueueGenericReceive
vTaskDelay
xQueueGenericCreate
xQueueGenericSend
