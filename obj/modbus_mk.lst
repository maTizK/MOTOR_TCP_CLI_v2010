   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"modbus_mk.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	xSemaphoreDMASPI,4,4
  20              		.section	.bss.xHigherPriorityTaskWoken,"aw",%nobits
  21              		.align	2
  24              	xHigherPriorityTaskWoken:
  25 0000 00000000 		.space	4
  26              		.comm	xSmphrUSART,4,4
  27              		.comm	setSpeedHandle,4,4
  28              		.comm	motorHBHandle,4,4
  29              		.comm	QSpd_handle,4,4
  30              		.comm	QStatus_handle,4,4
  31              		.comm	socket_0,4,4
  32              		.comm	fd,4,4
  33              		.comm	received_string,129,4
  34              		.comm	rx_length,4,4
  35              		.section	.bss.xHigherPriorityTaskWoken_usart,"aw",%nobits
  36              		.align	2
  39              	xHigherPriorityTaskWoken_usart:
  40 0000 00000000 		.space	4
  41              		.comm	input_Register,20,4
  42              		.section	.rodata.table_crc_hi,"a",%progbits
  43              		.align	2
  46              	table_crc_hi:
  47 0000 00       		.byte	0
  48 0001 C1       		.byte	-63
  49 0002 81       		.byte	-127
  50 0003 40       		.byte	64
  51 0004 01       		.byte	1
  52 0005 C0       		.byte	-64
  53 0006 80       		.byte	-128
  54 0007 41       		.byte	65
  55 0008 01       		.byte	1
  56 0009 C0       		.byte	-64
  57 000a 80       		.byte	-128
  58 000b 41       		.byte	65
  59 000c 00       		.byte	0
  60 000d C1       		.byte	-63
  61 000e 81       		.byte	-127
  62 000f 40       		.byte	64
  63 0010 01       		.byte	1
  64 0011 C0       		.byte	-64
  65 0012 80       		.byte	-128
  66 0013 41       		.byte	65
  67 0014 00       		.byte	0
  68 0015 C1       		.byte	-63
  69 0016 81       		.byte	-127
  70 0017 40       		.byte	64
  71 0018 00       		.byte	0
  72 0019 C1       		.byte	-63
  73 001a 81       		.byte	-127
  74 001b 40       		.byte	64
  75 001c 01       		.byte	1
  76 001d C0       		.byte	-64
  77 001e 80       		.byte	-128
  78 001f 41       		.byte	65
  79 0020 01       		.byte	1
  80 0021 C0       		.byte	-64
  81 0022 80       		.byte	-128
  82 0023 41       		.byte	65
  83 0024 00       		.byte	0
  84 0025 C1       		.byte	-63
  85 0026 81       		.byte	-127
  86 0027 40       		.byte	64
  87 0028 00       		.byte	0
  88 0029 C1       		.byte	-63
  89 002a 81       		.byte	-127
  90 002b 40       		.byte	64
  91 002c 01       		.byte	1
  92 002d C0       		.byte	-64
  93 002e 80       		.byte	-128
  94 002f 41       		.byte	65
  95 0030 00       		.byte	0
  96 0031 C1       		.byte	-63
  97 0032 81       		.byte	-127
  98 0033 40       		.byte	64
  99 0034 01       		.byte	1
 100 0035 C0       		.byte	-64
 101 0036 80       		.byte	-128
 102 0037 41       		.byte	65
 103 0038 01       		.byte	1
 104 0039 C0       		.byte	-64
 105 003a 80       		.byte	-128
 106 003b 41       		.byte	65
 107 003c 00       		.byte	0
 108 003d C1       		.byte	-63
 109 003e 81       		.byte	-127
 110 003f 40       		.byte	64
 111 0040 01       		.byte	1
 112 0041 C0       		.byte	-64
 113 0042 80       		.byte	-128
 114 0043 41       		.byte	65
 115 0044 00       		.byte	0
 116 0045 C1       		.byte	-63
 117 0046 81       		.byte	-127
 118 0047 40       		.byte	64
 119 0048 00       		.byte	0
 120 0049 C1       		.byte	-63
 121 004a 81       		.byte	-127
 122 004b 40       		.byte	64
 123 004c 01       		.byte	1
 124 004d C0       		.byte	-64
 125 004e 80       		.byte	-128
 126 004f 41       		.byte	65
 127 0050 00       		.byte	0
 128 0051 C1       		.byte	-63
 129 0052 81       		.byte	-127
 130 0053 40       		.byte	64
 131 0054 01       		.byte	1
 132 0055 C0       		.byte	-64
 133 0056 80       		.byte	-128
 134 0057 41       		.byte	65
 135 0058 01       		.byte	1
 136 0059 C0       		.byte	-64
 137 005a 80       		.byte	-128
 138 005b 41       		.byte	65
 139 005c 00       		.byte	0
 140 005d C1       		.byte	-63
 141 005e 81       		.byte	-127
 142 005f 40       		.byte	64
 143 0060 00       		.byte	0
 144 0061 C1       		.byte	-63
 145 0062 81       		.byte	-127
 146 0063 40       		.byte	64
 147 0064 01       		.byte	1
 148 0065 C0       		.byte	-64
 149 0066 80       		.byte	-128
 150 0067 41       		.byte	65
 151 0068 01       		.byte	1
 152 0069 C0       		.byte	-64
 153 006a 80       		.byte	-128
 154 006b 41       		.byte	65
 155 006c 00       		.byte	0
 156 006d C1       		.byte	-63
 157 006e 81       		.byte	-127
 158 006f 40       		.byte	64
 159 0070 01       		.byte	1
 160 0071 C0       		.byte	-64
 161 0072 80       		.byte	-128
 162 0073 41       		.byte	65
 163 0074 00       		.byte	0
 164 0075 C1       		.byte	-63
 165 0076 81       		.byte	-127
 166 0077 40       		.byte	64
 167 0078 00       		.byte	0
 168 0079 C1       		.byte	-63
 169 007a 81       		.byte	-127
 170 007b 40       		.byte	64
 171 007c 01       		.byte	1
 172 007d C0       		.byte	-64
 173 007e 80       		.byte	-128
 174 007f 41       		.byte	65
 175 0080 01       		.byte	1
 176 0081 C0       		.byte	-64
 177 0082 80       		.byte	-128
 178 0083 41       		.byte	65
 179 0084 00       		.byte	0
 180 0085 C1       		.byte	-63
 181 0086 81       		.byte	-127
 182 0087 40       		.byte	64
 183 0088 00       		.byte	0
 184 0089 C1       		.byte	-63
 185 008a 81       		.byte	-127
 186 008b 40       		.byte	64
 187 008c 01       		.byte	1
 188 008d C0       		.byte	-64
 189 008e 80       		.byte	-128
 190 008f 41       		.byte	65
 191 0090 00       		.byte	0
 192 0091 C1       		.byte	-63
 193 0092 81       		.byte	-127
 194 0093 40       		.byte	64
 195 0094 01       		.byte	1
 196 0095 C0       		.byte	-64
 197 0096 80       		.byte	-128
 198 0097 41       		.byte	65
 199 0098 01       		.byte	1
 200 0099 C0       		.byte	-64
 201 009a 80       		.byte	-128
 202 009b 41       		.byte	65
 203 009c 00       		.byte	0
 204 009d C1       		.byte	-63
 205 009e 81       		.byte	-127
 206 009f 40       		.byte	64
 207 00a0 00       		.byte	0
 208 00a1 C1       		.byte	-63
 209 00a2 81       		.byte	-127
 210 00a3 40       		.byte	64
 211 00a4 01       		.byte	1
 212 00a5 C0       		.byte	-64
 213 00a6 80       		.byte	-128
 214 00a7 41       		.byte	65
 215 00a8 01       		.byte	1
 216 00a9 C0       		.byte	-64
 217 00aa 80       		.byte	-128
 218 00ab 41       		.byte	65
 219 00ac 00       		.byte	0
 220 00ad C1       		.byte	-63
 221 00ae 81       		.byte	-127
 222 00af 40       		.byte	64
 223 00b0 01       		.byte	1
 224 00b1 C0       		.byte	-64
 225 00b2 80       		.byte	-128
 226 00b3 41       		.byte	65
 227 00b4 00       		.byte	0
 228 00b5 C1       		.byte	-63
 229 00b6 81       		.byte	-127
 230 00b7 40       		.byte	64
 231 00b8 00       		.byte	0
 232 00b9 C1       		.byte	-63
 233 00ba 81       		.byte	-127
 234 00bb 40       		.byte	64
 235 00bc 01       		.byte	1
 236 00bd C0       		.byte	-64
 237 00be 80       		.byte	-128
 238 00bf 41       		.byte	65
 239 00c0 00       		.byte	0
 240 00c1 C1       		.byte	-63
 241 00c2 81       		.byte	-127
 242 00c3 40       		.byte	64
 243 00c4 01       		.byte	1
 244 00c5 C0       		.byte	-64
 245 00c6 80       		.byte	-128
 246 00c7 41       		.byte	65
 247 00c8 01       		.byte	1
 248 00c9 C0       		.byte	-64
 249 00ca 80       		.byte	-128
 250 00cb 41       		.byte	65
 251 00cc 00       		.byte	0
 252 00cd C1       		.byte	-63
 253 00ce 81       		.byte	-127
 254 00cf 40       		.byte	64
 255 00d0 01       		.byte	1
 256 00d1 C0       		.byte	-64
 257 00d2 80       		.byte	-128
 258 00d3 41       		.byte	65
 259 00d4 00       		.byte	0
 260 00d5 C1       		.byte	-63
 261 00d6 81       		.byte	-127
 262 00d7 40       		.byte	64
 263 00d8 00       		.byte	0
 264 00d9 C1       		.byte	-63
 265 00da 81       		.byte	-127
 266 00db 40       		.byte	64
 267 00dc 01       		.byte	1
 268 00dd C0       		.byte	-64
 269 00de 80       		.byte	-128
 270 00df 41       		.byte	65
 271 00e0 01       		.byte	1
 272 00e1 C0       		.byte	-64
 273 00e2 80       		.byte	-128
 274 00e3 41       		.byte	65
 275 00e4 00       		.byte	0
 276 00e5 C1       		.byte	-63
 277 00e6 81       		.byte	-127
 278 00e7 40       		.byte	64
 279 00e8 00       		.byte	0
 280 00e9 C1       		.byte	-63
 281 00ea 81       		.byte	-127
 282 00eb 40       		.byte	64
 283 00ec 01       		.byte	1
 284 00ed C0       		.byte	-64
 285 00ee 80       		.byte	-128
 286 00ef 41       		.byte	65
 287 00f0 00       		.byte	0
 288 00f1 C1       		.byte	-63
 289 00f2 81       		.byte	-127
 290 00f3 40       		.byte	64
 291 00f4 01       		.byte	1
 292 00f5 C0       		.byte	-64
 293 00f6 80       		.byte	-128
 294 00f7 41       		.byte	65
 295 00f8 01       		.byte	1
 296 00f9 C0       		.byte	-64
 297 00fa 80       		.byte	-128
 298 00fb 41       		.byte	65
 299 00fc 00       		.byte	0
 300 00fd C1       		.byte	-63
 301 00fe 81       		.byte	-127
 302 00ff 40       		.byte	64
 303              		.section	.rodata.table_crc_lo,"a",%progbits
 304              		.align	2
 307              	table_crc_lo:
 308 0000 00       		.byte	0
 309 0001 C0       		.byte	-64
 310 0002 C1       		.byte	-63
 311 0003 01       		.byte	1
 312 0004 C3       		.byte	-61
 313 0005 03       		.byte	3
 314 0006 02       		.byte	2
 315 0007 C2       		.byte	-62
 316 0008 C6       		.byte	-58
 317 0009 06       		.byte	6
 318 000a 07       		.byte	7
 319 000b C7       		.byte	-57
 320 000c 05       		.byte	5
 321 000d C5       		.byte	-59
 322 000e C4       		.byte	-60
 323 000f 04       		.byte	4
 324 0010 CC       		.byte	-52
 325 0011 0C       		.byte	12
 326 0012 0D       		.byte	13
 327 0013 CD       		.byte	-51
 328 0014 0F       		.byte	15
 329 0015 CF       		.byte	-49
 330 0016 CE       		.byte	-50
 331 0017 0E       		.byte	14
 332 0018 0A       		.byte	10
 333 0019 CA       		.byte	-54
 334 001a CB       		.byte	-53
 335 001b 0B       		.byte	11
 336 001c C9       		.byte	-55
 337 001d 09       		.byte	9
 338 001e 08       		.byte	8
 339 001f C8       		.byte	-56
 340 0020 D8       		.byte	-40
 341 0021 18       		.byte	24
 342 0022 19       		.byte	25
 343 0023 D9       		.byte	-39
 344 0024 1B       		.byte	27
 345 0025 DB       		.byte	-37
 346 0026 DA       		.byte	-38
 347 0027 1A       		.byte	26
 348 0028 1E       		.byte	30
 349 0029 DE       		.byte	-34
 350 002a DF       		.byte	-33
 351 002b 1F       		.byte	31
 352 002c DD       		.byte	-35
 353 002d 1D       		.byte	29
 354 002e 1C       		.byte	28
 355 002f DC       		.byte	-36
 356 0030 14       		.byte	20
 357 0031 D4       		.byte	-44
 358 0032 D5       		.byte	-43
 359 0033 15       		.byte	21
 360 0034 D7       		.byte	-41
 361 0035 17       		.byte	23
 362 0036 16       		.byte	22
 363 0037 D6       		.byte	-42
 364 0038 D2       		.byte	-46
 365 0039 12       		.byte	18
 366 003a 13       		.byte	19
 367 003b D3       		.byte	-45
 368 003c 11       		.byte	17
 369 003d D1       		.byte	-47
 370 003e D0       		.byte	-48
 371 003f 10       		.byte	16
 372 0040 F0       		.byte	-16
 373 0041 30       		.byte	48
 374 0042 31       		.byte	49
 375 0043 F1       		.byte	-15
 376 0044 33       		.byte	51
 377 0045 F3       		.byte	-13
 378 0046 F2       		.byte	-14
 379 0047 32       		.byte	50
 380 0048 36       		.byte	54
 381 0049 F6       		.byte	-10
 382 004a F7       		.byte	-9
 383 004b 37       		.byte	55
 384 004c F5       		.byte	-11
 385 004d 35       		.byte	53
 386 004e 34       		.byte	52
 387 004f F4       		.byte	-12
 388 0050 3C       		.byte	60
 389 0051 FC       		.byte	-4
 390 0052 FD       		.byte	-3
 391 0053 3D       		.byte	61
 392 0054 FF       		.byte	-1
 393 0055 3F       		.byte	63
 394 0056 3E       		.byte	62
 395 0057 FE       		.byte	-2
 396 0058 FA       		.byte	-6
 397 0059 3A       		.byte	58
 398 005a 3B       		.byte	59
 399 005b FB       		.byte	-5
 400 005c 39       		.byte	57
 401 005d F9       		.byte	-7
 402 005e F8       		.byte	-8
 403 005f 38       		.byte	56
 404 0060 28       		.byte	40
 405 0061 E8       		.byte	-24
 406 0062 E9       		.byte	-23
 407 0063 29       		.byte	41
 408 0064 EB       		.byte	-21
 409 0065 2B       		.byte	43
 410 0066 2A       		.byte	42
 411 0067 EA       		.byte	-22
 412 0068 EE       		.byte	-18
 413 0069 2E       		.byte	46
 414 006a 2F       		.byte	47
 415 006b EF       		.byte	-17
 416 006c 2D       		.byte	45
 417 006d ED       		.byte	-19
 418 006e EC       		.byte	-20
 419 006f 2C       		.byte	44
 420 0070 E4       		.byte	-28
 421 0071 24       		.byte	36
 422 0072 25       		.byte	37
 423 0073 E5       		.byte	-27
 424 0074 27       		.byte	39
 425 0075 E7       		.byte	-25
 426 0076 E6       		.byte	-26
 427 0077 26       		.byte	38
 428 0078 22       		.byte	34
 429 0079 E2       		.byte	-30
 430 007a E3       		.byte	-29
 431 007b 23       		.byte	35
 432 007c E1       		.byte	-31
 433 007d 21       		.byte	33
 434 007e 20       		.byte	32
 435 007f E0       		.byte	-32
 436 0080 A0       		.byte	-96
 437 0081 60       		.byte	96
 438 0082 61       		.byte	97
 439 0083 A1       		.byte	-95
 440 0084 63       		.byte	99
 441 0085 A3       		.byte	-93
 442 0086 A2       		.byte	-94
 443 0087 62       		.byte	98
 444 0088 66       		.byte	102
 445 0089 A6       		.byte	-90
 446 008a A7       		.byte	-89
 447 008b 67       		.byte	103
 448 008c A5       		.byte	-91
 449 008d 65       		.byte	101
 450 008e 64       		.byte	100
 451 008f A4       		.byte	-92
 452 0090 6C       		.byte	108
 453 0091 AC       		.byte	-84
 454 0092 AD       		.byte	-83
 455 0093 6D       		.byte	109
 456 0094 AF       		.byte	-81
 457 0095 6F       		.byte	111
 458 0096 6E       		.byte	110
 459 0097 AE       		.byte	-82
 460 0098 AA       		.byte	-86
 461 0099 6A       		.byte	106
 462 009a 6B       		.byte	107
 463 009b AB       		.byte	-85
 464 009c 69       		.byte	105
 465 009d A9       		.byte	-87
 466 009e A8       		.byte	-88
 467 009f 68       		.byte	104
 468 00a0 78       		.byte	120
 469 00a1 B8       		.byte	-72
 470 00a2 B9       		.byte	-71
 471 00a3 79       		.byte	121
 472 00a4 BB       		.byte	-69
 473 00a5 7B       		.byte	123
 474 00a6 7A       		.byte	122
 475 00a7 BA       		.byte	-70
 476 00a8 BE       		.byte	-66
 477 00a9 7E       		.byte	126
 478 00aa 7F       		.byte	127
 479 00ab BF       		.byte	-65
 480 00ac 7D       		.byte	125
 481 00ad BD       		.byte	-67
 482 00ae BC       		.byte	-68
 483 00af 7C       		.byte	124
 484 00b0 B4       		.byte	-76
 485 00b1 74       		.byte	116
 486 00b2 75       		.byte	117
 487 00b3 B5       		.byte	-75
 488 00b4 77       		.byte	119
 489 00b5 B7       		.byte	-73
 490 00b6 B6       		.byte	-74
 491 00b7 76       		.byte	118
 492 00b8 72       		.byte	114
 493 00b9 B2       		.byte	-78
 494 00ba B3       		.byte	-77
 495 00bb 73       		.byte	115
 496 00bc B1       		.byte	-79
 497 00bd 71       		.byte	113
 498 00be 70       		.byte	112
 499 00bf B0       		.byte	-80
 500 00c0 50       		.byte	80
 501 00c1 90       		.byte	-112
 502 00c2 91       		.byte	-111
 503 00c3 51       		.byte	81
 504 00c4 93       		.byte	-109
 505 00c5 53       		.byte	83
 506 00c6 52       		.byte	82
 507 00c7 92       		.byte	-110
 508 00c8 96       		.byte	-106
 509 00c9 56       		.byte	86
 510 00ca 57       		.byte	87
 511 00cb 97       		.byte	-105
 512 00cc 55       		.byte	85
 513 00cd 95       		.byte	-107
 514 00ce 94       		.byte	-108
 515 00cf 54       		.byte	84
 516 00d0 9C       		.byte	-100
 517 00d1 5C       		.byte	92
 518 00d2 5D       		.byte	93
 519 00d3 9D       		.byte	-99
 520 00d4 5F       		.byte	95
 521 00d5 9F       		.byte	-97
 522 00d6 9E       		.byte	-98
 523 00d7 5E       		.byte	94
 524 00d8 5A       		.byte	90
 525 00d9 9A       		.byte	-102
 526 00da 9B       		.byte	-101
 527 00db 5B       		.byte	91
 528 00dc 99       		.byte	-103
 529 00dd 59       		.byte	89
 530 00de 58       		.byte	88
 531 00df 98       		.byte	-104
 532 00e0 88       		.byte	-120
 533 00e1 48       		.byte	72
 534 00e2 49       		.byte	73
 535 00e3 89       		.byte	-119
 536 00e4 4B       		.byte	75
 537 00e5 8B       		.byte	-117
 538 00e6 8A       		.byte	-118
 539 00e7 4A       		.byte	74
 540 00e8 4E       		.byte	78
 541 00e9 8E       		.byte	-114
 542 00ea 8F       		.byte	-113
 543 00eb 4F       		.byte	79
 544 00ec 8D       		.byte	-115
 545 00ed 4D       		.byte	77
 546 00ee 4C       		.byte	76
 547 00ef 8C       		.byte	-116
 548 00f0 44       		.byte	68
 549 00f1 84       		.byte	-124
 550 00f2 85       		.byte	-123
 551 00f3 45       		.byte	69
 552 00f4 87       		.byte	-121
 553 00f5 47       		.byte	71
 554 00f6 46       		.byte	70
 555 00f7 86       		.byte	-122
 556 00f8 82       		.byte	-126
 557 00f9 42       		.byte	66
 558 00fa 43       		.byte	67
 559 00fb 83       		.byte	-125
 560 00fc 41       		.byte	65
 561 00fd 81       		.byte	-127
 562 00fe 80       		.byte	-128
 563 00ff 40       		.byte	64
 564              		.section	.text.init_USARTx,"ax",%progbits
 565              		.align	2
 566              		.global	init_USARTx
 567              		.thumb
 568              		.thumb_func
 570              	init_USARTx:
 571              	.LFB110:
 572              		.file 1 "App/STM32F4-Discovery/modbus_mk.c"
   1:App/STM32F4-Discovery/modbus_mk.c **** #include "modbus_mk.h"
   2:App/STM32F4-Discovery/modbus_mk.c **** 
   3:App/STM32F4-Discovery/modbus_mk.c **** /* Table of CRC values for high-order byte */
   4:App/STM32F4-Discovery/modbus_mk.c **** static const uint8_t table_crc_hi[] = {
   5:App/STM32F4-Discovery/modbus_mk.c ****     0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
   6:App/STM32F4-Discovery/modbus_mk.c ****     0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
   7:App/STM32F4-Discovery/modbus_mk.c ****     0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
   8:App/STM32F4-Discovery/modbus_mk.c ****     0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
   9:App/STM32F4-Discovery/modbus_mk.c ****     0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1,
  10:App/STM32F4-Discovery/modbus_mk.c ****     0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41,
  11:App/STM32F4-Discovery/modbus_mk.c ****     0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1,
  12:App/STM32F4-Discovery/modbus_mk.c ****     0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
  13:App/STM32F4-Discovery/modbus_mk.c ****     0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
  14:App/STM32F4-Discovery/modbus_mk.c ****     0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40,
  15:App/STM32F4-Discovery/modbus_mk.c ****     0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1,
  16:App/STM32F4-Discovery/modbus_mk.c ****     0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
  17:App/STM32F4-Discovery/modbus_mk.c ****     0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
  18:App/STM32F4-Discovery/modbus_mk.c ****     0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40,
  19:App/STM32F4-Discovery/modbus_mk.c ****     0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
  20:App/STM32F4-Discovery/modbus_mk.c ****     0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40,
  21:App/STM32F4-Discovery/modbus_mk.c ****     0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
  22:App/STM32F4-Discovery/modbus_mk.c ****     0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
  23:App/STM32F4-Discovery/modbus_mk.c ****     0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
  24:App/STM32F4-Discovery/modbus_mk.c ****     0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
  25:App/STM32F4-Discovery/modbus_mk.c ****     0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0,
  26:App/STM32F4-Discovery/modbus_mk.c ****     0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40,
  27:App/STM32F4-Discovery/modbus_mk.c ****     0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1,
  28:App/STM32F4-Discovery/modbus_mk.c ****     0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41,
  29:App/STM32F4-Discovery/modbus_mk.c ****     0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0,
  30:App/STM32F4-Discovery/modbus_mk.c ****     0x80, 0x41, 0x00, 0xC1, 0x81, 0x40
  31:App/STM32F4-Discovery/modbus_mk.c **** };
  32:App/STM32F4-Discovery/modbus_mk.c **** 
  33:App/STM32F4-Discovery/modbus_mk.c **** /* Table of CRC values for low-order byte */
  34:App/STM32F4-Discovery/modbus_mk.c **** static const uint8_t table_crc_lo[] = {
  35:App/STM32F4-Discovery/modbus_mk.c ****     0x00, 0xC0, 0xC1, 0x01, 0xC3, 0x03, 0x02, 0xC2, 0xC6, 0x06,
  36:App/STM32F4-Discovery/modbus_mk.c ****     0x07, 0xC7, 0x05, 0xC5, 0xC4, 0x04, 0xCC, 0x0C, 0x0D, 0xCD,
  37:App/STM32F4-Discovery/modbus_mk.c ****     0x0F, 0xCF, 0xCE, 0x0E, 0x0A, 0xCA, 0xCB, 0x0B, 0xC9, 0x09,
  38:App/STM32F4-Discovery/modbus_mk.c ****     0x08, 0xC8, 0xD8, 0x18, 0x19, 0xD9, 0x1B, 0xDB, 0xDA, 0x1A,
  39:App/STM32F4-Discovery/modbus_mk.c ****     0x1E, 0xDE, 0xDF, 0x1F, 0xDD, 0x1D, 0x1C, 0xDC, 0x14, 0xD4,
  40:App/STM32F4-Discovery/modbus_mk.c ****     0xD5, 0x15, 0xD7, 0x17, 0x16, 0xD6, 0xD2, 0x12, 0x13, 0xD3,
  41:App/STM32F4-Discovery/modbus_mk.c ****     0x11, 0xD1, 0xD0, 0x10, 0xF0, 0x30, 0x31, 0xF1, 0x33, 0xF3,
  42:App/STM32F4-Discovery/modbus_mk.c ****     0xF2, 0x32, 0x36, 0xF6, 0xF7, 0x37, 0xF5, 0x35, 0x34, 0xF4,
  43:App/STM32F4-Discovery/modbus_mk.c ****     0x3C, 0xFC, 0xFD, 0x3D, 0xFF, 0x3F, 0x3E, 0xFE, 0xFA, 0x3A,
  44:App/STM32F4-Discovery/modbus_mk.c ****     0x3B, 0xFB, 0x39, 0xF9, 0xF8, 0x38, 0x28, 0xE8, 0xE9, 0x29,
  45:App/STM32F4-Discovery/modbus_mk.c ****     0xEB, 0x2B, 0x2A, 0xEA, 0xEE, 0x2E, 0x2F, 0xEF, 0x2D, 0xED,
  46:App/STM32F4-Discovery/modbus_mk.c ****     0xEC, 0x2C, 0xE4, 0x24, 0x25, 0xE5, 0x27, 0xE7, 0xE6, 0x26,
  47:App/STM32F4-Discovery/modbus_mk.c ****     0x22, 0xE2, 0xE3, 0x23, 0xE1, 0x21, 0x20, 0xE0, 0xA0, 0x60,
  48:App/STM32F4-Discovery/modbus_mk.c ****     0x61, 0xA1, 0x63, 0xA3, 0xA2, 0x62, 0x66, 0xA6, 0xA7, 0x67,
  49:App/STM32F4-Discovery/modbus_mk.c ****     0xA5, 0x65, 0x64, 0xA4, 0x6C, 0xAC, 0xAD, 0x6D, 0xAF, 0x6F,
  50:App/STM32F4-Discovery/modbus_mk.c ****     0x6E, 0xAE, 0xAA, 0x6A, 0x6B, 0xAB, 0x69, 0xA9, 0xA8, 0x68,
  51:App/STM32F4-Discovery/modbus_mk.c ****     0x78, 0xB8, 0xB9, 0x79, 0xBB, 0x7B, 0x7A, 0xBA, 0xBE, 0x7E,
  52:App/STM32F4-Discovery/modbus_mk.c ****     0x7F, 0xBF, 0x7D, 0xBD, 0xBC, 0x7C, 0xB4, 0x74, 0x75, 0xB5,
  53:App/STM32F4-Discovery/modbus_mk.c ****     0x77, 0xB7, 0xB6, 0x76, 0x72, 0xB2, 0xB3, 0x73, 0xB1, 0x71,
  54:App/STM32F4-Discovery/modbus_mk.c ****     0x70, 0xB0, 0x50, 0x90, 0x91, 0x51, 0x93, 0x53, 0x52, 0x92,
  55:App/STM32F4-Discovery/modbus_mk.c ****     0x96, 0x56, 0x57, 0x97, 0x55, 0x95, 0x94, 0x54, 0x9C, 0x5C,
  56:App/STM32F4-Discovery/modbus_mk.c ****     0x5D, 0x9D, 0x5F, 0x9F, 0x9E, 0x5E, 0x5A, 0x9A, 0x9B, 0x5B,
  57:App/STM32F4-Discovery/modbus_mk.c ****     0x99, 0x59, 0x58, 0x98, 0x88, 0x48, 0x49, 0x89, 0x4B, 0x8B,
  58:App/STM32F4-Discovery/modbus_mk.c ****     0x8A, 0x4A, 0x4E, 0x8E, 0x8F, 0x4F, 0x8D, 0x4D, 0x4C, 0x8C,
  59:App/STM32F4-Discovery/modbus_mk.c ****     0x44, 0x84, 0x85, 0x45, 0x87, 0x47, 0x46, 0x86, 0x82, 0x42,
  60:App/STM32F4-Discovery/modbus_mk.c ****     0x43, 0x83, 0x41, 0x81, 0x80, 0x40
  61:App/STM32F4-Discovery/modbus_mk.c **** };
  62:App/STM32F4-Discovery/modbus_mk.c **** 
  63:App/STM32F4-Discovery/modbus_mk.c **** 
  64:App/STM32F4-Discovery/modbus_mk.c **** /* This funcion initializes the USART1 peripheral
  65:App/STM32F4-Discovery/modbus_mk.c ****  * 
  66:App/STM32F4-Discovery/modbus_mk.c ****  * Arguments: baudrate --> the baudrate at which the USART is 
  67:App/STM32F4-Discovery/modbus_mk.c ****  * 						   supposed to operate
  68:App/STM32F4-Discovery/modbus_mk.c ****  */
  69:App/STM32F4-Discovery/modbus_mk.c **** 
  70:App/STM32F4-Discovery/modbus_mk.c **** #define pdFalse 0
  71:App/STM32F4-Discovery/modbus_mk.c **** #define pdTrue 	1
  72:App/STM32F4-Discovery/modbus_mk.c **** 
  73:App/STM32F4-Discovery/modbus_mk.c **** 
  74:App/STM32F4-Discovery/modbus_mk.c **** void init_USARTx(void)
  75:App/STM32F4-Discovery/modbus_mk.c **** {
 573              		.loc 1 75 0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 32
 576              		@ frame_needed = 1, uses_anonymous_args = 0
 577 0000 80B5     		push	{r7, lr}
 578              	.LCFI0:
 579              		.cfi_def_cfa_offset 8
 580              		.cfi_offset 7, -8
 581              		.cfi_offset 14, -4
 582 0002 88B0     		sub	sp, sp, #32
 583              	.LCFI1:
 584              		.cfi_def_cfa_offset 40
 585 0004 00AF     		add	r7, sp, #0
 586              	.LCFI2:
 587              		.cfi_def_cfa_register 7
  76:App/STM32F4-Discovery/modbus_mk.c **** 	
  77:App/STM32F4-Discovery/modbus_mk.c **** 	
  78:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitTypeDef GPIO_InitStruct; // this is for the GPIO pins used as TX and RX
  79:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitTypeDef USART_InitStruct; // this is for the USART1 initilization
  80:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitTypeDef NVIC_InitStructure; // this is used to configure the NVIC (nested vector interrup
  81:App/STM32F4-Discovery/modbus_mk.c **** 	
  82:App/STM32F4-Discovery/modbus_mk.c **** 	/* enable APB2 peripheral clock for USART1 
  83:App/STM32F4-Discovery/modbus_mk.c **** 	 * note that only USART1 and USART6 are connected to APB2
  84:App/STM32F4-Discovery/modbus_mk.c **** 	 * the other USARTs are connected to APB1
  85:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  86:App/STM32F4-Discovery/modbus_mk.c **** 	RCC_APB2PeriphClockCmd(USARTx_CLK, ENABLE);
 588              		.loc 1 86 0
 589 0006 2020     		movs	r0, #32
 590 0008 0121     		movs	r1, #1
 591 000a FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
  87:App/STM32F4-Discovery/modbus_mk.c **** 	
  88:App/STM32F4-Discovery/modbus_mk.c **** 	/* enable the peripheral clock for the pins used by 
  89:App/STM32F4-Discovery/modbus_mk.c **** 	 * USART1, PB6 for TX and PB7 for RX 
  90:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  91:App/STM32F4-Discovery/modbus_mk.c **** 	RCC_AHB1PeriphClockCmd(USARTx_TX_GPIO_CLK, ENABLE);
 592              		.loc 1 91 0
 593 000e 0420     		movs	r0, #4
 594 0010 0121     		movs	r1, #1
 595 0012 FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  92:App/STM32F4-Discovery/modbus_mk.c **** 	RCC_AHB1PeriphClockCmd(USARTx_RX_GPIO_CLK, ENABLE);
 596              		.loc 1 92 0
 597 0016 0420     		movs	r0, #4
 598 0018 0121     		movs	r1, #1
 599 001a FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  93:App/STM32F4-Discovery/modbus_mk.c **** 	RCC_AHB1PeriphClockCmd(USARTx_CS_GPIO_CLK, ENABLE);
 600              		.loc 1 93 0
 601 001e 4020     		movs	r0, #64
 602 0020 0121     		movs	r1, #1
 603 0022 FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  94:App/STM32F4-Discovery/modbus_mk.c **** 
  95:App/STM32F4-Discovery/modbus_mk.c **** 	
  96:App/STM32F4-Discovery/modbus_mk.c **** 	/* This sequence sets up the TX and RX pins 
  97:App/STM32F4-Discovery/modbus_mk.c **** 	 * so they work correctly with the USART1 peripheral
  98:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  99:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Pin = USARTx_RX_GPIO_PIN | USARTx_TX_GPIO_PIN; // Pins 6 (TX) and 7 (RX) are 
 604              		.loc 1 99 0
 605 0026 C023     		movs	r3, #192
 606 0028 BB61     		str	r3, [r7, #24]
 100:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF; 			// the pins are configured as alternate function so t
 607              		.loc 1 100 0
 608 002a 0223     		movs	r3, #2
 609 002c 3B77     		strb	r3, [r7, #28]
 101:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;		// this defines the IO speed and has nothing to d
 610              		.loc 1 101 0
 611 002e 0323     		movs	r3, #3
 612 0030 7B77     		strb	r3, [r7, #29]
 102:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;			// this defines the output type as push pull mode (a
 613              		.loc 1 102 0
 614 0032 0023     		movs	r3, #0
 615 0034 BB77     		strb	r3, [r7, #30]
 103:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;			// this activates the pullup resistors on the IO pins
 616              		.loc 1 103 0
 617 0036 0123     		movs	r3, #1
 618 0038 FB77     		strb	r3, [r7, #31]
 104:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_Init(USARTx_TX_GPIO_PORT, &GPIO_InitStruct);					// now all the values are passed to the GPIO
 619              		.loc 1 104 0
 620 003a 07F11803 		add	r3, r7, #24
 621 003e 2948     		ldr	r0, .L2
 622 0040 1946     		mov	r1, r3
 623 0042 FFF7FEFF 		bl	GPIO_Init
 105:App/STM32F4-Discovery/modbus_mk.c **** 	
 106:App/STM32F4-Discovery/modbus_mk.c **** 	
 107:App/STM32F4-Discovery/modbus_mk.c **** 	
 108:App/STM32F4-Discovery/modbus_mk.c **** 	/* Configure the chip select pin in this case we will use PG8 */
 109:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Pin = USARTx_CS_GPIO_PIN;
 624              		.loc 1 109 0
 625 0046 4FF48073 		mov	r3, #256
 626 004a BB61     		str	r3, [r7, #24]
 110:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_OUT;
 627              		.loc 1 110 0
 628 004c 0123     		movs	r3, #1
 629 004e 3B77     		strb	r3, [r7, #28]
 111:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;
 630              		.loc 1 111 0
 631 0050 0023     		movs	r3, #0
 632 0052 BB77     		strb	r3, [r7, #30]
 112:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;
 633              		.loc 1 112 0
 634 0054 0323     		movs	r3, #3
 635 0056 7B77     		strb	r3, [r7, #29]
 113:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;
 636              		.loc 1 113 0
 637 0058 0123     		movs	r3, #1
 638 005a FB77     		strb	r3, [r7, #31]
 114:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_Init(USARTx_CS_GPIO_PORT, &GPIO_InitStruct);
 639              		.loc 1 114 0
 640 005c 07F11803 		add	r3, r7, #24
 641 0060 2148     		ldr	r0, .L2+4
 642 0062 1946     		mov	r1, r3
 643 0064 FFF7FEFF 		bl	GPIO_Init
 115:App/STM32F4-Discovery/modbus_mk.c **** 
 116:App/STM32F4-Discovery/modbus_mk.c **** 	DD() // set PG8 high
 644              		.loc 1 116 0
 645 0068 1F4B     		ldr	r3, .L2+4
 646 006a 1F4A     		ldr	r2, .L2+4
 647 006c 128B     		ldrh	r2, [r2, #24]	@ movhi
 648 006e 92B2     		uxth	r2, r2
 649 0070 42F48072 		orr	r2, r2, #256
 650 0074 92B2     		uxth	r2, r2
 651 0076 1A83     		strh	r2, [r3, #24]	@ movhi
 117:App/STM32F4-Discovery/modbus_mk.c **** 	
 118:App/STM32F4-Discovery/modbus_mk.c **** 	
 119:App/STM32F4-Discovery/modbus_mk.c **** 	/* The RX and TX pins are now connected to their AF
 120:App/STM32F4-Discovery/modbus_mk.c **** 	 * so that the USART1 can take over control of the 
 121:App/STM32F4-Discovery/modbus_mk.c **** 	 * pins
 122:App/STM32F4-Discovery/modbus_mk.c **** 	 */
 123:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_PinAFConfig(GPIOC, GPIO_PinSource6, GPIO_AF_USART6); //
 652              		.loc 1 123 0
 653 0078 1A48     		ldr	r0, .L2
 654 007a 0621     		movs	r1, #6
 655 007c 0822     		movs	r2, #8
 656 007e FFF7FEFF 		bl	GPIO_PinAFConfig
 124:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_PinAFConfig(GPIOC, GPIO_PinSource7, GPIO_AF_USART6);
 657              		.loc 1 124 0
 658 0082 1848     		ldr	r0, .L2
 659 0084 0721     		movs	r1, #7
 660 0086 0822     		movs	r2, #8
 661 0088 FFF7FEFF 		bl	GPIO_PinAFConfig
 125:App/STM32F4-Discovery/modbus_mk.c **** 	
 126:App/STM32F4-Discovery/modbus_mk.c **** 	/* Now the USART_InitStruct is used to define the 
 127:App/STM32F4-Discovery/modbus_mk.c **** 	 * properties of USART1 
 128:App/STM32F4-Discovery/modbus_mk.c **** 	 */
 129:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_BaudRate = 38400;				// the baudrate is set to the value we passed into thi
 662              		.loc 1 129 0
 663 008c 4FF41643 		mov	r3, #38400
 664 0090 BB60     		str	r3, [r7, #8]
 130:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_WordLength = USART_WordLength_8b;// we want the data frame size to be 8 bit
 665              		.loc 1 130 0
 666 0092 0023     		movs	r3, #0
 667 0094 BB81     		strh	r3, [r7, #12]	@ movhi
 131:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_StopBits = USART_StopBits_1;		// we want 1 stop bit (standard)
 668              		.loc 1 131 0
 669 0096 0023     		movs	r3, #0
 670 0098 FB81     		strh	r3, [r7, #14]	@ movhi
 132:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_Parity = USART_Parity_No;		// we don't want a parity bit (standard)
 671              		.loc 1 132 0
 672 009a 0023     		movs	r3, #0
 673 009c 3B82     		strh	r3, [r7, #16]	@ movhi
 133:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_HardwareFlowControl = USART_HardwareFlowControl_None; // we don't want flow
 674              		.loc 1 133 0
 675 009e 0023     		movs	r3, #0
 676 00a0 BB82     		strh	r3, [r7, #20]	@ movhi
 134:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_Mode = USART_Mode_Tx | USART_Mode_Rx; // we want to enable the transmitter 
 677              		.loc 1 134 0
 678 00a2 0C23     		movs	r3, #12
 679 00a4 7B82     		strh	r3, [r7, #18]	@ movhi
 135:App/STM32F4-Discovery/modbus_mk.c **** 	USART_Init(USART6, &USART_InitStruct);					// again all the properties are passed to the USART_Ini
 680              		.loc 1 135 0
 681 00a6 07F10803 		add	r3, r7, #8
 682 00aa 1048     		ldr	r0, .L2+8
 683 00ac 1946     		mov	r1, r3
 684 00ae FFF7FEFF 		bl	USART_Init
 136:App/STM32F4-Discovery/modbus_mk.c **** 	
 137:App/STM32F4-Discovery/modbus_mk.c **** 	
 138:App/STM32F4-Discovery/modbus_mk.c **** 	/* Here the USART1 receive interrupt is enabled
 139:App/STM32F4-Discovery/modbus_mk.c **** 	 * and the interrupt controller is configured 
 140:App/STM32F4-Discovery/modbus_mk.c **** 	 * to jump to the USART1_IRQHandler() function
 141:App/STM32F4-Discovery/modbus_mk.c **** 	 * if the USART1 receive interrupt occurs
 142:App/STM32F4-Discovery/modbus_mk.c **** 	 */
 143:App/STM32F4-Discovery/modbus_mk.c **** 	USART_ITConfig(USART6, USART_IT_RXNE, ENABLE); // enable the USART1 receive interrupt 
 685              		.loc 1 143 0
 686 00b2 0E48     		ldr	r0, .L2+8
 687 00b4 40F22551 		movw	r1, #1317
 688 00b8 0122     		movs	r2, #1
 689 00ba FFF7FEFF 		bl	USART_ITConfig
 144:App/STM32F4-Discovery/modbus_mk.c **** 	
 145:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitStructure.NVIC_IRQChannel = USART6_IRQn;		 // we want to configure the USART interrupts
 690              		.loc 1 145 0
 691 00be 4723     		movs	r3, #71
 692 00c0 3B71     		strb	r3, [r7, #4]
 146:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORIT
 693              		.loc 1 146 0
 694 00c2 0923     		movs	r3, #9
 695 00c4 7B71     		strb	r3, [r7, #5]
 147:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x6;		 // this sets the subpriority inside the gro
 696              		.loc 1 147 0
 697 00c6 0623     		movs	r3, #6
 698 00c8 BB71     		strb	r3, [r7, #6]
 148:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;			 // the USART1 interrupts are globally enabled
 699              		.loc 1 148 0
 700 00ca 0123     		movs	r3, #1
 701 00cc FB71     		strb	r3, [r7, #7]
 149:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_Init(&NVIC_InitStructure);	 // the properties are passed to the NVIC_Init function which take
 702              		.loc 1 149 0
 703 00ce 3B1D     		adds	r3, r7, #4
 704 00d0 1846     		mov	r0, r3
 705 00d2 FFF7FEFF 		bl	NVIC_Init
 150:App/STM32F4-Discovery/modbus_mk.c **** 
 151:App/STM32F4-Discovery/modbus_mk.c **** 	// finally this enables the complete USART1 peripheral
 152:App/STM32F4-Discovery/modbus_mk.c **** 	USART_Cmd(USART6, ENABLE);
 706              		.loc 1 152 0
 707 00d6 0548     		ldr	r0, .L2+8
 708 00d8 0121     		movs	r1, #1
 709 00da FFF7FEFF 		bl	USART_Cmd
 153:App/STM32F4-Discovery/modbus_mk.c **** }
 710              		.loc 1 153 0
 711 00de 2037     		adds	r7, r7, #32
 712 00e0 BD46     		mov	sp, r7
 713              		@ sp needed
 714 00e2 80BD     		pop	{r7, pc}
 715              	.L3:
 716              		.align	2
 717              	.L2:
 718 00e4 00080240 		.word	1073874944
 719 00e8 00180240 		.word	1073879040
 720 00ec 00140140 		.word	1073812480
 721              		.cfi_endproc
 722              	.LFE110:
 724              		.section	.text.USART_puts,"ax",%progbits
 725              		.align	2
 726              		.global	USART_puts
 727              		.thumb
 728              		.thumb_func
 730              	USART_puts:
 731              	.LFB111:
 154:App/STM32F4-Discovery/modbus_mk.c **** 
 155:App/STM32F4-Discovery/modbus_mk.c **** 
 156:App/STM32F4-Discovery/modbus_mk.c **** /* This function is used to transmit a string of characters via 
 157:App/STM32F4-Discovery/modbus_mk.c ****  * the USART specified in USARTx.
 158:App/STM32F4-Discovery/modbus_mk.c ****  * 
 159:App/STM32F4-Discovery/modbus_mk.c ****  * It takes two arguments: USARTx --> can be any of the USARTs e.g. USART1, USART2 etc.
 160:App/STM32F4-Discovery/modbus_mk.c ****  * 						   (volatile) char *s is the string you want to send
 161:App/STM32F4-Discovery/modbus_mk.c ****  * 
 162:App/STM32F4-Discovery/modbus_mk.c ****  * Note: The string has to be passed to the function as a pointer because
 163:App/STM32F4-Discovery/modbus_mk.c ****  * 		 the compiler doesn't know the 'string' data type. In standard
 164:App/STM32F4-Discovery/modbus_mk.c ****  * 		 C a string is just an array of characters
 165:App/STM32F4-Discovery/modbus_mk.c ****  * 
 166:App/STM32F4-Discovery/modbus_mk.c ****  * Note 2: At the moment it takes a volatile char because the received_string variable
 167:App/STM32F4-Discovery/modbus_mk.c ****  * 		   declared as volatile char --> otherwise the compiler will spit out warnings
 168:App/STM32F4-Discovery/modbus_mk.c ****  * */
 169:App/STM32F4-Discovery/modbus_mk.c **** void USART_puts(uint8_t *s, int nb)
 170:App/STM32F4-Discovery/modbus_mk.c **** {
 732              		.loc 1 170 0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 16
 735              		@ frame_needed = 1, uses_anonymous_args = 0
 736              		@ link register save eliminated.
 737 0000 80B4     		push	{r7}
 738              	.LCFI3:
 739              		.cfi_def_cfa_offset 4
 740              		.cfi_offset 7, -4
 741 0002 85B0     		sub	sp, sp, #20
 742              	.LCFI4:
 743              		.cfi_def_cfa_offset 24
 744 0004 00AF     		add	r7, sp, #0
 745              	.LCFI5:
 746              		.cfi_def_cfa_register 7
 747 0006 7860     		str	r0, [r7, #4]
 748 0008 3960     		str	r1, [r7]
 171:App/STM32F4-Discovery/modbus_mk.c **** 	int i = 0;
 749              		.loc 1 171 0
 750 000a 0023     		movs	r3, #0
 751 000c FB60     		str	r3, [r7, #12]
 172:App/STM32F4-Discovery/modbus_mk.c **** 	while(i < nb && *s){
 752              		.loc 1 172 0
 753 000e 10E0     		b	.L5
 754              	.L8:
 173:App/STM32F4-Discovery/modbus_mk.c **** 		// wait until data register is empty
 174:App/STM32F4-Discovery/modbus_mk.c **** 		while( !(USART6->SR & 0x00000040) ); 
 755              		.loc 1 174 0
 756 0010 00BF     		nop
 757              	.L6:
 758              		.loc 1 174 0 is_stmt 0 discriminator 1
 759 0012 0E4B     		ldr	r3, .L9
 760 0014 1B88     		ldrh	r3, [r3]	@ movhi
 761 0016 9BB2     		uxth	r3, r3
 762 0018 03F04003 		and	r3, r3, #64
 763 001c 002B     		cmp	r3, #0
 764 001e F8D0     		beq	.L6
 175:App/STM32F4-Discovery/modbus_mk.c **** 		//USART_SendData(USART6, s[i]);
 176:App/STM32F4-Discovery/modbus_mk.c **** 		USART6->DR = s[i];
 765              		.loc 1 176 0 is_stmt 1
 766 0020 0A4B     		ldr	r3, .L9
 767 0022 FA68     		ldr	r2, [r7, #12]
 768 0024 7968     		ldr	r1, [r7, #4]
 769 0026 0A44     		add	r2, r2, r1
 770 0028 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 771 002a 9A80     		strh	r2, [r3, #4]	@ movhi
 177:App/STM32F4-Discovery/modbus_mk.c **** 		i++;
 772              		.loc 1 177 0
 773 002c FB68     		ldr	r3, [r7, #12]
 774 002e 0133     		adds	r3, r3, #1
 775 0030 FB60     		str	r3, [r7, #12]
 776              	.L5:
 172:App/STM32F4-Discovery/modbus_mk.c **** 	while(i < nb && *s){
 777              		.loc 1 172 0 discriminator 1
 778 0032 FA68     		ldr	r2, [r7, #12]
 779 0034 3B68     		ldr	r3, [r7]
 780 0036 9A42     		cmp	r2, r3
 781 0038 03DA     		bge	.L4
 172:App/STM32F4-Discovery/modbus_mk.c **** 	while(i < nb && *s){
 782              		.loc 1 172 0 is_stmt 0 discriminator 2
 783 003a 7B68     		ldr	r3, [r7, #4]
 784 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 785 003e 002B     		cmp	r3, #0
 786 0040 E6D1     		bne	.L8
 787              	.L4:
 178:App/STM32F4-Discovery/modbus_mk.c **** 	
 179:App/STM32F4-Discovery/modbus_mk.c **** 	}
 180:App/STM32F4-Discovery/modbus_mk.c **** 	
 181:App/STM32F4-Discovery/modbus_mk.c **** 	
 182:App/STM32F4-Discovery/modbus_mk.c **** }
 788              		.loc 1 182 0 is_stmt 1
 789 0042 1437     		adds	r7, r7, #20
 790 0044 BD46     		mov	sp, r7
 791              		@ sp needed
 792 0046 5DF8047B 		ldr	r7, [sp], #4
 793 004a 7047     		bx	lr
 794              	.L10:
 795              		.align	2
 796              	.L9:
 797 004c 00140140 		.word	1073812480
 798              		.cfi_endproc
 799              	.LFE111:
 801              		.section	.text.USART6_IRQHandler,"ax",%progbits
 802              		.align	2
 803              		.global	USART6_IRQHandler
 804              		.thumb
 805              		.thumb_func
 807              	USART6_IRQHandler:
 808              	.LFB112:
 183:App/STM32F4-Discovery/modbus_mk.c **** 
 184:App/STM32F4-Discovery/modbus_mk.c **** // this is the interrupt request handler (IRQ) for ALL USART6 interrupts
 185:App/STM32F4-Discovery/modbus_mk.c **** void USART6_IRQHandler(void){
 809              		.loc 1 185 0
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 8
 812              		@ frame_needed = 1, uses_anonymous_args = 0
 813 0000 80B5     		push	{r7, lr}
 814              	.LCFI6:
 815              		.cfi_def_cfa_offset 8
 816              		.cfi_offset 7, -8
 817              		.cfi_offset 14, -4
 818 0002 82B0     		sub	sp, sp, #8
 819              	.LCFI7:
 820              		.cfi_def_cfa_offset 16
 821 0004 00AF     		add	r7, sp, #0
 822              	.LCFI8:
 823              		.cfi_def_cfa_register 7
 186:App/STM32F4-Discovery/modbus_mk.c **** 	
 187:App/STM32F4-Discovery/modbus_mk.c **** 	
 188:App/STM32F4-Discovery/modbus_mk.c **** 
 189:App/STM32F4-Discovery/modbus_mk.c **** 	// check if the USART1 receive interrupt flag was set
 190:App/STM32F4-Discovery/modbus_mk.c **** 	if( USART_GetITStatus(USARTx, USART_IT_RXNE) ){
 824              		.loc 1 190 0
 825 0006 2348     		ldr	r0, .L15
 826 0008 40F22551 		movw	r1, #1317
 827 000c FFF7FEFF 		bl	USART_GetITStatus
 828 0010 0346     		mov	r3, r0
 829 0012 002B     		cmp	r3, #0
 830 0014 33D0     		beq	.L12
 831              	.LBB2:
 191:App/STM32F4-Discovery/modbus_mk.c **** 		
 192:App/STM32F4-Discovery/modbus_mk.c **** 		
 193:App/STM32F4-Discovery/modbus_mk.c **** 		static uint8_t cnt = 0; // this counter is used to determine the string length
 194:App/STM32F4-Discovery/modbus_mk.c **** 		char t = USARTx->DR; // the character from the USART1 data register is saved in t
 832              		.loc 1 194 0
 833 0016 1F4B     		ldr	r3, .L15
 834 0018 9B88     		ldrh	r3, [r3, #4]	@ movhi
 835 001a 9BB2     		uxth	r3, r3
 836 001c FB71     		strb	r3, [r7, #7]
 195:App/STM32F4-Discovery/modbus_mk.c **** 		
 196:App/STM32F4-Discovery/modbus_mk.c **** 		/* check if the received character is not the LF character (used to determine end of string) 
 197:App/STM32F4-Discovery/modbus_mk.c **** 		 * or the if the maximum string length has been been reached 
 198:App/STM32F4-Discovery/modbus_mk.c **** 		 */
 199:App/STM32F4-Discovery/modbus_mk.c **** 		xHigherPriorityTaskWoken_usart = pdFalse;
 837              		.loc 1 199 0
 838 001e 1E4B     		ldr	r3, .L15+4
 839 0020 0022     		movs	r2, #0
 840 0022 1A60     		str	r2, [r3]
 200:App/STM32F4-Discovery/modbus_mk.c **** 
 201:App/STM32F4-Discovery/modbus_mk.c **** 		
 202:App/STM32F4-Discovery/modbus_mk.c **** 		if( (cnt < rx_length  ) && (cnt < MAX_STRLEN) ){ 
 841              		.loc 1 202 0
 842 0024 1D4B     		ldr	r3, .L15+8
 843 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 844 0028 1A46     		mov	r2, r3
 845 002a 1D4B     		ldr	r3, .L15+12
 846 002c 1B68     		ldr	r3, [r3]
 847 002e 9A42     		cmp	r2, r3
 848 0030 11DA     		bge	.L13
 849              		.loc 1 202 0 is_stmt 0 discriminator 1
 850 0032 1A4B     		ldr	r3, .L15+8
 851 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 852 0036 DBB2     		uxtb	r3, r3
 853 0038 5BB2     		sxtb	r3, r3
 854 003a 002B     		cmp	r3, #0
 855 003c 0BDB     		blt	.L13
 203:App/STM32F4-Discovery/modbus_mk.c **** 			received_string[cnt] = t;
 856              		.loc 1 203 0 is_stmt 1
 857 003e 174B     		ldr	r3, .L15+8
 858 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 859 0042 184A     		ldr	r2, .L15+16
 860 0044 F979     		ldrb	r1, [r7, #7]
 861 0046 D154     		strb	r1, [r2, r3]
 204:App/STM32F4-Discovery/modbus_mk.c **** 			cnt++;
 862              		.loc 1 204 0
 863 0048 144B     		ldr	r3, .L15+8
 864 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 865 004c 0133     		adds	r3, r3, #1
 866 004e DAB2     		uxtb	r2, r3
 867 0050 124B     		ldr	r3, .L15+8
 868 0052 1A70     		strb	r2, [r3]
 869 0054 13E0     		b	.L12
 870              	.L13:
 205:App/STM32F4-Discovery/modbus_mk.c **** 		}
 206:App/STM32F4-Discovery/modbus_mk.c **** 		else{ // otherwise reset the character counter and print the received string
 207:App/STM32F4-Discovery/modbus_mk.c **** 			received_string[cnt] = t; 
 871              		.loc 1 207 0
 872 0056 114B     		ldr	r3, .L15+8
 873 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 874 005a 124A     		ldr	r2, .L15+16
 875 005c F979     		ldrb	r1, [r7, #7]
 876 005e D154     		strb	r1, [r2, r3]
 208:App/STM32F4-Discovery/modbus_mk.c **** 			cnt = 0;
 877              		.loc 1 208 0
 878 0060 0E4B     		ldr	r3, .L15+8
 879 0062 0022     		movs	r2, #0
 880 0064 1A70     		strb	r2, [r3]
 209:App/STM32F4-Discovery/modbus_mk.c **** 		//	USART_ITConfig(USART6, USART_IT_RXNE, DISABLE); 
 210:App/STM32F4-Discovery/modbus_mk.c **** 		taskENTER_CRITICAL();
 881              		.loc 1 210 0
 882 0066 FFF7FEFF 		bl	vPortEnterCritical
 211:App/STM32F4-Discovery/modbus_mk.c **** 			xSemaphoreGiveFromISR(xSmphrUSART,&xHigherPriorityTaskWoken_usart );
 883              		.loc 1 211 0
 884 006a 0F4B     		ldr	r3, .L15+20
 885 006c 1B68     		ldr	r3, [r3]
 886 006e 1846     		mov	r0, r3
 887 0070 0021     		movs	r1, #0
 888 0072 094A     		ldr	r2, .L15+4
 889 0074 0023     		movs	r3, #0
 890 0076 FFF7FEFF 		bl	xQueueGenericSendFromISR
 212:App/STM32F4-Discovery/modbus_mk.c **** 		taskEXIT_CRITICAL();
 891              		.loc 1 212 0
 892 007a FFF7FEFF 		bl	vPortExitCritical
 893              	.L12:
 894              	.LBE2:
 213:App/STM32F4-Discovery/modbus_mk.c **** 			//USART_puts(USART1, received_string);
 214:App/STM32F4-Discovery/modbus_mk.c **** 		}
 215:App/STM32F4-Discovery/modbus_mk.c **** 
 216:App/STM32F4-Discovery/modbus_mk.c **** 
 217:App/STM32F4-Discovery/modbus_mk.c **** 	}
 218:App/STM32F4-Discovery/modbus_mk.c ****  portYIELD_FROM_ISR( xHigherPriorityTaskWoken_usart );
 895              		.loc 1 218 0
 896 007e 064B     		ldr	r3, .L15+4
 897 0080 1B68     		ldr	r3, [r3]
 898 0082 002B     		cmp	r3, #0
 899 0084 03D0     		beq	.L11
 900              		.loc 1 218 0 is_stmt 0 discriminator 1
 901 0086 094B     		ldr	r3, .L15+24
 902 0088 4FF08052 		mov	r2, #268435456
 903 008c 1A60     		str	r2, [r3]
 904              	.L11:
 219:App/STM32F4-Discovery/modbus_mk.c **** 	
 220:App/STM32F4-Discovery/modbus_mk.c **** }
 905              		.loc 1 220 0 is_stmt 1
 906 008e 0837     		adds	r7, r7, #8
 907 0090 BD46     		mov	sp, r7
 908              		@ sp needed
 909 0092 80BD     		pop	{r7, pc}
 910              	.L16:
 911              		.align	2
 912              	.L15:
 913 0094 00140140 		.word	1073812480
 914 0098 00000000 		.word	xHigherPriorityTaskWoken_usart
 915 009c 00000000 		.word	cnt.9199
 916 00a0 00000000 		.word	rx_length
 917 00a4 00000000 		.word	received_string
 918 00a8 00000000 		.word	xSmphrUSART
 919 00ac 04ED00E0 		.word	-536810236
 920              		.cfi_endproc
 921              	.LFE112:
 923              		.section	.text.crc16,"ax",%progbits
 924              		.align	2
 925              		.global	crc16
 926              		.thumb
 927              		.thumb_func
 929              	crc16:
 930              	.LFB113:
 221:App/STM32F4-Discovery/modbus_mk.c **** 
 222:App/STM32F4-Discovery/modbus_mk.c **** 
 223:App/STM32F4-Discovery/modbus_mk.c **** 
 224:App/STM32F4-Discovery/modbus_mk.c **** /* function for  */
 225:App/STM32F4-Discovery/modbus_mk.c **** uint16_t crc16(uint8_t *buffer, uint16_t buffer_length)
 226:App/STM32F4-Discovery/modbus_mk.c **** {
 931              		.loc 1 226 0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 16
 934              		@ frame_needed = 1, uses_anonymous_args = 0
 935              		@ link register save eliminated.
 936 0000 80B4     		push	{r7}
 937              	.LCFI9:
 938              		.cfi_def_cfa_offset 4
 939              		.cfi_offset 7, -4
 940 0002 85B0     		sub	sp, sp, #20
 941              	.LCFI10:
 942              		.cfi_def_cfa_offset 24
 943 0004 00AF     		add	r7, sp, #0
 944              	.LCFI11:
 945              		.cfi_def_cfa_register 7
 946 0006 7860     		str	r0, [r7, #4]
 947 0008 0B46     		mov	r3, r1
 948 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 227:App/STM32F4-Discovery/modbus_mk.c ****      uint8_t crc_hi = 0xFF; /* high CRC byte initialized */
 949              		.loc 1 227 0
 950 000c FF23     		movs	r3, #255
 951 000e FB73     		strb	r3, [r7, #15]
 228:App/STM32F4-Discovery/modbus_mk.c ****      uint8_t crc_lo = 0xFF; /* low CRC byte initialized */
 952              		.loc 1 228 0
 953 0010 FF23     		movs	r3, #255
 954 0012 BB73     		strb	r3, [r7, #14]
 229:App/STM32F4-Discovery/modbus_mk.c ****      unsigned int i; /* will index into CRC lookup */
 230:App/STM32F4-Discovery/modbus_mk.c ****  
 231:App/STM32F4-Discovery/modbus_mk.c ****      /* pass through message buffer */
 232:App/STM32F4-Discovery/modbus_mk.c ****      while (buffer_length--) {
 955              		.loc 1 232 0
 956 0014 13E0     		b	.L18
 957              	.L19:
 233:App/STM32F4-Discovery/modbus_mk.c ****          i = crc_hi ^ *buffer++; /* calculate the CRC  */
 958              		.loc 1 233 0
 959 0016 7B68     		ldr	r3, [r7, #4]
 960 0018 5A1C     		adds	r2, r3, #1
 961 001a 7A60     		str	r2, [r7, #4]
 962 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 963 001e FB7B     		ldrb	r3, [r7, #15]
 964 0020 5340     		eors	r3, r3, r2
 965 0022 DBB2     		uxtb	r3, r3
 966 0024 BB60     		str	r3, [r7, #8]
 234:App/STM32F4-Discovery/modbus_mk.c ****          crc_hi = crc_lo ^ table_crc_hi[i];
 967              		.loc 1 234 0
 968 0026 0F4A     		ldr	r2, .L21
 969 0028 BB68     		ldr	r3, [r7, #8]
 970 002a 1344     		add	r3, r3, r2
 971 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 972 002e BB7B     		ldrb	r3, [r7, #14]
 973 0030 5340     		eors	r3, r3, r2
 974 0032 FB73     		strb	r3, [r7, #15]
 235:App/STM32F4-Discovery/modbus_mk.c ****          crc_lo = table_crc_lo[i];
 975              		.loc 1 235 0
 976 0034 0C4A     		ldr	r2, .L21+4
 977 0036 BB68     		ldr	r3, [r7, #8]
 978 0038 1344     		add	r3, r3, r2
 979 003a 1B78     		ldrb	r3, [r3]
 980 003c BB73     		strb	r3, [r7, #14]
 981              	.L18:
 232:App/STM32F4-Discovery/modbus_mk.c ****      while (buffer_length--) {
 982              		.loc 1 232 0 discriminator 1
 983 003e 7B88     		ldrh	r3, [r7, #2]
 984 0040 5A1E     		subs	r2, r3, #1
 985 0042 7A80     		strh	r2, [r7, #2]	@ movhi
 986 0044 002B     		cmp	r3, #0
 987 0046 E6D1     		bne	.L19
 236:App/STM32F4-Discovery/modbus_mk.c ****      }
 237:App/STM32F4-Discovery/modbus_mk.c ****  
 238:App/STM32F4-Discovery/modbus_mk.c ****      return (crc_hi << 8 | crc_lo);
 988              		.loc 1 238 0
 989 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 990 004a 1B02     		lsls	r3, r3, #8
 991 004c 9AB2     		uxth	r2, r3
 992 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 993 0050 9BB2     		uxth	r3, r3
 994 0052 1343     		orrs	r3, r3, r2
 995 0054 9BB2     		uxth	r3, r3
 996 0056 9BB2     		uxth	r3, r3
 239:App/STM32F4-Discovery/modbus_mk.c **** }
 997              		.loc 1 239 0
 998 0058 1846     		mov	r0, r3
 999 005a 1437     		adds	r7, r7, #20
 1000 005c BD46     		mov	sp, r7
 1001              		@ sp needed
 1002 005e 5DF8047B 		ldr	r7, [sp], #4
 1003 0062 7047     		bx	lr
 1004              	.L22:
 1005              		.align	2
 1006              	.L21:
 1007 0064 00000000 		.word	table_crc_hi
 1008 0068 00000000 		.word	table_crc_lo
 1009              		.cfi_endproc
 1010              	.LFE113:
 1012              		.section	.text.write_read_modbus,"ax",%progbits
 1013              		.align	2
 1014              		.global	write_read_modbus
 1015              		.thumb
 1016              		.thumb_func
 1018              	write_read_modbus:
 1019              	.LFB114:
 240:App/STM32F4-Discovery/modbus_mk.c **** 
 241:App/STM32F4-Discovery/modbus_mk.c **** 
 242:App/STM32F4-Discovery/modbus_mk.c **** /* write to modbus */
 243:App/STM32F4-Discovery/modbus_mk.c **** void write_read_modbus( uint8_t * req, uint8_t * rsp, int write_len, int read_len )
 244:App/STM32F4-Discovery/modbus_mk.c **** {
 1020              		.loc 1 244 0
 1021              		.cfi_startproc
 1022              		@ args = 0, pretend = 0, frame = 24
 1023              		@ frame_needed = 1, uses_anonymous_args = 0
 1024 0000 80B5     		push	{r7, lr}
 1025              	.LCFI12:
 1026              		.cfi_def_cfa_offset 8
 1027              		.cfi_offset 7, -8
 1028              		.cfi_offset 14, -4
 1029 0002 86B0     		sub	sp, sp, #24
 1030              	.LCFI13:
 1031              		.cfi_def_cfa_offset 32
 1032 0004 00AF     		add	r7, sp, #0
 1033              	.LCFI14:
 1034              		.cfi_def_cfa_register 7
 1035 0006 F860     		str	r0, [r7, #12]
 1036 0008 B960     		str	r1, [r7, #8]
 1037 000a 7A60     		str	r2, [r7, #4]
 1038 000c 3B60     		str	r3, [r7]
 245:App/STM32F4-Discovery/modbus_mk.c **** 	int i; 
 246:App/STM32F4-Discovery/modbus_mk.c **** 
 247:App/STM32F4-Discovery/modbus_mk.c **** 	// tell ISR we expect only specific amount of data
 248:App/STM32F4-Discovery/modbus_mk.c **** 	rx_length = read_len + write_len - 1 ; 
 1039              		.loc 1 248 0
 1040 000e 3A68     		ldr	r2, [r7]
 1041 0010 7B68     		ldr	r3, [r7, #4]
 1042 0012 1344     		add	r3, r3, r2
 1043 0014 5A1E     		subs	r2, r3, #1
 1044 0016 254B     		ldr	r3, .L30
 1045 0018 1A60     		str	r2, [r3]
 249:App/STM32F4-Discovery/modbus_mk.c **** 
 250:App/STM32F4-Discovery/modbus_mk.c **** 	// driver disable 
 251:App/STM32F4-Discovery/modbus_mk.c **** 	DD();
 1046              		.loc 1 251 0
 1047 001a 254B     		ldr	r3, .L30+4
 1048 001c 244A     		ldr	r2, .L30+4
 1049 001e 128B     		ldrh	r2, [r2, #24]	@ movhi
 1050 0020 92B2     		uxth	r2, r2
 1051 0022 42F48072 		orr	r2, r2, #256
 1052 0026 92B2     		uxth	r2, r2
 1053 0028 1A83     		strh	r2, [r3, #24]	@ movhi
 252:App/STM32F4-Discovery/modbus_mk.c **** 	for (i=0; i < 4000; i++) ;
 1054              		.loc 1 252 0
 1055 002a 0023     		movs	r3, #0
 1056 002c 7B61     		str	r3, [r7, #20]
 1057 002e 02E0     		b	.L24
 1058              	.L25:
 1059              		.loc 1 252 0 is_stmt 0 discriminator 2
 1060 0030 7B69     		ldr	r3, [r7, #20]
 1061 0032 0133     		adds	r3, r3, #1
 1062 0034 7B61     		str	r3, [r7, #20]
 1063              	.L24:
 1064              		.loc 1 252 0 discriminator 1
 1065 0036 7B69     		ldr	r3, [r7, #20]
 1066 0038 B3F57A6F 		cmp	r3, #4000
 1067 003c F8DB     		blt	.L25
 253:App/STM32F4-Discovery/modbus_mk.c **** 	USART_puts(req,write_len);
 1068              		.loc 1 253 0 is_stmt 1
 1069 003e F868     		ldr	r0, [r7, #12]
 1070 0040 7968     		ldr	r1, [r7, #4]
 1071 0042 FFF7FEFF 		bl	USART_puts
 254:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < 4000; i++);
 1072              		.loc 1 254 0
 1073 0046 0023     		movs	r3, #0
 1074 0048 7B61     		str	r3, [r7, #20]
 1075 004a 02E0     		b	.L26
 1076              	.L27:
 1077              		.loc 1 254 0 is_stmt 0 discriminator 2
 1078 004c 7B69     		ldr	r3, [r7, #20]
 1079 004e 0133     		adds	r3, r3, #1
 1080 0050 7B61     		str	r3, [r7, #20]
 1081              	.L26:
 1082              		.loc 1 254 0 discriminator 1
 1083 0052 7B69     		ldr	r3, [r7, #20]
 1084 0054 B3F57A6F 		cmp	r3, #4000
 1085 0058 F8DB     		blt	.L27
 255:App/STM32F4-Discovery/modbus_mk.c **** 	// driver enable 
 256:App/STM32F4-Discovery/modbus_mk.c **** 	DE();
 1086              		.loc 1 256 0 is_stmt 1
 1087 005a 154B     		ldr	r3, .L30+4
 1088 005c 144A     		ldr	r2, .L30+4
 1089 005e 528B     		ldrh	r2, [r2, #26]	@ movhi
 1090 0060 92B2     		uxth	r2, r2
 1091 0062 42F48072 		orr	r2, r2, #256
 1092 0066 92B2     		uxth	r2, r2
 1093 0068 5A83     		strh	r2, [r3, #26]	@ movhi
 257:App/STM32F4-Discovery/modbus_mk.c **** 
 258:App/STM32F4-Discovery/modbus_mk.c **** 	xSemaphoreTake(xSmphrUSART, portMAX_DELAY);
 1094              		.loc 1 258 0
 1095 006a 124B     		ldr	r3, .L30+8
 1096 006c 1B68     		ldr	r3, [r3]
 1097 006e 1846     		mov	r0, r3
 1098 0070 0021     		movs	r1, #0
 1099 0072 4FF0FF32 		mov	r2, #-1
 1100 0076 0023     		movs	r3, #0
 1101 0078 FFF7FEFF 		bl	xQueueGenericReceive
 259:App/STM32F4-Discovery/modbus_mk.c **** 	
 260:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < read_len; i++) 
 1102              		.loc 1 260 0
 1103 007c 0023     		movs	r3, #0
 1104 007e 7B61     		str	r3, [r7, #20]
 1105 0080 0CE0     		b	.L28
 1106              	.L29:
 261:App/STM32F4-Discovery/modbus_mk.c **** 		rsp[i] = received_string[i+write_len]; 
 1107              		.loc 1 261 0 discriminator 2
 1108 0082 7B69     		ldr	r3, [r7, #20]
 1109 0084 BA68     		ldr	r2, [r7, #8]
 1110 0086 1344     		add	r3, r3, r2
 1111 0088 7969     		ldr	r1, [r7, #20]
 1112 008a 7A68     		ldr	r2, [r7, #4]
 1113 008c 0A44     		add	r2, r2, r1
 1114 008e 0A49     		ldr	r1, .L30+12
 1115 0090 8A5C     		ldrb	r2, [r1, r2]
 1116 0092 D2B2     		uxtb	r2, r2
 1117 0094 1A70     		strb	r2, [r3]
 260:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < read_len; i++) 
 1118              		.loc 1 260 0 discriminator 2
 1119 0096 7B69     		ldr	r3, [r7, #20]
 1120 0098 0133     		adds	r3, r3, #1
 1121 009a 7B61     		str	r3, [r7, #20]
 1122              	.L28:
 260:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < read_len; i++) 
 1123              		.loc 1 260 0 is_stmt 0 discriminator 1
 1124 009c 7A69     		ldr	r2, [r7, #20]
 1125 009e 3B68     		ldr	r3, [r7]
 1126 00a0 9A42     		cmp	r2, r3
 1127 00a2 EEDB     		blt	.L29
 262:App/STM32F4-Discovery/modbus_mk.c **** 
 263:App/STM32F4-Discovery/modbus_mk.c **** }
 1128              		.loc 1 263 0 is_stmt 1
 1129 00a4 1837     		adds	r7, r7, #24
 1130 00a6 BD46     		mov	sp, r7
 1131              		@ sp needed
 1132 00a8 80BD     		pop	{r7, pc}
 1133              	.L31:
 1134 00aa 00BF     		.align	2
 1135              	.L30:
 1136 00ac 00000000 		.word	rx_length
 1137 00b0 00180240 		.word	1073879040
 1138 00b4 00000000 		.word	xSmphrUSART
 1139 00b8 00000000 		.word	received_string
 1140              		.cfi_endproc
 1141              	.LFE114:
 1143              		.section	.text.modbus_RIB,"ax",%progbits
 1144              		.align	2
 1145              		.global	modbus_RIB
 1146              		.thumb
 1147              		.thumb_func
 1149              	modbus_RIB:
 1150              	.LFB115:
 264:App/STM32F4-Discovery/modbus_mk.c **** 
 265:App/STM32F4-Discovery/modbus_mk.c **** 
 266:App/STM32F4-Discovery/modbus_mk.c **** /* modbus read input bits */
 267:App/STM32F4-Discovery/modbus_mk.c **** void modbus_RIB( int16_t address, int nb, uint8_t *dst )
 268:App/STM32F4-Discovery/modbus_mk.c **** {
 1151              		.loc 1 268 0
 1152              		.cfi_startproc
 1153              		@ args = 0, pretend = 0, frame = 536
 1154              		@ frame_needed = 1, uses_anonymous_args = 0
 1155 0000 80B5     		push	{r7, lr}
 1156              	.LCFI15:
 1157              		.cfi_def_cfa_offset 8
 1158              		.cfi_offset 7, -8
 1159              		.cfi_offset 14, -4
 1160 0002 ADF5067D 		sub	sp, sp, #536
 1161              	.LCFI16:
 1162              		.cfi_def_cfa_offset 544
 1163 0006 00AF     		add	r7, sp, #0
 1164              	.LCFI17:
 1165              		.cfi_def_cfa_register 7
 1166 0008 07F10803 		add	r3, r7, #8
 1167 000c 1960     		str	r1, [r3]
 1168 000e 3B1D     		adds	r3, r7, #4
 1169 0010 1A60     		str	r2, [r3]
 1170 0012 07F10E03 		add	r3, r7, #14
 1171 0016 0246     		mov	r2, r0	@ movhi
 1172 0018 1A80     		strh	r2, [r3]	@ movhi
 269:App/STM32F4-Discovery/modbus_mk.c **** 	/* first send request */
 270:App/STM32F4-Discovery/modbus_mk.c **** 
 271:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t req[REQ_MAX_LEN];
 272:App/STM32F4-Discovery/modbus_mk.c **** 	int req_length; 
 273:App/STM32F4-Discovery/modbus_mk.c **** 	
 274:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 1173              		.loc 1 274 0
 1174 001a 07F11003 		add	r3, r7, #16
 1175 001e 3622     		movs	r2, #54
 1176 0020 1A70     		strb	r2, [r3]
 275:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0x2;
 1177              		.loc 1 275 0
 1178 0022 07F11003 		add	r3, r7, #16
 1179 0026 0222     		movs	r2, #2
 1180 0028 5A70     		strb	r2, [r3, #1]
 276:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 1181              		.loc 1 276 0
 1182 002a 07F10E03 		add	r3, r7, #14
 1183 002e B3F90030 		ldrsh	r3, [r3]
 1184 0032 1B12     		asrs	r3, r3, #8
 1185 0034 9BB2     		uxth	r3, r3
 1186 0036 DAB2     		uxtb	r2, r3
 1187 0038 07F11003 		add	r3, r7, #16
 1188 003c 9A70     		strb	r2, [r3, #2]
 277:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 1189              		.loc 1 277 0
 1190 003e 07F10E03 		add	r3, r7, #14
 1191 0042 1B88     		ldrh	r3, [r3]	@ movhi
 1192 0044 DAB2     		uxtb	r2, r3
 1193 0046 07F11003 		add	r3, r7, #16
 1194 004a DA70     		strb	r2, [r3, #3]
 278:App/STM32F4-Discovery/modbus_mk.c **** 	req[4] = nb >> 8;
 1195              		.loc 1 278 0
 1196 004c 07F10803 		add	r3, r7, #8
 1197 0050 1B68     		ldr	r3, [r3]
 1198 0052 1B12     		asrs	r3, r3, #8
 1199 0054 DAB2     		uxtb	r2, r3
 1200 0056 07F11003 		add	r3, r7, #16
 1201 005a 1A71     		strb	r2, [r3, #4]
 279:App/STM32F4-Discovery/modbus_mk.c **** 	req[5] = nb & 0x00ff; 
 1202              		.loc 1 279 0
 1203 005c 07F10803 		add	r3, r7, #8
 1204 0060 1B68     		ldr	r3, [r3]
 1205 0062 DAB2     		uxtb	r2, r3
 1206 0064 07F11003 		add	r3, r7, #16
 1207 0068 5A71     		strb	r2, [r3, #5]
 280:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 6;
 1208              		.loc 1 280 0
 1209 006a 0623     		movs	r3, #6
 1210 006c C7F81432 		str	r3, [r7, #532]
 281:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 1211              		.loc 1 281 0
 1212 0070 D7F81432 		ldr	r3, [r7, #532]
 1213 0074 9BB2     		uxth	r3, r3
 1214 0076 07F11002 		add	r2, r7, #16
 1215 007a 1046     		mov	r0, r2
 1216 007c 1946     		mov	r1, r3
 1217 007e FFF7FEFF 		bl	crc16
 1218 0082 0346     		mov	r3, r0
 1219 0084 A7F81232 		strh	r3, [r7, #530]	@ movhi
 282:App/STM32F4-Discovery/modbus_mk.c **** 
 283:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 1220              		.loc 1 283 0
 1221 0088 D7F81432 		ldr	r3, [r7, #532]
 1222 008c 5A1C     		adds	r2, r3, #1
 1223 008e C7F81422 		str	r2, [r7, #532]
 1224 0092 B7F81222 		ldrh	r2, [r7, #530]
 1225 0096 120A     		lsrs	r2, r2, #8
 1226 0098 92B2     		uxth	r2, r2
 1227 009a D1B2     		uxtb	r1, r2
 1228 009c 07F11002 		add	r2, r7, #16
 1229 00a0 D154     		strb	r1, [r2, r3]
 284:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff; 
 1230              		.loc 1 284 0
 1231 00a2 D7F81432 		ldr	r3, [r7, #532]
 1232 00a6 5A1C     		adds	r2, r3, #1
 1233 00a8 C7F81422 		str	r2, [r7, #532]
 1234 00ac B7F81222 		ldrh	r2, [r7, #530]	@ movhi
 1235 00b0 D1B2     		uxtb	r1, r2
 1236 00b2 07F11002 		add	r2, r7, #16
 1237 00b6 D154     		strb	r1, [r2, r3]
 285:App/STM32F4-Discovery/modbus_mk.c **** 	
 286:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req, dst, req_length, 6);
 1238              		.loc 1 286 0
 1239 00b8 07F11002 		add	r2, r7, #16
 1240 00bc 3B1D     		adds	r3, r7, #4
 1241 00be 1046     		mov	r0, r2
 1242 00c0 1968     		ldr	r1, [r3]
 1243 00c2 D7F81422 		ldr	r2, [r7, #532]
 1244 00c6 0623     		movs	r3, #6
 1245 00c8 FFF7FEFF 		bl	write_read_modbus
 287:App/STM32F4-Discovery/modbus_mk.c **** 
 288:App/STM32F4-Discovery/modbus_mk.c **** }
 1246              		.loc 1 288 0
 1247 00cc 07F50677 		add	r7, r7, #536
 1248 00d0 BD46     		mov	sp, r7
 1249              		@ sp needed
 1250 00d2 80BD     		pop	{r7, pc}
 1251              		.cfi_endproc
 1252              	.LFE115:
 1254              		.section	.text.modbus_WIB,"ax",%progbits
 1255              		.align	2
 1256              		.global	modbus_WIB
 1257              		.thumb
 1258              		.thumb_func
 1260              	modbus_WIB:
 1261              	.LFB116:
 289:App/STM32F4-Discovery/modbus_mk.c **** 
 290:App/STM32F4-Discovery/modbus_mk.c **** 
 291:App/STM32F4-Discovery/modbus_mk.c **** /* modbus write input bits */
 292:App/STM32F4-Discovery/modbus_mk.c **** void modbus_WIB( uint16_t address, int nb, uint8_t *src )
 293:App/STM32F4-Discovery/modbus_mk.c **** {
 1262              		.loc 1 293 0
 1263              		.cfi_startproc
 1264              		@ args = 0, pretend = 0, frame = 560
 1265              		@ frame_needed = 1, uses_anonymous_args = 0
 1266 0000 80B5     		push	{r7, lr}
 1267              	.LCFI18:
 1268              		.cfi_def_cfa_offset 8
 1269              		.cfi_offset 7, -8
 1270              		.cfi_offset 14, -4
 1271 0002 ADF50C7D 		sub	sp, sp, #560
 1272              	.LCFI19:
 1273              		.cfi_def_cfa_offset 568
 1274 0006 00AF     		add	r7, sp, #0
 1275              	.LCFI20:
 1276              		.cfi_def_cfa_register 7
 1277 0008 07F10803 		add	r3, r7, #8
 1278 000c 1960     		str	r1, [r3]
 1279 000e 3B1D     		adds	r3, r7, #4
 1280 0010 1A60     		str	r2, [r3]
 1281 0012 07F10E03 		add	r3, r7, #14
 1282 0016 0246     		mov	r2, r0	@ movhi
 1283 0018 1A80     		strh	r2, [r3]	@ movhi
 294:App/STM32F4-Discovery/modbus_mk.c **** 	/* first send request */
 295:App/STM32F4-Discovery/modbus_mk.c **** 
 296:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t req[REQ_MAX_LEN];
 297:App/STM32F4-Discovery/modbus_mk.c **** 	int byte_count; 
 298:App/STM32F4-Discovery/modbus_mk.c **** 	int req_length; 
 299:App/STM32F4-Discovery/modbus_mk.c **** 	int bit_check = 0; 
 1284              		.loc 1 299 0
 1285 001a 0023     		movs	r3, #0
 1286 001c C7F82832 		str	r3, [r7, #552]
 300:App/STM32F4-Discovery/modbus_mk.c **** 	int pos = 0; 
 1287              		.loc 1 300 0
 1288 0020 0023     		movs	r3, #0
 1289 0022 C7F82432 		str	r3, [r7, #548]
 301:App/STM32F4-Discovery/modbus_mk.c **** 	
 302:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 1290              		.loc 1 302 0
 1291 0026 07F11403 		add	r3, r7, #20
 1292 002a 3622     		movs	r2, #54
 1293 002c 1A70     		strb	r2, [r3]
 303:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0xF;
 1294              		.loc 1 303 0
 1295 002e 07F11403 		add	r3, r7, #20
 1296 0032 0F22     		movs	r2, #15
 1297 0034 5A70     		strb	r2, [r3, #1]
 304:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 1298              		.loc 1 304 0
 1299 0036 07F10E03 		add	r3, r7, #14
 1300 003a 1B88     		ldrh	r3, [r3]
 1301 003c 1B0A     		lsrs	r3, r3, #8
 1302 003e 9BB2     		uxth	r3, r3
 1303 0040 DAB2     		uxtb	r2, r3
 1304 0042 07F11403 		add	r3, r7, #20
 1305 0046 9A70     		strb	r2, [r3, #2]
 305:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 1306              		.loc 1 305 0
 1307 0048 07F10E03 		add	r3, r7, #14
 1308 004c 1B88     		ldrh	r3, [r3]	@ movhi
 1309 004e DAB2     		uxtb	r2, r3
 1310 0050 07F11403 		add	r3, r7, #20
 1311 0054 DA70     		strb	r2, [r3, #3]
 306:App/STM32F4-Discovery/modbus_mk.c **** 	req[4] = nb >> 8;
 1312              		.loc 1 306 0
 1313 0056 07F10803 		add	r3, r7, #8
 1314 005a 1B68     		ldr	r3, [r3]
 1315 005c 1B12     		asrs	r3, r3, #8
 1316 005e DAB2     		uxtb	r2, r3
 1317 0060 07F11403 		add	r3, r7, #20
 1318 0064 1A71     		strb	r2, [r3, #4]
 307:App/STM32F4-Discovery/modbus_mk.c **** 	req[5] = nb & 0x00ff; 
 1319              		.loc 1 307 0
 1320 0066 07F10803 		add	r3, r7, #8
 1321 006a 1B68     		ldr	r3, [r3]
 1322 006c DAB2     		uxtb	r2, r3
 1323 006e 07F11403 		add	r3, r7, #20
 1324 0072 5A71     		strb	r2, [r3, #5]
 308:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 6; 
 1325              		.loc 1 308 0
 1326 0074 0623     		movs	r3, #6
 1327 0076 C7F82C32 		str	r3, [r7, #556]
 309:App/STM32F4-Discovery/modbus_mk.c **** 	
 310:App/STM32F4-Discovery/modbus_mk.c ****     	byte_count = (nb / 8) + ((nb % 8) ? 1 : 0);
 1328              		.loc 1 310 0
 1329 007a 07F10803 		add	r3, r7, #8
 1330 007e 1B68     		ldr	r3, [r3]
 1331 0080 002B     		cmp	r3, #0
 1332 0082 00DA     		bge	.L34
 1333 0084 0733     		adds	r3, r3, #7
 1334              	.L34:
 1335 0086 DB10     		asrs	r3, r3, #3
 1336 0088 1A46     		mov	r2, r3
 1337 008a 07F10803 		add	r3, r7, #8
 1338 008e 1B68     		ldr	r3, [r3]
 1339 0090 03F00703 		and	r3, r3, #7
 1340 0094 002B     		cmp	r3, #0
 1341 0096 0CBF     		ite	eq
 1342 0098 0023     		moveq	r3, #0
 1343 009a 0123     		movne	r3, #1
 1344 009c DBB2     		uxtb	r3, r3
 1345 009e 1344     		add	r3, r3, r2
 1346 00a0 C7F81832 		str	r3, [r7, #536]
 311:App/STM32F4-Discovery/modbus_mk.c ****   	req[req_length++] = byte_count;
 1347              		.loc 1 311 0
 1348 00a4 D7F82C32 		ldr	r3, [r7, #556]
 1349 00a8 5A1C     		adds	r2, r3, #1
 1350 00aa C7F82C22 		str	r2, [r7, #556]
 1351 00ae D7F81822 		ldr	r2, [r7, #536]
 1352 00b2 D1B2     		uxtb	r1, r2
 1353 00b4 07F11402 		add	r2, r7, #20
 1354 00b8 D154     		strb	r1, [r2, r3]
 312:App/STM32F4-Discovery/modbus_mk.c **** 
 313:App/STM32F4-Discovery/modbus_mk.c **** 	int i; 
 314:App/STM32F4-Discovery/modbus_mk.c ****     	for (i = 0; i < byte_count; i++) {
 1355              		.loc 1 314 0
 1356 00ba 0023     		movs	r3, #0
 1357 00bc C7F82032 		str	r3, [r7, #544]
 1358 00c0 5CE0     		b	.L35
 1359              	.L41:
 1360              	.LBB3:
 315:App/STM32F4-Discovery/modbus_mk.c ****         
 316:App/STM32F4-Discovery/modbus_mk.c **** 		int bit;
 317:App/STM32F4-Discovery/modbus_mk.c **** 		bit = 0x01;
 1361              		.loc 1 317 0
 1362 00c2 0123     		movs	r3, #1
 1363 00c4 C7F81C32 		str	r3, [r7, #540]
 318:App/STM32F4-Discovery/modbus_mk.c ****         	req[req_length] = 0;
 1364              		.loc 1 318 0
 1365 00c8 07F11402 		add	r2, r7, #20
 1366 00cc D7F82C32 		ldr	r3, [r7, #556]
 1367 00d0 1344     		add	r3, r3, r2
 1368 00d2 0022     		movs	r2, #0
 1369 00d4 1A70     		strb	r2, [r3]
 319:App/STM32F4-Discovery/modbus_mk.c **** 
 320:App/STM32F4-Discovery/modbus_mk.c ****         	while ((bit & 0xFF) && (bit_check++ < nb)) {
 1370              		.loc 1 320 0
 1371 00d6 38E0     		b	.L36
 1372              	.L40:
 321:App/STM32F4-Discovery/modbus_mk.c ****             		if (src[pos++])
 1373              		.loc 1 321 0
 1374 00d8 D7F82432 		ldr	r3, [r7, #548]
 1375 00dc 5A1C     		adds	r2, r3, #1
 1376 00de C7F82422 		str	r2, [r7, #548]
 1377 00e2 3A1D     		adds	r2, r7, #4
 1378 00e4 1268     		ldr	r2, [r2]
 1379 00e6 1344     		add	r3, r3, r2
 1380 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1381 00ea 002B     		cmp	r3, #0
 1382 00ec 13D0     		beq	.L37
 322:App/STM32F4-Discovery/modbus_mk.c ****                 		req[req_length] |= bit;
 1383              		.loc 1 322 0
 1384 00ee 07F11402 		add	r2, r7, #20
 1385 00f2 D7F82C32 		ldr	r3, [r7, #556]
 1386 00f6 1344     		add	r3, r3, r2
 1387 00f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1388 00fa DAB2     		uxtb	r2, r3
 1389 00fc D7F81C32 		ldr	r3, [r7, #540]
 1390 0100 DBB2     		uxtb	r3, r3
 1391 0102 1343     		orrs	r3, r3, r2
 1392 0104 DBB2     		uxtb	r3, r3
 1393 0106 DAB2     		uxtb	r2, r3
 1394 0108 07F11401 		add	r1, r7, #20
 1395 010c D7F82C32 		ldr	r3, [r7, #556]
 1396 0110 0B44     		add	r3, r3, r1
 1397 0112 1A70     		strb	r2, [r3]
 1398 0114 14E0     		b	.L38
 1399              	.L37:
 323:App/STM32F4-Discovery/modbus_mk.c ****             		else
 324:App/STM32F4-Discovery/modbus_mk.c ****                 		req[req_length] &=~ bit;
 1400              		.loc 1 324 0
 1401 0116 07F11402 		add	r2, r7, #20
 1402 011a D7F82C32 		ldr	r3, [r7, #556]
 1403 011e 1344     		add	r3, r3, r2
 1404 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1405 0122 DAB2     		uxtb	r2, r3
 1406 0124 D7F81C32 		ldr	r3, [r7, #540]
 1407 0128 DBB2     		uxtb	r3, r3
 1408 012a DB43     		mvns	r3, r3
 1409 012c DBB2     		uxtb	r3, r3
 1410 012e 1340     		ands	r3, r3, r2
 1411 0130 DBB2     		uxtb	r3, r3
 1412 0132 DAB2     		uxtb	r2, r3
 1413 0134 07F11401 		add	r1, r7, #20
 1414 0138 D7F82C32 		ldr	r3, [r7, #556]
 1415 013c 0B44     		add	r3, r3, r1
 1416 013e 1A70     		strb	r2, [r3]
 1417              	.L38:
 325:App/STM32F4-Discovery/modbus_mk.c **** 
 326:App/STM32F4-Discovery/modbus_mk.c ****             		bit = bit << 1;
 1418              		.loc 1 326 0
 1419 0140 D7F81C32 		ldr	r3, [r7, #540]
 1420 0144 5B00     		lsls	r3, r3, #1
 1421 0146 C7F81C32 		str	r3, [r7, #540]
 1422              	.L36:
 320:App/STM32F4-Discovery/modbus_mk.c ****         	while ((bit & 0xFF) && (bit_check++ < nb)) {
 1423              		.loc 1 320 0 discriminator 1
 1424 014a D7F81C32 		ldr	r3, [r7, #540]
 1425 014e DBB2     		uxtb	r3, r3
 1426 0150 002B     		cmp	r3, #0
 1427 0152 09D0     		beq	.L39
 320:App/STM32F4-Discovery/modbus_mk.c ****         	while ((bit & 0xFF) && (bit_check++ < nb)) {
 1428              		.loc 1 320 0 is_stmt 0 discriminator 2
 1429 0154 D7F82832 		ldr	r3, [r7, #552]
 1430 0158 5A1C     		adds	r2, r3, #1
 1431 015a C7F82822 		str	r2, [r7, #552]
 1432 015e 07F10802 		add	r2, r7, #8
 1433 0162 1268     		ldr	r2, [r2]
 1434 0164 9342     		cmp	r3, r2
 1435 0166 B7DB     		blt	.L40
 1436              	.L39:
 327:App/STM32F4-Discovery/modbus_mk.c ****         	}	
 328:App/STM32F4-Discovery/modbus_mk.c ****         	
 329:App/STM32F4-Discovery/modbus_mk.c **** 		req_length++;
 1437              		.loc 1 329 0 is_stmt 1
 1438 0168 D7F82C32 		ldr	r3, [r7, #556]
 1439 016c 0133     		adds	r3, r3, #1
 1440 016e C7F82C32 		str	r3, [r7, #556]
 1441              	.LBE3:
 314:App/STM32F4-Discovery/modbus_mk.c ****     	for (i = 0; i < byte_count; i++) {
 1442              		.loc 1 314 0
 1443 0172 D7F82032 		ldr	r3, [r7, #544]
 1444 0176 0133     		adds	r3, r3, #1
 1445 0178 C7F82032 		str	r3, [r7, #544]
 1446              	.L35:
 314:App/STM32F4-Discovery/modbus_mk.c ****     	for (i = 0; i < byte_count; i++) {
 1447              		.loc 1 314 0 is_stmt 0 discriminator 1
 1448 017c D7F82022 		ldr	r2, [r7, #544]
 1449 0180 D7F81832 		ldr	r3, [r7, #536]
 1450 0184 9A42     		cmp	r2, r3
 1451 0186 9CDB     		blt	.L41
 330:App/STM32F4-Discovery/modbus_mk.c **** 	 }
 331:App/STM32F4-Discovery/modbus_mk.c **** 
 332:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 1452              		.loc 1 332 0 is_stmt 1
 1453 0188 D7F82C32 		ldr	r3, [r7, #556]
 1454 018c 9BB2     		uxth	r3, r3
 1455 018e 07F11402 		add	r2, r7, #20
 1456 0192 1046     		mov	r0, r2
 1457 0194 1946     		mov	r1, r3
 1458 0196 FFF7FEFF 		bl	crc16
 1459 019a 0346     		mov	r3, r0
 1460 019c A7F81632 		strh	r3, [r7, #534]	@ movhi
 333:App/STM32F4-Discovery/modbus_mk.c **** 
 334:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 1461              		.loc 1 334 0
 1462 01a0 D7F82C32 		ldr	r3, [r7, #556]
 1463 01a4 5A1C     		adds	r2, r3, #1
 1464 01a6 C7F82C22 		str	r2, [r7, #556]
 1465 01aa B7F81622 		ldrh	r2, [r7, #534]
 1466 01ae 120A     		lsrs	r2, r2, #8
 1467 01b0 92B2     		uxth	r2, r2
 1468 01b2 D1B2     		uxtb	r1, r2
 1469 01b4 07F11402 		add	r2, r7, #20
 1470 01b8 D154     		strb	r1, [r2, r3]
 335:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff; 
 1471              		.loc 1 335 0
 1472 01ba D7F82C32 		ldr	r3, [r7, #556]
 1473 01be 5A1C     		adds	r2, r3, #1
 1474 01c0 C7F82C22 		str	r2, [r7, #556]
 1475 01c4 B7F81622 		ldrh	r2, [r7, #534]	@ movhi
 1476 01c8 D1B2     		uxtb	r1, r2
 1477 01ca 07F11402 		add	r2, r7, #20
 1478 01ce D154     		strb	r1, [r2, r3]
 336:App/STM32F4-Discovery/modbus_mk.c **** 	
 337:App/STM32F4-Discovery/modbus_mk.c **** 	/* write request  to modbus line */
 338:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req,req, req_length ,8); 
 1479              		.loc 1 338 0
 1480 01d0 07F11402 		add	r2, r7, #20
 1481 01d4 07F11403 		add	r3, r7, #20
 1482 01d8 1046     		mov	r0, r2
 1483 01da 1946     		mov	r1, r3
 1484 01dc D7F82C22 		ldr	r2, [r7, #556]
 1485 01e0 0823     		movs	r3, #8
 1486 01e2 FFF7FEFF 		bl	write_read_modbus
 339:App/STM32F4-Discovery/modbus_mk.c **** 	
 340:App/STM32F4-Discovery/modbus_mk.c **** }
 1487              		.loc 1 340 0
 1488 01e6 07F50C77 		add	r7, r7, #560
 1489 01ea BD46     		mov	sp, r7
 1490              		@ sp needed
 1491 01ec 80BD     		pop	{r7, pc}
 1492              		.cfi_endproc
 1493              	.LFE116:
 1495 01ee 00BF     		.section	.text.modbus_WR,"ax",%progbits
 1496              		.align	2
 1497              		.global	modbus_WR
 1498              		.thumb
 1499              		.thumb_func
 1501              	modbus_WR:
 1502              	.LFB117:
 341:App/STM32F4-Discovery/modbus_mk.c **** 
 342:App/STM32F4-Discovery/modbus_mk.c **** /* Write the values from the array to the registers of the remote device */
 343:App/STM32F4-Discovery/modbus_mk.c **** void modbus_WR( int address, int nb, const uint16_t *src)
 344:App/STM32F4-Discovery/modbus_mk.c **** {
 1503              		.loc 1 344 0
 1504              		.cfi_startproc
 1505              		@ args = 0, pretend = 0, frame = 544
 1506              		@ frame_needed = 1, uses_anonymous_args = 0
 1507 0000 80B5     		push	{r7, lr}
 1508              	.LCFI21:
 1509              		.cfi_def_cfa_offset 8
 1510              		.cfi_offset 7, -8
 1511              		.cfi_offset 14, -4
 1512 0002 ADF5087D 		sub	sp, sp, #544
 1513              	.LCFI22:
 1514              		.cfi_def_cfa_offset 552
 1515 0006 00AF     		add	r7, sp, #0
 1516              	.LCFI23:
 1517              		.cfi_def_cfa_register 7
 1518 0008 07F10C03 		add	r3, r7, #12
 1519 000c 1860     		str	r0, [r3]
 1520 000e 07F10803 		add	r3, r7, #8
 1521 0012 1960     		str	r1, [r3]
 1522 0014 3B1D     		adds	r3, r7, #4
 1523 0016 1A60     		str	r2, [r3]
 345:App/STM32F4-Discovery/modbus_mk.c **** 	int rc;
 346:App/STM32F4-Discovery/modbus_mk.c **** 	int i;
 347:App/STM32F4-Discovery/modbus_mk.c ****     	int req_length;
 348:App/STM32F4-Discovery/modbus_mk.c ****     	int byte_count;
 349:App/STM32F4-Discovery/modbus_mk.c **** 
 350:App/STM32F4-Discovery/modbus_mk.c ****     	uint8_t req[REQ_MAX_LEN];
 351:App/STM32F4-Discovery/modbus_mk.c **** 
 352:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 1524              		.loc 1 352 0
 1525 0018 07F11003 		add	r3, r7, #16
 1526 001c 3622     		movs	r2, #54
 1527 001e 1A70     		strb	r2, [r3]
 353:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0x10;
 1528              		.loc 1 353 0
 1529 0020 07F11003 		add	r3, r7, #16
 1530 0024 1022     		movs	r2, #16
 1531 0026 5A70     		strb	r2, [r3, #1]
 354:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 1532              		.loc 1 354 0
 1533 0028 07F10C03 		add	r3, r7, #12
 1534 002c 1B68     		ldr	r3, [r3]
 1535 002e 1B12     		asrs	r3, r3, #8
 1536 0030 DAB2     		uxtb	r2, r3
 1537 0032 07F11003 		add	r3, r7, #16
 1538 0036 9A70     		strb	r2, [r3, #2]
 355:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 1539              		.loc 1 355 0
 1540 0038 07F10C03 		add	r3, r7, #12
 1541 003c 1B68     		ldr	r3, [r3]
 1542 003e DAB2     		uxtb	r2, r3
 1543 0040 07F11003 		add	r3, r7, #16
 1544 0044 DA70     		strb	r2, [r3, #3]
 356:App/STM32F4-Discovery/modbus_mk.c **** 	req[4] = nb >> 8;
 1545              		.loc 1 356 0
 1546 0046 07F10803 		add	r3, r7, #8
 1547 004a 1B68     		ldr	r3, [r3]
 1548 004c 1B12     		asrs	r3, r3, #8
 1549 004e DAB2     		uxtb	r2, r3
 1550 0050 07F11003 		add	r3, r7, #16
 1551 0054 1A71     		strb	r2, [r3, #4]
 357:App/STM32F4-Discovery/modbus_mk.c **** 	req[5] = nb & 0x00ff; 
 1552              		.loc 1 357 0
 1553 0056 07F10803 		add	r3, r7, #8
 1554 005a 1B68     		ldr	r3, [r3]
 1555 005c DAB2     		uxtb	r2, r3
 1556 005e 07F11003 		add	r3, r7, #16
 1557 0062 5A71     		strb	r2, [r3, #5]
 358:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 6; 
 1558              		.loc 1 358 0
 1559 0064 0623     		movs	r3, #6
 1560 0066 C7F81832 		str	r3, [r7, #536]
 359:App/STM32F4-Discovery/modbus_mk.c **** 	
 360:App/STM32F4-Discovery/modbus_mk.c ****    	byte_count = nb * 2;
 1561              		.loc 1 360 0
 1562 006a 07F10803 		add	r3, r7, #8
 1563 006e 1B68     		ldr	r3, [r3]
 1564 0070 5B00     		lsls	r3, r3, #1
 1565 0072 C7F81432 		str	r3, [r7, #532]
 361:App/STM32F4-Discovery/modbus_mk.c ****     	req[req_length++] = byte_count;
 1566              		.loc 1 361 0
 1567 0076 D7F81832 		ldr	r3, [r7, #536]
 1568 007a 5A1C     		adds	r2, r3, #1
 1569 007c C7F81822 		str	r2, [r7, #536]
 1570 0080 D7F81422 		ldr	r2, [r7, #532]
 1571 0084 D1B2     		uxtb	r1, r2
 1572 0086 07F11002 		add	r2, r7, #16
 1573 008a D154     		strb	r1, [r2, r3]
 362:App/STM32F4-Discovery/modbus_mk.c **** 
 363:App/STM32F4-Discovery/modbus_mk.c ****     for (i = 0; i < nb; i++) {
 1574              		.loc 1 363 0
 1575 008c 0023     		movs	r3, #0
 1576 008e C7F81C32 		str	r3, [r7, #540]
 1577 0092 26E0     		b	.L43
 1578              	.L44:
 364:App/STM32F4-Discovery/modbus_mk.c **** 		req[req_length++] = src[i] >> 8;
 1579              		.loc 1 364 0 discriminator 2
 1580 0094 D7F81832 		ldr	r3, [r7, #536]
 1581 0098 5A1C     		adds	r2, r3, #1
 1582 009a C7F81822 		str	r2, [r7, #536]
 1583 009e D7F81C22 		ldr	r2, [r7, #540]
 1584 00a2 5200     		lsls	r2, r2, #1
 1585 00a4 391D     		adds	r1, r7, #4
 1586 00a6 0968     		ldr	r1, [r1]
 1587 00a8 0A44     		add	r2, r2, r1
 1588 00aa 1288     		ldrh	r2, [r2]
 1589 00ac 120A     		lsrs	r2, r2, #8
 1590 00ae 92B2     		uxth	r2, r2
 1591 00b0 D1B2     		uxtb	r1, r2
 1592 00b2 07F11002 		add	r2, r7, #16
 1593 00b6 D154     		strb	r1, [r2, r3]
 365:App/STM32F4-Discovery/modbus_mk.c ****         	req[req_length++] = src[i] & 0x00ff;
 1594              		.loc 1 365 0 discriminator 2
 1595 00b8 D7F81832 		ldr	r3, [r7, #536]
 1596 00bc 5A1C     		adds	r2, r3, #1
 1597 00be C7F81822 		str	r2, [r7, #536]
 1598 00c2 D7F81C22 		ldr	r2, [r7, #540]
 1599 00c6 5200     		lsls	r2, r2, #1
 1600 00c8 391D     		adds	r1, r7, #4
 1601 00ca 0968     		ldr	r1, [r1]
 1602 00cc 0A44     		add	r2, r2, r1
 1603 00ce 1288     		ldrh	r2, [r2]
 1604 00d0 D1B2     		uxtb	r1, r2
 1605 00d2 07F11002 		add	r2, r7, #16
 1606 00d6 D154     		strb	r1, [r2, r3]
 363:App/STM32F4-Discovery/modbus_mk.c ****     for (i = 0; i < nb; i++) {
 1607              		.loc 1 363 0 discriminator 2
 1608 00d8 D7F81C32 		ldr	r3, [r7, #540]
 1609 00dc 0133     		adds	r3, r3, #1
 1610 00de C7F81C32 		str	r3, [r7, #540]
 1611              	.L43:
 363:App/STM32F4-Discovery/modbus_mk.c ****     for (i = 0; i < nb; i++) {
 1612              		.loc 1 363 0 is_stmt 0 discriminator 1
 1613 00e2 07F10803 		add	r3, r7, #8
 1614 00e6 D7F81C22 		ldr	r2, [r7, #540]
 1615 00ea 1B68     		ldr	r3, [r3]
 1616 00ec 9A42     		cmp	r2, r3
 1617 00ee D1DB     		blt	.L44
 366:App/STM32F4-Discovery/modbus_mk.c ****     	}
 367:App/STM32F4-Discovery/modbus_mk.c **** 
 368:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 1618              		.loc 1 368 0 is_stmt 1
 1619 00f0 D7F81832 		ldr	r3, [r7, #536]
 1620 00f4 9BB2     		uxth	r3, r3
 1621 00f6 07F11002 		add	r2, r7, #16
 1622 00fa 1046     		mov	r0, r2
 1623 00fc 1946     		mov	r1, r3
 1624 00fe FFF7FEFF 		bl	crc16
 1625 0102 0346     		mov	r3, r0
 1626 0104 A7F81232 		strh	r3, [r7, #530]	@ movhi
 369:App/STM32F4-Discovery/modbus_mk.c **** 
 370:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 1627              		.loc 1 370 0
 1628 0108 D7F81832 		ldr	r3, [r7, #536]
 1629 010c 5A1C     		adds	r2, r3, #1
 1630 010e C7F81822 		str	r2, [r7, #536]
 1631 0112 B7F81222 		ldrh	r2, [r7, #530]
 1632 0116 120A     		lsrs	r2, r2, #8
 1633 0118 92B2     		uxth	r2, r2
 1634 011a D1B2     		uxtb	r1, r2
 1635 011c 07F11002 		add	r2, r7, #16
 1636 0120 D154     		strb	r1, [r2, r3]
 371:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff;
 1637              		.loc 1 371 0
 1638 0122 D7F81832 		ldr	r3, [r7, #536]
 1639 0126 5A1C     		adds	r2, r3, #1
 1640 0128 C7F81822 		str	r2, [r7, #536]
 1641 012c B7F81222 		ldrh	r2, [r7, #530]	@ movhi
 1642 0130 D1B2     		uxtb	r1, r2
 1643 0132 07F11002 		add	r2, r7, #16
 1644 0136 D154     		strb	r1, [r2, r3]
 372:App/STM32F4-Discovery/modbus_mk.c **** 
 373:App/STM32F4-Discovery/modbus_mk.c **** 	/* write request  to modbus line */
 374:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req, req, req_length, 8); 
 1645              		.loc 1 374 0
 1646 0138 07F11002 		add	r2, r7, #16
 1647 013c 07F11003 		add	r3, r7, #16
 1648 0140 1046     		mov	r0, r2
 1649 0142 1946     		mov	r1, r3
 1650 0144 D7F81822 		ldr	r2, [r7, #536]
 1651 0148 0823     		movs	r3, #8
 1652 014a FFF7FEFF 		bl	write_read_modbus
 375:App/STM32F4-Discovery/modbus_mk.c **** 
 376:App/STM32F4-Discovery/modbus_mk.c **** }
 1653              		.loc 1 376 0
 1654 014e 07F50877 		add	r7, r7, #544
 1655 0152 BD46     		mov	sp, r7
 1656              		@ sp needed
 1657 0154 80BD     		pop	{r7, pc}
 1658              		.cfi_endproc
 1659              	.LFE117:
 1661 0156 00BF     		.section	.text.modbus_RR,"ax",%progbits
 1662              		.align	2
 1663              		.global	modbus_RR
 1664              		.thumb
 1665              		.thumb_func
 1667              	modbus_RR:
 1668              	.LFB118:
 377:App/STM32F4-Discovery/modbus_mk.c **** 
 378:App/STM32F4-Discovery/modbus_mk.c **** 
 379:App/STM32F4-Discovery/modbus_mk.c **** /* Read the values from the array to the registers of the remote device */
 380:App/STM32F4-Discovery/modbus_mk.c **** void modbus_RR( int address, int nb, uint16_t *src)
 381:App/STM32F4-Discovery/modbus_mk.c **** {
 1669              		.loc 1 381 0
 1670              		.cfi_startproc
 1671              		@ args = 0, pretend = 0, frame = 1064
 1672              		@ frame_needed = 1, uses_anonymous_args = 0
 1673 0000 80B5     		push	{r7, lr}
 1674              	.LCFI24:
 1675              		.cfi_def_cfa_offset 8
 1676              		.cfi_offset 7, -8
 1677              		.cfi_offset 14, -4
 1678 0002 ADF5856D 		sub	sp, sp, #1064
 1679              	.LCFI25:
 1680              		.cfi_def_cfa_offset 1072
 1681 0006 00AF     		add	r7, sp, #0
 1682              	.LCFI26:
 1683              		.cfi_def_cfa_register 7
 1684 0008 07F10C03 		add	r3, r7, #12
 1685 000c 1860     		str	r0, [r3]
 1686 000e 07F10803 		add	r3, r7, #8
 1687 0012 1960     		str	r1, [r3]
 1688 0014 3B1D     		adds	r3, r7, #4
 1689 0016 1A60     		str	r2, [r3]
 382:App/STM32F4-Discovery/modbus_mk.c ****     	int rc;
 383:App/STM32F4-Discovery/modbus_mk.c ****     	int i;
 384:App/STM32F4-Discovery/modbus_mk.c ****     	int req_length;
 385:App/STM32F4-Discovery/modbus_mk.c **** 	int byte_count;
 386:App/STM32F4-Discovery/modbus_mk.c ****     	uint8_t req[REQ_MAX_LEN];
 387:App/STM32F4-Discovery/modbus_mk.c ****   	uint8_t rsp[REQ_MAX_LEN];
 388:App/STM32F4-Discovery/modbus_mk.c **** 
 389:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 1690              		.loc 1 389 0
 1691 0018 07F50573 		add	r3, r7, #532
 1692 001c 3622     		movs	r2, #54
 1693 001e 1A70     		strb	r2, [r3]
 390:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0x4;
 1694              		.loc 1 390 0
 1695 0020 07F50573 		add	r3, r7, #532
 1696 0024 0422     		movs	r2, #4
 1697 0026 5A70     		strb	r2, [r3, #1]
 391:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 1698              		.loc 1 391 0
 1699 0028 07F10C03 		add	r3, r7, #12
 1700 002c 1B68     		ldr	r3, [r3]
 1701 002e 1B12     		asrs	r3, r3, #8
 1702 0030 DAB2     		uxtb	r2, r3
 1703 0032 07F50573 		add	r3, r7, #532
 1704 0036 9A70     		strb	r2, [r3, #2]
 392:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 1705              		.loc 1 392 0
 1706 0038 07F10C03 		add	r3, r7, #12
 1707 003c 1B68     		ldr	r3, [r3]
 1708 003e DAB2     		uxtb	r2, r3
 1709 0040 07F50573 		add	r3, r7, #532
 1710 0044 DA70     		strb	r2, [r3, #3]
 393:App/STM32F4-Discovery/modbus_mk.c **** 	req[4] = nb >> 8;
 1711              		.loc 1 393 0
 1712 0046 07F10803 		add	r3, r7, #8
 1713 004a 1B68     		ldr	r3, [r3]
 1714 004c 1B12     		asrs	r3, r3, #8
 1715 004e DAB2     		uxtb	r2, r3
 1716 0050 07F50573 		add	r3, r7, #532
 1717 0054 1A71     		strb	r2, [r3, #4]
 394:App/STM32F4-Discovery/modbus_mk.c **** 	req[5] = nb & 0x00ff; 
 1718              		.loc 1 394 0
 1719 0056 07F10803 		add	r3, r7, #8
 1720 005a 1B68     		ldr	r3, [r3]
 1721 005c DAB2     		uxtb	r2, r3
 1722 005e 07F50573 		add	r3, r7, #532
 1723 0062 5A71     		strb	r2, [r3, #5]
 395:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 6; 
 1724              		.loc 1 395 0
 1725 0064 0623     		movs	r3, #6
 1726 0066 C7F82034 		str	r3, [r7, #1056]
 396:App/STM32F4-Discovery/modbus_mk.c ****    	
 397:App/STM32F4-Discovery/modbus_mk.c **** 	byte_count = nb * 2;
 1727              		.loc 1 397 0
 1728 006a 07F10803 		add	r3, r7, #8
 1729 006e 1B68     		ldr	r3, [r3]
 1730 0070 5B00     		lsls	r3, r3, #1
 1731 0072 C7F81C34 		str	r3, [r7, #1052]
 398:App/STM32F4-Discovery/modbus_mk.c ****     	req[req_length++] = byte_count;
 1732              		.loc 1 398 0
 1733 0076 D7F82034 		ldr	r3, [r7, #1056]
 1734 007a 5A1C     		adds	r2, r3, #1
 1735 007c C7F82024 		str	r2, [r7, #1056]
 1736 0080 D7F81C24 		ldr	r2, [r7, #1052]
 1737 0084 D1B2     		uxtb	r1, r2
 1738 0086 07F50572 		add	r2, r7, #532
 1739 008a D154     		strb	r1, [r2, r3]
 399:App/STM32F4-Discovery/modbus_mk.c **** 	
 400:App/STM32F4-Discovery/modbus_mk.c **** 	
 401:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 1740              		.loc 1 401 0
 1741 008c D7F82034 		ldr	r3, [r7, #1056]
 1742 0090 9BB2     		uxth	r3, r3
 1743 0092 07F50572 		add	r2, r7, #532
 1744 0096 1046     		mov	r0, r2
 1745 0098 1946     		mov	r1, r3
 1746 009a FFF7FEFF 		bl	crc16
 1747 009e 0346     		mov	r3, r0
 1748 00a0 A7F81A34 		strh	r3, [r7, #1050]	@ movhi
 402:App/STM32F4-Discovery/modbus_mk.c **** 
 403:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 1749              		.loc 1 403 0
 1750 00a4 D7F82034 		ldr	r3, [r7, #1056]
 1751 00a8 5A1C     		adds	r2, r3, #1
 1752 00aa C7F82024 		str	r2, [r7, #1056]
 1753 00ae B7F81A24 		ldrh	r2, [r7, #1050]
 1754 00b2 120A     		lsrs	r2, r2, #8
 1755 00b4 92B2     		uxth	r2, r2
 1756 00b6 D1B2     		uxtb	r1, r2
 1757 00b8 07F50572 		add	r2, r7, #532
 1758 00bc D154     		strb	r1, [r2, r3]
 404:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff; 
 1759              		.loc 1 404 0
 1760 00be D7F82034 		ldr	r3, [r7, #1056]
 1761 00c2 5A1C     		adds	r2, r3, #1
 1762 00c4 C7F82024 		str	r2, [r7, #1056]
 1763 00c8 B7F81A24 		ldrh	r2, [r7, #1050]	@ movhi
 1764 00cc D1B2     		uxtb	r1, r2
 1765 00ce 07F50572 		add	r2, r7, #532
 1766 00d2 D154     		strb	r1, [r2, r3]
 405:App/STM32F4-Discovery/modbus_mk.c **** 	
 406:App/STM32F4-Discovery/modbus_mk.c **** 	/* write request  to modbus line */
 407:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req, rsp,  req_length, nb*2 + 5); 
 1767              		.loc 1 407 0
 1768 00d4 07F10803 		add	r3, r7, #8
 1769 00d8 1B68     		ldr	r3, [r3]
 1770 00da 5B00     		lsls	r3, r3, #1
 1771 00dc 0533     		adds	r3, r3, #5
 1772 00de 07F50571 		add	r1, r7, #532
 1773 00e2 07F11402 		add	r2, r7, #20
 1774 00e6 0846     		mov	r0, r1
 1775 00e8 1146     		mov	r1, r2
 1776 00ea D7F82024 		ldr	r2, [r7, #1056]
 1777 00ee FFF7FEFF 		bl	write_read_modbus
 408:App/STM32F4-Discovery/modbus_mk.c **** 	
 409:App/STM32F4-Discovery/modbus_mk.c **** 	int offset = 2;
 1778              		.loc 1 409 0
 1779 00f2 0223     		movs	r3, #2
 1780 00f4 C7F81434 		str	r3, [r7, #1044]
 410:App/STM32F4-Discovery/modbus_mk.c **** 	
 411:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < nb; i++) {
 1781              		.loc 1 411 0
 1782 00f8 0023     		movs	r3, #0
 1783 00fa C7F82434 		str	r3, [r7, #1060]
 1784 00fe 24E0     		b	.L46
 1785              	.L47:
 412:App/STM32F4-Discovery/modbus_mk.c ****             /* shift reg hi_byte to temp OR with lo_byte */
 413:App/STM32F4-Discovery/modbus_mk.c ****             src[i] = (rsp[offset + 1 + (i << 1)] << 8) |
 1786              		.loc 1 413 0 discriminator 2
 1787 0100 D7F82434 		ldr	r3, [r7, #1060]
 1788 0104 5B00     		lsls	r3, r3, #1
 1789 0106 3A1D     		adds	r2, r7, #4
 1790 0108 1268     		ldr	r2, [r2]
 1791 010a 1344     		add	r3, r3, r2
 1792 010c D7F81424 		ldr	r2, [r7, #1044]
 1793 0110 511C     		adds	r1, r2, #1
 1794 0112 D7F82424 		ldr	r2, [r7, #1060]
 1795 0116 5200     		lsls	r2, r2, #1
 1796 0118 0A44     		add	r2, r2, r1
 1797 011a 07F11401 		add	r1, r7, #20
 1798 011e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1799 0120 1202     		lsls	r2, r2, #8
 1800 0122 91B2     		uxth	r1, r2
 414:App/STM32F4-Discovery/modbus_mk.c ****                 rsp[offset + 2 + (i << 1)];
 1801              		.loc 1 414 0 discriminator 2
 1802 0124 D7F81424 		ldr	r2, [r7, #1044]
 1803 0128 901C     		adds	r0, r2, #2
 1804 012a D7F82424 		ldr	r2, [r7, #1060]
 1805 012e 5200     		lsls	r2, r2, #1
 1806 0130 0244     		add	r2, r2, r0
 1807 0132 07F11400 		add	r0, r7, #20
 1808 0136 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 413:App/STM32F4-Discovery/modbus_mk.c ****             src[i] = (rsp[offset + 1 + (i << 1)] << 8) |
 1809              		.loc 1 413 0 discriminator 2
 1810 0138 0A43     		orrs	r2, r2, r1
 1811 013a 92B2     		uxth	r2, r2
 1812 013c 92B2     		uxth	r2, r2
 1813 013e 1A80     		strh	r2, [r3]	@ movhi
 411:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < nb; i++) {
 1814              		.loc 1 411 0 discriminator 2
 1815 0140 D7F82434 		ldr	r3, [r7, #1060]
 1816 0144 0133     		adds	r3, r3, #1
 1817 0146 C7F82434 		str	r3, [r7, #1060]
 1818              	.L46:
 411:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < nb; i++) {
 1819              		.loc 1 411 0 is_stmt 0 discriminator 1
 1820 014a 07F10803 		add	r3, r7, #8
 1821 014e D7F82424 		ldr	r2, [r7, #1060]
 1822 0152 1B68     		ldr	r3, [r3]
 1823 0154 9A42     		cmp	r2, r3
 1824 0156 D3DB     		blt	.L47
 415:App/STM32F4-Discovery/modbus_mk.c **** 		
 416:App/STM32F4-Discovery/modbus_mk.c ****         }
 417:App/STM32F4-Discovery/modbus_mk.c **** 
 418:App/STM32F4-Discovery/modbus_mk.c **** 	return 0;
 1825              		.loc 1 418 0 is_stmt 1
 1826 0158 00BF     		nop
 419:App/STM32F4-Discovery/modbus_mk.c **** }
 1827              		.loc 1 419 0
 1828 015a 07F58567 		add	r7, r7, #1064
 1829 015e BD46     		mov	sp, r7
 1830              		@ sp needed
 1831 0160 80BD     		pop	{r7, pc}
 1832              		.cfi_endproc
 1833              	.LFE118:
 1835 0162 00BF     		.section	.text.setSpeed_task,"ax",%progbits
 1836              		.align	2
 1837              		.global	setSpeed_task
 1838              		.thumb
 1839              		.thumb_func
 1841              	setSpeed_task:
 1842              	.LFB119:
 420:App/STM32F4-Discovery/modbus_mk.c **** 
 421:App/STM32F4-Discovery/modbus_mk.c **** /* set_speed 
 422:App/STM32F4-Discovery/modbus_mk.c ****  *
 423:App/STM32F4-Discovery/modbus_mk.c ****  *INPUT: speed = (actual speed)*100 in % 
 424:App/STM32F4-Discovery/modbus_mk.c ****  *
 425:App/STM32F4-Discovery/modbus_mk.c ****  * */
 426:App/STM32F4-Discovery/modbus_mk.c **** void setSpeed_task(void * pvParameters)
 427:App/STM32F4-Discovery/modbus_mk.c **** {
 1843              		.loc 1 427 0
 1844              		.cfi_startproc
 1845              		@ args = 0, pretend = 0, frame = 24
 1846              		@ frame_needed = 1, uses_anonymous_args = 0
 1847 0000 80B5     		push	{r7, lr}
 1848              	.LCFI27:
 1849              		.cfi_def_cfa_offset 8
 1850              		.cfi_offset 7, -8
 1851              		.cfi_offset 14, -4
 1852 0002 86B0     		sub	sp, sp, #24
 1853              	.LCFI28:
 1854              		.cfi_def_cfa_offset 32
 1855 0004 00AF     		add	r7, sp, #0
 1856              	.LCFI29:
 1857              		.cfi_def_cfa_register 7
 1858 0006 7860     		str	r0, [r7, #4]
 428:App/STM32F4-Discovery/modbus_mk.c **** 	
 429:App/STM32F4-Discovery/modbus_mk.c **** 	struct Spd_Settings * spd_set;
 430:App/STM32F4-Discovery/modbus_mk.c **** 
 431:App/STM32F4-Discovery/modbus_mk.c **** 	spd_set = (struct Spd_Settings *)pvParameters;
 1859              		.loc 1 431 0
 1860 0008 7B68     		ldr	r3, [r7, #4]
 1861 000a 7B61     		str	r3, [r7, #20]
 432:App/STM32F4-Discovery/modbus_mk.c **** 
 433:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t spd[5];
 434:App/STM32F4-Discovery/modbus_mk.c **** 	spd[0]=1500;
 1862              		.loc 1 434 0
 1863 000c 40F2DC53 		movw	r3, #1500
 1864 0010 3B81     		strh	r3, [r7, #8]	@ movhi
 435:App/STM32F4-Discovery/modbus_mk.c **** 	spd[1]=0;
 1865              		.loc 1 435 0
 1866 0012 0023     		movs	r3, #0
 1867 0014 7B81     		strh	r3, [r7, #10]	@ movhi
 436:App/STM32F4-Discovery/modbus_mk.c **** 	spd[2]=2250;//spd_settings->maxRPM; // 2250;
 1868              		.loc 1 436 0
 1869 0016 40F6CA03 		movw	r3, #2250
 1870 001a BB81     		strh	r3, [r7, #12]	@ movhi
 437:App/STM32F4-Discovery/modbus_mk.c **** 	spd[3]=15;//spd_settings->upRamp; // 15;
 1871              		.loc 1 437 0
 1872 001c 0F23     		movs	r3, #15
 1873 001e FB81     		strh	r3, [r7, #14]	@ movhi
 438:App/STM32F4-Discovery/modbus_mk.c **** 	spd[4]=15;//spd_settings->downRamp;
 1874              		.loc 1 438 0
 1875 0020 0F23     		movs	r3, #15
 1876 0022 3B82     		strh	r3, [r7, #16]	@ movhi
 1877              	.L50:
 439:App/STM32F4-Discovery/modbus_mk.c **** 	
 440:App/STM32F4-Discovery/modbus_mk.c **** 	while(1)
 441:App/STM32F4-Discovery/modbus_mk.c **** 	{
 442:App/STM32F4-Discovery/modbus_mk.c **** 
 443:App/STM32F4-Discovery/modbus_mk.c **** 		if (!xQueueReceive(QSpd_handle, &spd, 700));
 1878              		.loc 1 443 0
 1879 0024 0B4B     		ldr	r3, .L51
 1880 0026 1A68     		ldr	r2, [r3]
 1881 0028 07F10803 		add	r3, r7, #8
 1882 002c 1046     		mov	r0, r2
 1883 002e 1946     		mov	r1, r3
 1884 0030 4FF42F72 		mov	r2, #700
 1885 0034 0023     		movs	r3, #0
 1886 0036 FFF7FEFF 		bl	xQueueGenericReceive
 444:App/STM32F4-Discovery/modbus_mk.c **** 
 445:App/STM32F4-Discovery/modbus_mk.c **** 		modbus_WR(0,5,spd);
 1887              		.loc 1 445 0
 1888 003a 07F10803 		add	r3, r7, #8
 1889 003e 0020     		movs	r0, #0
 1890 0040 0521     		movs	r1, #5
 1891 0042 1A46     		mov	r2, r3
 1892 0044 FFF7FEFF 		bl	modbus_WR
 446:App/STM32F4-Discovery/modbus_mk.c **** 
 447:App/STM32F4-Discovery/modbus_mk.c **** 		vTaskSuspend( setSpeedHandle );
 1893              		.loc 1 447 0
 1894 0048 034B     		ldr	r3, .L51+4
 1895 004a 1B68     		ldr	r3, [r3]
 1896 004c 1846     		mov	r0, r3
 1897 004e FFF7FEFF 		bl	vTaskSuspend
 448:App/STM32F4-Discovery/modbus_mk.c **** 	}
 1898              		.loc 1 448 0
 1899 0052 E7E7     		b	.L50
 1900              	.L52:
 1901              		.align	2
 1902              	.L51:
 1903 0054 00000000 		.word	QSpd_handle
 1904 0058 00000000 		.word	setSpeedHandle
 1905              		.cfi_endproc
 1906              	.LFE119:
 1908              		.section	.text.motorHeartBit_task,"ax",%progbits
 1909              		.align	2
 1910              		.global	motorHeartBit_task
 1911              		.thumb
 1912              		.thumb_func
 1914              	motorHeartBit_task:
 1915              	.LFB120:
 449:App/STM32F4-Discovery/modbus_mk.c **** 
 450:App/STM32F4-Discovery/modbus_mk.c **** 
 451:App/STM32F4-Discovery/modbus_mk.c **** }
 452:App/STM32F4-Discovery/modbus_mk.c **** 
 453:App/STM32F4-Discovery/modbus_mk.c **** void motorHeartBit_task(void * pvParameters)
 454:App/STM32F4-Discovery/modbus_mk.c **** {
 1916              		.loc 1 454 0
 1917              		.cfi_startproc
 1918              		@ args = 0, pretend = 0, frame = 56
 1919              		@ frame_needed = 1, uses_anonymous_args = 0
 1920 0000 80B5     		push	{r7, lr}
 1921              	.LCFI30:
 1922              		.cfi_def_cfa_offset 8
 1923              		.cfi_offset 7, -8
 1924              		.cfi_offset 14, -4
 1925 0002 8EB0     		sub	sp, sp, #56
 1926              	.LCFI31:
 1927              		.cfi_def_cfa_offset 64
 1928 0004 00AF     		add	r7, sp, #0
 1929              	.LCFI32:
 1930              		.cfi_def_cfa_register 7
 1931 0006 7860     		str	r0, [r7, #4]
 455:App/STM32F4-Discovery/modbus_mk.c **** 	
 456:App/STM32F4-Discovery/modbus_mk.c **** 
 457:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t dest[8];
 458:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t src[4];
 459:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t tab_reg[10];
 460:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t spd[5]; 
 461:App/STM32F4-Discovery/modbus_mk.c **** 	
 462:App/STM32F4-Discovery/modbus_mk.c **** 	
 463:App/STM32F4-Discovery/modbus_mk.c **** 	src[0]=1; src[1]=1; src[2]=1; src[3]=1;
 1932              		.loc 1 463 0
 1933 0008 0123     		movs	r3, #1
 1934 000a 87F82830 		strb	r3, [r7, #40]
 1935 000e 0123     		movs	r3, #1
 1936 0010 87F82930 		strb	r3, [r7, #41]
 1937 0014 0123     		movs	r3, #1
 1938 0016 87F82A30 		strb	r3, [r7, #42]
 1939 001a 0123     		movs	r3, #1
 1940 001c 87F82B30 		strb	r3, [r7, #43]
 464:App/STM32F4-Discovery/modbus_mk.c **** 	
 465:App/STM32F4-Discovery/modbus_mk.c **** 	spd[0]=1500;spd[1]=0;spd[2]=2250;spd[3]=10;spd[4]=10;
 1941              		.loc 1 465 0
 1942 0020 40F2DC53 		movw	r3, #1500
 1943 0024 3B81     		strh	r3, [r7, #8]	@ movhi
 1944 0026 0023     		movs	r3, #0
 1945 0028 7B81     		strh	r3, [r7, #10]	@ movhi
 1946 002a 40F6CA03 		movw	r3, #2250
 1947 002e BB81     		strh	r3, [r7, #12]	@ movhi
 1948 0030 0A23     		movs	r3, #10
 1949 0032 FB81     		strh	r3, [r7, #14]	@ movhi
 1950 0034 0A23     		movs	r3, #10
 1951 0036 3B82     		strh	r3, [r7, #16]	@ movhi
 466:App/STM32F4-Discovery/modbus_mk.c **** 	
 467:App/STM32F4-Discovery/modbus_mk.c **** 	xSmphrUSART = xSemaphoreCreateBinary();	
 1952              		.loc 1 467 0
 1953 0038 0120     		movs	r0, #1
 1954 003a 0021     		movs	r1, #0
 1955 003c 0322     		movs	r2, #3
 1956 003e FFF7FEFF 		bl	xQueueGenericCreate
 1957 0042 0246     		mov	r2, r0
 1958 0044 1B4B     		ldr	r3, .L55
 1959 0046 1A60     		str	r2, [r3]
 468:App/STM32F4-Discovery/modbus_mk.c **** 	
 469:App/STM32F4-Discovery/modbus_mk.c **** 	/*if ( modbus_RIB( 0,8,dest) < 0 )
 470:App/STM32F4-Discovery/modbus_mk.c **** 	{
 471:App/STM32F4-Discovery/modbus_mk.c **** 		 vTaskDelete( NULL );;
 472:App/STM32F4-Discovery/modbus_mk.c **** 	}
 473:App/STM32F4-Discovery/modbus_mk.c **** 	
 474:App/STM32F4-Discovery/modbus_mk.c **** 	modbus_RR(0,10,tab_reg);*/
 475:App/STM32F4-Discovery/modbus_mk.c **** 	portTickType xDelay = 100 / portTICK_RATE_MS;	
 1960              		.loc 1 475 0
 1961 0048 6423     		movs	r3, #100
 1962 004a 7B63     		str	r3, [r7, #52]
 476:App/STM32F4-Discovery/modbus_mk.c **** 	modbus_WIB( 0, 3, src);
 1963              		.loc 1 476 0
 1964 004c 07F12803 		add	r3, r7, #40
 1965 0050 0020     		movs	r0, #0
 1966 0052 0321     		movs	r1, #3
 1967 0054 1A46     		mov	r2, r3
 1968 0056 FFF7FEFF 		bl	modbus_WIB
 477:App/STM32F4-Discovery/modbus_mk.c **** 	vTaskDelay(xDelay);	
 1969              		.loc 1 477 0
 1970 005a 786B     		ldr	r0, [r7, #52]
 1971 005c FFF7FEFF 		bl	vTaskDelay
 478:App/STM32F4-Discovery/modbus_mk.c **** 	
 479:App/STM32F4-Discovery/modbus_mk.c **** 	modbus_WR( 0, 5, spd);
 1972              		.loc 1 479 0
 1973 0060 07F10803 		add	r3, r7, #8
 1974 0064 0020     		movs	r0, #0
 1975 0066 0521     		movs	r1, #5
 1976 0068 1A46     		mov	r2, r3
 1977 006a FFF7FEFF 		bl	modbus_WR
 480:App/STM32F4-Discovery/modbus_mk.c **** 
 481:App/STM32F4-Discovery/modbus_mk.c **** 	vTaskDelay(xDelay);	
 1978              		.loc 1 481 0
 1979 006e 786B     		ldr	r0, [r7, #52]
 1980 0070 FFF7FEFF 		bl	vTaskDelay
 482:App/STM32F4-Discovery/modbus_mk.c **** 	modbus_RR(0, 10, tab_reg);
 1981              		.loc 1 482 0
 1982 0074 07F11403 		add	r3, r7, #20
 1983 0078 0020     		movs	r0, #0
 1984 007a 0A21     		movs	r1, #10
 1985 007c 1A46     		mov	r2, r3
 1986 007e FFF7FEFF 		bl	modbus_RR
 483:App/STM32F4-Discovery/modbus_mk.c **** 	
 484:App/STM32F4-Discovery/modbus_mk.c **** 	xDelay = 2000 / portTICK_RATE_MS;
 1987              		.loc 1 484 0
 1988 0082 4FF4FA63 		mov	r3, #2000
 1989 0086 7B63     		str	r3, [r7, #52]
 1990              	.L54:
 485:App/STM32F4-Discovery/modbus_mk.c **** 	
 486:App/STM32F4-Discovery/modbus_mk.c **** 	while (1)
 487:App/STM32F4-Discovery/modbus_mk.c **** 	{
 488:App/STM32F4-Discovery/modbus_mk.c **** 		vTaskDelay( xDelay );
 1991              		.loc 1 488 0 discriminator 1
 1992 0088 786B     		ldr	r0, [r7, #52]
 1993 008a FFF7FEFF 		bl	vTaskDelay
 489:App/STM32F4-Discovery/modbus_mk.c **** 	//	modbus_WR(0, 5, spd); 	
 490:App/STM32F4-Discovery/modbus_mk.c **** 		modbus_RR(0, 10, tab_reg);
 1994              		.loc 1 490 0 discriminator 1
 1995 008e 07F11403 		add	r3, r7, #20
 1996 0092 0020     		movs	r0, #0
 1997 0094 0A21     		movs	r1, #10
 1998 0096 1A46     		mov	r2, r3
 1999 0098 FFF7FEFF 		bl	modbus_RR
 491:App/STM32F4-Discovery/modbus_mk.c **** 		xQueueSend(QStatus_handle, &tab_reg, 500);
 2000              		.loc 1 491 0 discriminator 1
 2001 009c 064B     		ldr	r3, .L55+4
 2002 009e 1A68     		ldr	r2, [r3]
 2003 00a0 07F11403 		add	r3, r7, #20
 2004 00a4 1046     		mov	r0, r2
 2005 00a6 1946     		mov	r1, r3
 2006 00a8 4FF4FA72 		mov	r2, #500
 2007 00ac 0023     		movs	r3, #0
 2008 00ae FFF7FEFF 		bl	xQueueGenericSend
 492:App/STM32F4-Discovery/modbus_mk.c **** 		
 493:App/STM32F4-Discovery/modbus_mk.c **** 	
 494:App/STM32F4-Discovery/modbus_mk.c **** 	}
 2009              		.loc 1 494 0 discriminator 1
 2010 00b2 E9E7     		b	.L54
 2011              	.L56:
 2012              		.align	2
 2013              	.L55:
 2014 00b4 00000000 		.word	xSmphrUSART
 2015 00b8 00000000 		.word	QStatus_handle
 2016              		.cfi_endproc
 2017              	.LFE120:
 2019              		.section	.bss.cnt.9199,"aw",%nobits
 2022              	cnt.9199:
 2023 0000 00       		.space	1
 2024              		.text
 2025              	.Letext0:
 2026              		.file 2 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/machine/_default_
 2027              		.file 3 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/stdint.h"
 2028              		.file 4 "App/STM32F4-Discovery/Libraries/CMSIS/ST/STM32F4xx/Include/stm32f4xx.h"
 2029              		.file 5 "App/STM32F4-Discovery/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_gpio.h"
 2030              		.file 6 "App/STM32F4-Discovery/Libraries/STM32F4xx_StdPeriph_Driver/inc/misc.h"
 2031              		.file 7 "App/STM32F4-Discovery/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
 2032              		.file 8 "Source/portable/GCC/ARM_CM4F/portmacro.h"
 2033              		.file 9 "Source/include/task.h"
 2034              		.file 10 "Source/include/queue.h"
 2035              		.file 11 "Source/include/semphr.h"
 2036              		.file 12 "App/STM32F4-Discovery/modbus_mk.h"
 2037              		.file 13 "App/STM32F4-Discovery/main.h"
 2038              		.file 14 "App/STM32F4-Discovery/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 modbus_mk.c
                            *COM*:0000000000000004 xSemaphoreDMASPI
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:21     .bss.xHigherPriorityTaskWoken:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:24     .bss.xHigherPriorityTaskWoken:0000000000000000 xHigherPriorityTaskWoken
                            *COM*:0000000000000004 xSmphrUSART
                            *COM*:0000000000000004 setSpeedHandle
                            *COM*:0000000000000004 motorHBHandle
                            *COM*:0000000000000004 QSpd_handle
                            *COM*:0000000000000004 QStatus_handle
                            *COM*:0000000000000004 socket_0
                            *COM*:0000000000000004 fd
                            *COM*:0000000000000081 received_string
                            *COM*:0000000000000004 rx_length
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:36     .bss.xHigherPriorityTaskWoken_usart:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:39     .bss.xHigherPriorityTaskWoken_usart:0000000000000000 xHigherPriorityTaskWoken_usart
                            *COM*:0000000000000014 input_Register
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:43     .rodata.table_crc_hi:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:46     .rodata.table_crc_hi:0000000000000000 table_crc_hi
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:304    .rodata.table_crc_lo:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:307    .rodata.table_crc_lo:0000000000000000 table_crc_lo
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:565    .text.init_USARTx:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:570    .text.init_USARTx:0000000000000000 init_USARTx
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:718    .text.init_USARTx:00000000000000e4 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:725    .text.USART_puts:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:730    .text.USART_puts:0000000000000000 USART_puts
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:797    .text.USART_puts:000000000000004c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:802    .text.USART6_IRQHandler:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:807    .text.USART6_IRQHandler:0000000000000000 USART6_IRQHandler
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:913    .text.USART6_IRQHandler:0000000000000094 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:2022   .bss.cnt.9199:0000000000000000 cnt.9199
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:924    .text.crc16:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:929    .text.crc16:0000000000000000 crc16
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:1007   .text.crc16:0000000000000064 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:1013   .text.write_read_modbus:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:1018   .text.write_read_modbus:0000000000000000 write_read_modbus
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:1136   .text.write_read_modbus:00000000000000ac $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:1144   .text.modbus_RIB:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:1149   .text.modbus_RIB:0000000000000000 modbus_RIB
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:1255   .text.modbus_WIB:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:1260   .text.modbus_WIB:0000000000000000 modbus_WIB
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:1496   .text.modbus_WR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:1501   .text.modbus_WR:0000000000000000 modbus_WR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:1662   .text.modbus_RR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:1667   .text.modbus_RR:0000000000000000 modbus_RR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:1836   .text.setSpeed_task:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:1841   .text.setSpeed_task:0000000000000000 setSpeed_task
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:1903   .text.setSpeed_task:0000000000000054 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:1909   .text.motorHeartBit_task:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:1914   .text.motorHeartBit_task:0000000000000000 motorHeartBit_task
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:2014   .text.motorHeartBit_task:00000000000000b4 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cc3WJr40.s:2023   .bss.cnt.9199:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphClockCmd
RCC_AHB1PeriphClockCmd
GPIO_Init
GPIO_PinAFConfig
USART_Init
USART_ITConfig
NVIC_Init
USART_Cmd
USART_GetITStatus
vPortEnterCritical
xQueueGenericSendFromISR
vPortExitCritical
xQueueGenericReceive
vTaskSuspend
xQueueGenericCreate
vTaskDelay
xQueueGenericSend
