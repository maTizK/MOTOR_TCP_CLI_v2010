   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"modbus_mk.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	xSemaphoreDMASPI,4,4
  20              		.comm	xSmphrUSART,4,4
  21              		.comm	xSemaphoreREADLEN,4,4
  22              		.comm	motorHeartBeatHandle,4,4
  23              		.comm	motorHBHandle,4,4
  24              		.comm	QSpd_handle,4,4
  25              		.comm	QTCP_handle,4,4
  26              		.comm	socket_0,4,4
  27              		.comm	bufferTX,2000,4
  28              		.comm	bufferRX,2000,4
  29              		.comm	bufferRXidx,4,4
  30              		.comm	bufferTXidx,4,4
  31              		.comm	dat_lengthRX,4,4
  32              		.comm	dat_lengthTX,4,4
  33              		.comm	set_macTaskHandle,4,4
  34              		.section	.rodata
  35              		.align	2
  36              	.LC0:
  37 0000 6D6F746F 		.ascii	"motor\000"
  37      7200
  38 0006 0000     		.align	2
  39              	.LC1:
  40 0008 6D6F746F 		.ascii	"motor  [options]\302\240[parameters]\302\240- Type "
  40      7220205B 
  40      6F707469 
  40      6F6E735D 
  40      C2A05B70 
  41 002f 6D6F746F 		.ascii	"motor help for more help\015\012\012\000\000"
  41      72206865 
  41      6C702066 
  41      6F72206D 
  41      6F726520 
  42              		.section	.rodata.xMotorCommand,"a",%progbits
  43              		.align	2
  46              	xMotorCommand:
  47 0000 00000000 		.word	.LC0
  48 0004 08000000 		.word	.LC1
  49 0008 00000000 		.word	prvMotorCommand
  50 000c FF       		.byte	-1
  51 000d 000000   		.space	3
  52              		.section	.rodata
  53              		.align	2
  54              	.LC2:
  55 004c 7461736B 		.ascii	"task\000"
  55      00
  56 0051 000000   		.align	2
  57              	.LC3:
  58 0054 7461736B 		.ascii	"task - return tasks list\015\012\012\000\000"
  58      202D2072 
  58      65747572 
  58      6E207461 
  58      736B7320 
  59              		.section	.rodata.xTaskStatsCommand,"a",%progbits
  60              		.align	2
  63              	xTaskStatsCommand:
  64 0000 4C000000 		.word	.LC2
  65 0004 54000000 		.word	.LC3
  66 0008 00000000 		.word	prvTaskStatsCommand
  67 000c FF       		.byte	-1
  68 000d 000000   		.space	3
  69              		.section	.rodata.table_crc_hi,"a",%progbits
  70              		.align	2
  73              	table_crc_hi:
  74 0000 00       		.byte	0
  75 0001 C1       		.byte	-63
  76 0002 81       		.byte	-127
  77 0003 40       		.byte	64
  78 0004 01       		.byte	1
  79 0005 C0       		.byte	-64
  80 0006 80       		.byte	-128
  81 0007 41       		.byte	65
  82 0008 01       		.byte	1
  83 0009 C0       		.byte	-64
  84 000a 80       		.byte	-128
  85 000b 41       		.byte	65
  86 000c 00       		.byte	0
  87 000d C1       		.byte	-63
  88 000e 81       		.byte	-127
  89 000f 40       		.byte	64
  90 0010 01       		.byte	1
  91 0011 C0       		.byte	-64
  92 0012 80       		.byte	-128
  93 0013 41       		.byte	65
  94 0014 00       		.byte	0
  95 0015 C1       		.byte	-63
  96 0016 81       		.byte	-127
  97 0017 40       		.byte	64
  98 0018 00       		.byte	0
  99 0019 C1       		.byte	-63
 100 001a 81       		.byte	-127
 101 001b 40       		.byte	64
 102 001c 01       		.byte	1
 103 001d C0       		.byte	-64
 104 001e 80       		.byte	-128
 105 001f 41       		.byte	65
 106 0020 01       		.byte	1
 107 0021 C0       		.byte	-64
 108 0022 80       		.byte	-128
 109 0023 41       		.byte	65
 110 0024 00       		.byte	0
 111 0025 C1       		.byte	-63
 112 0026 81       		.byte	-127
 113 0027 40       		.byte	64
 114 0028 00       		.byte	0
 115 0029 C1       		.byte	-63
 116 002a 81       		.byte	-127
 117 002b 40       		.byte	64
 118 002c 01       		.byte	1
 119 002d C0       		.byte	-64
 120 002e 80       		.byte	-128
 121 002f 41       		.byte	65
 122 0030 00       		.byte	0
 123 0031 C1       		.byte	-63
 124 0032 81       		.byte	-127
 125 0033 40       		.byte	64
 126 0034 01       		.byte	1
 127 0035 C0       		.byte	-64
 128 0036 80       		.byte	-128
 129 0037 41       		.byte	65
 130 0038 01       		.byte	1
 131 0039 C0       		.byte	-64
 132 003a 80       		.byte	-128
 133 003b 41       		.byte	65
 134 003c 00       		.byte	0
 135 003d C1       		.byte	-63
 136 003e 81       		.byte	-127
 137 003f 40       		.byte	64
 138 0040 01       		.byte	1
 139 0041 C0       		.byte	-64
 140 0042 80       		.byte	-128
 141 0043 41       		.byte	65
 142 0044 00       		.byte	0
 143 0045 C1       		.byte	-63
 144 0046 81       		.byte	-127
 145 0047 40       		.byte	64
 146 0048 00       		.byte	0
 147 0049 C1       		.byte	-63
 148 004a 81       		.byte	-127
 149 004b 40       		.byte	64
 150 004c 01       		.byte	1
 151 004d C0       		.byte	-64
 152 004e 80       		.byte	-128
 153 004f 41       		.byte	65
 154 0050 00       		.byte	0
 155 0051 C1       		.byte	-63
 156 0052 81       		.byte	-127
 157 0053 40       		.byte	64
 158 0054 01       		.byte	1
 159 0055 C0       		.byte	-64
 160 0056 80       		.byte	-128
 161 0057 41       		.byte	65
 162 0058 01       		.byte	1
 163 0059 C0       		.byte	-64
 164 005a 80       		.byte	-128
 165 005b 41       		.byte	65
 166 005c 00       		.byte	0
 167 005d C1       		.byte	-63
 168 005e 81       		.byte	-127
 169 005f 40       		.byte	64
 170 0060 00       		.byte	0
 171 0061 C1       		.byte	-63
 172 0062 81       		.byte	-127
 173 0063 40       		.byte	64
 174 0064 01       		.byte	1
 175 0065 C0       		.byte	-64
 176 0066 80       		.byte	-128
 177 0067 41       		.byte	65
 178 0068 01       		.byte	1
 179 0069 C0       		.byte	-64
 180 006a 80       		.byte	-128
 181 006b 41       		.byte	65
 182 006c 00       		.byte	0
 183 006d C1       		.byte	-63
 184 006e 81       		.byte	-127
 185 006f 40       		.byte	64
 186 0070 01       		.byte	1
 187 0071 C0       		.byte	-64
 188 0072 80       		.byte	-128
 189 0073 41       		.byte	65
 190 0074 00       		.byte	0
 191 0075 C1       		.byte	-63
 192 0076 81       		.byte	-127
 193 0077 40       		.byte	64
 194 0078 00       		.byte	0
 195 0079 C1       		.byte	-63
 196 007a 81       		.byte	-127
 197 007b 40       		.byte	64
 198 007c 01       		.byte	1
 199 007d C0       		.byte	-64
 200 007e 80       		.byte	-128
 201 007f 41       		.byte	65
 202 0080 01       		.byte	1
 203 0081 C0       		.byte	-64
 204 0082 80       		.byte	-128
 205 0083 41       		.byte	65
 206 0084 00       		.byte	0
 207 0085 C1       		.byte	-63
 208 0086 81       		.byte	-127
 209 0087 40       		.byte	64
 210 0088 00       		.byte	0
 211 0089 C1       		.byte	-63
 212 008a 81       		.byte	-127
 213 008b 40       		.byte	64
 214 008c 01       		.byte	1
 215 008d C0       		.byte	-64
 216 008e 80       		.byte	-128
 217 008f 41       		.byte	65
 218 0090 00       		.byte	0
 219 0091 C1       		.byte	-63
 220 0092 81       		.byte	-127
 221 0093 40       		.byte	64
 222 0094 01       		.byte	1
 223 0095 C0       		.byte	-64
 224 0096 80       		.byte	-128
 225 0097 41       		.byte	65
 226 0098 01       		.byte	1
 227 0099 C0       		.byte	-64
 228 009a 80       		.byte	-128
 229 009b 41       		.byte	65
 230 009c 00       		.byte	0
 231 009d C1       		.byte	-63
 232 009e 81       		.byte	-127
 233 009f 40       		.byte	64
 234 00a0 00       		.byte	0
 235 00a1 C1       		.byte	-63
 236 00a2 81       		.byte	-127
 237 00a3 40       		.byte	64
 238 00a4 01       		.byte	1
 239 00a5 C0       		.byte	-64
 240 00a6 80       		.byte	-128
 241 00a7 41       		.byte	65
 242 00a8 01       		.byte	1
 243 00a9 C0       		.byte	-64
 244 00aa 80       		.byte	-128
 245 00ab 41       		.byte	65
 246 00ac 00       		.byte	0
 247 00ad C1       		.byte	-63
 248 00ae 81       		.byte	-127
 249 00af 40       		.byte	64
 250 00b0 01       		.byte	1
 251 00b1 C0       		.byte	-64
 252 00b2 80       		.byte	-128
 253 00b3 41       		.byte	65
 254 00b4 00       		.byte	0
 255 00b5 C1       		.byte	-63
 256 00b6 81       		.byte	-127
 257 00b7 40       		.byte	64
 258 00b8 00       		.byte	0
 259 00b9 C1       		.byte	-63
 260 00ba 81       		.byte	-127
 261 00bb 40       		.byte	64
 262 00bc 01       		.byte	1
 263 00bd C0       		.byte	-64
 264 00be 80       		.byte	-128
 265 00bf 41       		.byte	65
 266 00c0 00       		.byte	0
 267 00c1 C1       		.byte	-63
 268 00c2 81       		.byte	-127
 269 00c3 40       		.byte	64
 270 00c4 01       		.byte	1
 271 00c5 C0       		.byte	-64
 272 00c6 80       		.byte	-128
 273 00c7 41       		.byte	65
 274 00c8 01       		.byte	1
 275 00c9 C0       		.byte	-64
 276 00ca 80       		.byte	-128
 277 00cb 41       		.byte	65
 278 00cc 00       		.byte	0
 279 00cd C1       		.byte	-63
 280 00ce 81       		.byte	-127
 281 00cf 40       		.byte	64
 282 00d0 01       		.byte	1
 283 00d1 C0       		.byte	-64
 284 00d2 80       		.byte	-128
 285 00d3 41       		.byte	65
 286 00d4 00       		.byte	0
 287 00d5 C1       		.byte	-63
 288 00d6 81       		.byte	-127
 289 00d7 40       		.byte	64
 290 00d8 00       		.byte	0
 291 00d9 C1       		.byte	-63
 292 00da 81       		.byte	-127
 293 00db 40       		.byte	64
 294 00dc 01       		.byte	1
 295 00dd C0       		.byte	-64
 296 00de 80       		.byte	-128
 297 00df 41       		.byte	65
 298 00e0 01       		.byte	1
 299 00e1 C0       		.byte	-64
 300 00e2 80       		.byte	-128
 301 00e3 41       		.byte	65
 302 00e4 00       		.byte	0
 303 00e5 C1       		.byte	-63
 304 00e6 81       		.byte	-127
 305 00e7 40       		.byte	64
 306 00e8 00       		.byte	0
 307 00e9 C1       		.byte	-63
 308 00ea 81       		.byte	-127
 309 00eb 40       		.byte	64
 310 00ec 01       		.byte	1
 311 00ed C0       		.byte	-64
 312 00ee 80       		.byte	-128
 313 00ef 41       		.byte	65
 314 00f0 00       		.byte	0
 315 00f1 C1       		.byte	-63
 316 00f2 81       		.byte	-127
 317 00f3 40       		.byte	64
 318 00f4 01       		.byte	1
 319 00f5 C0       		.byte	-64
 320 00f6 80       		.byte	-128
 321 00f7 41       		.byte	65
 322 00f8 01       		.byte	1
 323 00f9 C0       		.byte	-64
 324 00fa 80       		.byte	-128
 325 00fb 41       		.byte	65
 326 00fc 00       		.byte	0
 327 00fd C1       		.byte	-63
 328 00fe 81       		.byte	-127
 329 00ff 40       		.byte	64
 330              		.section	.rodata.table_crc_lo,"a",%progbits
 331              		.align	2
 334              	table_crc_lo:
 335 0000 00       		.byte	0
 336 0001 C0       		.byte	-64
 337 0002 C1       		.byte	-63
 338 0003 01       		.byte	1
 339 0004 C3       		.byte	-61
 340 0005 03       		.byte	3
 341 0006 02       		.byte	2
 342 0007 C2       		.byte	-62
 343 0008 C6       		.byte	-58
 344 0009 06       		.byte	6
 345 000a 07       		.byte	7
 346 000b C7       		.byte	-57
 347 000c 05       		.byte	5
 348 000d C5       		.byte	-59
 349 000e C4       		.byte	-60
 350 000f 04       		.byte	4
 351 0010 CC       		.byte	-52
 352 0011 0C       		.byte	12
 353 0012 0D       		.byte	13
 354 0013 CD       		.byte	-51
 355 0014 0F       		.byte	15
 356 0015 CF       		.byte	-49
 357 0016 CE       		.byte	-50
 358 0017 0E       		.byte	14
 359 0018 0A       		.byte	10
 360 0019 CA       		.byte	-54
 361 001a CB       		.byte	-53
 362 001b 0B       		.byte	11
 363 001c C9       		.byte	-55
 364 001d 09       		.byte	9
 365 001e 08       		.byte	8
 366 001f C8       		.byte	-56
 367 0020 D8       		.byte	-40
 368 0021 18       		.byte	24
 369 0022 19       		.byte	25
 370 0023 D9       		.byte	-39
 371 0024 1B       		.byte	27
 372 0025 DB       		.byte	-37
 373 0026 DA       		.byte	-38
 374 0027 1A       		.byte	26
 375 0028 1E       		.byte	30
 376 0029 DE       		.byte	-34
 377 002a DF       		.byte	-33
 378 002b 1F       		.byte	31
 379 002c DD       		.byte	-35
 380 002d 1D       		.byte	29
 381 002e 1C       		.byte	28
 382 002f DC       		.byte	-36
 383 0030 14       		.byte	20
 384 0031 D4       		.byte	-44
 385 0032 D5       		.byte	-43
 386 0033 15       		.byte	21
 387 0034 D7       		.byte	-41
 388 0035 17       		.byte	23
 389 0036 16       		.byte	22
 390 0037 D6       		.byte	-42
 391 0038 D2       		.byte	-46
 392 0039 12       		.byte	18
 393 003a 13       		.byte	19
 394 003b D3       		.byte	-45
 395 003c 11       		.byte	17
 396 003d D1       		.byte	-47
 397 003e D0       		.byte	-48
 398 003f 10       		.byte	16
 399 0040 F0       		.byte	-16
 400 0041 30       		.byte	48
 401 0042 31       		.byte	49
 402 0043 F1       		.byte	-15
 403 0044 33       		.byte	51
 404 0045 F3       		.byte	-13
 405 0046 F2       		.byte	-14
 406 0047 32       		.byte	50
 407 0048 36       		.byte	54
 408 0049 F6       		.byte	-10
 409 004a F7       		.byte	-9
 410 004b 37       		.byte	55
 411 004c F5       		.byte	-11
 412 004d 35       		.byte	53
 413 004e 34       		.byte	52
 414 004f F4       		.byte	-12
 415 0050 3C       		.byte	60
 416 0051 FC       		.byte	-4
 417 0052 FD       		.byte	-3
 418 0053 3D       		.byte	61
 419 0054 FF       		.byte	-1
 420 0055 3F       		.byte	63
 421 0056 3E       		.byte	62
 422 0057 FE       		.byte	-2
 423 0058 FA       		.byte	-6
 424 0059 3A       		.byte	58
 425 005a 3B       		.byte	59
 426 005b FB       		.byte	-5
 427 005c 39       		.byte	57
 428 005d F9       		.byte	-7
 429 005e F8       		.byte	-8
 430 005f 38       		.byte	56
 431 0060 28       		.byte	40
 432 0061 E8       		.byte	-24
 433 0062 E9       		.byte	-23
 434 0063 29       		.byte	41
 435 0064 EB       		.byte	-21
 436 0065 2B       		.byte	43
 437 0066 2A       		.byte	42
 438 0067 EA       		.byte	-22
 439 0068 EE       		.byte	-18
 440 0069 2E       		.byte	46
 441 006a 2F       		.byte	47
 442 006b EF       		.byte	-17
 443 006c 2D       		.byte	45
 444 006d ED       		.byte	-19
 445 006e EC       		.byte	-20
 446 006f 2C       		.byte	44
 447 0070 E4       		.byte	-28
 448 0071 24       		.byte	36
 449 0072 25       		.byte	37
 450 0073 E5       		.byte	-27
 451 0074 27       		.byte	39
 452 0075 E7       		.byte	-25
 453 0076 E6       		.byte	-26
 454 0077 26       		.byte	38
 455 0078 22       		.byte	34
 456 0079 E2       		.byte	-30
 457 007a E3       		.byte	-29
 458 007b 23       		.byte	35
 459 007c E1       		.byte	-31
 460 007d 21       		.byte	33
 461 007e 20       		.byte	32
 462 007f E0       		.byte	-32
 463 0080 A0       		.byte	-96
 464 0081 60       		.byte	96
 465 0082 61       		.byte	97
 466 0083 A1       		.byte	-95
 467 0084 63       		.byte	99
 468 0085 A3       		.byte	-93
 469 0086 A2       		.byte	-94
 470 0087 62       		.byte	98
 471 0088 66       		.byte	102
 472 0089 A6       		.byte	-90
 473 008a A7       		.byte	-89
 474 008b 67       		.byte	103
 475 008c A5       		.byte	-91
 476 008d 65       		.byte	101
 477 008e 64       		.byte	100
 478 008f A4       		.byte	-92
 479 0090 6C       		.byte	108
 480 0091 AC       		.byte	-84
 481 0092 AD       		.byte	-83
 482 0093 6D       		.byte	109
 483 0094 AF       		.byte	-81
 484 0095 6F       		.byte	111
 485 0096 6E       		.byte	110
 486 0097 AE       		.byte	-82
 487 0098 AA       		.byte	-86
 488 0099 6A       		.byte	106
 489 009a 6B       		.byte	107
 490 009b AB       		.byte	-85
 491 009c 69       		.byte	105
 492 009d A9       		.byte	-87
 493 009e A8       		.byte	-88
 494 009f 68       		.byte	104
 495 00a0 78       		.byte	120
 496 00a1 B8       		.byte	-72
 497 00a2 B9       		.byte	-71
 498 00a3 79       		.byte	121
 499 00a4 BB       		.byte	-69
 500 00a5 7B       		.byte	123
 501 00a6 7A       		.byte	122
 502 00a7 BA       		.byte	-70
 503 00a8 BE       		.byte	-66
 504 00a9 7E       		.byte	126
 505 00aa 7F       		.byte	127
 506 00ab BF       		.byte	-65
 507 00ac 7D       		.byte	125
 508 00ad BD       		.byte	-67
 509 00ae BC       		.byte	-68
 510 00af 7C       		.byte	124
 511 00b0 B4       		.byte	-76
 512 00b1 74       		.byte	116
 513 00b2 75       		.byte	117
 514 00b3 B5       		.byte	-75
 515 00b4 77       		.byte	119
 516 00b5 B7       		.byte	-73
 517 00b6 B6       		.byte	-74
 518 00b7 76       		.byte	118
 519 00b8 72       		.byte	114
 520 00b9 B2       		.byte	-78
 521 00ba B3       		.byte	-77
 522 00bb 73       		.byte	115
 523 00bc B1       		.byte	-79
 524 00bd 71       		.byte	113
 525 00be 70       		.byte	112
 526 00bf B0       		.byte	-80
 527 00c0 50       		.byte	80
 528 00c1 90       		.byte	-112
 529 00c2 91       		.byte	-111
 530 00c3 51       		.byte	81
 531 00c4 93       		.byte	-109
 532 00c5 53       		.byte	83
 533 00c6 52       		.byte	82
 534 00c7 92       		.byte	-110
 535 00c8 96       		.byte	-106
 536 00c9 56       		.byte	86
 537 00ca 57       		.byte	87
 538 00cb 97       		.byte	-105
 539 00cc 55       		.byte	85
 540 00cd 95       		.byte	-107
 541 00ce 94       		.byte	-108
 542 00cf 54       		.byte	84
 543 00d0 9C       		.byte	-100
 544 00d1 5C       		.byte	92
 545 00d2 5D       		.byte	93
 546 00d3 9D       		.byte	-99
 547 00d4 5F       		.byte	95
 548 00d5 9F       		.byte	-97
 549 00d6 9E       		.byte	-98
 550 00d7 5E       		.byte	94
 551 00d8 5A       		.byte	90
 552 00d9 9A       		.byte	-102
 553 00da 9B       		.byte	-101
 554 00db 5B       		.byte	91
 555 00dc 99       		.byte	-103
 556 00dd 59       		.byte	89
 557 00de 58       		.byte	88
 558 00df 98       		.byte	-104
 559 00e0 88       		.byte	-120
 560 00e1 48       		.byte	72
 561 00e2 49       		.byte	73
 562 00e3 89       		.byte	-119
 563 00e4 4B       		.byte	75
 564 00e5 8B       		.byte	-117
 565 00e6 8A       		.byte	-118
 566 00e7 4A       		.byte	74
 567 00e8 4E       		.byte	78
 568 00e9 8E       		.byte	-114
 569 00ea 8F       		.byte	-113
 570 00eb 4F       		.byte	79
 571 00ec 8D       		.byte	-115
 572 00ed 4D       		.byte	77
 573 00ee 4C       		.byte	76
 574 00ef 8C       		.byte	-116
 575 00f0 44       		.byte	68
 576 00f1 84       		.byte	-124
 577 00f2 85       		.byte	-123
 578 00f3 45       		.byte	69
 579 00f4 87       		.byte	-121
 580 00f5 47       		.byte	71
 581 00f6 46       		.byte	70
 582 00f7 86       		.byte	-122
 583 00f8 82       		.byte	-126
 584 00f9 42       		.byte	66
 585 00fa 43       		.byte	67
 586 00fb 83       		.byte	-125
 587 00fc 41       		.byte	65
 588 00fd 81       		.byte	-127
 589 00fe 80       		.byte	-128
 590 00ff 40       		.byte	64
 591              		.comm	fd,4,4
 592              		.comm	received_string,513,4
 593              		.comm	rx_length,4,4
 594              		.comm	input_Register,20,4
 595              		.section	.text.init_USARTx,"ax",%progbits
 596              		.align	2
 597              		.global	init_USARTx
 598              		.thumb
 599              		.thumb_func
 601              	init_USARTx:
 602              	.LFB110:
 603              		.file 1 "App/STM32F4-Discovery/modbus_mk.c"
   1:App/STM32F4-Discovery/modbus_mk.c **** /*! \file modbus_mk.c
   2:App/STM32F4-Discovery/modbus_mk.c ****  *  \brief modbus protocol functions and motor control
   3:App/STM32F4-Discovery/modbus_mk.c ****  */
   4:App/STM32F4-Discovery/modbus_mk.c **** 
   5:App/STM32F4-Discovery/modbus_mk.c **** 
   6:App/STM32F4-Discovery/modbus_mk.c **** #include "modbus_mk.h"
   7:App/STM32F4-Discovery/modbus_mk.c **** #include "printf.h"
   8:App/STM32F4-Discovery/modbus_mk.c **** 
   9:App/STM32F4-Discovery/modbus_mk.c **** 
  10:App/STM32F4-Discovery/modbus_mk.c **** #define DEBUG
  11:App/STM32F4-Discovery/modbus_mk.c **** 
  12:App/STM32F4-Discovery/modbus_mk.c **** 
  13:App/STM32F4-Discovery/modbus_mk.c **** /* This funcion initializes the USART1 peripheral
  14:App/STM32F4-Discovery/modbus_mk.c ****  * 
  15:App/STM32F4-Discovery/modbus_mk.c ****  * Arguments: baudrate --> the baudrate at which the USART is 
  16:App/STM32F4-Discovery/modbus_mk.c ****  * 						   supposed to operate
  17:App/STM32F4-Discovery/modbus_mk.c ****  */
  18:App/STM32F4-Discovery/modbus_mk.c **** 
  19:App/STM32F4-Discovery/modbus_mk.c **** #define pdFalse 0
  20:App/STM32F4-Discovery/modbus_mk.c **** #define pdTrue 	1
  21:App/STM32F4-Discovery/modbus_mk.c **** 
  22:App/STM32F4-Discovery/modbus_mk.c **** 
  23:App/STM32F4-Discovery/modbus_mk.c **** void init_USARTx(void)
  24:App/STM32F4-Discovery/modbus_mk.c **** {
 604              		.loc 1 24 0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 32
 607              		@ frame_needed = 1, uses_anonymous_args = 0
 608 0000 80B5     		push	{r7, lr}
 609              	.LCFI0:
 610              		.cfi_def_cfa_offset 8
 611              		.cfi_offset 7, -8
 612              		.cfi_offset 14, -4
 613 0002 88B0     		sub	sp, sp, #32
 614              	.LCFI1:
 615              		.cfi_def_cfa_offset 40
 616 0004 00AF     		add	r7, sp, #0
 617              	.LCFI2:
 618              		.cfi_def_cfa_register 7
  25:App/STM32F4-Discovery/modbus_mk.c **** 	
  26:App/STM32F4-Discovery/modbus_mk.c **** 	
  27:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitTypeDef GPIO_InitStruct; // this is for the GPIO pins used as TX and RX
  28:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitTypeDef USART_InitStruct; // this is for the USART1 initilization
  29:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitTypeDef NVIC_InitStructure; // this is used to configure the NVIC (nested vector interrup
  30:App/STM32F4-Discovery/modbus_mk.c **** 	
  31:App/STM32F4-Discovery/modbus_mk.c **** 	/* enable APB2 peripheral clock for USART1 
  32:App/STM32F4-Discovery/modbus_mk.c **** 	 * note that only USART1 and USART6 are connected to APB2
  33:App/STM32F4-Discovery/modbus_mk.c **** 	 * the other USARTs are connected to APB1
  34:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  35:App/STM32F4-Discovery/modbus_mk.c **** 	RCC_APB2PeriphClockCmd(USARTx_CLK, ENABLE);
 619              		.loc 1 35 0
 620 0006 2020     		movs	r0, #32
 621 0008 0121     		movs	r1, #1
 622 000a FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
  36:App/STM32F4-Discovery/modbus_mk.c **** 	
  37:App/STM32F4-Discovery/modbus_mk.c **** 	/* enable the peripheral clock for the pins used by 
  38:App/STM32F4-Discovery/modbus_mk.c **** 	 * USART1, PB6 for TX and PB7 for RX 
  39:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  40:App/STM32F4-Discovery/modbus_mk.c **** 	RCC_AHB1PeriphClockCmd(USARTx_TX_GPIO_CLK, ENABLE);
 623              		.loc 1 40 0
 624 000e 0420     		movs	r0, #4
 625 0010 0121     		movs	r1, #1
 626 0012 FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  41:App/STM32F4-Discovery/modbus_mk.c **** 	RCC_AHB1PeriphClockCmd(USARTx_RX_GPIO_CLK, ENABLE);
 627              		.loc 1 41 0
 628 0016 0420     		movs	r0, #4
 629 0018 0121     		movs	r1, #1
 630 001a FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  42:App/STM32F4-Discovery/modbus_mk.c **** 	RCC_AHB1PeriphClockCmd(USARTx_CS_GPIO_CLK, ENABLE);
 631              		.loc 1 42 0
 632 001e 4020     		movs	r0, #64
 633 0020 0121     		movs	r1, #1
 634 0022 FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  43:App/STM32F4-Discovery/modbus_mk.c **** 
  44:App/STM32F4-Discovery/modbus_mk.c **** 	
  45:App/STM32F4-Discovery/modbus_mk.c **** 	/* This sequence sets up the TX and RX pins 
  46:App/STM32F4-Discovery/modbus_mk.c **** 	 * so they work correctly with the USART1 peripheral
  47:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  48:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Pin = USARTx_RX_GPIO_PIN | USARTx_TX_GPIO_PIN; // Pins 6 (TX) and 7 (RX) are 
 635              		.loc 1 48 0
 636 0026 C023     		movs	r3, #192
 637 0028 BB61     		str	r3, [r7, #24]
  49:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF; 			// the pins are configured as alternate function so t
 638              		.loc 1 49 0
 639 002a 0223     		movs	r3, #2
 640 002c 3B77     		strb	r3, [r7, #28]
  50:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;		// this defines the IO speed and has nothing to d
 641              		.loc 1 50 0
 642 002e 0323     		movs	r3, #3
 643 0030 7B77     		strb	r3, [r7, #29]
  51:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;			// this defines the output type as push pull mode (a
 644              		.loc 1 51 0
 645 0032 0023     		movs	r3, #0
 646 0034 BB77     		strb	r3, [r7, #30]
  52:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;			// this activates the pullup resistors on the IO pins
 647              		.loc 1 52 0
 648 0036 0123     		movs	r3, #1
 649 0038 FB77     		strb	r3, [r7, #31]
  53:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_Init(USARTx_TX_GPIO_PORT, &GPIO_InitStruct);					// now all the values are passed to the GPIO
 650              		.loc 1 53 0
 651 003a 07F11803 		add	r3, r7, #24
 652 003e 2948     		ldr	r0, .L2
 653 0040 1946     		mov	r1, r3
 654 0042 FFF7FEFF 		bl	GPIO_Init
  54:App/STM32F4-Discovery/modbus_mk.c **** 	
  55:App/STM32F4-Discovery/modbus_mk.c **** 	
  56:App/STM32F4-Discovery/modbus_mk.c **** 	
  57:App/STM32F4-Discovery/modbus_mk.c **** 	/* Configure the chip select pin in this case we will use PG8 */
  58:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Pin = USARTx_CS_GPIO_PIN;
 655              		.loc 1 58 0
 656 0046 4FF48073 		mov	r3, #256
 657 004a BB61     		str	r3, [r7, #24]
  59:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_OUT;
 658              		.loc 1 59 0
 659 004c 0123     		movs	r3, #1
 660 004e 3B77     		strb	r3, [r7, #28]
  60:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;
 661              		.loc 1 60 0
 662 0050 0023     		movs	r3, #0
 663 0052 BB77     		strb	r3, [r7, #30]
  61:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;
 664              		.loc 1 61 0
 665 0054 0323     		movs	r3, #3
 666 0056 7B77     		strb	r3, [r7, #29]
  62:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;
 667              		.loc 1 62 0
 668 0058 0123     		movs	r3, #1
 669 005a FB77     		strb	r3, [r7, #31]
  63:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_Init(USARTx_CS_GPIO_PORT, &GPIO_InitStruct);
 670              		.loc 1 63 0
 671 005c 07F11803 		add	r3, r7, #24
 672 0060 2148     		ldr	r0, .L2+4
 673 0062 1946     		mov	r1, r3
 674 0064 FFF7FEFF 		bl	GPIO_Init
  64:App/STM32F4-Discovery/modbus_mk.c **** 
  65:App/STM32F4-Discovery/modbus_mk.c **** 	DD() // set PG8 high
 675              		.loc 1 65 0
 676 0068 1F4B     		ldr	r3, .L2+4
 677 006a 1F4A     		ldr	r2, .L2+4
 678 006c 128B     		ldrh	r2, [r2, #24]	@ movhi
 679 006e 92B2     		uxth	r2, r2
 680 0070 42F48072 		orr	r2, r2, #256
 681 0074 92B2     		uxth	r2, r2
 682 0076 1A83     		strh	r2, [r3, #24]	@ movhi
  66:App/STM32F4-Discovery/modbus_mk.c **** 	
  67:App/STM32F4-Discovery/modbus_mk.c **** 	
  68:App/STM32F4-Discovery/modbus_mk.c **** 	/* The RX and TX pins are now connected to their AF
  69:App/STM32F4-Discovery/modbus_mk.c **** 	 * so that the USART1 can take over control of the 
  70:App/STM32F4-Discovery/modbus_mk.c **** 	 * pins
  71:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  72:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_PinAFConfig(GPIOC, GPIO_PinSource6, GPIO_AF_USART6); //
 683              		.loc 1 72 0
 684 0078 1A48     		ldr	r0, .L2
 685 007a 0621     		movs	r1, #6
 686 007c 0822     		movs	r2, #8
 687 007e FFF7FEFF 		bl	GPIO_PinAFConfig
  73:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_PinAFConfig(GPIOC, GPIO_PinSource7, GPIO_AF_USART6);
 688              		.loc 1 73 0
 689 0082 1848     		ldr	r0, .L2
 690 0084 0721     		movs	r1, #7
 691 0086 0822     		movs	r2, #8
 692 0088 FFF7FEFF 		bl	GPIO_PinAFConfig
  74:App/STM32F4-Discovery/modbus_mk.c **** 	
  75:App/STM32F4-Discovery/modbus_mk.c **** 	/* Now the USART_InitStruct is used to define the 
  76:App/STM32F4-Discovery/modbus_mk.c **** 	 * properties of USART1 
  77:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  78:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_BaudRate = 38400;				// the baudrate is set to the value we passed into thi
 693              		.loc 1 78 0
 694 008c 4FF41643 		mov	r3, #38400
 695 0090 BB60     		str	r3, [r7, #8]
  79:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_WordLength = USART_WordLength_8b;// we want the data frame size to be 8 bit
 696              		.loc 1 79 0
 697 0092 0023     		movs	r3, #0
 698 0094 BB81     		strh	r3, [r7, #12]	@ movhi
  80:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_StopBits = USART_StopBits_1;		// we want 1 stop bit (standard)
 699              		.loc 1 80 0
 700 0096 0023     		movs	r3, #0
 701 0098 FB81     		strh	r3, [r7, #14]	@ movhi
  81:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_Parity = USART_Parity_No;		// we don't want a parity bit (standard)
 702              		.loc 1 81 0
 703 009a 0023     		movs	r3, #0
 704 009c 3B82     		strh	r3, [r7, #16]	@ movhi
  82:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_HardwareFlowControl = USART_HardwareFlowControl_None; // we don't want flow
 705              		.loc 1 82 0
 706 009e 0023     		movs	r3, #0
 707 00a0 BB82     		strh	r3, [r7, #20]	@ movhi
  83:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_Mode = USART_Mode_Tx | USART_Mode_Rx; // we want to enable the transmitter 
 708              		.loc 1 83 0
 709 00a2 0C23     		movs	r3, #12
 710 00a4 7B82     		strh	r3, [r7, #18]	@ movhi
  84:App/STM32F4-Discovery/modbus_mk.c **** 	USART_Init(USART6, &USART_InitStruct);					// again all the properties are passed to the USART_Ini
 711              		.loc 1 84 0
 712 00a6 07F10803 		add	r3, r7, #8
 713 00aa 1048     		ldr	r0, .L2+8
 714 00ac 1946     		mov	r1, r3
 715 00ae FFF7FEFF 		bl	USART_Init
  85:App/STM32F4-Discovery/modbus_mk.c **** 	
  86:App/STM32F4-Discovery/modbus_mk.c **** 	
  87:App/STM32F4-Discovery/modbus_mk.c **** 	/* Here the USART1 receive interrupt is enabled
  88:App/STM32F4-Discovery/modbus_mk.c **** 	 * and the interrupt controller is configured 
  89:App/STM32F4-Discovery/modbus_mk.c **** 	 * to jump to the USART1_IRQHandler() function
  90:App/STM32F4-Discovery/modbus_mk.c **** 	 * if the USART1 receive interrupt occurs
  91:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  92:App/STM32F4-Discovery/modbus_mk.c **** 	USART_ITConfig(USART6, USART_IT_RXNE, ENABLE); // enable the USART1 receive interrupt 
 716              		.loc 1 92 0
 717 00b2 0E48     		ldr	r0, .L2+8
 718 00b4 40F22551 		movw	r1, #1317
 719 00b8 0122     		movs	r2, #1
 720 00ba FFF7FEFF 		bl	USART_ITConfig
  93:App/STM32F4-Discovery/modbus_mk.c **** 	
  94:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitStructure.NVIC_IRQChannel = USART6_IRQn;		 // we want to configure the USART interrupts
 721              		.loc 1 94 0
 722 00be 4723     		movs	r3, #71
 723 00c0 3B71     		strb	r3, [r7, #4]
  95:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORIT
 724              		.loc 1 95 0
 725 00c2 0623     		movs	r3, #6
 726 00c4 7B71     		strb	r3, [r7, #5]
  96:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x1;		 // this sets the subpriority inside the gro
 727              		.loc 1 96 0
 728 00c6 0123     		movs	r3, #1
 729 00c8 BB71     		strb	r3, [r7, #6]
  97:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;			 // the USART1 interrupts are globally enabled
 730              		.loc 1 97 0
 731 00ca 0123     		movs	r3, #1
 732 00cc FB71     		strb	r3, [r7, #7]
  98:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_Init(&NVIC_InitStructure);	 // the properties are passed to the NVIC_Init function which take
 733              		.loc 1 98 0
 734 00ce 3B1D     		adds	r3, r7, #4
 735 00d0 1846     		mov	r0, r3
 736 00d2 FFF7FEFF 		bl	NVIC_Init
  99:App/STM32F4-Discovery/modbus_mk.c **** 
 100:App/STM32F4-Discovery/modbus_mk.c **** 	// finally this enables the complete USART1 peripheral
 101:App/STM32F4-Discovery/modbus_mk.c **** 	USART_Cmd(USART6, ENABLE);
 737              		.loc 1 101 0
 738 00d6 0548     		ldr	r0, .L2+8
 739 00d8 0121     		movs	r1, #1
 740 00da FFF7FEFF 		bl	USART_Cmd
 102:App/STM32F4-Discovery/modbus_mk.c **** }
 741              		.loc 1 102 0
 742 00de 2037     		adds	r7, r7, #32
 743 00e0 BD46     		mov	sp, r7
 744              		@ sp needed
 745 00e2 80BD     		pop	{r7, pc}
 746              	.L3:
 747              		.align	2
 748              	.L2:
 749 00e4 00080240 		.word	1073874944
 750 00e8 00180240 		.word	1073879040
 751 00ec 00140140 		.word	1073812480
 752              		.cfi_endproc
 753              	.LFE110:
 755              		.section	.text.USART_puts,"ax",%progbits
 756              		.align	2
 757              		.global	USART_puts
 758              		.thumb
 759              		.thumb_func
 761              	USART_puts:
 762              	.LFB111:
 103:App/STM32F4-Discovery/modbus_mk.c **** 
 104:App/STM32F4-Discovery/modbus_mk.c **** 
 105:App/STM32F4-Discovery/modbus_mk.c **** void USART_puts(uint8_t *s, int nb)
 106:App/STM32F4-Discovery/modbus_mk.c **** {
 763              		.loc 1 106 0
 764              		.cfi_startproc
 765              		@ args = 0, pretend = 0, frame = 16
 766              		@ frame_needed = 1, uses_anonymous_args = 0
 767              		@ link register save eliminated.
 768 0000 80B4     		push	{r7}
 769              	.LCFI3:
 770              		.cfi_def_cfa_offset 4
 771              		.cfi_offset 7, -4
 772 0002 85B0     		sub	sp, sp, #20
 773              	.LCFI4:
 774              		.cfi_def_cfa_offset 24
 775 0004 00AF     		add	r7, sp, #0
 776              	.LCFI5:
 777              		.cfi_def_cfa_register 7
 778 0006 7860     		str	r0, [r7, #4]
 779 0008 3960     		str	r1, [r7]
 107:App/STM32F4-Discovery/modbus_mk.c **** 
 108:App/STM32F4-Discovery/modbus_mk.c **** 	/*! This function is used to transmit a string of characters via 
 109:App/STM32F4-Discovery/modbus_mk.c **** 	 * the USART specified in USARTx.
 110:App/STM32F4-Discovery/modbus_mk.c **** 	 * 
 111:App/STM32F4-Discovery/modbus_mk.c **** 	 * It takes two arguments: USARTx --> can be any of the USARTs e.g. USART1, USART2 etc.
 112:App/STM32F4-Discovery/modbus_mk.c **** 	 * 						   (volatile) char *s is the string you want to send
 113:App/STM32F4-Discovery/modbus_mk.c **** 	 * 
 114:App/STM32F4-Discovery/modbus_mk.c **** 	 * Note: The string has to be passed to the function as a pointer because
 115:App/STM32F4-Discovery/modbus_mk.c **** 	 * 		 the compiler doesn't know the 'string' data type. In standard
 116:App/STM32F4-Discovery/modbus_mk.c **** 	 * 		 C a string is just an array of characters
 117:App/STM32F4-Discovery/modbus_mk.c **** 	 * 
 118:App/STM32F4-Discovery/modbus_mk.c **** 	 * Note 2: At the moment it takes a volatile char because the received_string variable
 119:App/STM32F4-Discovery/modbus_mk.c **** 	 * 		   declared as volatile char --> otherwise the compiler will spit out warnings
 120:App/STM32F4-Discovery/modbus_mk.c **** 	 * */
 121:App/STM32F4-Discovery/modbus_mk.c **** 
 122:App/STM32F4-Discovery/modbus_mk.c **** 	int i = 0;
 780              		.loc 1 122 0
 781 000a 0023     		movs	r3, #0
 782 000c FB60     		str	r3, [r7, #12]
 123:App/STM32F4-Discovery/modbus_mk.c **** 	while(i < nb && *s){
 783              		.loc 1 123 0
 784 000e 10E0     		b	.L5
 785              	.L8:
 124:App/STM32F4-Discovery/modbus_mk.c **** 		// wait until data register is empty
 125:App/STM32F4-Discovery/modbus_mk.c **** 		while( !(USARTx->SR & 0x00000040) ); 
 786              		.loc 1 125 0
 787 0010 00BF     		nop
 788              	.L6:
 789              		.loc 1 125 0 is_stmt 0 discriminator 1
 790 0012 0E4B     		ldr	r3, .L9
 791 0014 1B88     		ldrh	r3, [r3]	@ movhi
 792 0016 9BB2     		uxth	r3, r3
 793 0018 03F04003 		and	r3, r3, #64
 794 001c 002B     		cmp	r3, #0
 795 001e F8D0     		beq	.L6
 126:App/STM32F4-Discovery/modbus_mk.c **** 		//USART_SendData(USART6, s[i]);
 127:App/STM32F4-Discovery/modbus_mk.c **** 		USARTx->DR = s[i];
 796              		.loc 1 127 0 is_stmt 1
 797 0020 0A4B     		ldr	r3, .L9
 798 0022 FA68     		ldr	r2, [r7, #12]
 799 0024 7968     		ldr	r1, [r7, #4]
 800 0026 0A44     		add	r2, r2, r1
 801 0028 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 802 002a 9A80     		strh	r2, [r3, #4]	@ movhi
 128:App/STM32F4-Discovery/modbus_mk.c **** 		i++;
 803              		.loc 1 128 0
 804 002c FB68     		ldr	r3, [r7, #12]
 805 002e 0133     		adds	r3, r3, #1
 806 0030 FB60     		str	r3, [r7, #12]
 807              	.L5:
 123:App/STM32F4-Discovery/modbus_mk.c **** 	while(i < nb && *s){
 808              		.loc 1 123 0 discriminator 1
 809 0032 FA68     		ldr	r2, [r7, #12]
 810 0034 3B68     		ldr	r3, [r7]
 811 0036 9A42     		cmp	r2, r3
 812 0038 03DA     		bge	.L4
 123:App/STM32F4-Discovery/modbus_mk.c **** 	while(i < nb && *s){
 813              		.loc 1 123 0 is_stmt 0 discriminator 2
 814 003a 7B68     		ldr	r3, [r7, #4]
 815 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 816 003e 002B     		cmp	r3, #0
 817 0040 E6D1     		bne	.L8
 818              	.L4:
 129:App/STM32F4-Discovery/modbus_mk.c **** 	
 130:App/STM32F4-Discovery/modbus_mk.c **** 	}
 131:App/STM32F4-Discovery/modbus_mk.c **** 	
 132:App/STM32F4-Discovery/modbus_mk.c **** 	
 133:App/STM32F4-Discovery/modbus_mk.c **** }
 819              		.loc 1 133 0 is_stmt 1
 820 0042 1437     		adds	r7, r7, #20
 821 0044 BD46     		mov	sp, r7
 822              		@ sp needed
 823 0046 5DF8047B 		ldr	r7, [sp], #4
 824 004a 7047     		bx	lr
 825              	.L10:
 826              		.align	2
 827              	.L9:
 828 004c 00140140 		.word	1073812480
 829              		.cfi_endproc
 830              	.LFE111:
 832              		.section	.text.USART6_IRQHandler,"ax",%progbits
 833              		.align	2
 834              		.global	USART6_IRQHandler
 835              		.thumb
 836              		.thumb_func
 838              	USART6_IRQHandler:
 839              	.LFB112:
 134:App/STM32F4-Discovery/modbus_mk.c **** 
 135:App/STM32F4-Discovery/modbus_mk.c **** // this is the interrupt request handler (IRQ) for ALL USART6 interrupts
 136:App/STM32F4-Discovery/modbus_mk.c **** void USART6_IRQHandler(void){
 840              		.loc 1 136 0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 8
 843              		@ frame_needed = 1, uses_anonymous_args = 0
 844 0000 80B5     		push	{r7, lr}
 845              	.LCFI6:
 846              		.cfi_def_cfa_offset 8
 847              		.cfi_offset 7, -8
 848              		.cfi_offset 14, -4
 849 0002 82B0     		sub	sp, sp, #8
 850              	.LCFI7:
 851              		.cfi_def_cfa_offset 16
 852 0004 00AF     		add	r7, sp, #0
 853              	.LCFI8:
 854              		.cfi_def_cfa_register 7
 137:App/STM32F4-Discovery/modbus_mk.c **** 	
 138:App/STM32F4-Discovery/modbus_mk.c **** 	unsigned portBASE_TYPE xHigherPriorityTaskWoken_usart = pdFalse;
 855              		.loc 1 138 0
 856 0006 0023     		movs	r3, #0
 857 0008 3B60     		str	r3, [r7]
 139:App/STM32F4-Discovery/modbus_mk.c **** 	
 140:App/STM32F4-Discovery/modbus_mk.c **** 
 141:App/STM32F4-Discovery/modbus_mk.c **** 	// check if the USART1 receive interrupt flag was set
 142:App/STM32F4-Discovery/modbus_mk.c **** 	if( USART_GetITStatus(USARTx, USART_IT_RXNE) ){
 858              		.loc 1 142 0
 859 000a 2448     		ldr	r0, .L15
 860 000c 40F22551 		movw	r1, #1317
 861 0010 FFF7FEFF 		bl	USART_GetITStatus
 862 0014 0346     		mov	r3, r0
 863 0016 002B     		cmp	r3, #0
 864 0018 35D0     		beq	.L12
 865              	.LBB2:
 143:App/STM32F4-Discovery/modbus_mk.c **** 		
 144:App/STM32F4-Discovery/modbus_mk.c **** 		
 145:App/STM32F4-Discovery/modbus_mk.c **** 	//	USART_ClearITPendingBit ( USARTx, USART_IT_RXNE ) ;
 146:App/STM32F4-Discovery/modbus_mk.c **** 		static uint8_t cnt = 0; // this counter is used to determine the string length
 147:App/STM32F4-Discovery/modbus_mk.c **** 	 	char t = USARTx->DR; // the character from the USART1 data register is saved in t
 866              		.loc 1 147 0
 867 001a 204B     		ldr	r3, .L15
 868 001c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 869 001e 9BB2     		uxth	r3, r3
 870 0020 FB71     		strb	r3, [r7, #7]
 148:App/STM32F4-Discovery/modbus_mk.c **** 		
 149:App/STM32F4-Discovery/modbus_mk.c **** 		/* check if the received character is not the LF character (used to determine end of string) 
 150:App/STM32F4-Discovery/modbus_mk.c **** 		 * or the if the maximum string length has been been reached 
 151:App/STM32F4-Discovery/modbus_mk.c **** 		 */
 152:App/STM32F4-Discovery/modbus_mk.c **** 	
 153:App/STM32F4-Discovery/modbus_mk.c **** 		
 154:App/STM32F4-Discovery/modbus_mk.c **** 		if( (cnt < rx_length-1) &&
 871              		.loc 1 154 0
 872 0022 1F4B     		ldr	r3, .L15+4
 873 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 874 0026 1A46     		mov	r2, r3
 875 0028 1E4B     		ldr	r3, .L15+8
 876 002a 1B68     		ldr	r3, [r3]
 877 002c 013B     		subs	r3, r3, #1
 878 002e 9A42     		cmp	r2, r3
 879 0030 0FDA     		bge	.L13
 155:App/STM32F4-Discovery/modbus_mk.c **** 				(cnt < MAX_STRLEN-400) ){ 
 880              		.loc 1 155 0 discriminator 1
 881 0032 1B4B     		ldr	r3, .L15+4
 882 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 154:App/STM32F4-Discovery/modbus_mk.c **** 		if( (cnt < rx_length-1) &&
 883              		.loc 1 154 0 discriminator 1
 884 0036 6F2B     		cmp	r3, #111
 885 0038 0BD8     		bhi	.L13
 156:App/STM32F4-Discovery/modbus_mk.c **** 			received_string[cnt] = t;
 886              		.loc 1 156 0
 887 003a 194B     		ldr	r3, .L15+4
 888 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 889 003e 1A4A     		ldr	r2, .L15+12
 890 0040 F979     		ldrb	r1, [r7, #7]
 891 0042 D154     		strb	r1, [r2, r3]
 157:App/STM32F4-Discovery/modbus_mk.c **** 			cnt++;
 892              		.loc 1 157 0
 893 0044 164B     		ldr	r3, .L15+4
 894 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 895 0048 0133     		adds	r3, r3, #1
 896 004a DAB2     		uxtb	r2, r3
 897 004c 144B     		ldr	r3, .L15+4
 898 004e 1A70     		strb	r2, [r3]
 899 0050 19E0     		b	.L12
 900              	.L13:
 158:App/STM32F4-Discovery/modbus_mk.c **** 		}
 159:App/STM32F4-Discovery/modbus_mk.c **** 		else{ // otherwise reset the character counter and print the received string
 160:App/STM32F4-Discovery/modbus_mk.c **** 			received_string[cnt] = t; 
 901              		.loc 1 160 0
 902 0052 134B     		ldr	r3, .L15+4
 903 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 904 0056 144A     		ldr	r2, .L15+12
 905 0058 F979     		ldrb	r1, [r7, #7]
 906 005a D154     		strb	r1, [r2, r3]
 161:App/STM32F4-Discovery/modbus_mk.c **** 			cnt = 0;
 907              		.loc 1 161 0
 908 005c 104B     		ldr	r3, .L15+4
 909 005e 0022     		movs	r2, #0
 910 0060 1A70     		strb	r2, [r3]
 162:App/STM32F4-Discovery/modbus_mk.c **** 		//	USART_ITConfig(USART6, USART_IT_RXNE, DISABLE); 
 163:App/STM32F4-Discovery/modbus_mk.c **** 	
 164:App/STM32F4-Discovery/modbus_mk.c **** 			USART_ClearITPendingBit ( USARTx, USART_IT_RXNE ) ;
 911              		.loc 1 164 0
 912 0062 0E48     		ldr	r0, .L15
 913 0064 40F22551 		movw	r1, #1317
 914 0068 FFF7FEFF 		bl	USART_ClearITPendingBit
 165:App/STM32F4-Discovery/modbus_mk.c **** 		taskENTER_CRITICAL();
 915              		.loc 1 165 0
 916 006c FFF7FEFF 		bl	vPortEnterCritical
 166:App/STM32F4-Discovery/modbus_mk.c **** 			xSemaphoreGiveFromISR(xSmphrUSART,&xHigherPriorityTaskWoken_usart );
 917              		.loc 1 166 0
 918 0070 0E4B     		ldr	r3, .L15+16
 919 0072 1A68     		ldr	r2, [r3]
 920 0074 3B46     		mov	r3, r7
 921 0076 1046     		mov	r0, r2
 922 0078 0021     		movs	r1, #0
 923 007a 1A46     		mov	r2, r3
 924 007c 0023     		movs	r3, #0
 925 007e FFF7FEFF 		bl	xQueueGenericSendFromISR
 167:App/STM32F4-Discovery/modbus_mk.c **** 		taskEXIT_CRITICAL();
 926              		.loc 1 167 0
 927 0082 FFF7FEFF 		bl	vPortExitCritical
 928              	.L12:
 929              	.LBE2:
 168:App/STM32F4-Discovery/modbus_mk.c **** 			//USART_puts(USART1, received_string);
 169:App/STM32F4-Discovery/modbus_mk.c **** 		}
 170:App/STM32F4-Discovery/modbus_mk.c **** 
 171:App/STM32F4-Discovery/modbus_mk.c **** 
 172:App/STM32F4-Discovery/modbus_mk.c **** 	}
 173:App/STM32F4-Discovery/modbus_mk.c ****  portEND_SWITCHING_ISR( xHigherPriorityTaskWoken_usart );	
 930              		.loc 1 173 0
 931 0086 3B68     		ldr	r3, [r7]
 932 0088 002B     		cmp	r3, #0
 933 008a 03D0     		beq	.L11
 934              		.loc 1 173 0 is_stmt 0 discriminator 1
 935 008c 084B     		ldr	r3, .L15+20
 936 008e 4FF08052 		mov	r2, #268435456
 937 0092 1A60     		str	r2, [r3]
 938              	.L11:
 174:App/STM32F4-Discovery/modbus_mk.c **** }
 939              		.loc 1 174 0 is_stmt 1
 940 0094 0837     		adds	r7, r7, #8
 941 0096 BD46     		mov	sp, r7
 942              		@ sp needed
 943 0098 80BD     		pop	{r7, pc}
 944              	.L16:
 945 009a 00BF     		.align	2
 946              	.L15:
 947 009c 00140140 		.word	1073812480
 948 00a0 00000000 		.word	cnt.9327
 949 00a4 00000000 		.word	rx_length
 950 00a8 00000000 		.word	received_string
 951 00ac 00000000 		.word	xSmphrUSART
 952 00b0 04ED00E0 		.word	-536810236
 953              		.cfi_endproc
 954              	.LFE112:
 956              		.section	.text.crc16,"ax",%progbits
 957              		.align	2
 958              		.global	crc16
 959              		.thumb
 960              		.thumb_func
 962              	crc16:
 963              	.LFB113:
 175:App/STM32F4-Discovery/modbus_mk.c **** 
 176:App/STM32F4-Discovery/modbus_mk.c **** 
 177:App/STM32F4-Discovery/modbus_mk.c **** 
 178:App/STM32F4-Discovery/modbus_mk.c **** /* function for  */
 179:App/STM32F4-Discovery/modbus_mk.c **** uint16_t crc16(uint8_t *buffer, uint16_t buffer_length)
 180:App/STM32F4-Discovery/modbus_mk.c **** {
 964              		.loc 1 180 0
 965              		.cfi_startproc
 966              		@ args = 0, pretend = 0, frame = 16
 967              		@ frame_needed = 1, uses_anonymous_args = 0
 968              		@ link register save eliminated.
 969 0000 80B4     		push	{r7}
 970              	.LCFI9:
 971              		.cfi_def_cfa_offset 4
 972              		.cfi_offset 7, -4
 973 0002 85B0     		sub	sp, sp, #20
 974              	.LCFI10:
 975              		.cfi_def_cfa_offset 24
 976 0004 00AF     		add	r7, sp, #0
 977              	.LCFI11:
 978              		.cfi_def_cfa_register 7
 979 0006 7860     		str	r0, [r7, #4]
 980 0008 0B46     		mov	r3, r1
 981 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 181:App/STM32F4-Discovery/modbus_mk.c ****      uint8_t crc_hi = 0xFF; /* high CRC byte initialized */
 982              		.loc 1 181 0
 983 000c FF23     		movs	r3, #255
 984 000e FB73     		strb	r3, [r7, #15]
 182:App/STM32F4-Discovery/modbus_mk.c ****      uint8_t crc_lo = 0xFF; /* low CRC byte initialized */
 985              		.loc 1 182 0
 986 0010 FF23     		movs	r3, #255
 987 0012 BB73     		strb	r3, [r7, #14]
 183:App/STM32F4-Discovery/modbus_mk.c ****      unsigned int i; /* will index into CRC lookup */
 184:App/STM32F4-Discovery/modbus_mk.c ****  
 185:App/STM32F4-Discovery/modbus_mk.c ****      /* pass through message buffer */
 186:App/STM32F4-Discovery/modbus_mk.c ****      while (buffer_length--) {
 988              		.loc 1 186 0
 989 0014 13E0     		b	.L18
 990              	.L19:
 187:App/STM32F4-Discovery/modbus_mk.c ****          i = crc_hi ^ *buffer++; /* calculate the CRC  */
 991              		.loc 1 187 0
 992 0016 7B68     		ldr	r3, [r7, #4]
 993 0018 5A1C     		adds	r2, r3, #1
 994 001a 7A60     		str	r2, [r7, #4]
 995 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 996 001e FB7B     		ldrb	r3, [r7, #15]
 997 0020 5340     		eors	r3, r3, r2
 998 0022 DBB2     		uxtb	r3, r3
 999 0024 BB60     		str	r3, [r7, #8]
 188:App/STM32F4-Discovery/modbus_mk.c ****          crc_hi = crc_lo ^ table_crc_hi[i];
 1000              		.loc 1 188 0
 1001 0026 0F4A     		ldr	r2, .L21
 1002 0028 BB68     		ldr	r3, [r7, #8]
 1003 002a 1344     		add	r3, r3, r2
 1004 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1005 002e BB7B     		ldrb	r3, [r7, #14]
 1006 0030 5340     		eors	r3, r3, r2
 1007 0032 FB73     		strb	r3, [r7, #15]
 189:App/STM32F4-Discovery/modbus_mk.c ****          crc_lo = table_crc_lo[i];
 1008              		.loc 1 189 0
 1009 0034 0C4A     		ldr	r2, .L21+4
 1010 0036 BB68     		ldr	r3, [r7, #8]
 1011 0038 1344     		add	r3, r3, r2
 1012 003a 1B78     		ldrb	r3, [r3]
 1013 003c BB73     		strb	r3, [r7, #14]
 1014              	.L18:
 186:App/STM32F4-Discovery/modbus_mk.c ****      while (buffer_length--) {
 1015              		.loc 1 186 0 discriminator 1
 1016 003e 7B88     		ldrh	r3, [r7, #2]
 1017 0040 5A1E     		subs	r2, r3, #1
 1018 0042 7A80     		strh	r2, [r7, #2]	@ movhi
 1019 0044 002B     		cmp	r3, #0
 1020 0046 E6D1     		bne	.L19
 190:App/STM32F4-Discovery/modbus_mk.c ****      }
 191:App/STM32F4-Discovery/modbus_mk.c ****  
 192:App/STM32F4-Discovery/modbus_mk.c ****      return (crc_hi << 8 | crc_lo);
 1021              		.loc 1 192 0
 1022 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1023 004a 1B02     		lsls	r3, r3, #8
 1024 004c 9AB2     		uxth	r2, r3
 1025 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1026 0050 9BB2     		uxth	r3, r3
 1027 0052 1343     		orrs	r3, r3, r2
 1028 0054 9BB2     		uxth	r3, r3
 1029 0056 9BB2     		uxth	r3, r3
 193:App/STM32F4-Discovery/modbus_mk.c **** }
 1030              		.loc 1 193 0
 1031 0058 1846     		mov	r0, r3
 1032 005a 1437     		adds	r7, r7, #20
 1033 005c BD46     		mov	sp, r7
 1034              		@ sp needed
 1035 005e 5DF8047B 		ldr	r7, [sp], #4
 1036 0062 7047     		bx	lr
 1037              	.L22:
 1038              		.align	2
 1039              	.L21:
 1040 0064 00000000 		.word	table_crc_hi
 1041 0068 00000000 		.word	table_crc_lo
 1042              		.cfi_endproc
 1043              	.LFE113:
 1045              		.section	.text.modbus_confirmation,"ax",%progbits
 1046              		.align	2
 1047              		.global	modbus_confirmation
 1048              		.thumb
 1049              		.thumb_func
 1051              	modbus_confirmation:
 1052              	.LFB114:
 194:App/STM32F4-Discovery/modbus_mk.c **** 
 195:App/STM32F4-Discovery/modbus_mk.c **** /* modbus_confirmation */ 
 196:App/STM32F4-Discovery/modbus_mk.c **** 
 197:App/STM32F4-Discovery/modbus_mk.c **** int modbus_confirmation ( uint8_t * req, uint8_t * rsp, uint16_t write_len, uint16_t read_len)
 198:App/STM32F4-Discovery/modbus_mk.c **** {
 1053              		.loc 1 198 0
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 24
 1056              		@ frame_needed = 1, uses_anonymous_args = 0
 1057 0000 80B5     		push	{r7, lr}
 1058              	.LCFI12:
 1059              		.cfi_def_cfa_offset 8
 1060              		.cfi_offset 7, -8
 1061              		.cfi_offset 14, -4
 1062 0002 86B0     		sub	sp, sp, #24
 1063              	.LCFI13:
 1064              		.cfi_def_cfa_offset 32
 1065 0004 00AF     		add	r7, sp, #0
 1066              	.LCFI14:
 1067              		.cfi_def_cfa_register 7
 1068 0006 F860     		str	r0, [r7, #12]
 1069 0008 B960     		str	r1, [r7, #8]
 1070 000a FA80     		strh	r2, [r7, #6]	@ movhi
 1071 000c BB80     		strh	r3, [r7, #4]	@ movhi
 199:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(rsp, read_len - 2 );
 1072              		.loc 1 199 0
 1073 000e BB88     		ldrh	r3, [r7, #4]	@ movhi
 1074 0010 023B     		subs	r3, r3, #2
 1075 0012 9BB2     		uxth	r3, r3
 1076 0014 B868     		ldr	r0, [r7, #8]
 1077 0016 1946     		mov	r1, r3
 1078 0018 FFF7FEFF 		bl	crc16
 1079 001c 0346     		mov	r3, r0
 1080 001e FB82     		strh	r3, [r7, #22]	@ movhi
 200:App/STM32F4-Discovery/modbus_mk.c **** 
 201:App/STM32F4-Discovery/modbus_mk.c **** 	if (	rsp[read_len -1 ] == ( crc & 0x00ff ) && 
 1081              		.loc 1 201 0
 1082 0020 BB88     		ldrh	r3, [r7, #4]
 1083 0022 013B     		subs	r3, r3, #1
 1084 0024 BA68     		ldr	r2, [r7, #8]
 1085 0026 1344     		add	r3, r3, r2
 1086 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1087 002a 1A46     		mov	r2, r3
 1088 002c FB8A     		ldrh	r3, [r7, #22]
 1089 002e DBB2     		uxtb	r3, r3
 1090 0030 9A42     		cmp	r2, r3
 1091 0032 0CD1     		bne	.L24
 202:App/STM32F4-Discovery/modbus_mk.c **** 		rsp[read_len - 2 ] == ( crc >> 8 ) ) return 1; 
 1092              		.loc 1 202 0 discriminator 1
 1093 0034 BB88     		ldrh	r3, [r7, #4]
 1094 0036 023B     		subs	r3, r3, #2
 1095 0038 BA68     		ldr	r2, [r7, #8]
 1096 003a 1344     		add	r3, r3, r2
 1097 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1098 003e 1A46     		mov	r2, r3
 1099 0040 FB8A     		ldrh	r3, [r7, #22]
 1100 0042 1B0A     		lsrs	r3, r3, #8
 1101 0044 9BB2     		uxth	r3, r3
 201:App/STM32F4-Discovery/modbus_mk.c **** 	if (	rsp[read_len -1 ] == ( crc & 0x00ff ) && 
 1102              		.loc 1 201 0 discriminator 1
 1103 0046 9A42     		cmp	r2, r3
 1104 0048 01D1     		bne	.L24
 1105              		.loc 1 202 0
 1106 004a 0123     		movs	r3, #1
 1107 004c 00E0     		b	.L25
 1108              	.L24:
 203:App/STM32F4-Discovery/modbus_mk.c **** 	return 0; 
 1109              		.loc 1 203 0
 1110 004e 0023     		movs	r3, #0
 1111              	.L25:
 204:App/STM32F4-Discovery/modbus_mk.c **** 	
 205:App/STM32F4-Discovery/modbus_mk.c **** }
 1112              		.loc 1 205 0
 1113 0050 1846     		mov	r0, r3
 1114 0052 1837     		adds	r7, r7, #24
 1115 0054 BD46     		mov	sp, r7
 1116              		@ sp needed
 1117 0056 80BD     		pop	{r7, pc}
 1118              		.cfi_endproc
 1119              	.LFE114:
 1121              		.section	.rodata
 1122 0071 000000   		.align	2
 1123              	.LC4:
 1124 0074 5B25785D 		.ascii	"[%x]\000"
 1124      00
 1125 0079 000000   		.align	2
 1126              	.LC5:
 1127 007c 0A00     		.ascii	"\012\000"
 1128              		.section	.text.write_read_modbus,"ax",%progbits
 1129              		.align	2
 1130              		.global	write_read_modbus
 1131              		.thumb
 1132              		.thumb_func
 1134              	write_read_modbus:
 1135              	.LFB115:
 206:App/STM32F4-Discovery/modbus_mk.c **** 
 207:App/STM32F4-Discovery/modbus_mk.c **** /* write to modbus */
 208:App/STM32F4-Discovery/modbus_mk.c **** void write_read_modbus( uint8_t * req, uint8_t * rsp, int write_len, int read_len )
 209:App/STM32F4-Discovery/modbus_mk.c **** {
 1136              		.loc 1 209 0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 24
 1139              		@ frame_needed = 1, uses_anonymous_args = 0
 1140 0000 80B5     		push	{r7, lr}
 1141              	.LCFI15:
 1142              		.cfi_def_cfa_offset 8
 1143              		.cfi_offset 7, -8
 1144              		.cfi_offset 14, -4
 1145 0002 86B0     		sub	sp, sp, #24
 1146              	.LCFI16:
 1147              		.cfi_def_cfa_offset 32
 1148 0004 00AF     		add	r7, sp, #0
 1149              	.LCFI17:
 1150              		.cfi_def_cfa_register 7
 1151 0006 F860     		str	r0, [r7, #12]
 1152 0008 B960     		str	r1, [r7, #8]
 1153 000a 7A60     		str	r2, [r7, #4]
 1154 000c 3B60     		str	r3, [r7]
 210:App/STM32F4-Discovery/modbus_mk.c **** 	int i; 
 211:App/STM32F4-Discovery/modbus_mk.c **** 	rx_length = read_len + write_len - 1 ; 
 1155              		.loc 1 211 0
 1156 000e 3A68     		ldr	r2, [r7]
 1157 0010 7B68     		ldr	r3, [r7, #4]
 1158 0012 1344     		add	r3, r3, r2
 1159 0014 5A1E     		subs	r2, r3, #1
 1160 0016 2A4B     		ldr	r3, .L33
 1161 0018 1A60     		str	r2, [r3]
 212:App/STM32F4-Discovery/modbus_mk.c **** 
 213:App/STM32F4-Discovery/modbus_mk.c **** 	// driver disable 
 214:App/STM32F4-Discovery/modbus_mk.c **** 	DD();
 1162              		.loc 1 214 0
 1163 001a 2A4B     		ldr	r3, .L33+4
 1164 001c 294A     		ldr	r2, .L33+4
 1165 001e 128B     		ldrh	r2, [r2, #24]	@ movhi
 1166 0020 92B2     		uxth	r2, r2
 1167 0022 42F48072 		orr	r2, r2, #256
 1168 0026 92B2     		uxth	r2, r2
 1169 0028 1A83     		strh	r2, [r3, #24]	@ movhi
 215:App/STM32F4-Discovery/modbus_mk.c **** 	for (i=0; i < 4000; i++) ;
 1170              		.loc 1 215 0
 1171 002a 0023     		movs	r3, #0
 1172 002c 7B61     		str	r3, [r7, #20]
 1173 002e 02E0     		b	.L27
 1174              	.L28:
 1175              		.loc 1 215 0 is_stmt 0 discriminator 2
 1176 0030 7B69     		ldr	r3, [r7, #20]
 1177 0032 0133     		adds	r3, r3, #1
 1178 0034 7B61     		str	r3, [r7, #20]
 1179              	.L27:
 1180              		.loc 1 215 0 discriminator 1
 1181 0036 7B69     		ldr	r3, [r7, #20]
 1182 0038 B3F57A6F 		cmp	r3, #4000
 1183 003c F8DB     		blt	.L28
 216:App/STM32F4-Discovery/modbus_mk.c **** 	USART_puts(req,write_len);
 1184              		.loc 1 216 0 is_stmt 1
 1185 003e F868     		ldr	r0, [r7, #12]
 1186 0040 7968     		ldr	r1, [r7, #4]
 1187 0042 FFF7FEFF 		bl	USART_puts
 217:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < 4000; i++);
 1188              		.loc 1 217 0
 1189 0046 0023     		movs	r3, #0
 1190 0048 7B61     		str	r3, [r7, #20]
 1191 004a 02E0     		b	.L29
 1192              	.L30:
 1193              		.loc 1 217 0 is_stmt 0 discriminator 2
 1194 004c 7B69     		ldr	r3, [r7, #20]
 1195 004e 0133     		adds	r3, r3, #1
 1196 0050 7B61     		str	r3, [r7, #20]
 1197              	.L29:
 1198              		.loc 1 217 0 discriminator 1
 1199 0052 7B69     		ldr	r3, [r7, #20]
 1200 0054 B3F57A6F 		cmp	r3, #4000
 1201 0058 F8DB     		blt	.L30
 218:App/STM32F4-Discovery/modbus_mk.c **** 	// driver enable 
 219:App/STM32F4-Discovery/modbus_mk.c **** 	DE();
 1202              		.loc 1 219 0 is_stmt 1
 1203 005a 1A4B     		ldr	r3, .L33+4
 1204 005c 194A     		ldr	r2, .L33+4
 1205 005e 528B     		ldrh	r2, [r2, #26]	@ movhi
 1206 0060 92B2     		uxth	r2, r2
 1207 0062 42F48072 		orr	r2, r2, #256
 1208 0066 92B2     		uxth	r2, r2
 1209 0068 5A83     		strh	r2, [r3, #26]	@ movhi
 220:App/STM32F4-Discovery/modbus_mk.c **** 	xSemaphoreTake(xSmphrUSART, 500/portTICK_RATE_MS);
 1210              		.loc 1 220 0
 1211 006a 174B     		ldr	r3, .L33+8
 1212 006c 1B68     		ldr	r3, [r3]
 1213 006e 1846     		mov	r0, r3
 1214 0070 0021     		movs	r1, #0
 1215 0072 4FF4FA72 		mov	r2, #500
 1216 0076 0023     		movs	r3, #0
 1217 0078 FFF7FEFF 		bl	xQueueGenericReceive
 221:App/STM32F4-Discovery/modbus_mk.c **** 
 222:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < read_len; i++) 
 1218              		.loc 1 222 0
 1219 007c 0023     		movs	r3, #0
 1220 007e 7B61     		str	r3, [r7, #20]
 1221 0080 14E0     		b	.L31
 1222              	.L32:
 223:App/STM32F4-Discovery/modbus_mk.c **** 	{
 224:App/STM32F4-Discovery/modbus_mk.c **** 
 225:App/STM32F4-Discovery/modbus_mk.c **** 		rsp[i] = received_string[i+write_len]; 
 1223              		.loc 1 225 0 discriminator 2
 1224 0082 7B69     		ldr	r3, [r7, #20]
 1225 0084 BA68     		ldr	r2, [r7, #8]
 1226 0086 1344     		add	r3, r3, r2
 1227 0088 7969     		ldr	r1, [r7, #20]
 1228 008a 7A68     		ldr	r2, [r7, #4]
 1229 008c 0A44     		add	r2, r2, r1
 1230 008e 0F49     		ldr	r1, .L33+12
 1231 0090 8A5C     		ldrb	r2, [r1, r2]
 1232 0092 D2B2     		uxtb	r2, r2
 1233 0094 1A70     		strb	r2, [r3]
 226:App/STM32F4-Discovery/modbus_mk.c **** #ifdef DEBUG
 227:App/STM32F4-Discovery/modbus_mk.c **** 		t_printf("[%x]", rsp[i]);
 1234              		.loc 1 227 0 discriminator 2
 1235 0096 7B69     		ldr	r3, [r7, #20]
 1236 0098 BA68     		ldr	r2, [r7, #8]
 1237 009a 1344     		add	r3, r3, r2
 1238 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1239 009e 0C48     		ldr	r0, .L33+16
 1240 00a0 1946     		mov	r1, r3
 1241 00a2 FFF7FEFF 		bl	t_printf
 222:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < read_len; i++) 
 1242              		.loc 1 222 0 discriminator 2
 1243 00a6 7B69     		ldr	r3, [r7, #20]
 1244 00a8 0133     		adds	r3, r3, #1
 1245 00aa 7B61     		str	r3, [r7, #20]
 1246              	.L31:
 222:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < read_len; i++) 
 1247              		.loc 1 222 0 is_stmt 0 discriminator 1
 1248 00ac 7A69     		ldr	r2, [r7, #20]
 1249 00ae 3B68     		ldr	r3, [r7]
 1250 00b0 9A42     		cmp	r2, r3
 1251 00b2 E6DB     		blt	.L32
 228:App/STM32F4-Discovery/modbus_mk.c **** #endif	
 229:App/STM32F4-Discovery/modbus_mk.c **** 	}
 230:App/STM32F4-Discovery/modbus_mk.c **** 
 231:App/STM32F4-Discovery/modbus_mk.c **** #ifdef DEBUG
 232:App/STM32F4-Discovery/modbus_mk.c **** 		t_printf("\n");
 1252              		.loc 1 232 0 is_stmt 1
 1253 00b4 0748     		ldr	r0, .L33+20
 1254 00b6 FFF7FEFF 		bl	t_printf
 233:App/STM32F4-Discovery/modbus_mk.c **** #endif		
 234:App/STM32F4-Discovery/modbus_mk.c **** 
 235:App/STM32F4-Discovery/modbus_mk.c **** }
 1255              		.loc 1 235 0
 1256 00ba 1837     		adds	r7, r7, #24
 1257 00bc BD46     		mov	sp, r7
 1258              		@ sp needed
 1259 00be 80BD     		pop	{r7, pc}
 1260              	.L34:
 1261              		.align	2
 1262              	.L33:
 1263 00c0 00000000 		.word	rx_length
 1264 00c4 00180240 		.word	1073879040
 1265 00c8 00000000 		.word	xSmphrUSART
 1266 00cc 00000000 		.word	received_string
 1267 00d0 74000000 		.word	.LC4
 1268 00d4 7C000000 		.word	.LC5
 1269              		.cfi_endproc
 1270              	.LFE115:
 1272              		.section	.text.modbus_RIB,"ax",%progbits
 1273              		.align	2
 1274              		.global	modbus_RIB
 1275              		.thumb
 1276              		.thumb_func
 1278              	modbus_RIB:
 1279              	.LFB116:
 236:App/STM32F4-Discovery/modbus_mk.c **** 
 237:App/STM32F4-Discovery/modbus_mk.c **** 
 238:App/STM32F4-Discovery/modbus_mk.c **** /* modbus read input bits */
 239:App/STM32F4-Discovery/modbus_mk.c **** uint8_t modbus_RIB( int16_t address, int nb, uint8_t *dst )
 240:App/STM32F4-Discovery/modbus_mk.c **** {
 1280              		.loc 1 240 0
 1281              		.cfi_startproc
 1282              		@ args = 0, pretend = 0, frame = 536
 1283              		@ frame_needed = 1, uses_anonymous_args = 0
 1284 0000 80B5     		push	{r7, lr}
 1285              	.LCFI18:
 1286              		.cfi_def_cfa_offset 8
 1287              		.cfi_offset 7, -8
 1288              		.cfi_offset 14, -4
 1289 0002 ADF5067D 		sub	sp, sp, #536
 1290              	.LCFI19:
 1291              		.cfi_def_cfa_offset 544
 1292 0006 00AF     		add	r7, sp, #0
 1293              	.LCFI20:
 1294              		.cfi_def_cfa_register 7
 1295 0008 07F10803 		add	r3, r7, #8
 1296 000c 1960     		str	r1, [r3]
 1297 000e 3B1D     		adds	r3, r7, #4
 1298 0010 1A60     		str	r2, [r3]
 1299 0012 07F10E03 		add	r3, r7, #14
 1300 0016 0246     		mov	r2, r0	@ movhi
 1301 0018 1A80     		strh	r2, [r3]	@ movhi
 241:App/STM32F4-Discovery/modbus_mk.c **** 	/* first send request */
 242:App/STM32F4-Discovery/modbus_mk.c **** 
 243:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t req[REQ_MAX_LEN];
 244:App/STM32F4-Discovery/modbus_mk.c **** 	int req_length; 
 245:App/STM32F4-Discovery/modbus_mk.c **** 	
 246:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 1302              		.loc 1 246 0
 1303 001a 07F11003 		add	r3, r7, #16
 1304 001e 3622     		movs	r2, #54
 1305 0020 1A70     		strb	r2, [r3]
 247:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0x2;
 1306              		.loc 1 247 0
 1307 0022 07F11003 		add	r3, r7, #16
 1308 0026 0222     		movs	r2, #2
 1309 0028 5A70     		strb	r2, [r3, #1]
 248:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 1310              		.loc 1 248 0
 1311 002a 07F10E03 		add	r3, r7, #14
 1312 002e B3F90030 		ldrsh	r3, [r3]
 1313 0032 1B12     		asrs	r3, r3, #8
 1314 0034 9BB2     		uxth	r3, r3
 1315 0036 DAB2     		uxtb	r2, r3
 1316 0038 07F11003 		add	r3, r7, #16
 1317 003c 9A70     		strb	r2, [r3, #2]
 249:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 1318              		.loc 1 249 0
 1319 003e 07F10E03 		add	r3, r7, #14
 1320 0042 1B88     		ldrh	r3, [r3]	@ movhi
 1321 0044 DAB2     		uxtb	r2, r3
 1322 0046 07F11003 		add	r3, r7, #16
 1323 004a DA70     		strb	r2, [r3, #3]
 250:App/STM32F4-Discovery/modbus_mk.c **** 	req[4] = nb >> 8;
 1324              		.loc 1 250 0
 1325 004c 07F10803 		add	r3, r7, #8
 1326 0050 1B68     		ldr	r3, [r3]
 1327 0052 1B12     		asrs	r3, r3, #8
 1328 0054 DAB2     		uxtb	r2, r3
 1329 0056 07F11003 		add	r3, r7, #16
 1330 005a 1A71     		strb	r2, [r3, #4]
 251:App/STM32F4-Discovery/modbus_mk.c **** 	req[5] = nb & 0x00ff; 
 1331              		.loc 1 251 0
 1332 005c 07F10803 		add	r3, r7, #8
 1333 0060 1B68     		ldr	r3, [r3]
 1334 0062 DAB2     		uxtb	r2, r3
 1335 0064 07F11003 		add	r3, r7, #16
 1336 0068 5A71     		strb	r2, [r3, #5]
 252:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 6;
 1337              		.loc 1 252 0
 1338 006a 0623     		movs	r3, #6
 1339 006c C7F81432 		str	r3, [r7, #532]
 253:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 1340              		.loc 1 253 0
 1341 0070 D7F81432 		ldr	r3, [r7, #532]
 1342 0074 9BB2     		uxth	r3, r3
 1343 0076 07F11002 		add	r2, r7, #16
 1344 007a 1046     		mov	r0, r2
 1345 007c 1946     		mov	r1, r3
 1346 007e FFF7FEFF 		bl	crc16
 1347 0082 0346     		mov	r3, r0
 1348 0084 A7F81232 		strh	r3, [r7, #530]	@ movhi
 254:App/STM32F4-Discovery/modbus_mk.c **** 
 255:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 1349              		.loc 1 255 0
 1350 0088 D7F81432 		ldr	r3, [r7, #532]
 1351 008c 5A1C     		adds	r2, r3, #1
 1352 008e C7F81422 		str	r2, [r7, #532]
 1353 0092 B7F81222 		ldrh	r2, [r7, #530]
 1354 0096 120A     		lsrs	r2, r2, #8
 1355 0098 92B2     		uxth	r2, r2
 1356 009a D1B2     		uxtb	r1, r2
 1357 009c 07F11002 		add	r2, r7, #16
 1358 00a0 D154     		strb	r1, [r2, r3]
 256:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff; 
 1359              		.loc 1 256 0
 1360 00a2 D7F81432 		ldr	r3, [r7, #532]
 1361 00a6 5A1C     		adds	r2, r3, #1
 1362 00a8 C7F81422 		str	r2, [r7, #532]
 1363 00ac B7F81222 		ldrh	r2, [r7, #530]	@ movhi
 1364 00b0 D1B2     		uxtb	r1, r2
 1365 00b2 07F11002 		add	r2, r7, #16
 1366 00b6 D154     		strb	r1, [r2, r3]
 257:App/STM32F4-Discovery/modbus_mk.c **** 	
 258:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req, dst, req_length, 6);
 1367              		.loc 1 258 0
 1368 00b8 07F11002 		add	r2, r7, #16
 1369 00bc 3B1D     		adds	r3, r7, #4
 1370 00be 1046     		mov	r0, r2
 1371 00c0 1968     		ldr	r1, [r3]
 1372 00c2 D7F81422 		ldr	r2, [r7, #532]
 1373 00c6 0623     		movs	r3, #6
 1374 00c8 FFF7FEFF 		bl	write_read_modbus
 259:App/STM32F4-Discovery/modbus_mk.c **** 	return modbus_confirmation (req, dst, req_length, 6);
 1375              		.loc 1 259 0
 1376 00cc D7F81432 		ldr	r3, [r7, #532]
 1377 00d0 9BB2     		uxth	r3, r3
 1378 00d2 07F11001 		add	r1, r7, #16
 1379 00d6 3A1D     		adds	r2, r7, #4
 1380 00d8 0846     		mov	r0, r1
 1381 00da 1168     		ldr	r1, [r2]
 1382 00dc 1A46     		mov	r2, r3
 1383 00de 0623     		movs	r3, #6
 1384 00e0 FFF7FEFF 		bl	modbus_confirmation
 1385 00e4 0346     		mov	r3, r0
 1386 00e6 DBB2     		uxtb	r3, r3
 260:App/STM32F4-Discovery/modbus_mk.c **** 
 261:App/STM32F4-Discovery/modbus_mk.c **** }
 1387              		.loc 1 261 0
 1388 00e8 1846     		mov	r0, r3
 1389 00ea 07F50677 		add	r7, r7, #536
 1390 00ee BD46     		mov	sp, r7
 1391              		@ sp needed
 1392 00f0 80BD     		pop	{r7, pc}
 1393              		.cfi_endproc
 1394              	.LFE116:
 1396 00f2 00BF     		.section	.text.modbus_WIB,"ax",%progbits
 1397              		.align	2
 1398              		.global	modbus_WIB
 1399              		.thumb
 1400              		.thumb_func
 1402              	modbus_WIB:
 1403              	.LFB117:
 262:App/STM32F4-Discovery/modbus_mk.c **** 
 263:App/STM32F4-Discovery/modbus_mk.c **** 
 264:App/STM32F4-Discovery/modbus_mk.c **** /* modbus write input bits */
 265:App/STM32F4-Discovery/modbus_mk.c **** uint8_t modbus_WIB( uint16_t address, int nb, uint8_t *src )
 266:App/STM32F4-Discovery/modbus_mk.c **** {
 1404              		.loc 1 266 0
 1405              		.cfi_startproc
 1406              		@ args = 0, pretend = 0, frame = 1072
 1407              		@ frame_needed = 1, uses_anonymous_args = 0
 1408 0000 80B5     		push	{r7, lr}
 1409              	.LCFI21:
 1410              		.cfi_def_cfa_offset 8
 1411              		.cfi_offset 7, -8
 1412              		.cfi_offset 14, -4
 1413 0002 ADF5866D 		sub	sp, sp, #1072
 1414              	.LCFI22:
 1415              		.cfi_def_cfa_offset 1080
 1416 0006 00AF     		add	r7, sp, #0
 1417              	.LCFI23:
 1418              		.cfi_def_cfa_register 7
 1419 0008 07F10803 		add	r3, r7, #8
 1420 000c 1960     		str	r1, [r3]
 1421 000e 3B1D     		adds	r3, r7, #4
 1422 0010 1A60     		str	r2, [r3]
 1423 0012 07F10E03 		add	r3, r7, #14
 1424 0016 0246     		mov	r2, r0	@ movhi
 1425 0018 1A80     		strh	r2, [r3]	@ movhi
 267:App/STM32F4-Discovery/modbus_mk.c **** 	/* first send request */
 268:App/STM32F4-Discovery/modbus_mk.c **** 
 269:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t req[REQ_MAX_LEN];
 270:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t rsp[REQ_MAX_LEN];
 271:App/STM32F4-Discovery/modbus_mk.c **** 	int byte_count; 
 272:App/STM32F4-Discovery/modbus_mk.c **** 	int req_length; 
 273:App/STM32F4-Discovery/modbus_mk.c **** 	int bit_check = 0; 
 1426              		.loc 1 273 0
 1427 001a 0023     		movs	r3, #0
 1428 001c C7F82834 		str	r3, [r7, #1064]
 274:App/STM32F4-Discovery/modbus_mk.c **** 	int pos = 0; 
 1429              		.loc 1 274 0
 1430 0020 0023     		movs	r3, #0
 1431 0022 C7F82434 		str	r3, [r7, #1060]
 275:App/STM32F4-Discovery/modbus_mk.c **** 	
 276:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 1432              		.loc 1 276 0
 1433 0026 07F50573 		add	r3, r7, #532
 1434 002a 3622     		movs	r2, #54
 1435 002c 1A70     		strb	r2, [r3]
 277:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0xF;
 1436              		.loc 1 277 0
 1437 002e 07F50573 		add	r3, r7, #532
 1438 0032 0F22     		movs	r2, #15
 1439 0034 5A70     		strb	r2, [r3, #1]
 278:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 1440              		.loc 1 278 0
 1441 0036 07F10E03 		add	r3, r7, #14
 1442 003a 1B88     		ldrh	r3, [r3]
 1443 003c 1B0A     		lsrs	r3, r3, #8
 1444 003e 9BB2     		uxth	r3, r3
 1445 0040 DAB2     		uxtb	r2, r3
 1446 0042 07F50573 		add	r3, r7, #532
 1447 0046 9A70     		strb	r2, [r3, #2]
 279:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 1448              		.loc 1 279 0
 1449 0048 07F10E03 		add	r3, r7, #14
 1450 004c 1B88     		ldrh	r3, [r3]	@ movhi
 1451 004e DAB2     		uxtb	r2, r3
 1452 0050 07F50573 		add	r3, r7, #532
 1453 0054 DA70     		strb	r2, [r3, #3]
 280:App/STM32F4-Discovery/modbus_mk.c **** 	req[4] = nb >> 8;
 1454              		.loc 1 280 0
 1455 0056 07F10803 		add	r3, r7, #8
 1456 005a 1B68     		ldr	r3, [r3]
 1457 005c 1B12     		asrs	r3, r3, #8
 1458 005e DAB2     		uxtb	r2, r3
 1459 0060 07F50573 		add	r3, r7, #532
 1460 0064 1A71     		strb	r2, [r3, #4]
 281:App/STM32F4-Discovery/modbus_mk.c **** 	req[5] = nb & 0x00ff; 
 1461              		.loc 1 281 0
 1462 0066 07F10803 		add	r3, r7, #8
 1463 006a 1B68     		ldr	r3, [r3]
 1464 006c DAB2     		uxtb	r2, r3
 1465 006e 07F50573 		add	r3, r7, #532
 1466 0072 5A71     		strb	r2, [r3, #5]
 282:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 6; 
 1467              		.loc 1 282 0
 1468 0074 0623     		movs	r3, #6
 1469 0076 C7F82C34 		str	r3, [r7, #1068]
 283:App/STM32F4-Discovery/modbus_mk.c **** 	
 284:App/STM32F4-Discovery/modbus_mk.c ****     	byte_count = (nb / 8) + ((nb % 8) ? 1 : 0);
 1470              		.loc 1 284 0
 1471 007a 07F10803 		add	r3, r7, #8
 1472 007e 1B68     		ldr	r3, [r3]
 1473 0080 002B     		cmp	r3, #0
 1474 0082 00DA     		bge	.L38
 1475 0084 0733     		adds	r3, r3, #7
 1476              	.L38:
 1477 0086 DB10     		asrs	r3, r3, #3
 1478 0088 1A46     		mov	r2, r3
 1479 008a 07F10803 		add	r3, r7, #8
 1480 008e 1B68     		ldr	r3, [r3]
 1481 0090 03F00703 		and	r3, r3, #7
 1482 0094 002B     		cmp	r3, #0
 1483 0096 0CBF     		ite	eq
 1484 0098 0023     		moveq	r3, #0
 1485 009a 0123     		movne	r3, #1
 1486 009c DBB2     		uxtb	r3, r3
 1487 009e 1344     		add	r3, r3, r2
 1488 00a0 C7F81834 		str	r3, [r7, #1048]
 285:App/STM32F4-Discovery/modbus_mk.c ****   	req[req_length++] = byte_count;
 1489              		.loc 1 285 0
 1490 00a4 D7F82C34 		ldr	r3, [r7, #1068]
 1491 00a8 5A1C     		adds	r2, r3, #1
 1492 00aa C7F82C24 		str	r2, [r7, #1068]
 1493 00ae D7F81824 		ldr	r2, [r7, #1048]
 1494 00b2 D1B2     		uxtb	r1, r2
 1495 00b4 07F50572 		add	r2, r7, #532
 1496 00b8 D154     		strb	r1, [r2, r3]
 286:App/STM32F4-Discovery/modbus_mk.c **** 
 287:App/STM32F4-Discovery/modbus_mk.c **** 	int i; 
 288:App/STM32F4-Discovery/modbus_mk.c ****     	for (i = 0; i < byte_count; i++) {
 1497              		.loc 1 288 0
 1498 00ba 0023     		movs	r3, #0
 1499 00bc C7F82034 		str	r3, [r7, #1056]
 1500 00c0 5CE0     		b	.L39
 1501              	.L45:
 1502              	.LBB3:
 289:App/STM32F4-Discovery/modbus_mk.c ****         
 290:App/STM32F4-Discovery/modbus_mk.c **** 		int bit;
 291:App/STM32F4-Discovery/modbus_mk.c **** 		bit = 0x01;
 1503              		.loc 1 291 0
 1504 00c2 0123     		movs	r3, #1
 1505 00c4 C7F81C34 		str	r3, [r7, #1052]
 292:App/STM32F4-Discovery/modbus_mk.c ****         	req[req_length] = 0;
 1506              		.loc 1 292 0
 1507 00c8 07F50572 		add	r2, r7, #532
 1508 00cc D7F82C34 		ldr	r3, [r7, #1068]
 1509 00d0 1344     		add	r3, r3, r2
 1510 00d2 0022     		movs	r2, #0
 1511 00d4 1A70     		strb	r2, [r3]
 293:App/STM32F4-Discovery/modbus_mk.c **** 
 294:App/STM32F4-Discovery/modbus_mk.c ****         	while ((bit & 0xFF) && (bit_check++ < nb)) {
 1512              		.loc 1 294 0
 1513 00d6 38E0     		b	.L40
 1514              	.L44:
 295:App/STM32F4-Discovery/modbus_mk.c ****             		if (src[pos++])
 1515              		.loc 1 295 0
 1516 00d8 D7F82434 		ldr	r3, [r7, #1060]
 1517 00dc 5A1C     		adds	r2, r3, #1
 1518 00de C7F82424 		str	r2, [r7, #1060]
 1519 00e2 3A1D     		adds	r2, r7, #4
 1520 00e4 1268     		ldr	r2, [r2]
 1521 00e6 1344     		add	r3, r3, r2
 1522 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1523 00ea 002B     		cmp	r3, #0
 1524 00ec 13D0     		beq	.L41
 296:App/STM32F4-Discovery/modbus_mk.c ****                 		req[req_length] |= bit;
 1525              		.loc 1 296 0
 1526 00ee 07F50572 		add	r2, r7, #532
 1527 00f2 D7F82C34 		ldr	r3, [r7, #1068]
 1528 00f6 1344     		add	r3, r3, r2
 1529 00f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1530 00fa DAB2     		uxtb	r2, r3
 1531 00fc D7F81C34 		ldr	r3, [r7, #1052]
 1532 0100 DBB2     		uxtb	r3, r3
 1533 0102 1343     		orrs	r3, r3, r2
 1534 0104 DBB2     		uxtb	r3, r3
 1535 0106 DAB2     		uxtb	r2, r3
 1536 0108 07F50571 		add	r1, r7, #532
 1537 010c D7F82C34 		ldr	r3, [r7, #1068]
 1538 0110 0B44     		add	r3, r3, r1
 1539 0112 1A70     		strb	r2, [r3]
 1540 0114 14E0     		b	.L42
 1541              	.L41:
 297:App/STM32F4-Discovery/modbus_mk.c ****             		else
 298:App/STM32F4-Discovery/modbus_mk.c ****                 		req[req_length] &=~ bit;
 1542              		.loc 1 298 0
 1543 0116 07F50572 		add	r2, r7, #532
 1544 011a D7F82C34 		ldr	r3, [r7, #1068]
 1545 011e 1344     		add	r3, r3, r2
 1546 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1547 0122 DAB2     		uxtb	r2, r3
 1548 0124 D7F81C34 		ldr	r3, [r7, #1052]
 1549 0128 DBB2     		uxtb	r3, r3
 1550 012a DB43     		mvns	r3, r3
 1551 012c DBB2     		uxtb	r3, r3
 1552 012e 1340     		ands	r3, r3, r2
 1553 0130 DBB2     		uxtb	r3, r3
 1554 0132 DAB2     		uxtb	r2, r3
 1555 0134 07F50571 		add	r1, r7, #532
 1556 0138 D7F82C34 		ldr	r3, [r7, #1068]
 1557 013c 0B44     		add	r3, r3, r1
 1558 013e 1A70     		strb	r2, [r3]
 1559              	.L42:
 299:App/STM32F4-Discovery/modbus_mk.c **** 
 300:App/STM32F4-Discovery/modbus_mk.c ****             		bit = bit << 1;
 1560              		.loc 1 300 0
 1561 0140 D7F81C34 		ldr	r3, [r7, #1052]
 1562 0144 5B00     		lsls	r3, r3, #1
 1563 0146 C7F81C34 		str	r3, [r7, #1052]
 1564              	.L40:
 294:App/STM32F4-Discovery/modbus_mk.c ****         	while ((bit & 0xFF) && (bit_check++ < nb)) {
 1565              		.loc 1 294 0 discriminator 1
 1566 014a D7F81C34 		ldr	r3, [r7, #1052]
 1567 014e DBB2     		uxtb	r3, r3
 1568 0150 002B     		cmp	r3, #0
 1569 0152 09D0     		beq	.L43
 294:App/STM32F4-Discovery/modbus_mk.c ****         	while ((bit & 0xFF) && (bit_check++ < nb)) {
 1570              		.loc 1 294 0 is_stmt 0 discriminator 2
 1571 0154 D7F82834 		ldr	r3, [r7, #1064]
 1572 0158 5A1C     		adds	r2, r3, #1
 1573 015a C7F82824 		str	r2, [r7, #1064]
 1574 015e 07F10802 		add	r2, r7, #8
 1575 0162 1268     		ldr	r2, [r2]
 1576 0164 9342     		cmp	r3, r2
 1577 0166 B7DB     		blt	.L44
 1578              	.L43:
 301:App/STM32F4-Discovery/modbus_mk.c ****         	}	
 302:App/STM32F4-Discovery/modbus_mk.c ****         	
 303:App/STM32F4-Discovery/modbus_mk.c **** 		req_length++;
 1579              		.loc 1 303 0 is_stmt 1
 1580 0168 D7F82C34 		ldr	r3, [r7, #1068]
 1581 016c 0133     		adds	r3, r3, #1
 1582 016e C7F82C34 		str	r3, [r7, #1068]
 1583              	.LBE3:
 288:App/STM32F4-Discovery/modbus_mk.c ****     	for (i = 0; i < byte_count; i++) {
 1584              		.loc 1 288 0
 1585 0172 D7F82034 		ldr	r3, [r7, #1056]
 1586 0176 0133     		adds	r3, r3, #1
 1587 0178 C7F82034 		str	r3, [r7, #1056]
 1588              	.L39:
 288:App/STM32F4-Discovery/modbus_mk.c ****     	for (i = 0; i < byte_count; i++) {
 1589              		.loc 1 288 0 is_stmt 0 discriminator 1
 1590 017c D7F82024 		ldr	r2, [r7, #1056]
 1591 0180 D7F81834 		ldr	r3, [r7, #1048]
 1592 0184 9A42     		cmp	r2, r3
 1593 0186 9CDB     		blt	.L45
 304:App/STM32F4-Discovery/modbus_mk.c **** 	 }
 305:App/STM32F4-Discovery/modbus_mk.c **** 
 306:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 1594              		.loc 1 306 0 is_stmt 1
 1595 0188 D7F82C34 		ldr	r3, [r7, #1068]
 1596 018c 9BB2     		uxth	r3, r3
 1597 018e 07F50572 		add	r2, r7, #532
 1598 0192 1046     		mov	r0, r2
 1599 0194 1946     		mov	r1, r3
 1600 0196 FFF7FEFF 		bl	crc16
 1601 019a 0346     		mov	r3, r0
 1602 019c A7F81634 		strh	r3, [r7, #1046]	@ movhi
 307:App/STM32F4-Discovery/modbus_mk.c **** 
 308:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 1603              		.loc 1 308 0
 1604 01a0 D7F82C34 		ldr	r3, [r7, #1068]
 1605 01a4 5A1C     		adds	r2, r3, #1
 1606 01a6 C7F82C24 		str	r2, [r7, #1068]
 1607 01aa B7F81624 		ldrh	r2, [r7, #1046]
 1608 01ae 120A     		lsrs	r2, r2, #8
 1609 01b0 92B2     		uxth	r2, r2
 1610 01b2 D1B2     		uxtb	r1, r2
 1611 01b4 07F50572 		add	r2, r7, #532
 1612 01b8 D154     		strb	r1, [r2, r3]
 309:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff; 
 1613              		.loc 1 309 0
 1614 01ba D7F82C34 		ldr	r3, [r7, #1068]
 1615 01be 5A1C     		adds	r2, r3, #1
 1616 01c0 C7F82C24 		str	r2, [r7, #1068]
 1617 01c4 B7F81624 		ldrh	r2, [r7, #1046]	@ movhi
 1618 01c8 D1B2     		uxtb	r1, r2
 1619 01ca 07F50572 		add	r2, r7, #532
 1620 01ce D154     		strb	r1, [r2, r3]
 310:App/STM32F4-Discovery/modbus_mk.c **** 	
 311:App/STM32F4-Discovery/modbus_mk.c **** 	/* write request  to modbus line */
 312:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req,rsp, req_length ,8); 
 1621              		.loc 1 312 0
 1622 01d0 07F50572 		add	r2, r7, #532
 1623 01d4 07F11403 		add	r3, r7, #20
 1624 01d8 1046     		mov	r0, r2
 1625 01da 1946     		mov	r1, r3
 1626 01dc D7F82C24 		ldr	r2, [r7, #1068]
 1627 01e0 0823     		movs	r3, #8
 1628 01e2 FFF7FEFF 		bl	write_read_modbus
 313:App/STM32F4-Discovery/modbus_mk.c **** 	return modbus_confirmation (req, rsp,req_length, 8); 
 1629              		.loc 1 313 0
 1630 01e6 D7F82C34 		ldr	r3, [r7, #1068]
 1631 01ea 9BB2     		uxth	r3, r3
 1632 01ec 07F50571 		add	r1, r7, #532
 1633 01f0 07F11402 		add	r2, r7, #20
 1634 01f4 0846     		mov	r0, r1
 1635 01f6 1146     		mov	r1, r2
 1636 01f8 1A46     		mov	r2, r3
 1637 01fa 0823     		movs	r3, #8
 1638 01fc FFF7FEFF 		bl	modbus_confirmation
 1639 0200 0346     		mov	r3, r0
 1640 0202 DBB2     		uxtb	r3, r3
 314:App/STM32F4-Discovery/modbus_mk.c **** 
 315:App/STM32F4-Discovery/modbus_mk.c **** 	
 316:App/STM32F4-Discovery/modbus_mk.c **** }
 1641              		.loc 1 316 0
 1642 0204 1846     		mov	r0, r3
 1643 0206 07F58667 		add	r7, r7, #1072
 1644 020a BD46     		mov	sp, r7
 1645              		@ sp needed
 1646 020c 80BD     		pop	{r7, pc}
 1647              		.cfi_endproc
 1648              	.LFE117:
 1650 020e 00BF     		.section	.text.modbus_WR,"ax",%progbits
 1651              		.align	2
 1652              		.global	modbus_WR
 1653              		.thumb
 1654              		.thumb_func
 1656              	modbus_WR:
 1657              	.LFB118:
 317:App/STM32F4-Discovery/modbus_mk.c **** 
 318:App/STM32F4-Discovery/modbus_mk.c **** /* Write the values from the array to the registers of the remote device */
 319:App/STM32F4-Discovery/modbus_mk.c **** uint8_t modbus_WR( int address, int nb, const uint16_t *src)
 320:App/STM32F4-Discovery/modbus_mk.c **** {
 1658              		.loc 1 320 0
 1659              		.cfi_startproc
 1660              		@ args = 0, pretend = 0, frame = 1056
 1661              		@ frame_needed = 1, uses_anonymous_args = 0
 1662 0000 80B5     		push	{r7, lr}
 1663              	.LCFI24:
 1664              		.cfi_def_cfa_offset 8
 1665              		.cfi_offset 7, -8
 1666              		.cfi_offset 14, -4
 1667 0002 ADF5846D 		sub	sp, sp, #1056
 1668              	.LCFI25:
 1669              		.cfi_def_cfa_offset 1064
 1670 0006 00AF     		add	r7, sp, #0
 1671              	.LCFI26:
 1672              		.cfi_def_cfa_register 7
 1673 0008 07F10C03 		add	r3, r7, #12
 1674 000c 1860     		str	r0, [r3]
 1675 000e 07F10803 		add	r3, r7, #8
 1676 0012 1960     		str	r1, [r3]
 1677 0014 3B1D     		adds	r3, r7, #4
 1678 0016 1A60     		str	r2, [r3]
 321:App/STM32F4-Discovery/modbus_mk.c **** 	int rc;
 322:App/STM32F4-Discovery/modbus_mk.c **** 	int i;
 323:App/STM32F4-Discovery/modbus_mk.c ****     	int req_length;
 324:App/STM32F4-Discovery/modbus_mk.c ****     	int byte_count;
 325:App/STM32F4-Discovery/modbus_mk.c **** 
 326:App/STM32F4-Discovery/modbus_mk.c ****     	uint8_t req[REQ_MAX_LEN];
 327:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t rsp[REQ_MAX_LEN];
 328:App/STM32F4-Discovery/modbus_mk.c **** 
 329:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 1679              		.loc 1 329 0
 1680 0018 07F50473 		add	r3, r7, #528
 1681 001c 3622     		movs	r2, #54
 1682 001e 1A70     		strb	r2, [r3]
 330:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0x10;
 1683              		.loc 1 330 0
 1684 0020 07F50473 		add	r3, r7, #528
 1685 0024 1022     		movs	r2, #16
 1686 0026 5A70     		strb	r2, [r3, #1]
 331:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 1687              		.loc 1 331 0
 1688 0028 07F10C03 		add	r3, r7, #12
 1689 002c 1B68     		ldr	r3, [r3]
 1690 002e 1B12     		asrs	r3, r3, #8
 1691 0030 DAB2     		uxtb	r2, r3
 1692 0032 07F50473 		add	r3, r7, #528
 1693 0036 9A70     		strb	r2, [r3, #2]
 332:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 1694              		.loc 1 332 0
 1695 0038 07F10C03 		add	r3, r7, #12
 1696 003c 1B68     		ldr	r3, [r3]
 1697 003e DAB2     		uxtb	r2, r3
 1698 0040 07F50473 		add	r3, r7, #528
 1699 0044 DA70     		strb	r2, [r3, #3]
 333:App/STM32F4-Discovery/modbus_mk.c **** 	req[4] = nb >> 8;
 1700              		.loc 1 333 0
 1701 0046 07F10803 		add	r3, r7, #8
 1702 004a 1B68     		ldr	r3, [r3]
 1703 004c 1B12     		asrs	r3, r3, #8
 1704 004e DAB2     		uxtb	r2, r3
 1705 0050 07F50473 		add	r3, r7, #528
 1706 0054 1A71     		strb	r2, [r3, #4]
 334:App/STM32F4-Discovery/modbus_mk.c **** 	req[5] = nb & 0x00ff; 
 1707              		.loc 1 334 0
 1708 0056 07F10803 		add	r3, r7, #8
 1709 005a 1B68     		ldr	r3, [r3]
 1710 005c DAB2     		uxtb	r2, r3
 1711 005e 07F50473 		add	r3, r7, #528
 1712 0062 5A71     		strb	r2, [r3, #5]
 335:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 6; 
 1713              		.loc 1 335 0
 1714 0064 0623     		movs	r3, #6
 1715 0066 C7F81834 		str	r3, [r7, #1048]
 336:App/STM32F4-Discovery/modbus_mk.c **** 	
 337:App/STM32F4-Discovery/modbus_mk.c ****    	byte_count = nb * 2;
 1716              		.loc 1 337 0
 1717 006a 07F10803 		add	r3, r7, #8
 1718 006e 1B68     		ldr	r3, [r3]
 1719 0070 5B00     		lsls	r3, r3, #1
 1720 0072 C7F81434 		str	r3, [r7, #1044]
 338:App/STM32F4-Discovery/modbus_mk.c ****     	req[req_length++] = byte_count;
 1721              		.loc 1 338 0
 1722 0076 D7F81834 		ldr	r3, [r7, #1048]
 1723 007a 5A1C     		adds	r2, r3, #1
 1724 007c C7F81824 		str	r2, [r7, #1048]
 1725 0080 D7F81424 		ldr	r2, [r7, #1044]
 1726 0084 D1B2     		uxtb	r1, r2
 1727 0086 07F50472 		add	r2, r7, #528
 1728 008a D154     		strb	r1, [r2, r3]
 339:App/STM32F4-Discovery/modbus_mk.c **** 
 340:App/STM32F4-Discovery/modbus_mk.c ****     for (i = 0; i < nb; i++) {
 1729              		.loc 1 340 0
 1730 008c 0023     		movs	r3, #0
 1731 008e C7F81C34 		str	r3, [r7, #1052]
 1732 0092 26E0     		b	.L48
 1733              	.L49:
 341:App/STM32F4-Discovery/modbus_mk.c **** 		req[req_length++] = src[i] >> 8;
 1734              		.loc 1 341 0 discriminator 2
 1735 0094 D7F81834 		ldr	r3, [r7, #1048]
 1736 0098 5A1C     		adds	r2, r3, #1
 1737 009a C7F81824 		str	r2, [r7, #1048]
 1738 009e D7F81C24 		ldr	r2, [r7, #1052]
 1739 00a2 5200     		lsls	r2, r2, #1
 1740 00a4 391D     		adds	r1, r7, #4
 1741 00a6 0968     		ldr	r1, [r1]
 1742 00a8 0A44     		add	r2, r2, r1
 1743 00aa 1288     		ldrh	r2, [r2]
 1744 00ac 120A     		lsrs	r2, r2, #8
 1745 00ae 92B2     		uxth	r2, r2
 1746 00b0 D1B2     		uxtb	r1, r2
 1747 00b2 07F50472 		add	r2, r7, #528
 1748 00b6 D154     		strb	r1, [r2, r3]
 342:App/STM32F4-Discovery/modbus_mk.c ****         	req[req_length++] = src[i] & 0x00ff;
 1749              		.loc 1 342 0 discriminator 2
 1750 00b8 D7F81834 		ldr	r3, [r7, #1048]
 1751 00bc 5A1C     		adds	r2, r3, #1
 1752 00be C7F81824 		str	r2, [r7, #1048]
 1753 00c2 D7F81C24 		ldr	r2, [r7, #1052]
 1754 00c6 5200     		lsls	r2, r2, #1
 1755 00c8 391D     		adds	r1, r7, #4
 1756 00ca 0968     		ldr	r1, [r1]
 1757 00cc 0A44     		add	r2, r2, r1
 1758 00ce 1288     		ldrh	r2, [r2]
 1759 00d0 D1B2     		uxtb	r1, r2
 1760 00d2 07F50472 		add	r2, r7, #528
 1761 00d6 D154     		strb	r1, [r2, r3]
 340:App/STM32F4-Discovery/modbus_mk.c ****     for (i = 0; i < nb; i++) {
 1762              		.loc 1 340 0 discriminator 2
 1763 00d8 D7F81C34 		ldr	r3, [r7, #1052]
 1764 00dc 0133     		adds	r3, r3, #1
 1765 00de C7F81C34 		str	r3, [r7, #1052]
 1766              	.L48:
 340:App/STM32F4-Discovery/modbus_mk.c ****     for (i = 0; i < nb; i++) {
 1767              		.loc 1 340 0 is_stmt 0 discriminator 1
 1768 00e2 07F10803 		add	r3, r7, #8
 1769 00e6 D7F81C24 		ldr	r2, [r7, #1052]
 1770 00ea 1B68     		ldr	r3, [r3]
 1771 00ec 9A42     		cmp	r2, r3
 1772 00ee D1DB     		blt	.L49
 343:App/STM32F4-Discovery/modbus_mk.c ****     	}
 344:App/STM32F4-Discovery/modbus_mk.c **** 
 345:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 1773              		.loc 1 345 0 is_stmt 1
 1774 00f0 D7F81834 		ldr	r3, [r7, #1048]
 1775 00f4 9BB2     		uxth	r3, r3
 1776 00f6 07F50472 		add	r2, r7, #528
 1777 00fa 1046     		mov	r0, r2
 1778 00fc 1946     		mov	r1, r3
 1779 00fe FFF7FEFF 		bl	crc16
 1780 0102 0346     		mov	r3, r0
 1781 0104 A7F81234 		strh	r3, [r7, #1042]	@ movhi
 346:App/STM32F4-Discovery/modbus_mk.c **** 
 347:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 1782              		.loc 1 347 0
 1783 0108 D7F81834 		ldr	r3, [r7, #1048]
 1784 010c 5A1C     		adds	r2, r3, #1
 1785 010e C7F81824 		str	r2, [r7, #1048]
 1786 0112 B7F81224 		ldrh	r2, [r7, #1042]
 1787 0116 120A     		lsrs	r2, r2, #8
 1788 0118 92B2     		uxth	r2, r2
 1789 011a D1B2     		uxtb	r1, r2
 1790 011c 07F50472 		add	r2, r7, #528
 1791 0120 D154     		strb	r1, [r2, r3]
 348:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff;
 1792              		.loc 1 348 0
 1793 0122 D7F81834 		ldr	r3, [r7, #1048]
 1794 0126 5A1C     		adds	r2, r3, #1
 1795 0128 C7F81824 		str	r2, [r7, #1048]
 1796 012c B7F81224 		ldrh	r2, [r7, #1042]	@ movhi
 1797 0130 D1B2     		uxtb	r1, r2
 1798 0132 07F50472 		add	r2, r7, #528
 1799 0136 D154     		strb	r1, [r2, r3]
 349:App/STM32F4-Discovery/modbus_mk.c **** 
 350:App/STM32F4-Discovery/modbus_mk.c **** 	/* write request  to modbus line */
 351:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req, rsp, req_length, 8); 
 1800              		.loc 1 351 0
 1801 0138 07F50472 		add	r2, r7, #528
 1802 013c 07F11003 		add	r3, r7, #16
 1803 0140 1046     		mov	r0, r2
 1804 0142 1946     		mov	r1, r3
 1805 0144 D7F81824 		ldr	r2, [r7, #1048]
 1806 0148 0823     		movs	r3, #8
 1807 014a FFF7FEFF 		bl	write_read_modbus
 352:App/STM32F4-Discovery/modbus_mk.c **** 	return modbus_confirmation (req, rsp,req_length, 8); 
 1808              		.loc 1 352 0
 1809 014e D7F81834 		ldr	r3, [r7, #1048]
 1810 0152 9BB2     		uxth	r3, r3
 1811 0154 07F50471 		add	r1, r7, #528
 1812 0158 07F11002 		add	r2, r7, #16
 1813 015c 0846     		mov	r0, r1
 1814 015e 1146     		mov	r1, r2
 1815 0160 1A46     		mov	r2, r3
 1816 0162 0823     		movs	r3, #8
 1817 0164 FFF7FEFF 		bl	modbus_confirmation
 1818 0168 0346     		mov	r3, r0
 1819 016a DBB2     		uxtb	r3, r3
 353:App/STM32F4-Discovery/modbus_mk.c **** 
 354:App/STM32F4-Discovery/modbus_mk.c **** 
 355:App/STM32F4-Discovery/modbus_mk.c **** 
 356:App/STM32F4-Discovery/modbus_mk.c **** }
 1820              		.loc 1 356 0
 1821 016c 1846     		mov	r0, r3
 1822 016e 07F58467 		add	r7, r7, #1056
 1823 0172 BD46     		mov	sp, r7
 1824              		@ sp needed
 1825 0174 80BD     		pop	{r7, pc}
 1826              		.cfi_endproc
 1827              	.LFE118:
 1829 0176 00BF     		.section	.text.modbus_WSR,"ax",%progbits
 1830              		.align	2
 1831              		.global	modbus_WSR
 1832              		.thumb
 1833              		.thumb_func
 1835              	modbus_WSR:
 1836              	.LFB119:
 357:App/STM32F4-Discovery/modbus_mk.c **** 
 358:App/STM32F4-Discovery/modbus_mk.c **** /* Write the values from the array to the registers of the remote device */
 359:App/STM32F4-Discovery/modbus_mk.c **** uint8_t modbus_WSR( int address, const uint16_t src)
 360:App/STM32F4-Discovery/modbus_mk.c **** {
 1837              		.loc 1 360 0
 1838              		.cfi_startproc
 1839              		@ args = 0, pretend = 0, frame = 1048
 1840              		@ frame_needed = 1, uses_anonymous_args = 0
 1841 0000 80B5     		push	{r7, lr}
 1842              	.LCFI27:
 1843              		.cfi_def_cfa_offset 8
 1844              		.cfi_offset 7, -8
 1845              		.cfi_offset 14, -4
 1846 0002 ADF5836D 		sub	sp, sp, #1048
 1847              	.LCFI28:
 1848              		.cfi_def_cfa_offset 1056
 1849 0006 00AF     		add	r7, sp, #0
 1850              	.LCFI29:
 1851              		.cfi_def_cfa_register 7
 1852 0008 3B1D     		adds	r3, r7, #4
 1853 000a 1860     		str	r0, [r3]
 1854 000c 0A46     		mov	r2, r1
 1855 000e BB1C     		adds	r3, r7, #2
 1856 0010 1A80     		strh	r2, [r3]	@ movhi
 361:App/STM32F4-Discovery/modbus_mk.c **** 	int nb = 1; 
 1857              		.loc 1 361 0
 1858 0012 0123     		movs	r3, #1
 1859 0014 C7F81434 		str	r3, [r7, #1044]
 362:App/STM32F4-Discovery/modbus_mk.c **** 	int rc;
 363:App/STM32F4-Discovery/modbus_mk.c **** 	int i;
 364:App/STM32F4-Discovery/modbus_mk.c ****     	int req_length;
 365:App/STM32F4-Discovery/modbus_mk.c ****     	int byte_count;
 366:App/STM32F4-Discovery/modbus_mk.c **** 
 367:App/STM32F4-Discovery/modbus_mk.c ****     	uint8_t req[REQ_MAX_LEN];
 368:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t rsp[REQ_MAX_LEN];
 369:App/STM32F4-Discovery/modbus_mk.c **** 
 370:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 1860              		.loc 1 370 0
 1861 0018 07F50273 		add	r3, r7, #520
 1862 001c 3622     		movs	r2, #54
 1863 001e 1A70     		strb	r2, [r3]
 371:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0x6;
 1864              		.loc 1 371 0
 1865 0020 07F50273 		add	r3, r7, #520
 1866 0024 0622     		movs	r2, #6
 1867 0026 5A70     		strb	r2, [r3, #1]
 372:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 1868              		.loc 1 372 0
 1869 0028 3B1D     		adds	r3, r7, #4
 1870 002a 1B68     		ldr	r3, [r3]
 1871 002c 1B12     		asrs	r3, r3, #8
 1872 002e DAB2     		uxtb	r2, r3
 1873 0030 07F50273 		add	r3, r7, #520
 1874 0034 9A70     		strb	r2, [r3, #2]
 373:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 1875              		.loc 1 373 0
 1876 0036 3B1D     		adds	r3, r7, #4
 1877 0038 1B68     		ldr	r3, [r3]
 1878 003a DAB2     		uxtb	r2, r3
 1879 003c 07F50273 		add	r3, r7, #520
 1880 0040 DA70     		strb	r2, [r3, #3]
 374:App/STM32F4-Discovery/modbus_mk.c **** //	req[4] = nb >> 8;
 375:App/STM32F4-Discovery/modbus_mk.c **** //	req[5] = nb & 0x00ff; 
 376:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 4; 
 1881              		.loc 1 376 0
 1882 0042 0423     		movs	r3, #4
 1883 0044 C7F81034 		str	r3, [r7, #1040]
 377:App/STM32F4-Discovery/modbus_mk.c **** 	
 378:App/STM32F4-Discovery/modbus_mk.c ****    	byte_count = nb * 2;
 1884              		.loc 1 378 0
 1885 0048 D7F81434 		ldr	r3, [r7, #1044]
 1886 004c 5B00     		lsls	r3, r3, #1
 1887 004e C7F80C34 		str	r3, [r7, #1036]
 379:App/STM32F4-Discovery/modbus_mk.c ****     	req[req_length++] = byte_count;
 1888              		.loc 1 379 0
 1889 0052 D7F81034 		ldr	r3, [r7, #1040]
 1890 0056 5A1C     		adds	r2, r3, #1
 1891 0058 C7F81024 		str	r2, [r7, #1040]
 1892 005c D7F80C24 		ldr	r2, [r7, #1036]
 1893 0060 D1B2     		uxtb	r1, r2
 1894 0062 07F50272 		add	r2, r7, #520
 1895 0066 D154     		strb	r1, [r2, r3]
 380:App/STM32F4-Discovery/modbus_mk.c **** 
 381:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = src >> 8;
 1896              		.loc 1 381 0
 1897 0068 D7F81034 		ldr	r3, [r7, #1040]
 1898 006c 5A1C     		adds	r2, r3, #1
 1899 006e C7F81024 		str	r2, [r7, #1040]
 1900 0072 BA1C     		adds	r2, r7, #2
 1901 0074 1288     		ldrh	r2, [r2]
 1902 0076 120A     		lsrs	r2, r2, #8
 1903 0078 92B2     		uxth	r2, r2
 1904 007a D1B2     		uxtb	r1, r2
 1905 007c 07F50272 		add	r2, r7, #520
 1906 0080 D154     		strb	r1, [r2, r3]
 382:App/STM32F4-Discovery/modbus_mk.c ****        	req[req_length++] = src & 0x00ff;
 1907              		.loc 1 382 0
 1908 0082 D7F81034 		ldr	r3, [r7, #1040]
 1909 0086 5A1C     		adds	r2, r3, #1
 1910 0088 C7F81024 		str	r2, [r7, #1040]
 1911 008c BA1C     		adds	r2, r7, #2
 1912 008e 1288     		ldrh	r2, [r2]	@ movhi
 1913 0090 D1B2     		uxtb	r1, r2
 1914 0092 07F50272 		add	r2, r7, #520
 1915 0096 D154     		strb	r1, [r2, r3]
 383:App/STM32F4-Discovery/modbus_mk.c ****     	
 384:App/STM32F4-Discovery/modbus_mk.c **** 
 385:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 1916              		.loc 1 385 0
 1917 0098 D7F81034 		ldr	r3, [r7, #1040]
 1918 009c 9BB2     		uxth	r3, r3
 1919 009e 07F50272 		add	r2, r7, #520
 1920 00a2 1046     		mov	r0, r2
 1921 00a4 1946     		mov	r1, r3
 1922 00a6 FFF7FEFF 		bl	crc16
 1923 00aa 0346     		mov	r3, r0
 1924 00ac A7F80A34 		strh	r3, [r7, #1034]	@ movhi
 386:App/STM32F4-Discovery/modbus_mk.c **** 
 387:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 1925              		.loc 1 387 0
 1926 00b0 D7F81034 		ldr	r3, [r7, #1040]
 1927 00b4 5A1C     		adds	r2, r3, #1
 1928 00b6 C7F81024 		str	r2, [r7, #1040]
 1929 00ba B7F80A24 		ldrh	r2, [r7, #1034]
 1930 00be 120A     		lsrs	r2, r2, #8
 1931 00c0 92B2     		uxth	r2, r2
 1932 00c2 D1B2     		uxtb	r1, r2
 1933 00c4 07F50272 		add	r2, r7, #520
 1934 00c8 D154     		strb	r1, [r2, r3]
 388:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff;
 1935              		.loc 1 388 0
 1936 00ca D7F81034 		ldr	r3, [r7, #1040]
 1937 00ce 5A1C     		adds	r2, r3, #1
 1938 00d0 C7F81024 		str	r2, [r7, #1040]
 1939 00d4 B7F80A24 		ldrh	r2, [r7, #1034]	@ movhi
 1940 00d8 D1B2     		uxtb	r1, r2
 1941 00da 07F50272 		add	r2, r7, #520
 1942 00de D154     		strb	r1, [r2, r3]
 389:App/STM32F4-Discovery/modbus_mk.c **** 
 390:App/STM32F4-Discovery/modbus_mk.c **** 	/* write request  to modbus line */
 391:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req, rsp, req_length, 5); 
 1943              		.loc 1 391 0
 1944 00e0 07F50272 		add	r2, r7, #520
 1945 00e4 07F10803 		add	r3, r7, #8
 1946 00e8 1046     		mov	r0, r2
 1947 00ea 1946     		mov	r1, r3
 1948 00ec D7F81024 		ldr	r2, [r7, #1040]
 1949 00f0 0523     		movs	r3, #5
 1950 00f2 FFF7FEFF 		bl	write_read_modbus
 392:App/STM32F4-Discovery/modbus_mk.c **** 	return modbus_confirmation (req, rsp,req_length, 5); 
 1951              		.loc 1 392 0
 1952 00f6 D7F81034 		ldr	r3, [r7, #1040]
 1953 00fa 9BB2     		uxth	r3, r3
 1954 00fc 07F50271 		add	r1, r7, #520
 1955 0100 07F10802 		add	r2, r7, #8
 1956 0104 0846     		mov	r0, r1
 1957 0106 1146     		mov	r1, r2
 1958 0108 1A46     		mov	r2, r3
 1959 010a 0523     		movs	r3, #5
 1960 010c FFF7FEFF 		bl	modbus_confirmation
 1961 0110 0346     		mov	r3, r0
 1962 0112 DBB2     		uxtb	r3, r3
 393:App/STM32F4-Discovery/modbus_mk.c **** 
 394:App/STM32F4-Discovery/modbus_mk.c **** 
 395:App/STM32F4-Discovery/modbus_mk.c **** 
 396:App/STM32F4-Discovery/modbus_mk.c **** }
 1963              		.loc 1 396 0
 1964 0114 1846     		mov	r0, r3
 1965 0116 07F58367 		add	r7, r7, #1048
 1966 011a BD46     		mov	sp, r7
 1967              		@ sp needed
 1968 011c 80BD     		pop	{r7, pc}
 1969              		.cfi_endproc
 1970              	.LFE119:
 1972 011e 00BF     		.section	.text.modbus_RR,"ax",%progbits
 1973              		.align	2
 1974              		.global	modbus_RR
 1975              		.thumb
 1976              		.thumb_func
 1978              	modbus_RR:
 1979              	.LFB120:
 397:App/STM32F4-Discovery/modbus_mk.c **** 
 398:App/STM32F4-Discovery/modbus_mk.c **** 
 399:App/STM32F4-Discovery/modbus_mk.c **** /* Read the values from the array to the registers of the remote device */
 400:App/STM32F4-Discovery/modbus_mk.c **** uint8_t modbus_RR( int address, int nb, uint16_t *src)
 401:App/STM32F4-Discovery/modbus_mk.c **** {
 1980              		.loc 1 401 0
 1981              		.cfi_startproc
 1982              		@ args = 0, pretend = 0, frame = 1064
 1983              		@ frame_needed = 1, uses_anonymous_args = 0
 1984 0000 80B5     		push	{r7, lr}
 1985              	.LCFI30:
 1986              		.cfi_def_cfa_offset 8
 1987              		.cfi_offset 7, -8
 1988              		.cfi_offset 14, -4
 1989 0002 ADF5856D 		sub	sp, sp, #1064
 1990              	.LCFI31:
 1991              		.cfi_def_cfa_offset 1072
 1992 0006 00AF     		add	r7, sp, #0
 1993              	.LCFI32:
 1994              		.cfi_def_cfa_register 7
 1995 0008 07F10C03 		add	r3, r7, #12
 1996 000c 1860     		str	r0, [r3]
 1997 000e 07F10803 		add	r3, r7, #8
 1998 0012 1960     		str	r1, [r3]
 1999 0014 3B1D     		adds	r3, r7, #4
 2000 0016 1A60     		str	r2, [r3]
 402:App/STM32F4-Discovery/modbus_mk.c ****     	int rc;
 403:App/STM32F4-Discovery/modbus_mk.c ****     	int i;
 404:App/STM32F4-Discovery/modbus_mk.c ****     	int req_length;
 405:App/STM32F4-Discovery/modbus_mk.c **** 	int byte_count;
 406:App/STM32F4-Discovery/modbus_mk.c ****     	uint8_t req[REQ_MAX_LEN];
 407:App/STM32F4-Discovery/modbus_mk.c ****   	uint8_t rsp[REQ_MAX_LEN];
 408:App/STM32F4-Discovery/modbus_mk.c **** 
 409:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 2001              		.loc 1 409 0
 2002 0018 07F50573 		add	r3, r7, #532
 2003 001c 3622     		movs	r2, #54
 2004 001e 1A70     		strb	r2, [r3]
 410:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0x4;
 2005              		.loc 1 410 0
 2006 0020 07F50573 		add	r3, r7, #532
 2007 0024 0422     		movs	r2, #4
 2008 0026 5A70     		strb	r2, [r3, #1]
 411:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 2009              		.loc 1 411 0
 2010 0028 07F10C03 		add	r3, r7, #12
 2011 002c 1B68     		ldr	r3, [r3]
 2012 002e 1B12     		asrs	r3, r3, #8
 2013 0030 DAB2     		uxtb	r2, r3
 2014 0032 07F50573 		add	r3, r7, #532
 2015 0036 9A70     		strb	r2, [r3, #2]
 412:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 2016              		.loc 1 412 0
 2017 0038 07F10C03 		add	r3, r7, #12
 2018 003c 1B68     		ldr	r3, [r3]
 2019 003e DAB2     		uxtb	r2, r3
 2020 0040 07F50573 		add	r3, r7, #532
 2021 0044 DA70     		strb	r2, [r3, #3]
 413:App/STM32F4-Discovery/modbus_mk.c **** 	req[4] = nb >> 8;
 2022              		.loc 1 413 0
 2023 0046 07F10803 		add	r3, r7, #8
 2024 004a 1B68     		ldr	r3, [r3]
 2025 004c 1B12     		asrs	r3, r3, #8
 2026 004e DAB2     		uxtb	r2, r3
 2027 0050 07F50573 		add	r3, r7, #532
 2028 0054 1A71     		strb	r2, [r3, #4]
 414:App/STM32F4-Discovery/modbus_mk.c **** 	req[5] = nb & 0x00ff; 
 2029              		.loc 1 414 0
 2030 0056 07F10803 		add	r3, r7, #8
 2031 005a 1B68     		ldr	r3, [r3]
 2032 005c DAB2     		uxtb	r2, r3
 2033 005e 07F50573 		add	r3, r7, #532
 2034 0062 5A71     		strb	r2, [r3, #5]
 415:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 6; 
 2035              		.loc 1 415 0
 2036 0064 0623     		movs	r3, #6
 2037 0066 C7F82034 		str	r3, [r7, #1056]
 416:App/STM32F4-Discovery/modbus_mk.c ****    	
 417:App/STM32F4-Discovery/modbus_mk.c **** 	byte_count = nb * 2;
 2038              		.loc 1 417 0
 2039 006a 07F10803 		add	r3, r7, #8
 2040 006e 1B68     		ldr	r3, [r3]
 2041 0070 5B00     		lsls	r3, r3, #1
 2042 0072 C7F81C34 		str	r3, [r7, #1052]
 418:App/STM32F4-Discovery/modbus_mk.c ****     	req[req_length++] = byte_count;
 2043              		.loc 1 418 0
 2044 0076 D7F82034 		ldr	r3, [r7, #1056]
 2045 007a 5A1C     		adds	r2, r3, #1
 2046 007c C7F82024 		str	r2, [r7, #1056]
 2047 0080 D7F81C24 		ldr	r2, [r7, #1052]
 2048 0084 D1B2     		uxtb	r1, r2
 2049 0086 07F50572 		add	r2, r7, #532
 2050 008a D154     		strb	r1, [r2, r3]
 419:App/STM32F4-Discovery/modbus_mk.c **** 	
 420:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 2051              		.loc 1 420 0
 2052 008c D7F82034 		ldr	r3, [r7, #1056]
 2053 0090 9BB2     		uxth	r3, r3
 2054 0092 07F50572 		add	r2, r7, #532
 2055 0096 1046     		mov	r0, r2
 2056 0098 1946     		mov	r1, r3
 2057 009a FFF7FEFF 		bl	crc16
 2058 009e 0346     		mov	r3, r0
 2059 00a0 A7F81A34 		strh	r3, [r7, #1050]	@ movhi
 421:App/STM32F4-Discovery/modbus_mk.c **** 
 422:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 2060              		.loc 1 422 0
 2061 00a4 D7F82034 		ldr	r3, [r7, #1056]
 2062 00a8 5A1C     		adds	r2, r3, #1
 2063 00aa C7F82024 		str	r2, [r7, #1056]
 2064 00ae B7F81A24 		ldrh	r2, [r7, #1050]
 2065 00b2 120A     		lsrs	r2, r2, #8
 2066 00b4 92B2     		uxth	r2, r2
 2067 00b6 D1B2     		uxtb	r1, r2
 2068 00b8 07F50572 		add	r2, r7, #532
 2069 00bc D154     		strb	r1, [r2, r3]
 423:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff; 
 2070              		.loc 1 423 0
 2071 00be D7F82034 		ldr	r3, [r7, #1056]
 2072 00c2 5A1C     		adds	r2, r3, #1
 2073 00c4 C7F82024 		str	r2, [r7, #1056]
 2074 00c8 B7F81A24 		ldrh	r2, [r7, #1050]	@ movhi
 2075 00cc D1B2     		uxtb	r1, r2
 2076 00ce 07F50572 		add	r2, r7, #532
 2077 00d2 D154     		strb	r1, [r2, r3]
 424:App/STM32F4-Discovery/modbus_mk.c **** 	
 425:App/STM32F4-Discovery/modbus_mk.c **** 	/* write request  to modbus line */
 426:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req, rsp,  req_length, nb*2 + 5); 
 2078              		.loc 1 426 0
 2079 00d4 07F10803 		add	r3, r7, #8
 2080 00d8 1B68     		ldr	r3, [r3]
 2081 00da 5B00     		lsls	r3, r3, #1
 2082 00dc 0533     		adds	r3, r3, #5
 2083 00de 07F50571 		add	r1, r7, #532
 2084 00e2 07F11402 		add	r2, r7, #20
 2085 00e6 0846     		mov	r0, r1
 2086 00e8 1146     		mov	r1, r2
 2087 00ea D7F82024 		ldr	r2, [r7, #1056]
 2088 00ee FFF7FEFF 		bl	write_read_modbus
 427:App/STM32F4-Discovery/modbus_mk.c **** 	
 428:App/STM32F4-Discovery/modbus_mk.c **** 	int offset = 2;
 2089              		.loc 1 428 0
 2090 00f2 0223     		movs	r3, #2
 2091 00f4 C7F81434 		str	r3, [r7, #1044]
 429:App/STM32F4-Discovery/modbus_mk.c **** 	
 430:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < nb; i++) {
 2092              		.loc 1 430 0
 2093 00f8 0023     		movs	r3, #0
 2094 00fa C7F82434 		str	r3, [r7, #1060]
 2095 00fe 24E0     		b	.L54
 2096              	.L55:
 431:App/STM32F4-Discovery/modbus_mk.c ****             /* shift reg hi_byte to temp OR with lo_byte */
 432:App/STM32F4-Discovery/modbus_mk.c ****             src[i] = (rsp[offset + 1 + (i << 1)] << 8) |
 2097              		.loc 1 432 0 discriminator 2
 2098 0100 D7F82434 		ldr	r3, [r7, #1060]
 2099 0104 5B00     		lsls	r3, r3, #1
 2100 0106 3A1D     		adds	r2, r7, #4
 2101 0108 1268     		ldr	r2, [r2]
 2102 010a 1344     		add	r3, r3, r2
 2103 010c D7F81424 		ldr	r2, [r7, #1044]
 2104 0110 511C     		adds	r1, r2, #1
 2105 0112 D7F82424 		ldr	r2, [r7, #1060]
 2106 0116 5200     		lsls	r2, r2, #1
 2107 0118 0A44     		add	r2, r2, r1
 2108 011a 07F11401 		add	r1, r7, #20
 2109 011e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 2110 0120 1202     		lsls	r2, r2, #8
 2111 0122 91B2     		uxth	r1, r2
 433:App/STM32F4-Discovery/modbus_mk.c ****                 rsp[offset + 2 + (i << 1)];
 2112              		.loc 1 433 0 discriminator 2
 2113 0124 D7F81424 		ldr	r2, [r7, #1044]
 2114 0128 901C     		adds	r0, r2, #2
 2115 012a D7F82424 		ldr	r2, [r7, #1060]
 2116 012e 5200     		lsls	r2, r2, #1
 2117 0130 0244     		add	r2, r2, r0
 2118 0132 07F11400 		add	r0, r7, #20
 2119 0136 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 432:App/STM32F4-Discovery/modbus_mk.c ****             src[i] = (rsp[offset + 1 + (i << 1)] << 8) |
 2120              		.loc 1 432 0 discriminator 2
 2121 0138 0A43     		orrs	r2, r2, r1
 2122 013a 92B2     		uxth	r2, r2
 2123 013c 92B2     		uxth	r2, r2
 2124 013e 1A80     		strh	r2, [r3]	@ movhi
 430:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < nb; i++) {
 2125              		.loc 1 430 0 discriminator 2
 2126 0140 D7F82434 		ldr	r3, [r7, #1060]
 2127 0144 0133     		adds	r3, r3, #1
 2128 0146 C7F82434 		str	r3, [r7, #1060]
 2129              	.L54:
 430:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < nb; i++) {
 2130              		.loc 1 430 0 is_stmt 0 discriminator 1
 2131 014a 07F10803 		add	r3, r7, #8
 2132 014e D7F82424 		ldr	r2, [r7, #1060]
 2133 0152 1B68     		ldr	r3, [r3]
 2134 0154 9A42     		cmp	r2, r3
 2135 0156 D3DB     		blt	.L55
 434:App/STM32F4-Discovery/modbus_mk.c **** 		
 435:App/STM32F4-Discovery/modbus_mk.c ****         }
 436:App/STM32F4-Discovery/modbus_mk.c **** 
 437:App/STM32F4-Discovery/modbus_mk.c **** //	for (i =0; i < nb; i++ ){ t_printf("[%d] ", src[i]); }
 438:App/STM32F4-Discovery/modbus_mk.c **** //	t_printf("\n");
 439:App/STM32F4-Discovery/modbus_mk.c **** 
 440:App/STM32F4-Discovery/modbus_mk.c **** 	
 441:App/STM32F4-Discovery/modbus_mk.c **** 
 442:App/STM32F4-Discovery/modbus_mk.c **** 	return modbus_confirmation (req, rsp,req_length, nb*2 + 5); 
 2136              		.loc 1 442 0 is_stmt 1
 2137 0158 D7F82034 		ldr	r3, [r7, #1056]
 2138 015c 9AB2     		uxth	r2, r3
 2139 015e 07F10803 		add	r3, r7, #8
 2140 0162 1B68     		ldr	r3, [r3]
 2141 0164 9BB2     		uxth	r3, r3
 2142 0166 5B00     		lsls	r3, r3, #1
 2143 0168 9BB2     		uxth	r3, r3
 2144 016a 0533     		adds	r3, r3, #5
 2145 016c 9BB2     		uxth	r3, r3
 2146 016e 07F50570 		add	r0, r7, #532
 2147 0172 07F11401 		add	r1, r7, #20
 2148 0176 FFF7FEFF 		bl	modbus_confirmation
 2149 017a 0346     		mov	r3, r0
 2150 017c DBB2     		uxtb	r3, r3
 443:App/STM32F4-Discovery/modbus_mk.c **** 
 444:App/STM32F4-Discovery/modbus_mk.c **** 
 445:App/STM32F4-Discovery/modbus_mk.c **** }
 2151              		.loc 1 445 0
 2152 017e 1846     		mov	r0, r3
 2153 0180 07F58567 		add	r7, r7, #1064
 2154 0184 BD46     		mov	sp, r7
 2155              		@ sp needed
 2156 0186 80BD     		pop	{r7, pc}
 2157              		.cfi_endproc
 2158              	.LFE120:
 2160              		.section	.rodata
 2161 007e 0000     		.align	2
 2162              	.LC6:
 2163 0080 48423A20 		.ascii	"HB: %d\012\012\000"
 2163      25640A0A 
 2163      00
 2164              		.section	.text.motorHeartBeat_task,"ax",%progbits
 2165              		.align	2
 2166              		.global	motorHeartBeat_task
 2167              		.thumb
 2168              		.thumb_func
 2170              	motorHeartBeat_task:
 2171              	.LFB121:
 446:App/STM32F4-Discovery/modbus_mk.c **** 
 447:App/STM32F4-Discovery/modbus_mk.c **** 
 448:App/STM32F4-Discovery/modbus_mk.c **** 
 449:App/STM32F4-Discovery/modbus_mk.c **** /*===================================================================================
 450:App/STM32F4-Discovery/modbus_mk.c **** =====================================================================================
 451:App/STM32F4-Discovery/modbus_mk.c **** ============    		TASKS SECTION			===================== 
 452:App/STM32F4-Discovery/modbus_mk.c **** =====================================================================================
 453:App/STM32F4-Discovery/modbus_mk.c **** ====================================================================================*/
 454:App/STM32F4-Discovery/modbus_mk.c **** void motorHeartBeat_task(void * pvParameters)
 455:App/STM32F4-Discovery/modbus_mk.c **** {
 2172              		.loc 1 455 0
 2173              		.cfi_startproc
 2174              		@ args = 0, pretend = 0, frame = 32
 2175              		@ frame_needed = 1, uses_anonymous_args = 0
 2176 0000 80B5     		push	{r7, lr}
 2177              	.LCFI33:
 2178              		.cfi_def_cfa_offset 8
 2179              		.cfi_offset 7, -8
 2180              		.cfi_offset 14, -4
 2181 0002 88B0     		sub	sp, sp, #32
 2182              	.LCFI34:
 2183              		.cfi_def_cfa_offset 40
 2184 0004 00AF     		add	r7, sp, #0
 2185              	.LCFI35:
 2186              		.cfi_def_cfa_register 7
 2187 0006 7860     		str	r0, [r7, #4]
 456:App/STM32F4-Discovery/modbus_mk.c **** 	/*! sets speed of motor */
 457:App/STM32F4-Discovery/modbus_mk.c **** 
 458:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t tab_reg[10];
 459:App/STM32F4-Discovery/modbus_mk.c **** //	portTickType xLastWakeTime; 
 460:App/STM32F4-Discovery/modbus_mk.c **** //	xLastWakeTime = xTaskGetTickCount();
 461:App/STM32F4-Discovery/modbus_mk.c **** 	//vTaskDelay(portMAX_DELAY);	
 462:App/STM32F4-Discovery/modbus_mk.c **** 	//vTaskSuspend(NULL); 
 463:App/STM32F4-Discovery/modbus_mk.c **** 	int counter = 0;	
 2188              		.loc 1 463 0
 2189 0008 0023     		movs	r3, #0
 2190 000a FB61     		str	r3, [r7, #28]
 2191              	.L58:
 464:App/STM32F4-Discovery/modbus_mk.c **** 	for(;;)
 465:App/STM32F4-Discovery/modbus_mk.c **** 	{
 466:App/STM32F4-Discovery/modbus_mk.c **** 		#ifdef DEBUG
 467:App/STM32F4-Discovery/modbus_mk.c **** 		t_printf("HB: %d\n\n", counter);
 2192              		.loc 1 467 0 discriminator 1
 2193 000c 0948     		ldr	r0, .L59
 2194 000e F969     		ldr	r1, [r7, #28]
 2195 0010 FFF7FEFF 		bl	t_printf
 468:App/STM32F4-Discovery/modbus_mk.c **** 		#endif
 469:App/STM32F4-Discovery/modbus_mk.c **** 		modbus_RR(0,10,tab_reg);
 2196              		.loc 1 469 0 discriminator 1
 2197 0014 07F10803 		add	r3, r7, #8
 2198 0018 0020     		movs	r0, #0
 2199 001a 0A21     		movs	r1, #10
 2200 001c 1A46     		mov	r2, r3
 2201 001e FFF7FEFF 		bl	modbus_RR
 470:App/STM32F4-Discovery/modbus_mk.c **** 		counter ++;
 2202              		.loc 1 470 0 discriminator 1
 2203 0022 FB69     		ldr	r3, [r7, #28]
 2204 0024 0133     		adds	r3, r3, #1
 2205 0026 FB61     		str	r3, [r7, #28]
 471:App/STM32F4-Discovery/modbus_mk.c **** 	//	vTaskDelayUntil(&xLastWakeTime, 3000/portTICK_RATE_MS);
 472:App/STM32F4-Discovery/modbus_mk.c **** 		vTaskDelay(3000/portTICK_RATE_MS);
 2206              		.loc 1 472 0 discriminator 1
 2207 0028 40F6B830 		movw	r0, #3000
 2208 002c FFF7FEFF 		bl	vTaskDelay
 473:App/STM32F4-Discovery/modbus_mk.c **** 
 474:App/STM32F4-Discovery/modbus_mk.c **** 	}
 2209              		.loc 1 474 0 discriminator 1
 2210 0030 ECE7     		b	.L58
 2211              	.L60:
 2212 0032 00BF     		.align	2
 2213              	.L59:
 2214 0034 80000000 		.word	.LC6
 2215              		.cfi_endproc
 2216              	.LFE121:
 2218              		.section	.rodata
 2219 0089 000000   		.align	2
 2220              	.LC7:
 2221 008c 506F7765 		.ascii	"Power In=%d, Iout=%d, Vin=%d, PrcOut=%d, RPMOut=%d,"
 2221      7220496E 
 2221      3D25642C 
 2221      20496F75 
 2221      743D2564 
 2222 00bf 20496E74 		.ascii	" InternalTemp=%d\012\000"
 2222      65726E61 
 2222      6C54656D 
 2222      703D2564 
 2222      0A00
 2223 00d1 000000   		.section	.text.motorControl_task,"ax",%progbits
 2224              		.align	2
 2225              		.global	motorControl_task
 2226              		.thumb
 2227              		.thumb_func
 2229              	motorControl_task:
 2230              	.LFB122:
 475:App/STM32F4-Discovery/modbus_mk.c **** 	/* Tasks must not attempt to return from their implementing
 476:App/STM32F4-Discovery/modbus_mk.c ****         function or otherwise exit.  In newer FreeRTOS port
 477:App/STM32F4-Discovery/modbus_mk.c ****         attempting to do so will result in an configASSERT() being
 478:App/STM32F4-Discovery/modbus_mk.c ****         called if it is defined.  If it is necessary for a task to
 479:App/STM32F4-Discovery/modbus_mk.c ****         exit then have the task call vTaskDelete( NULL ) to ensure
 480:App/STM32F4-Discovery/modbus_mk.c ****         its exit is clean. */
 481:App/STM32F4-Discovery/modbus_mk.c **** 	closesocket(socket_0);		
 482:App/STM32F4-Discovery/modbus_mk.c ****         vTaskDelete( NULL );
 483:App/STM32F4-Discovery/modbus_mk.c **** 
 484:App/STM32F4-Discovery/modbus_mk.c **** 
 485:App/STM32F4-Discovery/modbus_mk.c **** 
 486:App/STM32F4-Discovery/modbus_mk.c **** 
 487:App/STM32F4-Discovery/modbus_mk.c **** }
 488:App/STM32F4-Discovery/modbus_mk.c **** 
 489:App/STM32F4-Discovery/modbus_mk.c **** void motorControl_task(void * pvParameters)
 490:App/STM32F4-Discovery/modbus_mk.c **** {
 2231              		.loc 1 490 0
 2232              		.cfi_startproc
 2233              		@ args = 0, pretend = 0, frame = 32
 2234              		@ frame_needed = 1, uses_anonymous_args = 0
 2235 0000 B0B5     		push	{r4, r5, r7, lr}
 2236              	.LCFI36:
 2237              		.cfi_def_cfa_offset 16
 2238              		.cfi_offset 4, -16
 2239              		.cfi_offset 5, -12
 2240              		.cfi_offset 7, -8
 2241              		.cfi_offset 14, -4
 2242 0002 8CB0     		sub	sp, sp, #48
 2243              	.LCFI37:
 2244              		.cfi_def_cfa_offset 64
 2245 0004 04AF     		add	r7, sp, #16
 2246              	.LCFI38:
 2247              		.cfi_def_cfa 7, 48
 2248 0006 7860     		str	r0, [r7, #4]
 491:App/STM32F4-Discovery/modbus_mk.c **** 	
 492:App/STM32F4-Discovery/modbus_mk.c **** 
 493:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t src[4];
 494:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t spd[5]; 
 495:App/STM32F4-Discovery/modbus_mk.c **** 	
 496:App/STM32F4-Discovery/modbus_mk.c **** 
 497:App/STM32F4-Discovery/modbus_mk.c **** //	vTaskSuspend(NULL);	
 498:App/STM32F4-Discovery/modbus_mk.c **** 
 499:App/STM32F4-Discovery/modbus_mk.c **** 	src[0]=1; src[1]=1; src[2]=1; src[3]=1;
 2249              		.loc 1 499 0
 2250 0008 0123     		movs	r3, #1
 2251 000a 3B75     		strb	r3, [r7, #20]
 2252 000c 0123     		movs	r3, #1
 2253 000e 7B75     		strb	r3, [r7, #21]
 2254 0010 0123     		movs	r3, #1
 2255 0012 BB75     		strb	r3, [r7, #22]
 2256 0014 0123     		movs	r3, #1
 2257 0016 FB75     		strb	r3, [r7, #23]
 500:App/STM32F4-Discovery/modbus_mk.c **** 	
 501:App/STM32F4-Discovery/modbus_mk.c **** //	spd[0]=1500;spd[1]=0;spd[2]=2250;spd[3]=10;spd[4]=10;
 502:App/STM32F4-Discovery/modbus_mk.c **** 	
 503:App/STM32F4-Discovery/modbus_mk.c **** 	// create usart semaphore 
 504:App/STM32F4-Discovery/modbus_mk.c **** 	xSmphrUSART = xSemaphoreCreateBinary();	
 2258              		.loc 1 504 0
 2259 0018 0120     		movs	r0, #1
 2260 001a 0021     		movs	r1, #0
 2261 001c 0322     		movs	r2, #3
 2262 001e FFF7FEFF 		bl	xQueueGenericCreate
 2263 0022 0246     		mov	r2, r0
 2264 0024 854B     		ldr	r3, .L76
 2265 0026 1A60     		str	r2, [r3]
 505:App/STM32F4-Discovery/modbus_mk.c **** 	
 506:App/STM32F4-Discovery/modbus_mk.c **** 	portTickType xDelay = portMAX_DELAY;//3000 / portTICK_RATE_MS;	
 2266              		.loc 1 506 0
 2267 0028 4FF0FF33 		mov	r3, #-1
 2268 002c FB61     		str	r3, [r7, #28]
 507:App/STM32F4-Discovery/modbus_mk.c **** 	
 508:App/STM32F4-Discovery/modbus_mk.c **** 
 509:App/STM32F4-Discovery/modbus_mk.c **** 	static	QueueTelegram telegramR, telegramS; 
 510:App/STM32F4-Discovery/modbus_mk.c **** 
 511:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.data[0] = 1000;
 2269              		.loc 1 511 0
 2270 002e 844B     		ldr	r3, .L76+4
 2271 0030 4FF47A72 		mov	r2, #1000
 2272 0034 1A81     		strh	r2, [r3, #8]	@ movhi
 512:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.data[1] = 0;	
 2273              		.loc 1 512 0
 2274 0036 824B     		ldr	r3, .L76+4
 2275 0038 0022     		movs	r2, #0
 2276 003a 5A81     		strh	r2, [r3, #10]	@ movhi
 513:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.data[2] = 2250;
 2277              		.loc 1 513 0
 2278 003c 804B     		ldr	r3, .L76+4
 2279 003e 40F6CA02 		movw	r2, #2250
 2280 0042 9A81     		strh	r2, [r3, #12]	@ movhi
 514:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.data[3] = 10;	
 2281              		.loc 1 514 0
 2282 0044 7E4B     		ldr	r3, .L76+4
 2283 0046 0A22     		movs	r2, #10
 2284 0048 DA81     		strh	r2, [r3, #14]	@ movhi
 515:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.data[4] = 10;	
 2285              		.loc 1 515 0
 2286 004a 7D4B     		ldr	r3, .L76+4
 2287 004c 0A22     		movs	r2, #10
 2288 004e 1A82     		strh	r2, [r3, #16]	@ movhi
 516:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.size = 5;
 2289              		.loc 1 516 0
 2290 0050 7B4B     		ldr	r3, .L76+4
 2291 0052 0522     		movs	r2, #5
 2292 0054 5A60     		str	r2, [r3, #4]
 517:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.Qcmd = SETDATA;	
 2293              		.loc 1 517 0
 2294 0056 7A4B     		ldr	r3, .L76+4
 2295 0058 0022     		movs	r2, #0
 2296 005a 1A70     		strb	r2, [r3]
 518:App/STM32F4-Discovery/modbus_mk.c **** 
 519:App/STM32F4-Discovery/modbus_mk.c **** 	
 520:App/STM32F4-Discovery/modbus_mk.c **** 
 521:App/STM32F4-Discovery/modbus_mk.c **** 	int HB_flag = 0;
 2297              		.loc 1 521 0
 2298 005c 0023     		movs	r3, #0
 2299 005e BB61     		str	r3, [r7, #24]
 2300              	.L75:
 522:App/STM32F4-Discovery/modbus_mk.c **** 	
 523:App/STM32F4-Discovery/modbus_mk.c **** 	while (1)
 524:App/STM32F4-Discovery/modbus_mk.c **** 	{
 525:App/STM32F4-Discovery/modbus_mk.c **** 
 526:App/STM32F4-Discovery/modbus_mk.c **** 		
 527:App/STM32F4-Discovery/modbus_mk.c **** 	
 528:App/STM32F4-Discovery/modbus_mk.c **** 		if (xQueueReceive(QSpd_handle, (void *)&telegramR, xDelay  ) == pdPASS)
 2301              		.loc 1 528 0
 2302 0060 784B     		ldr	r3, .L76+8
 2303 0062 1B68     		ldr	r3, [r3]
 2304 0064 1846     		mov	r0, r3
 2305 0066 7649     		ldr	r1, .L76+4
 2306 0068 FA69     		ldr	r2, [r7, #28]
 2307 006a 0023     		movs	r3, #0
 2308 006c FFF7FEFF 		bl	xQueueGenericReceive
 2309 0070 0346     		mov	r3, r0
 2310 0072 012B     		cmp	r3, #1
 2311 0074 40F0E080 		bne	.L62
 529:App/STM32F4-Discovery/modbus_mk.c **** 		{
 530:App/STM32F4-Discovery/modbus_mk.c **** 			switch ( telegramR.Qcmd )
 2312              		.loc 1 530 0
 2313 0078 714B     		ldr	r3, .L76+4
 2314 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2315 007c 052B     		cmp	r3, #5
 2316 007e 00F2CF80 		bhi	.L63
 2317 0082 01A2     		adr	r2, .L65
 2318 0084 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2319              		.p2align 2
 2320              	.L65:
 2321 0088 A1000000 		.word	.L64+1
 2322 008c 09010000 		.word	.L66+1
 2323 0090 21020000 		.word	.L63+1
 2324 0094 21020000 		.word	.L63+1
 2325 0098 6B010000 		.word	.L67+1
 2326 009c D7010000 		.word	.L68+1
 2327              		.p2align 1
 2328              	.L64:
 531:App/STM32F4-Discovery/modbus_mk.c **** 			{
 532:App/STM32F4-Discovery/modbus_mk.c **** 				case SETDATA:
 533:App/STM32F4-Discovery/modbus_mk.c **** 
 534:App/STM32F4-Discovery/modbus_mk.c **** 					src[0]=1; src[1]=1; src[2]=1; src[3]=1;
 2329              		.loc 1 534 0
 2330 00a0 0123     		movs	r3, #1
 2331 00a2 3B75     		strb	r3, [r7, #20]
 2332 00a4 0123     		movs	r3, #1
 2333 00a6 7B75     		strb	r3, [r7, #21]
 2334 00a8 0123     		movs	r3, #1
 2335 00aa BB75     		strb	r3, [r7, #22]
 2336 00ac 0123     		movs	r3, #1
 2337 00ae FB75     		strb	r3, [r7, #23]
 535:App/STM32F4-Discovery/modbus_mk.c **** 
 536:App/STM32F4-Discovery/modbus_mk.c **** 					if ( !modbus_WIB( 0 , 3, src))
 2338              		.loc 1 536 0
 2339 00b0 07F11403 		add	r3, r7, #20
 2340 00b4 0020     		movs	r0, #0
 2341 00b6 0321     		movs	r1, #3
 2342 00b8 1A46     		mov	r2, r3
 2343 00ba FFF7FEFF 		bl	modbus_WIB
 2344 00be 0346     		mov	r3, r0
 2345 00c0 002B     		cmp	r3, #0
 2346 00c2 02D1     		bne	.L69
 537:App/STM32F4-Discovery/modbus_mk.c **** 					{
 538:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 539:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2347              		.loc 1 539 0
 2348 00c4 604B     		ldr	r3, .L76+12
 2349 00c6 0722     		movs	r2, #7
 2350 00c8 1A70     		strb	r2, [r3]
 2351              	.L69:
 540:App/STM32F4-Discovery/modbus_mk.c **** 					//	xQueueSend(QSpd_handle, &telegramS, xDelay);
 541:App/STM32F4-Discovery/modbus_mk.c **** 					//	break;
 542:App/STM32F4-Discovery/modbus_mk.c **** 					}
 543:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2352              		.loc 1 543 0
 2353 00ca 4FF47A70 		mov	r0, #1000
 2354 00ce FFF7FEFF 		bl	vTaskDelay
 544:App/STM32F4-Discovery/modbus_mk.c **** 					
 545:App/STM32F4-Discovery/modbus_mk.c **** 					if (!modbus_WR(0, 5, telegramR.data))
 2355              		.loc 1 545 0
 2356 00d2 0020     		movs	r0, #0
 2357 00d4 0521     		movs	r1, #5
 2358 00d6 5D4A     		ldr	r2, .L76+16
 2359 00d8 FFF7FEFF 		bl	modbus_WR
 2360 00dc 0346     		mov	r3, r0
 2361 00de 002B     		cmp	r3, #0
 2362 00e0 02D1     		bne	.L70
 546:App/STM32F4-Discovery/modbus_mk.c **** 					{
 547:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 548:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2363              		.loc 1 548 0
 2364 00e2 594B     		ldr	r3, .L76+12
 2365 00e4 0722     		movs	r2, #7
 2366 00e6 1A70     		strb	r2, [r3]
 2367              	.L70:
 549:App/STM32F4-Discovery/modbus_mk.c **** 					//	xQueueSend(QSpd_handle, &telegramS, xDelay);
 550:App/STM32F4-Discovery/modbus_mk.c **** 					//	break;
 551:App/STM32F4-Discovery/modbus_mk.c **** 					}
 552:App/STM32F4-Discovery/modbus_mk.c **** 
 553:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2368              		.loc 1 553 0
 2369 00e8 4FF47A70 		mov	r0, #1000
 2370 00ec FFF7FEFF 		bl	vTaskDelay
 554:App/STM32F4-Discovery/modbus_mk.c **** 
 555:App/STM32F4-Discovery/modbus_mk.c **** 				// send response to CLI 
 556:App/STM32F4-Discovery/modbus_mk.c **** 					telegramS.Qcmd = SUCCSESS;
 2371              		.loc 1 556 0
 2372 00f0 554B     		ldr	r3, .L76+12
 2373 00f2 0622     		movs	r2, #6
 2374 00f4 1A70     		strb	r2, [r3]
 557:App/STM32F4-Discovery/modbus_mk.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2375              		.loc 1 557 0
 2376 00f6 534B     		ldr	r3, .L76+8
 2377 00f8 1B68     		ldr	r3, [r3]
 2378 00fa 1846     		mov	r0, r3
 2379 00fc 5249     		ldr	r1, .L76+12
 2380 00fe FA69     		ldr	r2, [r7, #28]
 2381 0100 0023     		movs	r3, #0
 2382 0102 FFF7FEFF 		bl	xQueueGenericSend
 558:App/STM32F4-Discovery/modbus_mk.c **** 
 559:App/STM32F4-Discovery/modbus_mk.c **** 					break;
 2383              		.loc 1 559 0
 2384 0106 97E0     		b	.L62
 2385              	.L66:
 560:App/STM32F4-Discovery/modbus_mk.c **** 				       	
 561:App/STM32F4-Discovery/modbus_mk.c **** 				
 562:App/STM32F4-Discovery/modbus_mk.c **** 				case GETDATA:
 563:App/STM32F4-Discovery/modbus_mk.c **** 				
 564:App/STM32F4-Discovery/modbus_mk.c **** 					if ( !modbus_RR(0, 10, telegramS.data))
 2386              		.loc 1 564 0
 2387 0108 0020     		movs	r0, #0
 2388 010a 0A21     		movs	r1, #10
 2389 010c 504A     		ldr	r2, .L76+20
 2390 010e FFF7FEFF 		bl	modbus_RR
 2391 0112 0346     		mov	r3, r0
 2392 0114 002B     		cmp	r3, #0
 2393 0116 02D1     		bne	.L71
 565:App/STM32F4-Discovery/modbus_mk.c **** 					{
 566:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 567:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2394              		.loc 1 567 0
 2395 0118 4B4B     		ldr	r3, .L76+12
 2396 011a 0722     		movs	r2, #7
 2397 011c 1A70     		strb	r2, [r3]
 2398              	.L71:
 568:App/STM32F4-Discovery/modbus_mk.c **** 					//	xQueueSend(QSpd_handle, &telegramS, xDelay);
 569:App/STM32F4-Discovery/modbus_mk.c **** 					//	break;
 570:App/STM32F4-Discovery/modbus_mk.c **** 					}
 571:App/STM32F4-Discovery/modbus_mk.c **** 
 572:App/STM32F4-Discovery/modbus_mk.c **** 					t_printf("Power In=%d, Iout=%d, Vin=%d, "
 573:App/STM32F4-Discovery/modbus_mk.c **** 							"PrcOut=%d, RPMOut=%d, "
 574:App/STM32F4-Discovery/modbus_mk.c **** 							"InternalTemp=%d\n",
 575:App/STM32F4-Discovery/modbus_mk.c **** 							telegramS.data[8],
 2399              		.loc 1 575 0
 2400 011e 4A4B     		ldr	r3, .L76+12
 2401 0120 1B8B     		ldrh	r3, [r3, #24]
 572:App/STM32F4-Discovery/modbus_mk.c **** 					t_printf("Power In=%d, Iout=%d, Vin=%d, "
 2402              		.loc 1 572 0
 2403 0122 1946     		mov	r1, r3
 576:App/STM32F4-Discovery/modbus_mk.c **** 							telegramS.data[7],
 2404              		.loc 1 576 0
 2405 0124 484B     		ldr	r3, .L76+12
 2406 0126 DB8A     		ldrh	r3, [r3, #22]
 572:App/STM32F4-Discovery/modbus_mk.c **** 					t_printf("Power In=%d, Iout=%d, Vin=%d, "
 2407              		.loc 1 572 0
 2408 0128 1A46     		mov	r2, r3
 577:App/STM32F4-Discovery/modbus_mk.c **** 							telegramS.data[6],
 2409              		.loc 1 577 0
 2410 012a 474B     		ldr	r3, .L76+12
 2411 012c 9B8A     		ldrh	r3, [r3, #20]
 578:App/STM32F4-Discovery/modbus_mk.c **** 							telegramS.data[3],
 2412              		.loc 1 578 0
 2413 012e 4648     		ldr	r0, .L76+12
 2414 0130 C089     		ldrh	r0, [r0, #14]
 572:App/STM32F4-Discovery/modbus_mk.c **** 					t_printf("Power In=%d, Iout=%d, Vin=%d, "
 2415              		.loc 1 572 0
 2416 0132 0546     		mov	r5, r0
 579:App/STM32F4-Discovery/modbus_mk.c **** 							telegramS.data[4],
 2417              		.loc 1 579 0
 2418 0134 4448     		ldr	r0, .L76+12
 2419 0136 008A     		ldrh	r0, [r0, #16]
 572:App/STM32F4-Discovery/modbus_mk.c **** 					t_printf("Power In=%d, Iout=%d, Vin=%d, "
 2420              		.loc 1 572 0
 2421 0138 0446     		mov	r4, r0
 580:App/STM32F4-Discovery/modbus_mk.c **** 							telegramS.data[5]);
 2422              		.loc 1 580 0
 2423 013a 4348     		ldr	r0, .L76+12
 2424 013c 408A     		ldrh	r0, [r0, #18]
 572:App/STM32F4-Discovery/modbus_mk.c **** 					t_printf("Power In=%d, Iout=%d, Vin=%d, "
 2425              		.loc 1 572 0
 2426 013e 0095     		str	r5, [sp]
 2427 0140 0194     		str	r4, [sp, #4]
 2428 0142 0290     		str	r0, [sp, #8]
 2429 0144 4348     		ldr	r0, .L76+24
 2430 0146 FFF7FEFF 		bl	t_printf
 581:App/STM32F4-Discovery/modbus_mk.c **** 
 582:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2431              		.loc 1 582 0
 2432 014a 4FF47A70 		mov	r0, #1000
 2433 014e FFF7FEFF 		bl	vTaskDelay
 583:App/STM32F4-Discovery/modbus_mk.c **** 
 584:App/STM32F4-Discovery/modbus_mk.c **** 					// send response to CLI 
 585:App/STM32F4-Discovery/modbus_mk.c **** 					telegramS.Qcmd = SUCCSESS;
 2434              		.loc 1 585 0
 2435 0152 3D4B     		ldr	r3, .L76+12
 2436 0154 0622     		movs	r2, #6
 2437 0156 1A70     		strb	r2, [r3]
 586:App/STM32F4-Discovery/modbus_mk.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2438              		.loc 1 586 0
 2439 0158 3A4B     		ldr	r3, .L76+8
 2440 015a 1B68     		ldr	r3, [r3]
 2441 015c 1846     		mov	r0, r3
 2442 015e 3A49     		ldr	r1, .L76+12
 2443 0160 FA69     		ldr	r2, [r7, #28]
 2444 0162 0023     		movs	r3, #0
 2445 0164 FFF7FEFF 		bl	xQueueGenericSend
 587:App/STM32F4-Discovery/modbus_mk.c **** 
 588:App/STM32F4-Discovery/modbus_mk.c **** 					break;
 2446              		.loc 1 588 0
 2447 0168 66E0     		b	.L62
 2448              	.L67:
 589:App/STM32F4-Discovery/modbus_mk.c **** 
 590:App/STM32F4-Discovery/modbus_mk.c **** 				
 591:App/STM32F4-Discovery/modbus_mk.c **** 				case START: 
 592:App/STM32F4-Discovery/modbus_mk.c **** 					HB_flag = 1; 
 2449              		.loc 1 592 0
 2450 016a 0123     		movs	r3, #1
 2451 016c BB61     		str	r3, [r7, #24]
 593:App/STM32F4-Discovery/modbus_mk.c **** 				//	vTaskResume(motorHeartBeatHandle);
 594:App/STM32F4-Discovery/modbus_mk.c **** 
 595:App/STM32F4-Discovery/modbus_mk.c **** 					// set motor speed to 10% 
 596:App/STM32F4-Discovery/modbus_mk.c **** 				         src[0]=1; src[1]=1; src[2]=1; src[3]=1;
 2452              		.loc 1 596 0
 2453 016e 0123     		movs	r3, #1
 2454 0170 3B75     		strb	r3, [r7, #20]
 2455 0172 0123     		movs	r3, #1
 2456 0174 7B75     		strb	r3, [r7, #21]
 2457 0176 0123     		movs	r3, #1
 2458 0178 BB75     		strb	r3, [r7, #22]
 2459 017a 0123     		movs	r3, #1
 2460 017c FB75     		strb	r3, [r7, #23]
 597:App/STM32F4-Discovery/modbus_mk.c **** 
 598:App/STM32F4-Discovery/modbus_mk.c **** 					if( !modbus_WIB( 0 , 3, src) )
 2461              		.loc 1 598 0
 2462 017e 07F11403 		add	r3, r7, #20
 2463 0182 0020     		movs	r0, #0
 2464 0184 0321     		movs	r1, #3
 2465 0186 1A46     		mov	r2, r3
 2466 0188 FFF7FEFF 		bl	modbus_WIB
 2467 018c 0346     		mov	r3, r0
 2468 018e 002B     		cmp	r3, #0
 2469 0190 02D1     		bne	.L72
 599:App/STM32F4-Discovery/modbus_mk.c **** 					{
 600:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 601:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2470              		.loc 1 601 0
 2471 0192 2D4B     		ldr	r3, .L76+12
 2472 0194 0722     		movs	r2, #7
 2473 0196 1A70     		strb	r2, [r3]
 2474              	.L72:
 602:App/STM32F4-Discovery/modbus_mk.c **** 					//	xQueueSend(QSpd_handle, &telegramS, xDelay);
 603:App/STM32F4-Discovery/modbus_mk.c **** 					//	break;
 604:App/STM32F4-Discovery/modbus_mk.c **** 					}
 605:App/STM32F4-Discovery/modbus_mk.c **** 
 606:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2475              		.loc 1 606 0
 2476 0198 4FF47A70 		mov	r0, #1000
 2477 019c FFF7FEFF 		bl	vTaskDelay
 607:App/STM32F4-Discovery/modbus_mk.c **** 					if (!modbus_WR( 0, 5, telegramR.data))
 2478              		.loc 1 607 0
 2479 01a0 0020     		movs	r0, #0
 2480 01a2 0521     		movs	r1, #5
 2481 01a4 294A     		ldr	r2, .L76+16
 2482 01a6 FFF7FEFF 		bl	modbus_WR
 2483 01aa 0346     		mov	r3, r0
 2484 01ac 002B     		cmp	r3, #0
 2485 01ae 02D1     		bne	.L73
 608:App/STM32F4-Discovery/modbus_mk.c **** 					{
 609:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 610:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2486              		.loc 1 610 0
 2487 01b0 254B     		ldr	r3, .L76+12
 2488 01b2 0722     		movs	r2, #7
 2489 01b4 1A70     		strb	r2, [r3]
 2490              	.L73:
 611:App/STM32F4-Discovery/modbus_mk.c **** 					//	xQueueSend(QSpd_handle, &telegramS, xDelay);
 612:App/STM32F4-Discovery/modbus_mk.c **** 					//	break;
 613:App/STM32F4-Discovery/modbus_mk.c **** 					}
 614:App/STM32F4-Discovery/modbus_mk.c **** 
 615:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2491              		.loc 1 615 0
 2492 01b6 4FF47A70 		mov	r0, #1000
 2493 01ba FFF7FEFF 		bl	vTaskDelay
 616:App/STM32F4-Discovery/modbus_mk.c **** 			
 617:App/STM32F4-Discovery/modbus_mk.c **** 					// send response to CLI 
 618:App/STM32F4-Discovery/modbus_mk.c **** 					telegramS.Qcmd = SUCCSESS;
 2494              		.loc 1 618 0
 2495 01be 224B     		ldr	r3, .L76+12
 2496 01c0 0622     		movs	r2, #6
 2497 01c2 1A70     		strb	r2, [r3]
 619:App/STM32F4-Discovery/modbus_mk.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2498              		.loc 1 619 0
 2499 01c4 1F4B     		ldr	r3, .L76+8
 2500 01c6 1B68     		ldr	r3, [r3]
 2501 01c8 1846     		mov	r0, r3
 2502 01ca 1F49     		ldr	r1, .L76+12
 2503 01cc FA69     		ldr	r2, [r7, #28]
 2504 01ce 0023     		movs	r3, #0
 2505 01d0 FFF7FEFF 		bl	xQueueGenericSend
 620:App/STM32F4-Discovery/modbus_mk.c **** 
 621:App/STM32F4-Discovery/modbus_mk.c **** 					break;
 2506              		.loc 1 621 0
 2507 01d4 30E0     		b	.L62
 2508              	.L68:
 622:App/STM32F4-Discovery/modbus_mk.c **** 				
 623:App/STM32F4-Discovery/modbus_mk.c **** 				case STOP:
 624:App/STM32F4-Discovery/modbus_mk.c **** 					
 625:App/STM32F4-Discovery/modbus_mk.c **** 				//	vTaskSuspend (motorHeartBeatHandle);	
 626:App/STM32F4-Discovery/modbus_mk.c **** 					// send stop bits to motor 
 627:App/STM32F4-Discovery/modbus_mk.c **** 					src[0]=0; src[1]=1; src[2]=1; src[3]=1;
 2509              		.loc 1 627 0
 2510 01d6 0023     		movs	r3, #0
 2511 01d8 3B75     		strb	r3, [r7, #20]
 2512 01da 0123     		movs	r3, #1
 2513 01dc 7B75     		strb	r3, [r7, #21]
 2514 01de 0123     		movs	r3, #1
 2515 01e0 BB75     		strb	r3, [r7, #22]
 2516 01e2 0123     		movs	r3, #1
 2517 01e4 FB75     		strb	r3, [r7, #23]
 628:App/STM32F4-Discovery/modbus_mk.c **** 
 629:App/STM32F4-Discovery/modbus_mk.c **** 					if (!modbus_WIB( 0 , 3, src)) 
 2518              		.loc 1 629 0
 2519 01e6 07F11403 		add	r3, r7, #20
 2520 01ea 0020     		movs	r0, #0
 2521 01ec 0321     		movs	r1, #3
 2522 01ee 1A46     		mov	r2, r3
 2523 01f0 FFF7FEFF 		bl	modbus_WIB
 2524 01f4 0346     		mov	r3, r0
 2525 01f6 002B     		cmp	r3, #0
 2526 01f8 02D1     		bne	.L74
 630:App/STM32F4-Discovery/modbus_mk.c **** 					{
 631:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 632:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2527              		.loc 1 632 0
 2528 01fa 134B     		ldr	r3, .L76+12
 2529 01fc 0722     		movs	r2, #7
 2530 01fe 1A70     		strb	r2, [r3]
 2531              	.L74:
 633:App/STM32F4-Discovery/modbus_mk.c **** 				//		xQueueSend(QSpd_handle, &telegramS, xDelay);
 634:App/STM32F4-Discovery/modbus_mk.c **** 					//	break;
 635:App/STM32F4-Discovery/modbus_mk.c **** 					}
 636:App/STM32F4-Discovery/modbus_mk.c **** 
 637:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2532              		.loc 1 637 0
 2533 0200 4FF47A70 		mov	r0, #1000
 2534 0204 FFF7FEFF 		bl	vTaskDelay
 638:App/STM32F4-Discovery/modbus_mk.c **** 
 639:App/STM32F4-Discovery/modbus_mk.c **** 
 640:App/STM32F4-Discovery/modbus_mk.c **** 								// send response to CLI 
 641:App/STM32F4-Discovery/modbus_mk.c **** 					telegramS.Qcmd = SUCCSESS;
 2535              		.loc 1 641 0
 2536 0208 0F4B     		ldr	r3, .L76+12
 2537 020a 0622     		movs	r2, #6
 2538 020c 1A70     		strb	r2, [r3]
 642:App/STM32F4-Discovery/modbus_mk.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2539              		.loc 1 642 0
 2540 020e 0D4B     		ldr	r3, .L76+8
 2541 0210 1B68     		ldr	r3, [r3]
 2542 0212 1846     		mov	r0, r3
 2543 0214 0C49     		ldr	r1, .L76+12
 2544 0216 FA69     		ldr	r2, [r7, #28]
 2545 0218 0023     		movs	r3, #0
 2546 021a FFF7FEFF 		bl	xQueueGenericSend
 643:App/STM32F4-Discovery/modbus_mk.c **** 
 644:App/STM32F4-Discovery/modbus_mk.c **** 					break; 
 2547              		.loc 1 644 0
 2548 021e 0BE0     		b	.L62
 2549              	.L63:
 645:App/STM32F4-Discovery/modbus_mk.c **** 
 646:App/STM32F4-Discovery/modbus_mk.c **** 				default:
 647:App/STM32F4-Discovery/modbus_mk.c **** 
 648:App/STM32F4-Discovery/modbus_mk.c **** 					telegramS.Qcmd = ERROR_MODBUS;
 2550              		.loc 1 648 0
 2551 0220 094B     		ldr	r3, .L76+12
 2552 0222 0722     		movs	r2, #7
 2553 0224 1A70     		strb	r2, [r3]
 649:App/STM32F4-Discovery/modbus_mk.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2554              		.loc 1 649 0
 2555 0226 074B     		ldr	r3, .L76+8
 2556 0228 1B68     		ldr	r3, [r3]
 2557 022a 1846     		mov	r0, r3
 2558 022c 0649     		ldr	r1, .L76+12
 2559 022e FA69     		ldr	r2, [r7, #28]
 2560 0230 0023     		movs	r3, #0
 2561 0232 FFF7FEFF 		bl	xQueueGenericSend
 650:App/STM32F4-Discovery/modbus_mk.c **** 					break;
 2562              		.loc 1 650 0
 2563 0236 00BF     		nop
 2564              	.L62:
 651:App/STM32F4-Discovery/modbus_mk.c **** 
 652:App/STM32F4-Discovery/modbus_mk.c **** 					
 653:App/STM32F4-Discovery/modbus_mk.c **** 
 654:App/STM32F4-Discovery/modbus_mk.c **** 
 655:App/STM32F4-Discovery/modbus_mk.c **** 					
 656:App/STM32F4-Discovery/modbus_mk.c **** 			}
 657:App/STM32F4-Discovery/modbus_mk.c **** 		}
 658:App/STM32F4-Discovery/modbus_mk.c **** 	
 659:App/STM32F4-Discovery/modbus_mk.c **** 		
 660:App/STM32F4-Discovery/modbus_mk.c **** 	
 661:App/STM32F4-Discovery/modbus_mk.c **** 	}
 2565              		.loc 1 661 0
 2566 0238 12E7     		b	.L75
 2567              	.L77:
 2568 023a 00BF     		.align	2
 2569              	.L76:
 2570 023c 00000000 		.word	xSmphrUSART
 2571 0240 00000000 		.word	telegramR.9445
 2572 0244 00000000 		.word	QSpd_handle
 2573 0248 00000000 		.word	telegramS.9446
 2574 024c 08000000 		.word	telegramR.9445+8
 2575 0250 08000000 		.word	telegramS.9446+8
 2576 0254 8C000000 		.word	.LC7
 2577              		.cfi_endproc
 2578              	.LFE122:
 2580              		.section	.bss.cnt.9327,"aw",%nobits
 2583              	cnt.9327:
 2584 0000 00       		.space	1
 2585              		.section	.bss.telegramR.9445,"aw",%nobits
 2586              		.align	2
 2589              	telegramR.9445:
 2590 0000 00000000 		.space	28
 2590      00000000 
 2590      00000000 
 2590      00000000 
 2590      00000000 
 2591              		.section	.bss.telegramS.9446,"aw",%nobits
 2592              		.align	2
 2595              	telegramS.9446:
 2596 0000 00000000 		.space	28
 2596      00000000 
 2596      00000000 
 2596      00000000 
 2596      00000000 
 2597              		.text
 2598              	.Letext0:
 2599              		.file 2 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/lib/gcc/arm-none-eabi/4.8.4/include/std
 2600              		.file 3 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/machine/_default_
 2601              		.file 4 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/stdint.h"
 2602              		.file 5 "App/STM32F4-Discovery/Libraries/CMSIS/ST/STM32F4xx/Include/stm32f4xx.h"
 2603              		.file 6 "App/STM32F4-Discovery/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_gpio.h"
 2604              		.file 7 "App/STM32F4-Discovery/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
 2605              		.file 8 "App/STM32F4-Discovery/Libraries/STM32F4xx_StdPeriph_Driver/inc/misc.h"
 2606              		.file 9 "Source/portable/GCC/ARM_CM4F/portmacro.h"
 2607              		.file 10 "Source/include/task.h"
 2608              		.file 11 "Source/include/queue.h"
 2609              		.file 12 "Source/include/semphr.h"
 2610              		.file 13 "App/STM32F4-Discovery/main.h"
 2611              		.file 14 "Source/FreeRTOS-Plus-CLI/FreeRTOS_CLI.h"
 2612              		.file 15 "App/STM32F4-Discovery/tcpCLI.h"
 2613              		.file 16 "App/STM32F4-Discovery/modbus_mk.h"
 2614              		.file 17 "App/STM32F4-Discovery/Libraries/CMSIS/Include/core_cm4.h"
 2615              		.file 18 "App/STM32F4-Discovery/spi.h"
 2616              		.file 19 "App/STM32F4-Discovery/W5200.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 modbus_mk.c
                            *COM*:0000000000000004 xSemaphoreDMASPI
                            *COM*:0000000000000004 xSmphrUSART
                            *COM*:0000000000000004 xSemaphoreREADLEN
                            *COM*:0000000000000004 motorHeartBeatHandle
                            *COM*:0000000000000004 motorHBHandle
                            *COM*:0000000000000004 QSpd_handle
                            *COM*:0000000000000004 QTCP_handle
                            *COM*:0000000000000004 socket_0
                            *COM*:00000000000007d0 bufferTX
                            *COM*:00000000000007d0 bufferRX
                            *COM*:0000000000000004 bufferRXidx
                            *COM*:0000000000000004 bufferTXidx
                            *COM*:0000000000000004 dat_lengthRX
                            *COM*:0000000000000004 dat_lengthTX
                            *COM*:0000000000000004 set_macTaskHandle
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:35     .rodata:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:43     .rodata.xMotorCommand:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:46     .rodata.xMotorCommand:0000000000000000 xMotorCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:60     .rodata.xTaskStatsCommand:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:63     .rodata.xTaskStatsCommand:0000000000000000 xTaskStatsCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:70     .rodata.table_crc_hi:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:73     .rodata.table_crc_hi:0000000000000000 table_crc_hi
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:331    .rodata.table_crc_lo:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:334    .rodata.table_crc_lo:0000000000000000 table_crc_lo
                            *COM*:0000000000000004 fd
                            *COM*:0000000000000201 received_string
                            *COM*:0000000000000004 rx_length
                            *COM*:0000000000000014 input_Register
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:596    .text.init_USARTx:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:601    .text.init_USARTx:0000000000000000 init_USARTx
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:749    .text.init_USARTx:00000000000000e4 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:756    .text.USART_puts:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:761    .text.USART_puts:0000000000000000 USART_puts
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:828    .text.USART_puts:000000000000004c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:833    .text.USART6_IRQHandler:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:838    .text.USART6_IRQHandler:0000000000000000 USART6_IRQHandler
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:947    .text.USART6_IRQHandler:000000000000009c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:2583   .bss.cnt.9327:0000000000000000 cnt.9327
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:957    .text.crc16:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:962    .text.crc16:0000000000000000 crc16
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:1040   .text.crc16:0000000000000064 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:1046   .text.modbus_confirmation:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:1051   .text.modbus_confirmation:0000000000000000 modbus_confirmation
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:1129   .text.write_read_modbus:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:1134   .text.write_read_modbus:0000000000000000 write_read_modbus
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:1263   .text.write_read_modbus:00000000000000c0 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:1273   .text.modbus_RIB:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:1278   .text.modbus_RIB:0000000000000000 modbus_RIB
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:1397   .text.modbus_WIB:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:1402   .text.modbus_WIB:0000000000000000 modbus_WIB
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:1651   .text.modbus_WR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:1656   .text.modbus_WR:0000000000000000 modbus_WR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:1830   .text.modbus_WSR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:1835   .text.modbus_WSR:0000000000000000 modbus_WSR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:1973   .text.modbus_RR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:1978   .text.modbus_RR:0000000000000000 modbus_RR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:2165   .text.motorHeartBeat_task:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:2170   .text.motorHeartBeat_task:0000000000000000 motorHeartBeat_task
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:2214   .text.motorHeartBeat_task:0000000000000034 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:2224   .text.motorControl_task:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:2229   .text.motorControl_task:0000000000000000 motorControl_task
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:2321   .text.motorControl_task:0000000000000088 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:2327   .text.motorControl_task:00000000000000a0 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:2570   .text.motorControl_task:000000000000023c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:2589   .bss.telegramR.9445:0000000000000000 telegramR.9445
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:2595   .bss.telegramS.9446:0000000000000000 telegramS.9446
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:2584   .bss.cnt.9327:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:2586   .bss.telegramR.9445:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccwojwfH.s:2592   .bss.telegramS.9446:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
prvMotorCommand
prvTaskStatsCommand
RCC_APB2PeriphClockCmd
RCC_AHB1PeriphClockCmd
GPIO_Init
GPIO_PinAFConfig
USART_Init
USART_ITConfig
NVIC_Init
USART_Cmd
USART_GetITStatus
USART_ClearITPendingBit
vPortEnterCritical
xQueueGenericSendFromISR
vPortExitCritical
xQueueGenericReceive
t_printf
vTaskDelay
xQueueGenericCreate
xQueueGenericSend
