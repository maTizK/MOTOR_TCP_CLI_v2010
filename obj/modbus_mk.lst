   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"modbus_mk.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	xSemaphoreDMASPI,4,4
  20              		.comm	xSmphrUSART,4,4
  21              		.comm	xSemaphoreREADLEN,4,4
  22              		.comm	motorHeartBeatHandle,4,4
  23              		.comm	motorHBHandle,4,4
  24              		.comm	QSpd_handle,4,4
  25              		.comm	QTCP_handle,4,4
  26              		.comm	socket_0,4,4
  27              		.comm	bufferTX,2000,4
  28              		.comm	bufferRX,2000,4
  29              		.comm	bufferRXidx,4,4
  30              		.comm	bufferTXidx,4,4
  31              		.comm	dat_lengthRX,4,4
  32              		.comm	dat_lengthTX,4,4
  33              		.comm	set_macTaskHandle,4,4
  34              		.section	.rodata
  35              		.align	2
  36              	.LC0:
  37 0000 6D6F746F 		.ascii	"motor\000"
  37      7200
  38 0006 0000     		.align	2
  39              	.LC1:
  40 0008 6D6F746F 		.ascii	"motor  [options]\302\240[parameters]\302\240- Type "
  40      7220205B 
  40      6F707469 
  40      6F6E735D 
  40      C2A05B70 
  41 002f 6D6F746F 		.ascii	"motor help for more help\015\012\012\000\000"
  41      72206865 
  41      6C702066 
  41      6F72206D 
  41      6F726520 
  42              		.section	.rodata.xMotorCommand,"a",%progbits
  43              		.align	2
  46              	xMotorCommand:
  47 0000 00000000 		.word	.LC0
  48 0004 08000000 		.word	.LC1
  49 0008 00000000 		.word	prvMotorCommand
  50 000c FF       		.byte	-1
  51 000d 000000   		.space	3
  52              		.section	.rodata
  53              		.align	2
  54              	.LC2:
  55 004c 7461736B 		.ascii	"task\000"
  55      00
  56 0051 000000   		.align	2
  57              	.LC3:
  58 0054 7461736B 		.ascii	"task - return tasks list\015\012\012\000\000"
  58      202D2072 
  58      65747572 
  58      6E207461 
  58      736B7320 
  59              		.section	.rodata.xTaskStatsCommand,"a",%progbits
  60              		.align	2
  63              	xTaskStatsCommand:
  64 0000 4C000000 		.word	.LC2
  65 0004 54000000 		.word	.LC3
  66 0008 00000000 		.word	prvTaskStatsCommand
  67 000c FF       		.byte	-1
  68 000d 000000   		.space	3
  69              		.section	.rodata.table_crc_hi,"a",%progbits
  70              		.align	2
  73              	table_crc_hi:
  74 0000 00       		.byte	0
  75 0001 C1       		.byte	-63
  76 0002 81       		.byte	-127
  77 0003 40       		.byte	64
  78 0004 01       		.byte	1
  79 0005 C0       		.byte	-64
  80 0006 80       		.byte	-128
  81 0007 41       		.byte	65
  82 0008 01       		.byte	1
  83 0009 C0       		.byte	-64
  84 000a 80       		.byte	-128
  85 000b 41       		.byte	65
  86 000c 00       		.byte	0
  87 000d C1       		.byte	-63
  88 000e 81       		.byte	-127
  89 000f 40       		.byte	64
  90 0010 01       		.byte	1
  91 0011 C0       		.byte	-64
  92 0012 80       		.byte	-128
  93 0013 41       		.byte	65
  94 0014 00       		.byte	0
  95 0015 C1       		.byte	-63
  96 0016 81       		.byte	-127
  97 0017 40       		.byte	64
  98 0018 00       		.byte	0
  99 0019 C1       		.byte	-63
 100 001a 81       		.byte	-127
 101 001b 40       		.byte	64
 102 001c 01       		.byte	1
 103 001d C0       		.byte	-64
 104 001e 80       		.byte	-128
 105 001f 41       		.byte	65
 106 0020 01       		.byte	1
 107 0021 C0       		.byte	-64
 108 0022 80       		.byte	-128
 109 0023 41       		.byte	65
 110 0024 00       		.byte	0
 111 0025 C1       		.byte	-63
 112 0026 81       		.byte	-127
 113 0027 40       		.byte	64
 114 0028 00       		.byte	0
 115 0029 C1       		.byte	-63
 116 002a 81       		.byte	-127
 117 002b 40       		.byte	64
 118 002c 01       		.byte	1
 119 002d C0       		.byte	-64
 120 002e 80       		.byte	-128
 121 002f 41       		.byte	65
 122 0030 00       		.byte	0
 123 0031 C1       		.byte	-63
 124 0032 81       		.byte	-127
 125 0033 40       		.byte	64
 126 0034 01       		.byte	1
 127 0035 C0       		.byte	-64
 128 0036 80       		.byte	-128
 129 0037 41       		.byte	65
 130 0038 01       		.byte	1
 131 0039 C0       		.byte	-64
 132 003a 80       		.byte	-128
 133 003b 41       		.byte	65
 134 003c 00       		.byte	0
 135 003d C1       		.byte	-63
 136 003e 81       		.byte	-127
 137 003f 40       		.byte	64
 138 0040 01       		.byte	1
 139 0041 C0       		.byte	-64
 140 0042 80       		.byte	-128
 141 0043 41       		.byte	65
 142 0044 00       		.byte	0
 143 0045 C1       		.byte	-63
 144 0046 81       		.byte	-127
 145 0047 40       		.byte	64
 146 0048 00       		.byte	0
 147 0049 C1       		.byte	-63
 148 004a 81       		.byte	-127
 149 004b 40       		.byte	64
 150 004c 01       		.byte	1
 151 004d C0       		.byte	-64
 152 004e 80       		.byte	-128
 153 004f 41       		.byte	65
 154 0050 00       		.byte	0
 155 0051 C1       		.byte	-63
 156 0052 81       		.byte	-127
 157 0053 40       		.byte	64
 158 0054 01       		.byte	1
 159 0055 C0       		.byte	-64
 160 0056 80       		.byte	-128
 161 0057 41       		.byte	65
 162 0058 01       		.byte	1
 163 0059 C0       		.byte	-64
 164 005a 80       		.byte	-128
 165 005b 41       		.byte	65
 166 005c 00       		.byte	0
 167 005d C1       		.byte	-63
 168 005e 81       		.byte	-127
 169 005f 40       		.byte	64
 170 0060 00       		.byte	0
 171 0061 C1       		.byte	-63
 172 0062 81       		.byte	-127
 173 0063 40       		.byte	64
 174 0064 01       		.byte	1
 175 0065 C0       		.byte	-64
 176 0066 80       		.byte	-128
 177 0067 41       		.byte	65
 178 0068 01       		.byte	1
 179 0069 C0       		.byte	-64
 180 006a 80       		.byte	-128
 181 006b 41       		.byte	65
 182 006c 00       		.byte	0
 183 006d C1       		.byte	-63
 184 006e 81       		.byte	-127
 185 006f 40       		.byte	64
 186 0070 01       		.byte	1
 187 0071 C0       		.byte	-64
 188 0072 80       		.byte	-128
 189 0073 41       		.byte	65
 190 0074 00       		.byte	0
 191 0075 C1       		.byte	-63
 192 0076 81       		.byte	-127
 193 0077 40       		.byte	64
 194 0078 00       		.byte	0
 195 0079 C1       		.byte	-63
 196 007a 81       		.byte	-127
 197 007b 40       		.byte	64
 198 007c 01       		.byte	1
 199 007d C0       		.byte	-64
 200 007e 80       		.byte	-128
 201 007f 41       		.byte	65
 202 0080 01       		.byte	1
 203 0081 C0       		.byte	-64
 204 0082 80       		.byte	-128
 205 0083 41       		.byte	65
 206 0084 00       		.byte	0
 207 0085 C1       		.byte	-63
 208 0086 81       		.byte	-127
 209 0087 40       		.byte	64
 210 0088 00       		.byte	0
 211 0089 C1       		.byte	-63
 212 008a 81       		.byte	-127
 213 008b 40       		.byte	64
 214 008c 01       		.byte	1
 215 008d C0       		.byte	-64
 216 008e 80       		.byte	-128
 217 008f 41       		.byte	65
 218 0090 00       		.byte	0
 219 0091 C1       		.byte	-63
 220 0092 81       		.byte	-127
 221 0093 40       		.byte	64
 222 0094 01       		.byte	1
 223 0095 C0       		.byte	-64
 224 0096 80       		.byte	-128
 225 0097 41       		.byte	65
 226 0098 01       		.byte	1
 227 0099 C0       		.byte	-64
 228 009a 80       		.byte	-128
 229 009b 41       		.byte	65
 230 009c 00       		.byte	0
 231 009d C1       		.byte	-63
 232 009e 81       		.byte	-127
 233 009f 40       		.byte	64
 234 00a0 00       		.byte	0
 235 00a1 C1       		.byte	-63
 236 00a2 81       		.byte	-127
 237 00a3 40       		.byte	64
 238 00a4 01       		.byte	1
 239 00a5 C0       		.byte	-64
 240 00a6 80       		.byte	-128
 241 00a7 41       		.byte	65
 242 00a8 01       		.byte	1
 243 00a9 C0       		.byte	-64
 244 00aa 80       		.byte	-128
 245 00ab 41       		.byte	65
 246 00ac 00       		.byte	0
 247 00ad C1       		.byte	-63
 248 00ae 81       		.byte	-127
 249 00af 40       		.byte	64
 250 00b0 01       		.byte	1
 251 00b1 C0       		.byte	-64
 252 00b2 80       		.byte	-128
 253 00b3 41       		.byte	65
 254 00b4 00       		.byte	0
 255 00b5 C1       		.byte	-63
 256 00b6 81       		.byte	-127
 257 00b7 40       		.byte	64
 258 00b8 00       		.byte	0
 259 00b9 C1       		.byte	-63
 260 00ba 81       		.byte	-127
 261 00bb 40       		.byte	64
 262 00bc 01       		.byte	1
 263 00bd C0       		.byte	-64
 264 00be 80       		.byte	-128
 265 00bf 41       		.byte	65
 266 00c0 00       		.byte	0
 267 00c1 C1       		.byte	-63
 268 00c2 81       		.byte	-127
 269 00c3 40       		.byte	64
 270 00c4 01       		.byte	1
 271 00c5 C0       		.byte	-64
 272 00c6 80       		.byte	-128
 273 00c7 41       		.byte	65
 274 00c8 01       		.byte	1
 275 00c9 C0       		.byte	-64
 276 00ca 80       		.byte	-128
 277 00cb 41       		.byte	65
 278 00cc 00       		.byte	0
 279 00cd C1       		.byte	-63
 280 00ce 81       		.byte	-127
 281 00cf 40       		.byte	64
 282 00d0 01       		.byte	1
 283 00d1 C0       		.byte	-64
 284 00d2 80       		.byte	-128
 285 00d3 41       		.byte	65
 286 00d4 00       		.byte	0
 287 00d5 C1       		.byte	-63
 288 00d6 81       		.byte	-127
 289 00d7 40       		.byte	64
 290 00d8 00       		.byte	0
 291 00d9 C1       		.byte	-63
 292 00da 81       		.byte	-127
 293 00db 40       		.byte	64
 294 00dc 01       		.byte	1
 295 00dd C0       		.byte	-64
 296 00de 80       		.byte	-128
 297 00df 41       		.byte	65
 298 00e0 01       		.byte	1
 299 00e1 C0       		.byte	-64
 300 00e2 80       		.byte	-128
 301 00e3 41       		.byte	65
 302 00e4 00       		.byte	0
 303 00e5 C1       		.byte	-63
 304 00e6 81       		.byte	-127
 305 00e7 40       		.byte	64
 306 00e8 00       		.byte	0
 307 00e9 C1       		.byte	-63
 308 00ea 81       		.byte	-127
 309 00eb 40       		.byte	64
 310 00ec 01       		.byte	1
 311 00ed C0       		.byte	-64
 312 00ee 80       		.byte	-128
 313 00ef 41       		.byte	65
 314 00f0 00       		.byte	0
 315 00f1 C1       		.byte	-63
 316 00f2 81       		.byte	-127
 317 00f3 40       		.byte	64
 318 00f4 01       		.byte	1
 319 00f5 C0       		.byte	-64
 320 00f6 80       		.byte	-128
 321 00f7 41       		.byte	65
 322 00f8 01       		.byte	1
 323 00f9 C0       		.byte	-64
 324 00fa 80       		.byte	-128
 325 00fb 41       		.byte	65
 326 00fc 00       		.byte	0
 327 00fd C1       		.byte	-63
 328 00fe 81       		.byte	-127
 329 00ff 40       		.byte	64
 330              		.section	.rodata.table_crc_lo,"a",%progbits
 331              		.align	2
 334              	table_crc_lo:
 335 0000 00       		.byte	0
 336 0001 C0       		.byte	-64
 337 0002 C1       		.byte	-63
 338 0003 01       		.byte	1
 339 0004 C3       		.byte	-61
 340 0005 03       		.byte	3
 341 0006 02       		.byte	2
 342 0007 C2       		.byte	-62
 343 0008 C6       		.byte	-58
 344 0009 06       		.byte	6
 345 000a 07       		.byte	7
 346 000b C7       		.byte	-57
 347 000c 05       		.byte	5
 348 000d C5       		.byte	-59
 349 000e C4       		.byte	-60
 350 000f 04       		.byte	4
 351 0010 CC       		.byte	-52
 352 0011 0C       		.byte	12
 353 0012 0D       		.byte	13
 354 0013 CD       		.byte	-51
 355 0014 0F       		.byte	15
 356 0015 CF       		.byte	-49
 357 0016 CE       		.byte	-50
 358 0017 0E       		.byte	14
 359 0018 0A       		.byte	10
 360 0019 CA       		.byte	-54
 361 001a CB       		.byte	-53
 362 001b 0B       		.byte	11
 363 001c C9       		.byte	-55
 364 001d 09       		.byte	9
 365 001e 08       		.byte	8
 366 001f C8       		.byte	-56
 367 0020 D8       		.byte	-40
 368 0021 18       		.byte	24
 369 0022 19       		.byte	25
 370 0023 D9       		.byte	-39
 371 0024 1B       		.byte	27
 372 0025 DB       		.byte	-37
 373 0026 DA       		.byte	-38
 374 0027 1A       		.byte	26
 375 0028 1E       		.byte	30
 376 0029 DE       		.byte	-34
 377 002a DF       		.byte	-33
 378 002b 1F       		.byte	31
 379 002c DD       		.byte	-35
 380 002d 1D       		.byte	29
 381 002e 1C       		.byte	28
 382 002f DC       		.byte	-36
 383 0030 14       		.byte	20
 384 0031 D4       		.byte	-44
 385 0032 D5       		.byte	-43
 386 0033 15       		.byte	21
 387 0034 D7       		.byte	-41
 388 0035 17       		.byte	23
 389 0036 16       		.byte	22
 390 0037 D6       		.byte	-42
 391 0038 D2       		.byte	-46
 392 0039 12       		.byte	18
 393 003a 13       		.byte	19
 394 003b D3       		.byte	-45
 395 003c 11       		.byte	17
 396 003d D1       		.byte	-47
 397 003e D0       		.byte	-48
 398 003f 10       		.byte	16
 399 0040 F0       		.byte	-16
 400 0041 30       		.byte	48
 401 0042 31       		.byte	49
 402 0043 F1       		.byte	-15
 403 0044 33       		.byte	51
 404 0045 F3       		.byte	-13
 405 0046 F2       		.byte	-14
 406 0047 32       		.byte	50
 407 0048 36       		.byte	54
 408 0049 F6       		.byte	-10
 409 004a F7       		.byte	-9
 410 004b 37       		.byte	55
 411 004c F5       		.byte	-11
 412 004d 35       		.byte	53
 413 004e 34       		.byte	52
 414 004f F4       		.byte	-12
 415 0050 3C       		.byte	60
 416 0051 FC       		.byte	-4
 417 0052 FD       		.byte	-3
 418 0053 3D       		.byte	61
 419 0054 FF       		.byte	-1
 420 0055 3F       		.byte	63
 421 0056 3E       		.byte	62
 422 0057 FE       		.byte	-2
 423 0058 FA       		.byte	-6
 424 0059 3A       		.byte	58
 425 005a 3B       		.byte	59
 426 005b FB       		.byte	-5
 427 005c 39       		.byte	57
 428 005d F9       		.byte	-7
 429 005e F8       		.byte	-8
 430 005f 38       		.byte	56
 431 0060 28       		.byte	40
 432 0061 E8       		.byte	-24
 433 0062 E9       		.byte	-23
 434 0063 29       		.byte	41
 435 0064 EB       		.byte	-21
 436 0065 2B       		.byte	43
 437 0066 2A       		.byte	42
 438 0067 EA       		.byte	-22
 439 0068 EE       		.byte	-18
 440 0069 2E       		.byte	46
 441 006a 2F       		.byte	47
 442 006b EF       		.byte	-17
 443 006c 2D       		.byte	45
 444 006d ED       		.byte	-19
 445 006e EC       		.byte	-20
 446 006f 2C       		.byte	44
 447 0070 E4       		.byte	-28
 448 0071 24       		.byte	36
 449 0072 25       		.byte	37
 450 0073 E5       		.byte	-27
 451 0074 27       		.byte	39
 452 0075 E7       		.byte	-25
 453 0076 E6       		.byte	-26
 454 0077 26       		.byte	38
 455 0078 22       		.byte	34
 456 0079 E2       		.byte	-30
 457 007a E3       		.byte	-29
 458 007b 23       		.byte	35
 459 007c E1       		.byte	-31
 460 007d 21       		.byte	33
 461 007e 20       		.byte	32
 462 007f E0       		.byte	-32
 463 0080 A0       		.byte	-96
 464 0081 60       		.byte	96
 465 0082 61       		.byte	97
 466 0083 A1       		.byte	-95
 467 0084 63       		.byte	99
 468 0085 A3       		.byte	-93
 469 0086 A2       		.byte	-94
 470 0087 62       		.byte	98
 471 0088 66       		.byte	102
 472 0089 A6       		.byte	-90
 473 008a A7       		.byte	-89
 474 008b 67       		.byte	103
 475 008c A5       		.byte	-91
 476 008d 65       		.byte	101
 477 008e 64       		.byte	100
 478 008f A4       		.byte	-92
 479 0090 6C       		.byte	108
 480 0091 AC       		.byte	-84
 481 0092 AD       		.byte	-83
 482 0093 6D       		.byte	109
 483 0094 AF       		.byte	-81
 484 0095 6F       		.byte	111
 485 0096 6E       		.byte	110
 486 0097 AE       		.byte	-82
 487 0098 AA       		.byte	-86
 488 0099 6A       		.byte	106
 489 009a 6B       		.byte	107
 490 009b AB       		.byte	-85
 491 009c 69       		.byte	105
 492 009d A9       		.byte	-87
 493 009e A8       		.byte	-88
 494 009f 68       		.byte	104
 495 00a0 78       		.byte	120
 496 00a1 B8       		.byte	-72
 497 00a2 B9       		.byte	-71
 498 00a3 79       		.byte	121
 499 00a4 BB       		.byte	-69
 500 00a5 7B       		.byte	123
 501 00a6 7A       		.byte	122
 502 00a7 BA       		.byte	-70
 503 00a8 BE       		.byte	-66
 504 00a9 7E       		.byte	126
 505 00aa 7F       		.byte	127
 506 00ab BF       		.byte	-65
 507 00ac 7D       		.byte	125
 508 00ad BD       		.byte	-67
 509 00ae BC       		.byte	-68
 510 00af 7C       		.byte	124
 511 00b0 B4       		.byte	-76
 512 00b1 74       		.byte	116
 513 00b2 75       		.byte	117
 514 00b3 B5       		.byte	-75
 515 00b4 77       		.byte	119
 516 00b5 B7       		.byte	-73
 517 00b6 B6       		.byte	-74
 518 00b7 76       		.byte	118
 519 00b8 72       		.byte	114
 520 00b9 B2       		.byte	-78
 521 00ba B3       		.byte	-77
 522 00bb 73       		.byte	115
 523 00bc B1       		.byte	-79
 524 00bd 71       		.byte	113
 525 00be 70       		.byte	112
 526 00bf B0       		.byte	-80
 527 00c0 50       		.byte	80
 528 00c1 90       		.byte	-112
 529 00c2 91       		.byte	-111
 530 00c3 51       		.byte	81
 531 00c4 93       		.byte	-109
 532 00c5 53       		.byte	83
 533 00c6 52       		.byte	82
 534 00c7 92       		.byte	-110
 535 00c8 96       		.byte	-106
 536 00c9 56       		.byte	86
 537 00ca 57       		.byte	87
 538 00cb 97       		.byte	-105
 539 00cc 55       		.byte	85
 540 00cd 95       		.byte	-107
 541 00ce 94       		.byte	-108
 542 00cf 54       		.byte	84
 543 00d0 9C       		.byte	-100
 544 00d1 5C       		.byte	92
 545 00d2 5D       		.byte	93
 546 00d3 9D       		.byte	-99
 547 00d4 5F       		.byte	95
 548 00d5 9F       		.byte	-97
 549 00d6 9E       		.byte	-98
 550 00d7 5E       		.byte	94
 551 00d8 5A       		.byte	90
 552 00d9 9A       		.byte	-102
 553 00da 9B       		.byte	-101
 554 00db 5B       		.byte	91
 555 00dc 99       		.byte	-103
 556 00dd 59       		.byte	89
 557 00de 58       		.byte	88
 558 00df 98       		.byte	-104
 559 00e0 88       		.byte	-120
 560 00e1 48       		.byte	72
 561 00e2 49       		.byte	73
 562 00e3 89       		.byte	-119
 563 00e4 4B       		.byte	75
 564 00e5 8B       		.byte	-117
 565 00e6 8A       		.byte	-118
 566 00e7 4A       		.byte	74
 567 00e8 4E       		.byte	78
 568 00e9 8E       		.byte	-114
 569 00ea 8F       		.byte	-113
 570 00eb 4F       		.byte	79
 571 00ec 8D       		.byte	-115
 572 00ed 4D       		.byte	77
 573 00ee 4C       		.byte	76
 574 00ef 8C       		.byte	-116
 575 00f0 44       		.byte	68
 576 00f1 84       		.byte	-124
 577 00f2 85       		.byte	-123
 578 00f3 45       		.byte	69
 579 00f4 87       		.byte	-121
 580 00f5 47       		.byte	71
 581 00f6 46       		.byte	70
 582 00f7 86       		.byte	-122
 583 00f8 82       		.byte	-126
 584 00f9 42       		.byte	66
 585 00fa 43       		.byte	67
 586 00fb 83       		.byte	-125
 587 00fc 41       		.byte	65
 588 00fd 81       		.byte	-127
 589 00fe 80       		.byte	-128
 590 00ff 40       		.byte	64
 591              		.comm	fd,4,4
 592              		.comm	received_string,513,4
 593              		.comm	rx_length,4,4
 594              		.comm	input_Register,20,4
 595              		.section	.text.init_USARTx,"ax",%progbits
 596              		.align	2
 597              		.global	init_USARTx
 598              		.thumb
 599              		.thumb_func
 601              	init_USARTx:
 602              	.LFB110:
 603              		.file 1 "App/STM32F4-Discovery/modbus_mk.c"
   1:App/STM32F4-Discovery/modbus_mk.c **** /*! \file modbus_mk.c
   2:App/STM32F4-Discovery/modbus_mk.c ****  *  \brief modbus protocol functions and motor control
   3:App/STM32F4-Discovery/modbus_mk.c ****  */
   4:App/STM32F4-Discovery/modbus_mk.c **** 
   5:App/STM32F4-Discovery/modbus_mk.c **** 
   6:App/STM32F4-Discovery/modbus_mk.c **** #include "modbus_mk.h"
   7:App/STM32F4-Discovery/modbus_mk.c **** #include "printf.h"
   8:App/STM32F4-Discovery/modbus_mk.c **** 
   9:App/STM32F4-Discovery/modbus_mk.c **** 
  10:App/STM32F4-Discovery/modbus_mk.c **** #define DEBUG
  11:App/STM32F4-Discovery/modbus_mk.c **** 
  12:App/STM32F4-Discovery/modbus_mk.c **** 
  13:App/STM32F4-Discovery/modbus_mk.c **** /* This funcion initializes the USART1 peripheral
  14:App/STM32F4-Discovery/modbus_mk.c ****  * 
  15:App/STM32F4-Discovery/modbus_mk.c ****  * Arguments: baudrate --> the baudrate at which the USART is 
  16:App/STM32F4-Discovery/modbus_mk.c ****  * 						   supposed to operate
  17:App/STM32F4-Discovery/modbus_mk.c ****  */
  18:App/STM32F4-Discovery/modbus_mk.c **** 
  19:App/STM32F4-Discovery/modbus_mk.c **** #define pdFalse 0
  20:App/STM32F4-Discovery/modbus_mk.c **** #define pdTrue 	1
  21:App/STM32F4-Discovery/modbus_mk.c **** 
  22:App/STM32F4-Discovery/modbus_mk.c **** 
  23:App/STM32F4-Discovery/modbus_mk.c **** void init_USARTx(void)
  24:App/STM32F4-Discovery/modbus_mk.c **** {
 604              		.loc 1 24 0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 32
 607              		@ frame_needed = 1, uses_anonymous_args = 0
 608 0000 80B5     		push	{r7, lr}
 609              	.LCFI0:
 610              		.cfi_def_cfa_offset 8
 611              		.cfi_offset 7, -8
 612              		.cfi_offset 14, -4
 613 0002 88B0     		sub	sp, sp, #32
 614              	.LCFI1:
 615              		.cfi_def_cfa_offset 40
 616 0004 00AF     		add	r7, sp, #0
 617              	.LCFI2:
 618              		.cfi_def_cfa_register 7
  25:App/STM32F4-Discovery/modbus_mk.c **** 	
  26:App/STM32F4-Discovery/modbus_mk.c **** 	
  27:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitTypeDef GPIO_InitStruct; // this is for the GPIO pins used as TX and RX
  28:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitTypeDef USART_InitStruct; // this is for the USART1 initilization
  29:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitTypeDef NVIC_InitStructure; // this is used to configure the NVIC (nested vector interrup
  30:App/STM32F4-Discovery/modbus_mk.c **** 	
  31:App/STM32F4-Discovery/modbus_mk.c **** 	/* enable APB2 peripheral clock for USART1 
  32:App/STM32F4-Discovery/modbus_mk.c **** 	 * note that only USART1 and USART6 are connected to APB2
  33:App/STM32F4-Discovery/modbus_mk.c **** 	 * the other USARTs are connected to APB1
  34:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  35:App/STM32F4-Discovery/modbus_mk.c **** 	RCC_APB2PeriphClockCmd(USARTx_CLK, ENABLE);
 619              		.loc 1 35 0
 620 0006 2020     		movs	r0, #32
 621 0008 0121     		movs	r1, #1
 622 000a FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
  36:App/STM32F4-Discovery/modbus_mk.c **** 	
  37:App/STM32F4-Discovery/modbus_mk.c **** 	/* enable the peripheral clock for the pins used by 
  38:App/STM32F4-Discovery/modbus_mk.c **** 	 * USART1, PB6 for TX and PB7 for RX 
  39:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  40:App/STM32F4-Discovery/modbus_mk.c **** 	RCC_AHB1PeriphClockCmd(USARTx_TX_GPIO_CLK, ENABLE);
 623              		.loc 1 40 0
 624 000e 0420     		movs	r0, #4
 625 0010 0121     		movs	r1, #1
 626 0012 FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  41:App/STM32F4-Discovery/modbus_mk.c **** 	RCC_AHB1PeriphClockCmd(USARTx_RX_GPIO_CLK, ENABLE);
 627              		.loc 1 41 0
 628 0016 0420     		movs	r0, #4
 629 0018 0121     		movs	r1, #1
 630 001a FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  42:App/STM32F4-Discovery/modbus_mk.c **** 	RCC_AHB1PeriphClockCmd(USARTx_CS_GPIO_CLK, ENABLE);
 631              		.loc 1 42 0
 632 001e 4020     		movs	r0, #64
 633 0020 0121     		movs	r1, #1
 634 0022 FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  43:App/STM32F4-Discovery/modbus_mk.c **** 
  44:App/STM32F4-Discovery/modbus_mk.c **** 	
  45:App/STM32F4-Discovery/modbus_mk.c **** 	/* This sequence sets up the TX and RX pins 
  46:App/STM32F4-Discovery/modbus_mk.c **** 	 * so they work correctly with the USART1 peripheral
  47:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  48:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Pin = USARTx_RX_GPIO_PIN | USARTx_TX_GPIO_PIN; // Pins 6 (TX) and 7 (RX) are 
 635              		.loc 1 48 0
 636 0026 C023     		movs	r3, #192
 637 0028 BB61     		str	r3, [r7, #24]
  49:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF; 			// the pins are configured as alternate function so t
 638              		.loc 1 49 0
 639 002a 0223     		movs	r3, #2
 640 002c 3B77     		strb	r3, [r7, #28]
  50:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;		// this defines the IO speed and has nothing to d
 641              		.loc 1 50 0
 642 002e 0323     		movs	r3, #3
 643 0030 7B77     		strb	r3, [r7, #29]
  51:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;			// this defines the output type as push pull mode (a
 644              		.loc 1 51 0
 645 0032 0023     		movs	r3, #0
 646 0034 BB77     		strb	r3, [r7, #30]
  52:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;			// this activates the pullup resistors on the IO pins
 647              		.loc 1 52 0
 648 0036 0123     		movs	r3, #1
 649 0038 FB77     		strb	r3, [r7, #31]
  53:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_Init(USARTx_TX_GPIO_PORT, &GPIO_InitStruct);					// now all the values are passed to the GPIO
 650              		.loc 1 53 0
 651 003a 07F11803 		add	r3, r7, #24
 652 003e 2948     		ldr	r0, .L2
 653 0040 1946     		mov	r1, r3
 654 0042 FFF7FEFF 		bl	GPIO_Init
  54:App/STM32F4-Discovery/modbus_mk.c **** 	
  55:App/STM32F4-Discovery/modbus_mk.c **** 	
  56:App/STM32F4-Discovery/modbus_mk.c **** 	
  57:App/STM32F4-Discovery/modbus_mk.c **** 	/* Configure the chip select pin in this case we will use PG8 */
  58:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Pin = USARTx_CS_GPIO_PIN;
 655              		.loc 1 58 0
 656 0046 4FF48073 		mov	r3, #256
 657 004a BB61     		str	r3, [r7, #24]
  59:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_OUT;
 658              		.loc 1 59 0
 659 004c 0123     		movs	r3, #1
 660 004e 3B77     		strb	r3, [r7, #28]
  60:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;
 661              		.loc 1 60 0
 662 0050 0023     		movs	r3, #0
 663 0052 BB77     		strb	r3, [r7, #30]
  61:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;
 664              		.loc 1 61 0
 665 0054 0323     		movs	r3, #3
 666 0056 7B77     		strb	r3, [r7, #29]
  62:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;
 667              		.loc 1 62 0
 668 0058 0123     		movs	r3, #1
 669 005a FB77     		strb	r3, [r7, #31]
  63:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_Init(USARTx_CS_GPIO_PORT, &GPIO_InitStruct);
 670              		.loc 1 63 0
 671 005c 07F11803 		add	r3, r7, #24
 672 0060 2148     		ldr	r0, .L2+4
 673 0062 1946     		mov	r1, r3
 674 0064 FFF7FEFF 		bl	GPIO_Init
  64:App/STM32F4-Discovery/modbus_mk.c **** 
  65:App/STM32F4-Discovery/modbus_mk.c **** 	DD() // set PG8 high
 675              		.loc 1 65 0
 676 0068 1F4B     		ldr	r3, .L2+4
 677 006a 1F4A     		ldr	r2, .L2+4
 678 006c 128B     		ldrh	r2, [r2, #24]	@ movhi
 679 006e 92B2     		uxth	r2, r2
 680 0070 42F48072 		orr	r2, r2, #256
 681 0074 92B2     		uxth	r2, r2
 682 0076 1A83     		strh	r2, [r3, #24]	@ movhi
  66:App/STM32F4-Discovery/modbus_mk.c **** 	
  67:App/STM32F4-Discovery/modbus_mk.c **** 	
  68:App/STM32F4-Discovery/modbus_mk.c **** 	/* The RX and TX pins are now connected to their AF
  69:App/STM32F4-Discovery/modbus_mk.c **** 	 * so that the USART1 can take over control of the 
  70:App/STM32F4-Discovery/modbus_mk.c **** 	 * pins
  71:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  72:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_PinAFConfig(GPIOC, GPIO_PinSource6, GPIO_AF_USART6); //
 683              		.loc 1 72 0
 684 0078 1A48     		ldr	r0, .L2
 685 007a 0621     		movs	r1, #6
 686 007c 0822     		movs	r2, #8
 687 007e FFF7FEFF 		bl	GPIO_PinAFConfig
  73:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_PinAFConfig(GPIOC, GPIO_PinSource7, GPIO_AF_USART6);
 688              		.loc 1 73 0
 689 0082 1848     		ldr	r0, .L2
 690 0084 0721     		movs	r1, #7
 691 0086 0822     		movs	r2, #8
 692 0088 FFF7FEFF 		bl	GPIO_PinAFConfig
  74:App/STM32F4-Discovery/modbus_mk.c **** 	
  75:App/STM32F4-Discovery/modbus_mk.c **** 	/* Now the USART_InitStruct is used to define the 
  76:App/STM32F4-Discovery/modbus_mk.c **** 	 * properties of USART1 
  77:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  78:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_BaudRate = 38400;				// the baudrate is set to the value we passed into thi
 693              		.loc 1 78 0
 694 008c 4FF41643 		mov	r3, #38400
 695 0090 BB60     		str	r3, [r7, #8]
  79:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_WordLength = USART_WordLength_8b;// we want the data frame size to be 8 bit
 696              		.loc 1 79 0
 697 0092 0023     		movs	r3, #0
 698 0094 BB81     		strh	r3, [r7, #12]	@ movhi
  80:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_StopBits = USART_StopBits_1;		// we want 1 stop bit (standard)
 699              		.loc 1 80 0
 700 0096 0023     		movs	r3, #0
 701 0098 FB81     		strh	r3, [r7, #14]	@ movhi
  81:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_Parity = USART_Parity_No;		// we don't want a parity bit (standard)
 702              		.loc 1 81 0
 703 009a 0023     		movs	r3, #0
 704 009c 3B82     		strh	r3, [r7, #16]	@ movhi
  82:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_HardwareFlowControl = USART_HardwareFlowControl_None; // we don't want flow
 705              		.loc 1 82 0
 706 009e 0023     		movs	r3, #0
 707 00a0 BB82     		strh	r3, [r7, #20]	@ movhi
  83:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_Mode = USART_Mode_Tx | USART_Mode_Rx; // we want to enable the transmitter 
 708              		.loc 1 83 0
 709 00a2 0C23     		movs	r3, #12
 710 00a4 7B82     		strh	r3, [r7, #18]	@ movhi
  84:App/STM32F4-Discovery/modbus_mk.c **** 	USART_Init(USART6, &USART_InitStruct);					// again all the properties are passed to the USART_Ini
 711              		.loc 1 84 0
 712 00a6 07F10803 		add	r3, r7, #8
 713 00aa 1048     		ldr	r0, .L2+8
 714 00ac 1946     		mov	r1, r3
 715 00ae FFF7FEFF 		bl	USART_Init
  85:App/STM32F4-Discovery/modbus_mk.c **** 	
  86:App/STM32F4-Discovery/modbus_mk.c **** 	
  87:App/STM32F4-Discovery/modbus_mk.c **** 	/* Here the USART1 receive interrupt is enabled
  88:App/STM32F4-Discovery/modbus_mk.c **** 	 * and the interrupt controller is configured 
  89:App/STM32F4-Discovery/modbus_mk.c **** 	 * to jump to the USART1_IRQHandler() function
  90:App/STM32F4-Discovery/modbus_mk.c **** 	 * if the USART1 receive interrupt occurs
  91:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  92:App/STM32F4-Discovery/modbus_mk.c **** 	USART_ITConfig(USART6, USART_IT_RXNE, ENABLE); // enable the USART1 receive interrupt 
 716              		.loc 1 92 0
 717 00b2 0E48     		ldr	r0, .L2+8
 718 00b4 40F22551 		movw	r1, #1317
 719 00b8 0122     		movs	r2, #1
 720 00ba FFF7FEFF 		bl	USART_ITConfig
  93:App/STM32F4-Discovery/modbus_mk.c **** 	
  94:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitStructure.NVIC_IRQChannel = USART6_IRQn;		 // we want to configure the USART interrupts
 721              		.loc 1 94 0
 722 00be 4723     		movs	r3, #71
 723 00c0 3B71     		strb	r3, [r7, #4]
  95:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORIT
 724              		.loc 1 95 0
 725 00c2 0623     		movs	r3, #6
 726 00c4 7B71     		strb	r3, [r7, #5]
  96:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x1;		 // this sets the subpriority inside the gro
 727              		.loc 1 96 0
 728 00c6 0123     		movs	r3, #1
 729 00c8 BB71     		strb	r3, [r7, #6]
  97:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;			 // the USART1 interrupts are globally enabled
 730              		.loc 1 97 0
 731 00ca 0123     		movs	r3, #1
 732 00cc FB71     		strb	r3, [r7, #7]
  98:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_Init(&NVIC_InitStructure);	 // the properties are passed to the NVIC_Init function which take
 733              		.loc 1 98 0
 734 00ce 3B1D     		adds	r3, r7, #4
 735 00d0 1846     		mov	r0, r3
 736 00d2 FFF7FEFF 		bl	NVIC_Init
  99:App/STM32F4-Discovery/modbus_mk.c **** 
 100:App/STM32F4-Discovery/modbus_mk.c **** 	// finally this enables the complete USART1 peripheral
 101:App/STM32F4-Discovery/modbus_mk.c **** 	USART_Cmd(USART6, ENABLE);
 737              		.loc 1 101 0
 738 00d6 0548     		ldr	r0, .L2+8
 739 00d8 0121     		movs	r1, #1
 740 00da FFF7FEFF 		bl	USART_Cmd
 102:App/STM32F4-Discovery/modbus_mk.c **** }
 741              		.loc 1 102 0
 742 00de 2037     		adds	r7, r7, #32
 743 00e0 BD46     		mov	sp, r7
 744              		@ sp needed
 745 00e2 80BD     		pop	{r7, pc}
 746              	.L3:
 747              		.align	2
 748              	.L2:
 749 00e4 00080240 		.word	1073874944
 750 00e8 00180240 		.word	1073879040
 751 00ec 00140140 		.word	1073812480
 752              		.cfi_endproc
 753              	.LFE110:
 755              		.section	.text.USART_puts,"ax",%progbits
 756              		.align	2
 757              		.global	USART_puts
 758              		.thumb
 759              		.thumb_func
 761              	USART_puts:
 762              	.LFB111:
 103:App/STM32F4-Discovery/modbus_mk.c **** 
 104:App/STM32F4-Discovery/modbus_mk.c **** 
 105:App/STM32F4-Discovery/modbus_mk.c **** void USART_puts(uint8_t *s, int nb)
 106:App/STM32F4-Discovery/modbus_mk.c **** {
 763              		.loc 1 106 0
 764              		.cfi_startproc
 765              		@ args = 0, pretend = 0, frame = 16
 766              		@ frame_needed = 1, uses_anonymous_args = 0
 767              		@ link register save eliminated.
 768 0000 80B4     		push	{r7}
 769              	.LCFI3:
 770              		.cfi_def_cfa_offset 4
 771              		.cfi_offset 7, -4
 772 0002 85B0     		sub	sp, sp, #20
 773              	.LCFI4:
 774              		.cfi_def_cfa_offset 24
 775 0004 00AF     		add	r7, sp, #0
 776              	.LCFI5:
 777              		.cfi_def_cfa_register 7
 778 0006 7860     		str	r0, [r7, #4]
 779 0008 3960     		str	r1, [r7]
 107:App/STM32F4-Discovery/modbus_mk.c **** 
 108:App/STM32F4-Discovery/modbus_mk.c **** 	/*! This function is used to transmit a string of characters via 
 109:App/STM32F4-Discovery/modbus_mk.c **** 	 * the USART specified in USARTx.
 110:App/STM32F4-Discovery/modbus_mk.c **** 	 * 
 111:App/STM32F4-Discovery/modbus_mk.c **** 	 * It takes two arguments: USARTx --> can be any of the USARTs e.g. USART1, USART2 etc.
 112:App/STM32F4-Discovery/modbus_mk.c **** 	 * 						   (volatile) char *s is the string you want to send
 113:App/STM32F4-Discovery/modbus_mk.c **** 	 * 
 114:App/STM32F4-Discovery/modbus_mk.c **** 	 * Note: The string has to be passed to the function as a pointer because
 115:App/STM32F4-Discovery/modbus_mk.c **** 	 * 		 the compiler doesn't know the 'string' data type. In standard
 116:App/STM32F4-Discovery/modbus_mk.c **** 	 * 		 C a string is just an array of characters
 117:App/STM32F4-Discovery/modbus_mk.c **** 	 * 
 118:App/STM32F4-Discovery/modbus_mk.c **** 	 * Note 2: At the moment it takes a volatile char because the received_string variable
 119:App/STM32F4-Discovery/modbus_mk.c **** 	 * 		   declared as volatile char --> otherwise the compiler will spit out warnings
 120:App/STM32F4-Discovery/modbus_mk.c **** 	 * */
 121:App/STM32F4-Discovery/modbus_mk.c **** 
 122:App/STM32F4-Discovery/modbus_mk.c **** 	int i = 0;
 780              		.loc 1 122 0
 781 000a 0023     		movs	r3, #0
 782 000c FB60     		str	r3, [r7, #12]
 123:App/STM32F4-Discovery/modbus_mk.c **** 	while(i < nb && *s){
 783              		.loc 1 123 0
 784 000e 10E0     		b	.L5
 785              	.L8:
 124:App/STM32F4-Discovery/modbus_mk.c **** 		// wait until data register is empty
 125:App/STM32F4-Discovery/modbus_mk.c **** 		while( !(USARTx->SR & 0x00000040) ); 
 786              		.loc 1 125 0
 787 0010 00BF     		nop
 788              	.L6:
 789              		.loc 1 125 0 is_stmt 0 discriminator 1
 790 0012 0E4B     		ldr	r3, .L9
 791 0014 1B88     		ldrh	r3, [r3]	@ movhi
 792 0016 9BB2     		uxth	r3, r3
 793 0018 03F04003 		and	r3, r3, #64
 794 001c 002B     		cmp	r3, #0
 795 001e F8D0     		beq	.L6
 126:App/STM32F4-Discovery/modbus_mk.c **** 		//USART_SendData(USART6, s[i]);
 127:App/STM32F4-Discovery/modbus_mk.c **** 		USARTx->DR = s[i];
 796              		.loc 1 127 0 is_stmt 1
 797 0020 0A4B     		ldr	r3, .L9
 798 0022 FA68     		ldr	r2, [r7, #12]
 799 0024 7968     		ldr	r1, [r7, #4]
 800 0026 0A44     		add	r2, r2, r1
 801 0028 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 802 002a 9A80     		strh	r2, [r3, #4]	@ movhi
 128:App/STM32F4-Discovery/modbus_mk.c **** 		i++;
 803              		.loc 1 128 0
 804 002c FB68     		ldr	r3, [r7, #12]
 805 002e 0133     		adds	r3, r3, #1
 806 0030 FB60     		str	r3, [r7, #12]
 807              	.L5:
 123:App/STM32F4-Discovery/modbus_mk.c **** 	while(i < nb && *s){
 808              		.loc 1 123 0 discriminator 1
 809 0032 FA68     		ldr	r2, [r7, #12]
 810 0034 3B68     		ldr	r3, [r7]
 811 0036 9A42     		cmp	r2, r3
 812 0038 03DA     		bge	.L4
 123:App/STM32F4-Discovery/modbus_mk.c **** 	while(i < nb && *s){
 813              		.loc 1 123 0 is_stmt 0 discriminator 2
 814 003a 7B68     		ldr	r3, [r7, #4]
 815 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 816 003e 002B     		cmp	r3, #0
 817 0040 E6D1     		bne	.L8
 818              	.L4:
 129:App/STM32F4-Discovery/modbus_mk.c **** 	
 130:App/STM32F4-Discovery/modbus_mk.c **** 	}
 131:App/STM32F4-Discovery/modbus_mk.c **** 	
 132:App/STM32F4-Discovery/modbus_mk.c **** 	
 133:App/STM32F4-Discovery/modbus_mk.c **** }
 819              		.loc 1 133 0 is_stmt 1
 820 0042 1437     		adds	r7, r7, #20
 821 0044 BD46     		mov	sp, r7
 822              		@ sp needed
 823 0046 5DF8047B 		ldr	r7, [sp], #4
 824 004a 7047     		bx	lr
 825              	.L10:
 826              		.align	2
 827              	.L9:
 828 004c 00140140 		.word	1073812480
 829              		.cfi_endproc
 830              	.LFE111:
 832              		.section	.text.USART6_IRQHandler,"ax",%progbits
 833              		.align	2
 834              		.global	USART6_IRQHandler
 835              		.thumb
 836              		.thumb_func
 838              	USART6_IRQHandler:
 839              	.LFB112:
 134:App/STM32F4-Discovery/modbus_mk.c **** 
 135:App/STM32F4-Discovery/modbus_mk.c **** // this is the interrupt request handler (IRQ) for ALL USART6 interrupts
 136:App/STM32F4-Discovery/modbus_mk.c **** void USART6_IRQHandler(void){
 840              		.loc 1 136 0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 8
 843              		@ frame_needed = 1, uses_anonymous_args = 0
 844 0000 80B5     		push	{r7, lr}
 845              	.LCFI6:
 846              		.cfi_def_cfa_offset 8
 847              		.cfi_offset 7, -8
 848              		.cfi_offset 14, -4
 849 0002 82B0     		sub	sp, sp, #8
 850              	.LCFI7:
 851              		.cfi_def_cfa_offset 16
 852 0004 00AF     		add	r7, sp, #0
 853              	.LCFI8:
 854              		.cfi_def_cfa_register 7
 137:App/STM32F4-Discovery/modbus_mk.c **** 	
 138:App/STM32F4-Discovery/modbus_mk.c **** 	unsigned portBASE_TYPE xHigherPriorityTaskWoken_usart = pdFalse;
 855              		.loc 1 138 0
 856 0006 0023     		movs	r3, #0
 857 0008 3B60     		str	r3, [r7]
 139:App/STM32F4-Discovery/modbus_mk.c **** 	
 140:App/STM32F4-Discovery/modbus_mk.c **** 
 141:App/STM32F4-Discovery/modbus_mk.c **** 	// check if the USART1 receive interrupt flag was set
 142:App/STM32F4-Discovery/modbus_mk.c **** 	if( USART_GetITStatus(USARTx, USART_IT_RXNE) ){
 858              		.loc 1 142 0
 859 000a 2148     		ldr	r0, .L15
 860 000c 40F22551 		movw	r1, #1317
 861 0010 FFF7FEFF 		bl	USART_GetITStatus
 862 0014 0346     		mov	r3, r0
 863 0016 002B     		cmp	r3, #0
 864 0018 30D0     		beq	.L12
 865              	.LBB2:
 143:App/STM32F4-Discovery/modbus_mk.c **** 		
 144:App/STM32F4-Discovery/modbus_mk.c **** 		
 145:App/STM32F4-Discovery/modbus_mk.c **** 	//	USART_ClearITPendingBit ( USARTx, USART_IT_RXNE ) ;
 146:App/STM32F4-Discovery/modbus_mk.c **** 		static uint8_t cnt = 0; // this counter is used to determine the string length
 147:App/STM32F4-Discovery/modbus_mk.c **** 	 	char t = USARTx->DR; // the character from the USART1 data register is saved in t
 866              		.loc 1 147 0
 867 001a 1D4B     		ldr	r3, .L15
 868 001c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 869 001e 9BB2     		uxth	r3, r3
 870 0020 FB71     		strb	r3, [r7, #7]
 148:App/STM32F4-Discovery/modbus_mk.c **** 		
 149:App/STM32F4-Discovery/modbus_mk.c **** 		/* check if the received character is not the LF character (used to determine end of string) 
 150:App/STM32F4-Discovery/modbus_mk.c **** 		 * or the if the maximum string length has been been reached 
 151:App/STM32F4-Discovery/modbus_mk.c **** 		 */
 152:App/STM32F4-Discovery/modbus_mk.c **** 	
 153:App/STM32F4-Discovery/modbus_mk.c **** 		
 154:App/STM32F4-Discovery/modbus_mk.c **** 		if( (cnt < rx_length) &&
 871              		.loc 1 154 0
 872 0022 1C4B     		ldr	r3, .L15+4
 873 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 874 0026 1A46     		mov	r2, r3
 875 0028 1B4B     		ldr	r3, .L15+8
 876 002a 1B68     		ldr	r3, [r3]
 877 002c 9A42     		cmp	r2, r3
 878 002e 0FDA     		bge	.L13
 155:App/STM32F4-Discovery/modbus_mk.c **** 				(cnt < MAX_STRLEN-400) ){ 
 879              		.loc 1 155 0 discriminator 1
 880 0030 184B     		ldr	r3, .L15+4
 881 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 154:App/STM32F4-Discovery/modbus_mk.c **** 		if( (cnt < rx_length) &&
 882              		.loc 1 154 0 discriminator 1
 883 0034 6F2B     		cmp	r3, #111
 884 0036 0BD8     		bhi	.L13
 156:App/STM32F4-Discovery/modbus_mk.c **** 			received_string[cnt] = t;
 885              		.loc 1 156 0
 886 0038 164B     		ldr	r3, .L15+4
 887 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 888 003c 174A     		ldr	r2, .L15+12
 889 003e F979     		ldrb	r1, [r7, #7]
 890 0040 D154     		strb	r1, [r2, r3]
 157:App/STM32F4-Discovery/modbus_mk.c **** 			cnt++;
 891              		.loc 1 157 0
 892 0042 144B     		ldr	r3, .L15+4
 893 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 894 0046 0133     		adds	r3, r3, #1
 895 0048 DAB2     		uxtb	r2, r3
 896 004a 124B     		ldr	r3, .L15+4
 897 004c 1A70     		strb	r2, [r3]
 898 004e 15E0     		b	.L12
 899              	.L13:
 158:App/STM32F4-Discovery/modbus_mk.c **** 		}
 159:App/STM32F4-Discovery/modbus_mk.c **** 		else{ // otherwise reset the character counter and print the received string
 160:App/STM32F4-Discovery/modbus_mk.c **** 			received_string[cnt] = t; 
 900              		.loc 1 160 0
 901 0050 104B     		ldr	r3, .L15+4
 902 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 903 0054 114A     		ldr	r2, .L15+12
 904 0056 F979     		ldrb	r1, [r7, #7]
 905 0058 D154     		strb	r1, [r2, r3]
 161:App/STM32F4-Discovery/modbus_mk.c **** 			cnt = 0;
 906              		.loc 1 161 0
 907 005a 0E4B     		ldr	r3, .L15+4
 908 005c 0022     		movs	r2, #0
 909 005e 1A70     		strb	r2, [r3]
 162:App/STM32F4-Discovery/modbus_mk.c **** 		//	USART_ITConfig(USART6, USART_IT_RXNE, DISABLE); 
 163:App/STM32F4-Discovery/modbus_mk.c **** 	
 164:App/STM32F4-Discovery/modbus_mk.c **** 			USART_ClearITPendingBit ( USARTx, USART_IT_RXNE ) ;
 910              		.loc 1 164 0
 911 0060 0B48     		ldr	r0, .L15
 912 0062 40F22551 		movw	r1, #1317
 913 0066 FFF7FEFF 		bl	USART_ClearITPendingBit
 165:App/STM32F4-Discovery/modbus_mk.c **** 	
 166:App/STM32F4-Discovery/modbus_mk.c **** 			xSemaphoreGiveFromISR(xSmphrUSART,&xHigherPriorityTaskWoken_usart );
 914              		.loc 1 166 0
 915 006a 0D4B     		ldr	r3, .L15+16
 916 006c 1A68     		ldr	r2, [r3]
 917 006e 3B46     		mov	r3, r7
 918 0070 1046     		mov	r0, r2
 919 0072 0021     		movs	r1, #0
 920 0074 1A46     		mov	r2, r3
 921 0076 0023     		movs	r3, #0
 922 0078 FFF7FEFF 		bl	xQueueGenericSendFromISR
 923              	.L12:
 924              	.LBE2:
 167:App/STM32F4-Discovery/modbus_mk.c **** 	
 168:App/STM32F4-Discovery/modbus_mk.c **** 			//USART_puts(USART1, received_string);
 169:App/STM32F4-Discovery/modbus_mk.c **** 		}
 170:App/STM32F4-Discovery/modbus_mk.c **** 
 171:App/STM32F4-Discovery/modbus_mk.c **** 
 172:App/STM32F4-Discovery/modbus_mk.c **** 	}
 173:App/STM32F4-Discovery/modbus_mk.c ****  portEND_SWITCHING_ISR( xHigherPriorityTaskWoken_usart );	
 925              		.loc 1 173 0
 926 007c 3B68     		ldr	r3, [r7]
 927 007e 002B     		cmp	r3, #0
 928 0080 03D0     		beq	.L11
 929              		.loc 1 173 0 is_stmt 0 discriminator 1
 930 0082 084B     		ldr	r3, .L15+20
 931 0084 4FF08052 		mov	r2, #268435456
 932 0088 1A60     		str	r2, [r3]
 933              	.L11:
 174:App/STM32F4-Discovery/modbus_mk.c **** }
 934              		.loc 1 174 0 is_stmt 1
 935 008a 0837     		adds	r7, r7, #8
 936 008c BD46     		mov	sp, r7
 937              		@ sp needed
 938 008e 80BD     		pop	{r7, pc}
 939              	.L16:
 940              		.align	2
 941              	.L15:
 942 0090 00140140 		.word	1073812480
 943 0094 00000000 		.word	cnt.9327
 944 0098 00000000 		.word	rx_length
 945 009c 00000000 		.word	received_string
 946 00a0 00000000 		.word	xSmphrUSART
 947 00a4 04ED00E0 		.word	-536810236
 948              		.cfi_endproc
 949              	.LFE112:
 951              		.section	.text.crc16,"ax",%progbits
 952              		.align	2
 953              		.global	crc16
 954              		.thumb
 955              		.thumb_func
 957              	crc16:
 958              	.LFB113:
 175:App/STM32F4-Discovery/modbus_mk.c **** 
 176:App/STM32F4-Discovery/modbus_mk.c **** 
 177:App/STM32F4-Discovery/modbus_mk.c **** 
 178:App/STM32F4-Discovery/modbus_mk.c **** /* function for  */
 179:App/STM32F4-Discovery/modbus_mk.c **** uint16_t crc16(uint8_t *buffer, uint16_t buffer_length)
 180:App/STM32F4-Discovery/modbus_mk.c **** {
 959              		.loc 1 180 0
 960              		.cfi_startproc
 961              		@ args = 0, pretend = 0, frame = 16
 962              		@ frame_needed = 1, uses_anonymous_args = 0
 963              		@ link register save eliminated.
 964 0000 80B4     		push	{r7}
 965              	.LCFI9:
 966              		.cfi_def_cfa_offset 4
 967              		.cfi_offset 7, -4
 968 0002 85B0     		sub	sp, sp, #20
 969              	.LCFI10:
 970              		.cfi_def_cfa_offset 24
 971 0004 00AF     		add	r7, sp, #0
 972              	.LCFI11:
 973              		.cfi_def_cfa_register 7
 974 0006 7860     		str	r0, [r7, #4]
 975 0008 0B46     		mov	r3, r1
 976 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 181:App/STM32F4-Discovery/modbus_mk.c ****      uint8_t crc_hi = 0xFF; /* high CRC byte initialized */
 977              		.loc 1 181 0
 978 000c FF23     		movs	r3, #255
 979 000e FB73     		strb	r3, [r7, #15]
 182:App/STM32F4-Discovery/modbus_mk.c ****      uint8_t crc_lo = 0xFF; /* low CRC byte initialized */
 980              		.loc 1 182 0
 981 0010 FF23     		movs	r3, #255
 982 0012 BB73     		strb	r3, [r7, #14]
 183:App/STM32F4-Discovery/modbus_mk.c ****      unsigned int i; /* will index into CRC lookup */
 184:App/STM32F4-Discovery/modbus_mk.c ****  
 185:App/STM32F4-Discovery/modbus_mk.c ****      /* pass through message buffer */
 186:App/STM32F4-Discovery/modbus_mk.c ****      while (buffer_length--) {
 983              		.loc 1 186 0
 984 0014 13E0     		b	.L18
 985              	.L19:
 187:App/STM32F4-Discovery/modbus_mk.c ****          i = crc_hi ^ *buffer++; /* calculate the CRC  */
 986              		.loc 1 187 0
 987 0016 7B68     		ldr	r3, [r7, #4]
 988 0018 5A1C     		adds	r2, r3, #1
 989 001a 7A60     		str	r2, [r7, #4]
 990 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 991 001e FB7B     		ldrb	r3, [r7, #15]
 992 0020 5340     		eors	r3, r3, r2
 993 0022 DBB2     		uxtb	r3, r3
 994 0024 BB60     		str	r3, [r7, #8]
 188:App/STM32F4-Discovery/modbus_mk.c ****          crc_hi = crc_lo ^ table_crc_hi[i];
 995              		.loc 1 188 0
 996 0026 0F4A     		ldr	r2, .L21
 997 0028 BB68     		ldr	r3, [r7, #8]
 998 002a 1344     		add	r3, r3, r2
 999 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1000 002e BB7B     		ldrb	r3, [r7, #14]
 1001 0030 5340     		eors	r3, r3, r2
 1002 0032 FB73     		strb	r3, [r7, #15]
 189:App/STM32F4-Discovery/modbus_mk.c ****          crc_lo = table_crc_lo[i];
 1003              		.loc 1 189 0
 1004 0034 0C4A     		ldr	r2, .L21+4
 1005 0036 BB68     		ldr	r3, [r7, #8]
 1006 0038 1344     		add	r3, r3, r2
 1007 003a 1B78     		ldrb	r3, [r3]
 1008 003c BB73     		strb	r3, [r7, #14]
 1009              	.L18:
 186:App/STM32F4-Discovery/modbus_mk.c ****      while (buffer_length--) {
 1010              		.loc 1 186 0 discriminator 1
 1011 003e 7B88     		ldrh	r3, [r7, #2]
 1012 0040 5A1E     		subs	r2, r3, #1
 1013 0042 7A80     		strh	r2, [r7, #2]	@ movhi
 1014 0044 002B     		cmp	r3, #0
 1015 0046 E6D1     		bne	.L19
 190:App/STM32F4-Discovery/modbus_mk.c ****      }
 191:App/STM32F4-Discovery/modbus_mk.c ****  
 192:App/STM32F4-Discovery/modbus_mk.c ****      return (crc_hi << 8 | crc_lo);
 1016              		.loc 1 192 0
 1017 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1018 004a 1B02     		lsls	r3, r3, #8
 1019 004c 9AB2     		uxth	r2, r3
 1020 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1021 0050 9BB2     		uxth	r3, r3
 1022 0052 1343     		orrs	r3, r3, r2
 1023 0054 9BB2     		uxth	r3, r3
 1024 0056 9BB2     		uxth	r3, r3
 193:App/STM32F4-Discovery/modbus_mk.c **** }
 1025              		.loc 1 193 0
 1026 0058 1846     		mov	r0, r3
 1027 005a 1437     		adds	r7, r7, #20
 1028 005c BD46     		mov	sp, r7
 1029              		@ sp needed
 1030 005e 5DF8047B 		ldr	r7, [sp], #4
 1031 0062 7047     		bx	lr
 1032              	.L22:
 1033              		.align	2
 1034              	.L21:
 1035 0064 00000000 		.word	table_crc_hi
 1036 0068 00000000 		.word	table_crc_lo
 1037              		.cfi_endproc
 1038              	.LFE113:
 1040              		.section	.text.modbus_confirmation,"ax",%progbits
 1041              		.align	2
 1042              		.global	modbus_confirmation
 1043              		.thumb
 1044              		.thumb_func
 1046              	modbus_confirmation:
 1047              	.LFB114:
 194:App/STM32F4-Discovery/modbus_mk.c **** 
 195:App/STM32F4-Discovery/modbus_mk.c **** /* modbus_confirmation */ 
 196:App/STM32F4-Discovery/modbus_mk.c **** 
 197:App/STM32F4-Discovery/modbus_mk.c **** int modbus_confirmation ( uint8_t * req, uint8_t * rsp, uint16_t write_len, uint16_t read_len)
 198:App/STM32F4-Discovery/modbus_mk.c **** {
 1048              		.loc 1 198 0
 1049              		.cfi_startproc
 1050              		@ args = 0, pretend = 0, frame = 24
 1051              		@ frame_needed = 1, uses_anonymous_args = 0
 1052 0000 80B5     		push	{r7, lr}
 1053              	.LCFI12:
 1054              		.cfi_def_cfa_offset 8
 1055              		.cfi_offset 7, -8
 1056              		.cfi_offset 14, -4
 1057 0002 86B0     		sub	sp, sp, #24
 1058              	.LCFI13:
 1059              		.cfi_def_cfa_offset 32
 1060 0004 00AF     		add	r7, sp, #0
 1061              	.LCFI14:
 1062              		.cfi_def_cfa_register 7
 1063 0006 F860     		str	r0, [r7, #12]
 1064 0008 B960     		str	r1, [r7, #8]
 1065 000a FA80     		strh	r2, [r7, #6]	@ movhi
 1066 000c BB80     		strh	r3, [r7, #4]	@ movhi
 199:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(rsp, read_len - 2 );
 1067              		.loc 1 199 0
 1068 000e BB88     		ldrh	r3, [r7, #4]	@ movhi
 1069 0010 023B     		subs	r3, r3, #2
 1070 0012 9BB2     		uxth	r3, r3
 1071 0014 B868     		ldr	r0, [r7, #8]
 1072 0016 1946     		mov	r1, r3
 1073 0018 FFF7FEFF 		bl	crc16
 1074 001c 0346     		mov	r3, r0
 1075 001e FB82     		strh	r3, [r7, #22]	@ movhi
 200:App/STM32F4-Discovery/modbus_mk.c **** 
 201:App/STM32F4-Discovery/modbus_mk.c **** 	if (	rsp[read_len -1 ] == ( crc & 0x00ff ) && 
 1076              		.loc 1 201 0
 1077 0020 BB88     		ldrh	r3, [r7, #4]
 1078 0022 013B     		subs	r3, r3, #1
 1079 0024 BA68     		ldr	r2, [r7, #8]
 1080 0026 1344     		add	r3, r3, r2
 1081 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1082 002a 1A46     		mov	r2, r3
 1083 002c FB8A     		ldrh	r3, [r7, #22]
 1084 002e DBB2     		uxtb	r3, r3
 1085 0030 9A42     		cmp	r2, r3
 1086 0032 0CD1     		bne	.L24
 202:App/STM32F4-Discovery/modbus_mk.c **** 		rsp[read_len - 2 ] == ( crc >> 8 ) ) return 1; 
 1087              		.loc 1 202 0 discriminator 1
 1088 0034 BB88     		ldrh	r3, [r7, #4]
 1089 0036 023B     		subs	r3, r3, #2
 1090 0038 BA68     		ldr	r2, [r7, #8]
 1091 003a 1344     		add	r3, r3, r2
 1092 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1093 003e 1A46     		mov	r2, r3
 1094 0040 FB8A     		ldrh	r3, [r7, #22]
 1095 0042 1B0A     		lsrs	r3, r3, #8
 1096 0044 9BB2     		uxth	r3, r3
 201:App/STM32F4-Discovery/modbus_mk.c **** 	if (	rsp[read_len -1 ] == ( crc & 0x00ff ) && 
 1097              		.loc 1 201 0 discriminator 1
 1098 0046 9A42     		cmp	r2, r3
 1099 0048 01D1     		bne	.L24
 1100              		.loc 1 202 0
 1101 004a 0123     		movs	r3, #1
 1102 004c 00E0     		b	.L25
 1103              	.L24:
 203:App/STM32F4-Discovery/modbus_mk.c **** 	return 0; 
 1104              		.loc 1 203 0
 1105 004e 0023     		movs	r3, #0
 1106              	.L25:
 204:App/STM32F4-Discovery/modbus_mk.c **** 	
 205:App/STM32F4-Discovery/modbus_mk.c **** }
 1107              		.loc 1 205 0
 1108 0050 1846     		mov	r0, r3
 1109 0052 1837     		adds	r7, r7, #24
 1110 0054 BD46     		mov	sp, r7
 1111              		@ sp needed
 1112 0056 80BD     		pop	{r7, pc}
 1113              		.cfi_endproc
 1114              	.LFE114:
 1116              		.section	.rodata
 1117 0071 000000   		.align	2
 1118              	.LC4:
 1119 0074 5B25785D 		.ascii	"[%x]\000"
 1119      00
 1120 0079 000000   		.align	2
 1121              	.LC5:
 1122 007c 0A00     		.ascii	"\012\000"
 1123              		.section	.text.write_read_modbus,"ax",%progbits
 1124              		.align	2
 1125              		.global	write_read_modbus
 1126              		.thumb
 1127              		.thumb_func
 1129              	write_read_modbus:
 1130              	.LFB115:
 206:App/STM32F4-Discovery/modbus_mk.c **** 
 207:App/STM32F4-Discovery/modbus_mk.c **** /* write to modbus */
 208:App/STM32F4-Discovery/modbus_mk.c **** void write_read_modbus( uint8_t * req, uint8_t * rsp, int write_len, int read_len )
 209:App/STM32F4-Discovery/modbus_mk.c **** {
 1131              		.loc 1 209 0
 1132              		.cfi_startproc
 1133              		@ args = 0, pretend = 0, frame = 24
 1134              		@ frame_needed = 1, uses_anonymous_args = 0
 1135 0000 80B5     		push	{r7, lr}
 1136              	.LCFI15:
 1137              		.cfi_def_cfa_offset 8
 1138              		.cfi_offset 7, -8
 1139              		.cfi_offset 14, -4
 1140 0002 86B0     		sub	sp, sp, #24
 1141              	.LCFI16:
 1142              		.cfi_def_cfa_offset 32
 1143 0004 00AF     		add	r7, sp, #0
 1144              	.LCFI17:
 1145              		.cfi_def_cfa_register 7
 1146 0006 F860     		str	r0, [r7, #12]
 1147 0008 B960     		str	r1, [r7, #8]
 1148 000a 7A60     		str	r2, [r7, #4]
 1149 000c 3B60     		str	r3, [r7]
 210:App/STM32F4-Discovery/modbus_mk.c **** 	int i; 
 211:App/STM32F4-Discovery/modbus_mk.c **** 	rx_length = read_len + write_len - 1 ; 
 1150              		.loc 1 211 0
 1151 000e 3A68     		ldr	r2, [r7]
 1152 0010 7B68     		ldr	r3, [r7, #4]
 1153 0012 1344     		add	r3, r3, r2
 1154 0014 5A1E     		subs	r2, r3, #1
 1155 0016 2A4B     		ldr	r3, .L33
 1156 0018 1A60     		str	r2, [r3]
 212:App/STM32F4-Discovery/modbus_mk.c **** 
 213:App/STM32F4-Discovery/modbus_mk.c **** 	// driver disable 
 214:App/STM32F4-Discovery/modbus_mk.c **** 	DD();
 1157              		.loc 1 214 0
 1158 001a 2A4B     		ldr	r3, .L33+4
 1159 001c 294A     		ldr	r2, .L33+4
 1160 001e 128B     		ldrh	r2, [r2, #24]	@ movhi
 1161 0020 92B2     		uxth	r2, r2
 1162 0022 42F48072 		orr	r2, r2, #256
 1163 0026 92B2     		uxth	r2, r2
 1164 0028 1A83     		strh	r2, [r3, #24]	@ movhi
 215:App/STM32F4-Discovery/modbus_mk.c **** 	for (i=0; i < 4000; i++) ;
 1165              		.loc 1 215 0
 1166 002a 0023     		movs	r3, #0
 1167 002c 7B61     		str	r3, [r7, #20]
 1168 002e 02E0     		b	.L27
 1169              	.L28:
 1170              		.loc 1 215 0 is_stmt 0 discriminator 2
 1171 0030 7B69     		ldr	r3, [r7, #20]
 1172 0032 0133     		adds	r3, r3, #1
 1173 0034 7B61     		str	r3, [r7, #20]
 1174              	.L27:
 1175              		.loc 1 215 0 discriminator 1
 1176 0036 7B69     		ldr	r3, [r7, #20]
 1177 0038 B3F57A6F 		cmp	r3, #4000
 1178 003c F8DB     		blt	.L28
 216:App/STM32F4-Discovery/modbus_mk.c **** 	USART_puts(req,write_len);
 1179              		.loc 1 216 0 is_stmt 1
 1180 003e F868     		ldr	r0, [r7, #12]
 1181 0040 7968     		ldr	r1, [r7, #4]
 1182 0042 FFF7FEFF 		bl	USART_puts
 217:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < 4000; i++);
 1183              		.loc 1 217 0
 1184 0046 0023     		movs	r3, #0
 1185 0048 7B61     		str	r3, [r7, #20]
 1186 004a 02E0     		b	.L29
 1187              	.L30:
 1188              		.loc 1 217 0 is_stmt 0 discriminator 2
 1189 004c 7B69     		ldr	r3, [r7, #20]
 1190 004e 0133     		adds	r3, r3, #1
 1191 0050 7B61     		str	r3, [r7, #20]
 1192              	.L29:
 1193              		.loc 1 217 0 discriminator 1
 1194 0052 7B69     		ldr	r3, [r7, #20]
 1195 0054 B3F57A6F 		cmp	r3, #4000
 1196 0058 F8DB     		blt	.L30
 218:App/STM32F4-Discovery/modbus_mk.c **** 	// driver enable 
 219:App/STM32F4-Discovery/modbus_mk.c **** 	DE();
 1197              		.loc 1 219 0 is_stmt 1
 1198 005a 1A4B     		ldr	r3, .L33+4
 1199 005c 194A     		ldr	r2, .L33+4
 1200 005e 528B     		ldrh	r2, [r2, #26]	@ movhi
 1201 0060 92B2     		uxth	r2, r2
 1202 0062 42F48072 		orr	r2, r2, #256
 1203 0066 92B2     		uxth	r2, r2
 1204 0068 5A83     		strh	r2, [r3, #26]	@ movhi
 220:App/STM32F4-Discovery/modbus_mk.c **** 	
 221:App/STM32F4-Discovery/modbus_mk.c **** 	xSemaphoreTake(xSmphrUSART, 500/portTICK_RATE_MS);
 1205              		.loc 1 221 0
 1206 006a 174B     		ldr	r3, .L33+8
 1207 006c 1B68     		ldr	r3, [r3]
 1208 006e 1846     		mov	r0, r3
 1209 0070 0021     		movs	r1, #0
 1210 0072 4FF4FA72 		mov	r2, #500
 1211 0076 0023     		movs	r3, #0
 1212 0078 FFF7FEFF 		bl	xQueueGenericReceive
 222:App/STM32F4-Discovery/modbus_mk.c **** 	
 223:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < read_len; i++) 
 1213              		.loc 1 223 0
 1214 007c 0023     		movs	r3, #0
 1215 007e 7B61     		str	r3, [r7, #20]
 1216 0080 14E0     		b	.L31
 1217              	.L32:
 224:App/STM32F4-Discovery/modbus_mk.c **** 	{
 225:App/STM32F4-Discovery/modbus_mk.c **** 
 226:App/STM32F4-Discovery/modbus_mk.c **** 		rsp[i] = received_string[i+write_len]; 
 1218              		.loc 1 226 0 discriminator 2
 1219 0082 7B69     		ldr	r3, [r7, #20]
 1220 0084 BA68     		ldr	r2, [r7, #8]
 1221 0086 1344     		add	r3, r3, r2
 1222 0088 7969     		ldr	r1, [r7, #20]
 1223 008a 7A68     		ldr	r2, [r7, #4]
 1224 008c 0A44     		add	r2, r2, r1
 1225 008e 0F49     		ldr	r1, .L33+12
 1226 0090 8A5C     		ldrb	r2, [r1, r2]
 1227 0092 D2B2     		uxtb	r2, r2
 1228 0094 1A70     		strb	r2, [r3]
 227:App/STM32F4-Discovery/modbus_mk.c **** #ifdef DEBUG
 228:App/STM32F4-Discovery/modbus_mk.c **** 		t_printf("[%x]", rsp[i]);
 1229              		.loc 1 228 0 discriminator 2
 1230 0096 7B69     		ldr	r3, [r7, #20]
 1231 0098 BA68     		ldr	r2, [r7, #8]
 1232 009a 1344     		add	r3, r3, r2
 1233 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1234 009e 0C48     		ldr	r0, .L33+16
 1235 00a0 1946     		mov	r1, r3
 1236 00a2 FFF7FEFF 		bl	t_printf
 223:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < read_len; i++) 
 1237              		.loc 1 223 0 discriminator 2
 1238 00a6 7B69     		ldr	r3, [r7, #20]
 1239 00a8 0133     		adds	r3, r3, #1
 1240 00aa 7B61     		str	r3, [r7, #20]
 1241              	.L31:
 223:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < read_len; i++) 
 1242              		.loc 1 223 0 is_stmt 0 discriminator 1
 1243 00ac 7A69     		ldr	r2, [r7, #20]
 1244 00ae 3B68     		ldr	r3, [r7]
 1245 00b0 9A42     		cmp	r2, r3
 1246 00b2 E6DB     		blt	.L32
 229:App/STM32F4-Discovery/modbus_mk.c **** #endif	
 230:App/STM32F4-Discovery/modbus_mk.c **** 	}
 231:App/STM32F4-Discovery/modbus_mk.c **** 
 232:App/STM32F4-Discovery/modbus_mk.c **** #ifdef DEBUG
 233:App/STM32F4-Discovery/modbus_mk.c **** 		t_printf("\n");
 1247              		.loc 1 233 0 is_stmt 1
 1248 00b4 0748     		ldr	r0, .L33+20
 1249 00b6 FFF7FEFF 		bl	t_printf
 234:App/STM32F4-Discovery/modbus_mk.c **** #endif		
 235:App/STM32F4-Discovery/modbus_mk.c **** 
 236:App/STM32F4-Discovery/modbus_mk.c **** }
 1250              		.loc 1 236 0
 1251 00ba 1837     		adds	r7, r7, #24
 1252 00bc BD46     		mov	sp, r7
 1253              		@ sp needed
 1254 00be 80BD     		pop	{r7, pc}
 1255              	.L34:
 1256              		.align	2
 1257              	.L33:
 1258 00c0 00000000 		.word	rx_length
 1259 00c4 00180240 		.word	1073879040
 1260 00c8 00000000 		.word	xSmphrUSART
 1261 00cc 00000000 		.word	received_string
 1262 00d0 74000000 		.word	.LC4
 1263 00d4 7C000000 		.word	.LC5
 1264              		.cfi_endproc
 1265              	.LFE115:
 1267              		.section	.text.modbus_RIB,"ax",%progbits
 1268              		.align	2
 1269              		.global	modbus_RIB
 1270              		.thumb
 1271              		.thumb_func
 1273              	modbus_RIB:
 1274              	.LFB116:
 237:App/STM32F4-Discovery/modbus_mk.c **** 
 238:App/STM32F4-Discovery/modbus_mk.c **** 
 239:App/STM32F4-Discovery/modbus_mk.c **** /* modbus read input bits */
 240:App/STM32F4-Discovery/modbus_mk.c **** uint8_t modbus_RIB( int16_t address, int nb, uint8_t *dst )
 241:App/STM32F4-Discovery/modbus_mk.c **** {
 1275              		.loc 1 241 0
 1276              		.cfi_startproc
 1277              		@ args = 0, pretend = 0, frame = 536
 1278              		@ frame_needed = 1, uses_anonymous_args = 0
 1279 0000 80B5     		push	{r7, lr}
 1280              	.LCFI18:
 1281              		.cfi_def_cfa_offset 8
 1282              		.cfi_offset 7, -8
 1283              		.cfi_offset 14, -4
 1284 0002 ADF5067D 		sub	sp, sp, #536
 1285              	.LCFI19:
 1286              		.cfi_def_cfa_offset 544
 1287 0006 00AF     		add	r7, sp, #0
 1288              	.LCFI20:
 1289              		.cfi_def_cfa_register 7
 1290 0008 07F10803 		add	r3, r7, #8
 1291 000c 1960     		str	r1, [r3]
 1292 000e 3B1D     		adds	r3, r7, #4
 1293 0010 1A60     		str	r2, [r3]
 1294 0012 07F10E03 		add	r3, r7, #14
 1295 0016 0246     		mov	r2, r0	@ movhi
 1296 0018 1A80     		strh	r2, [r3]	@ movhi
 242:App/STM32F4-Discovery/modbus_mk.c **** 	/* first send request */
 243:App/STM32F4-Discovery/modbus_mk.c **** 
 244:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t req[REQ_MAX_LEN];
 245:App/STM32F4-Discovery/modbus_mk.c **** 	int req_length; 
 246:App/STM32F4-Discovery/modbus_mk.c **** 	
 247:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 1297              		.loc 1 247 0
 1298 001a 07F11003 		add	r3, r7, #16
 1299 001e 3622     		movs	r2, #54
 1300 0020 1A70     		strb	r2, [r3]
 248:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0x2;
 1301              		.loc 1 248 0
 1302 0022 07F11003 		add	r3, r7, #16
 1303 0026 0222     		movs	r2, #2
 1304 0028 5A70     		strb	r2, [r3, #1]
 249:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 1305              		.loc 1 249 0
 1306 002a 07F10E03 		add	r3, r7, #14
 1307 002e B3F90030 		ldrsh	r3, [r3]
 1308 0032 1B12     		asrs	r3, r3, #8
 1309 0034 9BB2     		uxth	r3, r3
 1310 0036 DAB2     		uxtb	r2, r3
 1311 0038 07F11003 		add	r3, r7, #16
 1312 003c 9A70     		strb	r2, [r3, #2]
 250:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 1313              		.loc 1 250 0
 1314 003e 07F10E03 		add	r3, r7, #14
 1315 0042 1B88     		ldrh	r3, [r3]	@ movhi
 1316 0044 DAB2     		uxtb	r2, r3
 1317 0046 07F11003 		add	r3, r7, #16
 1318 004a DA70     		strb	r2, [r3, #3]
 251:App/STM32F4-Discovery/modbus_mk.c **** 	req[4] = nb >> 8;
 1319              		.loc 1 251 0
 1320 004c 07F10803 		add	r3, r7, #8
 1321 0050 1B68     		ldr	r3, [r3]
 1322 0052 1B12     		asrs	r3, r3, #8
 1323 0054 DAB2     		uxtb	r2, r3
 1324 0056 07F11003 		add	r3, r7, #16
 1325 005a 1A71     		strb	r2, [r3, #4]
 252:App/STM32F4-Discovery/modbus_mk.c **** 	req[5] = nb & 0x00ff; 
 1326              		.loc 1 252 0
 1327 005c 07F10803 		add	r3, r7, #8
 1328 0060 1B68     		ldr	r3, [r3]
 1329 0062 DAB2     		uxtb	r2, r3
 1330 0064 07F11003 		add	r3, r7, #16
 1331 0068 5A71     		strb	r2, [r3, #5]
 253:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 6;
 1332              		.loc 1 253 0
 1333 006a 0623     		movs	r3, #6
 1334 006c C7F81432 		str	r3, [r7, #532]
 254:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 1335              		.loc 1 254 0
 1336 0070 D7F81432 		ldr	r3, [r7, #532]
 1337 0074 9BB2     		uxth	r3, r3
 1338 0076 07F11002 		add	r2, r7, #16
 1339 007a 1046     		mov	r0, r2
 1340 007c 1946     		mov	r1, r3
 1341 007e FFF7FEFF 		bl	crc16
 1342 0082 0346     		mov	r3, r0
 1343 0084 A7F81232 		strh	r3, [r7, #530]	@ movhi
 255:App/STM32F4-Discovery/modbus_mk.c **** 
 256:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 1344              		.loc 1 256 0
 1345 0088 D7F81432 		ldr	r3, [r7, #532]
 1346 008c 5A1C     		adds	r2, r3, #1
 1347 008e C7F81422 		str	r2, [r7, #532]
 1348 0092 B7F81222 		ldrh	r2, [r7, #530]
 1349 0096 120A     		lsrs	r2, r2, #8
 1350 0098 92B2     		uxth	r2, r2
 1351 009a D1B2     		uxtb	r1, r2
 1352 009c 07F11002 		add	r2, r7, #16
 1353 00a0 D154     		strb	r1, [r2, r3]
 257:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff; 
 1354              		.loc 1 257 0
 1355 00a2 D7F81432 		ldr	r3, [r7, #532]
 1356 00a6 5A1C     		adds	r2, r3, #1
 1357 00a8 C7F81422 		str	r2, [r7, #532]
 1358 00ac B7F81222 		ldrh	r2, [r7, #530]	@ movhi
 1359 00b0 D1B2     		uxtb	r1, r2
 1360 00b2 07F11002 		add	r2, r7, #16
 1361 00b6 D154     		strb	r1, [r2, r3]
 258:App/STM32F4-Discovery/modbus_mk.c **** 	
 259:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req, dst, req_length, 6);
 1362              		.loc 1 259 0
 1363 00b8 07F11002 		add	r2, r7, #16
 1364 00bc 3B1D     		adds	r3, r7, #4
 1365 00be 1046     		mov	r0, r2
 1366 00c0 1968     		ldr	r1, [r3]
 1367 00c2 D7F81422 		ldr	r2, [r7, #532]
 1368 00c6 0623     		movs	r3, #6
 1369 00c8 FFF7FEFF 		bl	write_read_modbus
 260:App/STM32F4-Discovery/modbus_mk.c **** 	return modbus_confirmation (req, dst, req_length, 6);
 1370              		.loc 1 260 0
 1371 00cc D7F81432 		ldr	r3, [r7, #532]
 1372 00d0 9BB2     		uxth	r3, r3
 1373 00d2 07F11001 		add	r1, r7, #16
 1374 00d6 3A1D     		adds	r2, r7, #4
 1375 00d8 0846     		mov	r0, r1
 1376 00da 1168     		ldr	r1, [r2]
 1377 00dc 1A46     		mov	r2, r3
 1378 00de 0623     		movs	r3, #6
 1379 00e0 FFF7FEFF 		bl	modbus_confirmation
 1380 00e4 0346     		mov	r3, r0
 1381 00e6 DBB2     		uxtb	r3, r3
 261:App/STM32F4-Discovery/modbus_mk.c **** 
 262:App/STM32F4-Discovery/modbus_mk.c **** }
 1382              		.loc 1 262 0
 1383 00e8 1846     		mov	r0, r3
 1384 00ea 07F50677 		add	r7, r7, #536
 1385 00ee BD46     		mov	sp, r7
 1386              		@ sp needed
 1387 00f0 80BD     		pop	{r7, pc}
 1388              		.cfi_endproc
 1389              	.LFE116:
 1391 00f2 00BF     		.section	.text.modbus_WIB,"ax",%progbits
 1392              		.align	2
 1393              		.global	modbus_WIB
 1394              		.thumb
 1395              		.thumb_func
 1397              	modbus_WIB:
 1398              	.LFB117:
 263:App/STM32F4-Discovery/modbus_mk.c **** 
 264:App/STM32F4-Discovery/modbus_mk.c **** 
 265:App/STM32F4-Discovery/modbus_mk.c **** /* modbus write input bits */
 266:App/STM32F4-Discovery/modbus_mk.c **** uint8_t modbus_WIB( uint16_t address, int nb, uint8_t *src )
 267:App/STM32F4-Discovery/modbus_mk.c **** {
 1399              		.loc 1 267 0
 1400              		.cfi_startproc
 1401              		@ args = 0, pretend = 0, frame = 1072
 1402              		@ frame_needed = 1, uses_anonymous_args = 0
 1403 0000 80B5     		push	{r7, lr}
 1404              	.LCFI21:
 1405              		.cfi_def_cfa_offset 8
 1406              		.cfi_offset 7, -8
 1407              		.cfi_offset 14, -4
 1408 0002 ADF5866D 		sub	sp, sp, #1072
 1409              	.LCFI22:
 1410              		.cfi_def_cfa_offset 1080
 1411 0006 00AF     		add	r7, sp, #0
 1412              	.LCFI23:
 1413              		.cfi_def_cfa_register 7
 1414 0008 07F10803 		add	r3, r7, #8
 1415 000c 1960     		str	r1, [r3]
 1416 000e 3B1D     		adds	r3, r7, #4
 1417 0010 1A60     		str	r2, [r3]
 1418 0012 07F10E03 		add	r3, r7, #14
 1419 0016 0246     		mov	r2, r0	@ movhi
 1420 0018 1A80     		strh	r2, [r3]	@ movhi
 268:App/STM32F4-Discovery/modbus_mk.c **** 	/* first send request */
 269:App/STM32F4-Discovery/modbus_mk.c **** 
 270:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t req[REQ_MAX_LEN];
 271:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t rsp[REQ_MAX_LEN];
 272:App/STM32F4-Discovery/modbus_mk.c **** 	int byte_count; 
 273:App/STM32F4-Discovery/modbus_mk.c **** 	int req_length; 
 274:App/STM32F4-Discovery/modbus_mk.c **** 	int bit_check = 0; 
 1421              		.loc 1 274 0
 1422 001a 0023     		movs	r3, #0
 1423 001c C7F82834 		str	r3, [r7, #1064]
 275:App/STM32F4-Discovery/modbus_mk.c **** 	int pos = 0; 
 1424              		.loc 1 275 0
 1425 0020 0023     		movs	r3, #0
 1426 0022 C7F82434 		str	r3, [r7, #1060]
 276:App/STM32F4-Discovery/modbus_mk.c **** 	
 277:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 1427              		.loc 1 277 0
 1428 0026 07F50573 		add	r3, r7, #532
 1429 002a 3622     		movs	r2, #54
 1430 002c 1A70     		strb	r2, [r3]
 278:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0xF;
 1431              		.loc 1 278 0
 1432 002e 07F50573 		add	r3, r7, #532
 1433 0032 0F22     		movs	r2, #15
 1434 0034 5A70     		strb	r2, [r3, #1]
 279:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 1435              		.loc 1 279 0
 1436 0036 07F10E03 		add	r3, r7, #14
 1437 003a 1B88     		ldrh	r3, [r3]
 1438 003c 1B0A     		lsrs	r3, r3, #8
 1439 003e 9BB2     		uxth	r3, r3
 1440 0040 DAB2     		uxtb	r2, r3
 1441 0042 07F50573 		add	r3, r7, #532
 1442 0046 9A70     		strb	r2, [r3, #2]
 280:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 1443              		.loc 1 280 0
 1444 0048 07F10E03 		add	r3, r7, #14
 1445 004c 1B88     		ldrh	r3, [r3]	@ movhi
 1446 004e DAB2     		uxtb	r2, r3
 1447 0050 07F50573 		add	r3, r7, #532
 1448 0054 DA70     		strb	r2, [r3, #3]
 281:App/STM32F4-Discovery/modbus_mk.c **** 	req[4] = nb >> 8;
 1449              		.loc 1 281 0
 1450 0056 07F10803 		add	r3, r7, #8
 1451 005a 1B68     		ldr	r3, [r3]
 1452 005c 1B12     		asrs	r3, r3, #8
 1453 005e DAB2     		uxtb	r2, r3
 1454 0060 07F50573 		add	r3, r7, #532
 1455 0064 1A71     		strb	r2, [r3, #4]
 282:App/STM32F4-Discovery/modbus_mk.c **** 	req[5] = nb & 0x00ff; 
 1456              		.loc 1 282 0
 1457 0066 07F10803 		add	r3, r7, #8
 1458 006a 1B68     		ldr	r3, [r3]
 1459 006c DAB2     		uxtb	r2, r3
 1460 006e 07F50573 		add	r3, r7, #532
 1461 0072 5A71     		strb	r2, [r3, #5]
 283:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 6; 
 1462              		.loc 1 283 0
 1463 0074 0623     		movs	r3, #6
 1464 0076 C7F82C34 		str	r3, [r7, #1068]
 284:App/STM32F4-Discovery/modbus_mk.c **** 	
 285:App/STM32F4-Discovery/modbus_mk.c ****     	byte_count = (nb / 8) + ((nb % 8) ? 1 : 0);
 1465              		.loc 1 285 0
 1466 007a 07F10803 		add	r3, r7, #8
 1467 007e 1B68     		ldr	r3, [r3]
 1468 0080 002B     		cmp	r3, #0
 1469 0082 00DA     		bge	.L38
 1470 0084 0733     		adds	r3, r3, #7
 1471              	.L38:
 1472 0086 DB10     		asrs	r3, r3, #3
 1473 0088 1A46     		mov	r2, r3
 1474 008a 07F10803 		add	r3, r7, #8
 1475 008e 1B68     		ldr	r3, [r3]
 1476 0090 03F00703 		and	r3, r3, #7
 1477 0094 002B     		cmp	r3, #0
 1478 0096 0CBF     		ite	eq
 1479 0098 0023     		moveq	r3, #0
 1480 009a 0123     		movne	r3, #1
 1481 009c DBB2     		uxtb	r3, r3
 1482 009e 1344     		add	r3, r3, r2
 1483 00a0 C7F81834 		str	r3, [r7, #1048]
 286:App/STM32F4-Discovery/modbus_mk.c ****   	req[req_length++] = byte_count;
 1484              		.loc 1 286 0
 1485 00a4 D7F82C34 		ldr	r3, [r7, #1068]
 1486 00a8 5A1C     		adds	r2, r3, #1
 1487 00aa C7F82C24 		str	r2, [r7, #1068]
 1488 00ae D7F81824 		ldr	r2, [r7, #1048]
 1489 00b2 D1B2     		uxtb	r1, r2
 1490 00b4 07F50572 		add	r2, r7, #532
 1491 00b8 D154     		strb	r1, [r2, r3]
 287:App/STM32F4-Discovery/modbus_mk.c **** 
 288:App/STM32F4-Discovery/modbus_mk.c **** 	int i; 
 289:App/STM32F4-Discovery/modbus_mk.c ****     	for (i = 0; i < byte_count; i++) {
 1492              		.loc 1 289 0
 1493 00ba 0023     		movs	r3, #0
 1494 00bc C7F82034 		str	r3, [r7, #1056]
 1495 00c0 5CE0     		b	.L39
 1496              	.L45:
 1497              	.LBB3:
 290:App/STM32F4-Discovery/modbus_mk.c ****         
 291:App/STM32F4-Discovery/modbus_mk.c **** 		int bit;
 292:App/STM32F4-Discovery/modbus_mk.c **** 		bit = 0x01;
 1498              		.loc 1 292 0
 1499 00c2 0123     		movs	r3, #1
 1500 00c4 C7F81C34 		str	r3, [r7, #1052]
 293:App/STM32F4-Discovery/modbus_mk.c ****         	req[req_length] = 0;
 1501              		.loc 1 293 0
 1502 00c8 07F50572 		add	r2, r7, #532
 1503 00cc D7F82C34 		ldr	r3, [r7, #1068]
 1504 00d0 1344     		add	r3, r3, r2
 1505 00d2 0022     		movs	r2, #0
 1506 00d4 1A70     		strb	r2, [r3]
 294:App/STM32F4-Discovery/modbus_mk.c **** 
 295:App/STM32F4-Discovery/modbus_mk.c ****         	while ((bit & 0xFF) && (bit_check++ < nb)) {
 1507              		.loc 1 295 0
 1508 00d6 38E0     		b	.L40
 1509              	.L44:
 296:App/STM32F4-Discovery/modbus_mk.c ****             		if (src[pos++])
 1510              		.loc 1 296 0
 1511 00d8 D7F82434 		ldr	r3, [r7, #1060]
 1512 00dc 5A1C     		adds	r2, r3, #1
 1513 00de C7F82424 		str	r2, [r7, #1060]
 1514 00e2 3A1D     		adds	r2, r7, #4
 1515 00e4 1268     		ldr	r2, [r2]
 1516 00e6 1344     		add	r3, r3, r2
 1517 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1518 00ea 002B     		cmp	r3, #0
 1519 00ec 13D0     		beq	.L41
 297:App/STM32F4-Discovery/modbus_mk.c ****                 		req[req_length] |= bit;
 1520              		.loc 1 297 0
 1521 00ee 07F50572 		add	r2, r7, #532
 1522 00f2 D7F82C34 		ldr	r3, [r7, #1068]
 1523 00f6 1344     		add	r3, r3, r2
 1524 00f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1525 00fa DAB2     		uxtb	r2, r3
 1526 00fc D7F81C34 		ldr	r3, [r7, #1052]
 1527 0100 DBB2     		uxtb	r3, r3
 1528 0102 1343     		orrs	r3, r3, r2
 1529 0104 DBB2     		uxtb	r3, r3
 1530 0106 DAB2     		uxtb	r2, r3
 1531 0108 07F50571 		add	r1, r7, #532
 1532 010c D7F82C34 		ldr	r3, [r7, #1068]
 1533 0110 0B44     		add	r3, r3, r1
 1534 0112 1A70     		strb	r2, [r3]
 1535 0114 14E0     		b	.L42
 1536              	.L41:
 298:App/STM32F4-Discovery/modbus_mk.c ****             		else
 299:App/STM32F4-Discovery/modbus_mk.c ****                 		req[req_length] &=~ bit;
 1537              		.loc 1 299 0
 1538 0116 07F50572 		add	r2, r7, #532
 1539 011a D7F82C34 		ldr	r3, [r7, #1068]
 1540 011e 1344     		add	r3, r3, r2
 1541 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1542 0122 DAB2     		uxtb	r2, r3
 1543 0124 D7F81C34 		ldr	r3, [r7, #1052]
 1544 0128 DBB2     		uxtb	r3, r3
 1545 012a DB43     		mvns	r3, r3
 1546 012c DBB2     		uxtb	r3, r3
 1547 012e 1340     		ands	r3, r3, r2
 1548 0130 DBB2     		uxtb	r3, r3
 1549 0132 DAB2     		uxtb	r2, r3
 1550 0134 07F50571 		add	r1, r7, #532
 1551 0138 D7F82C34 		ldr	r3, [r7, #1068]
 1552 013c 0B44     		add	r3, r3, r1
 1553 013e 1A70     		strb	r2, [r3]
 1554              	.L42:
 300:App/STM32F4-Discovery/modbus_mk.c **** 
 301:App/STM32F4-Discovery/modbus_mk.c ****             		bit = bit << 1;
 1555              		.loc 1 301 0
 1556 0140 D7F81C34 		ldr	r3, [r7, #1052]
 1557 0144 5B00     		lsls	r3, r3, #1
 1558 0146 C7F81C34 		str	r3, [r7, #1052]
 1559              	.L40:
 295:App/STM32F4-Discovery/modbus_mk.c ****         	while ((bit & 0xFF) && (bit_check++ < nb)) {
 1560              		.loc 1 295 0 discriminator 1
 1561 014a D7F81C34 		ldr	r3, [r7, #1052]
 1562 014e DBB2     		uxtb	r3, r3
 1563 0150 002B     		cmp	r3, #0
 1564 0152 09D0     		beq	.L43
 295:App/STM32F4-Discovery/modbus_mk.c ****         	while ((bit & 0xFF) && (bit_check++ < nb)) {
 1565              		.loc 1 295 0 is_stmt 0 discriminator 2
 1566 0154 D7F82834 		ldr	r3, [r7, #1064]
 1567 0158 5A1C     		adds	r2, r3, #1
 1568 015a C7F82824 		str	r2, [r7, #1064]
 1569 015e 07F10802 		add	r2, r7, #8
 1570 0162 1268     		ldr	r2, [r2]
 1571 0164 9342     		cmp	r3, r2
 1572 0166 B7DB     		blt	.L44
 1573              	.L43:
 302:App/STM32F4-Discovery/modbus_mk.c ****         	}	
 303:App/STM32F4-Discovery/modbus_mk.c ****         	
 304:App/STM32F4-Discovery/modbus_mk.c **** 		req_length++;
 1574              		.loc 1 304 0 is_stmt 1
 1575 0168 D7F82C34 		ldr	r3, [r7, #1068]
 1576 016c 0133     		adds	r3, r3, #1
 1577 016e C7F82C34 		str	r3, [r7, #1068]
 1578              	.LBE3:
 289:App/STM32F4-Discovery/modbus_mk.c ****     	for (i = 0; i < byte_count; i++) {
 1579              		.loc 1 289 0
 1580 0172 D7F82034 		ldr	r3, [r7, #1056]
 1581 0176 0133     		adds	r3, r3, #1
 1582 0178 C7F82034 		str	r3, [r7, #1056]
 1583              	.L39:
 289:App/STM32F4-Discovery/modbus_mk.c ****     	for (i = 0; i < byte_count; i++) {
 1584              		.loc 1 289 0 is_stmt 0 discriminator 1
 1585 017c D7F82024 		ldr	r2, [r7, #1056]
 1586 0180 D7F81834 		ldr	r3, [r7, #1048]
 1587 0184 9A42     		cmp	r2, r3
 1588 0186 9CDB     		blt	.L45
 305:App/STM32F4-Discovery/modbus_mk.c **** 	 }
 306:App/STM32F4-Discovery/modbus_mk.c **** 
 307:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 1589              		.loc 1 307 0 is_stmt 1
 1590 0188 D7F82C34 		ldr	r3, [r7, #1068]
 1591 018c 9BB2     		uxth	r3, r3
 1592 018e 07F50572 		add	r2, r7, #532
 1593 0192 1046     		mov	r0, r2
 1594 0194 1946     		mov	r1, r3
 1595 0196 FFF7FEFF 		bl	crc16
 1596 019a 0346     		mov	r3, r0
 1597 019c A7F81634 		strh	r3, [r7, #1046]	@ movhi
 308:App/STM32F4-Discovery/modbus_mk.c **** 
 309:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 1598              		.loc 1 309 0
 1599 01a0 D7F82C34 		ldr	r3, [r7, #1068]
 1600 01a4 5A1C     		adds	r2, r3, #1
 1601 01a6 C7F82C24 		str	r2, [r7, #1068]
 1602 01aa B7F81624 		ldrh	r2, [r7, #1046]
 1603 01ae 120A     		lsrs	r2, r2, #8
 1604 01b0 92B2     		uxth	r2, r2
 1605 01b2 D1B2     		uxtb	r1, r2
 1606 01b4 07F50572 		add	r2, r7, #532
 1607 01b8 D154     		strb	r1, [r2, r3]
 310:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff; 
 1608              		.loc 1 310 0
 1609 01ba D7F82C34 		ldr	r3, [r7, #1068]
 1610 01be 5A1C     		adds	r2, r3, #1
 1611 01c0 C7F82C24 		str	r2, [r7, #1068]
 1612 01c4 B7F81624 		ldrh	r2, [r7, #1046]	@ movhi
 1613 01c8 D1B2     		uxtb	r1, r2
 1614 01ca 07F50572 		add	r2, r7, #532
 1615 01ce D154     		strb	r1, [r2, r3]
 311:App/STM32F4-Discovery/modbus_mk.c **** 	
 312:App/STM32F4-Discovery/modbus_mk.c **** 	/* write request  to modbus line */
 313:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req,rsp, req_length ,8); 
 1616              		.loc 1 313 0
 1617 01d0 07F50572 		add	r2, r7, #532
 1618 01d4 07F11403 		add	r3, r7, #20
 1619 01d8 1046     		mov	r0, r2
 1620 01da 1946     		mov	r1, r3
 1621 01dc D7F82C24 		ldr	r2, [r7, #1068]
 1622 01e0 0823     		movs	r3, #8
 1623 01e2 FFF7FEFF 		bl	write_read_modbus
 314:App/STM32F4-Discovery/modbus_mk.c **** 	return modbus_confirmation (req, rsp,req_length, 8); 
 1624              		.loc 1 314 0
 1625 01e6 D7F82C34 		ldr	r3, [r7, #1068]
 1626 01ea 9BB2     		uxth	r3, r3
 1627 01ec 07F50571 		add	r1, r7, #532
 1628 01f0 07F11402 		add	r2, r7, #20
 1629 01f4 0846     		mov	r0, r1
 1630 01f6 1146     		mov	r1, r2
 1631 01f8 1A46     		mov	r2, r3
 1632 01fa 0823     		movs	r3, #8
 1633 01fc FFF7FEFF 		bl	modbus_confirmation
 1634 0200 0346     		mov	r3, r0
 1635 0202 DBB2     		uxtb	r3, r3
 315:App/STM32F4-Discovery/modbus_mk.c **** 
 316:App/STM32F4-Discovery/modbus_mk.c **** 	
 317:App/STM32F4-Discovery/modbus_mk.c **** }
 1636              		.loc 1 317 0
 1637 0204 1846     		mov	r0, r3
 1638 0206 07F58667 		add	r7, r7, #1072
 1639 020a BD46     		mov	sp, r7
 1640              		@ sp needed
 1641 020c 80BD     		pop	{r7, pc}
 1642              		.cfi_endproc
 1643              	.LFE117:
 1645 020e 00BF     		.section	.text.modbus_WR,"ax",%progbits
 1646              		.align	2
 1647              		.global	modbus_WR
 1648              		.thumb
 1649              		.thumb_func
 1651              	modbus_WR:
 1652              	.LFB118:
 318:App/STM32F4-Discovery/modbus_mk.c **** 
 319:App/STM32F4-Discovery/modbus_mk.c **** /* Write the values from the array to the registers of the remote device */
 320:App/STM32F4-Discovery/modbus_mk.c **** uint8_t modbus_WR( int address, int nb, const uint16_t *src)
 321:App/STM32F4-Discovery/modbus_mk.c **** {
 1653              		.loc 1 321 0
 1654              		.cfi_startproc
 1655              		@ args = 0, pretend = 0, frame = 1056
 1656              		@ frame_needed = 1, uses_anonymous_args = 0
 1657 0000 80B5     		push	{r7, lr}
 1658              	.LCFI24:
 1659              		.cfi_def_cfa_offset 8
 1660              		.cfi_offset 7, -8
 1661              		.cfi_offset 14, -4
 1662 0002 ADF5846D 		sub	sp, sp, #1056
 1663              	.LCFI25:
 1664              		.cfi_def_cfa_offset 1064
 1665 0006 00AF     		add	r7, sp, #0
 1666              	.LCFI26:
 1667              		.cfi_def_cfa_register 7
 1668 0008 07F10C03 		add	r3, r7, #12
 1669 000c 1860     		str	r0, [r3]
 1670 000e 07F10803 		add	r3, r7, #8
 1671 0012 1960     		str	r1, [r3]
 1672 0014 3B1D     		adds	r3, r7, #4
 1673 0016 1A60     		str	r2, [r3]
 322:App/STM32F4-Discovery/modbus_mk.c **** 	int rc;
 323:App/STM32F4-Discovery/modbus_mk.c **** 	int i;
 324:App/STM32F4-Discovery/modbus_mk.c ****     	int req_length;
 325:App/STM32F4-Discovery/modbus_mk.c ****     	int byte_count;
 326:App/STM32F4-Discovery/modbus_mk.c **** 
 327:App/STM32F4-Discovery/modbus_mk.c ****     	uint8_t req[REQ_MAX_LEN];
 328:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t rsp[REQ_MAX_LEN];
 329:App/STM32F4-Discovery/modbus_mk.c **** 
 330:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 1674              		.loc 1 330 0
 1675 0018 07F50473 		add	r3, r7, #528
 1676 001c 3622     		movs	r2, #54
 1677 001e 1A70     		strb	r2, [r3]
 331:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0x10;
 1678              		.loc 1 331 0
 1679 0020 07F50473 		add	r3, r7, #528
 1680 0024 1022     		movs	r2, #16
 1681 0026 5A70     		strb	r2, [r3, #1]
 332:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 1682              		.loc 1 332 0
 1683 0028 07F10C03 		add	r3, r7, #12
 1684 002c 1B68     		ldr	r3, [r3]
 1685 002e 1B12     		asrs	r3, r3, #8
 1686 0030 DAB2     		uxtb	r2, r3
 1687 0032 07F50473 		add	r3, r7, #528
 1688 0036 9A70     		strb	r2, [r3, #2]
 333:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 1689              		.loc 1 333 0
 1690 0038 07F10C03 		add	r3, r7, #12
 1691 003c 1B68     		ldr	r3, [r3]
 1692 003e DAB2     		uxtb	r2, r3
 1693 0040 07F50473 		add	r3, r7, #528
 1694 0044 DA70     		strb	r2, [r3, #3]
 334:App/STM32F4-Discovery/modbus_mk.c **** 	req[4] = nb >> 8;
 1695              		.loc 1 334 0
 1696 0046 07F10803 		add	r3, r7, #8
 1697 004a 1B68     		ldr	r3, [r3]
 1698 004c 1B12     		asrs	r3, r3, #8
 1699 004e DAB2     		uxtb	r2, r3
 1700 0050 07F50473 		add	r3, r7, #528
 1701 0054 1A71     		strb	r2, [r3, #4]
 335:App/STM32F4-Discovery/modbus_mk.c **** 	req[5] = nb & 0x00ff; 
 1702              		.loc 1 335 0
 1703 0056 07F10803 		add	r3, r7, #8
 1704 005a 1B68     		ldr	r3, [r3]
 1705 005c DAB2     		uxtb	r2, r3
 1706 005e 07F50473 		add	r3, r7, #528
 1707 0062 5A71     		strb	r2, [r3, #5]
 336:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 6; 
 1708              		.loc 1 336 0
 1709 0064 0623     		movs	r3, #6
 1710 0066 C7F81834 		str	r3, [r7, #1048]
 337:App/STM32F4-Discovery/modbus_mk.c **** 	
 338:App/STM32F4-Discovery/modbus_mk.c ****    	byte_count = nb * 2;
 1711              		.loc 1 338 0
 1712 006a 07F10803 		add	r3, r7, #8
 1713 006e 1B68     		ldr	r3, [r3]
 1714 0070 5B00     		lsls	r3, r3, #1
 1715 0072 C7F81434 		str	r3, [r7, #1044]
 339:App/STM32F4-Discovery/modbus_mk.c ****     	req[req_length++] = byte_count;
 1716              		.loc 1 339 0
 1717 0076 D7F81834 		ldr	r3, [r7, #1048]
 1718 007a 5A1C     		adds	r2, r3, #1
 1719 007c C7F81824 		str	r2, [r7, #1048]
 1720 0080 D7F81424 		ldr	r2, [r7, #1044]
 1721 0084 D1B2     		uxtb	r1, r2
 1722 0086 07F50472 		add	r2, r7, #528
 1723 008a D154     		strb	r1, [r2, r3]
 340:App/STM32F4-Discovery/modbus_mk.c **** 
 341:App/STM32F4-Discovery/modbus_mk.c ****     for (i = 0; i < nb; i++) {
 1724              		.loc 1 341 0
 1725 008c 0023     		movs	r3, #0
 1726 008e C7F81C34 		str	r3, [r7, #1052]
 1727 0092 26E0     		b	.L48
 1728              	.L49:
 342:App/STM32F4-Discovery/modbus_mk.c **** 		req[req_length++] = src[i] >> 8;
 1729              		.loc 1 342 0 discriminator 2
 1730 0094 D7F81834 		ldr	r3, [r7, #1048]
 1731 0098 5A1C     		adds	r2, r3, #1
 1732 009a C7F81824 		str	r2, [r7, #1048]
 1733 009e D7F81C24 		ldr	r2, [r7, #1052]
 1734 00a2 5200     		lsls	r2, r2, #1
 1735 00a4 391D     		adds	r1, r7, #4
 1736 00a6 0968     		ldr	r1, [r1]
 1737 00a8 0A44     		add	r2, r2, r1
 1738 00aa 1288     		ldrh	r2, [r2]
 1739 00ac 120A     		lsrs	r2, r2, #8
 1740 00ae 92B2     		uxth	r2, r2
 1741 00b0 D1B2     		uxtb	r1, r2
 1742 00b2 07F50472 		add	r2, r7, #528
 1743 00b6 D154     		strb	r1, [r2, r3]
 343:App/STM32F4-Discovery/modbus_mk.c ****         	req[req_length++] = src[i] & 0x00ff;
 1744              		.loc 1 343 0 discriminator 2
 1745 00b8 D7F81834 		ldr	r3, [r7, #1048]
 1746 00bc 5A1C     		adds	r2, r3, #1
 1747 00be C7F81824 		str	r2, [r7, #1048]
 1748 00c2 D7F81C24 		ldr	r2, [r7, #1052]
 1749 00c6 5200     		lsls	r2, r2, #1
 1750 00c8 391D     		adds	r1, r7, #4
 1751 00ca 0968     		ldr	r1, [r1]
 1752 00cc 0A44     		add	r2, r2, r1
 1753 00ce 1288     		ldrh	r2, [r2]
 1754 00d0 D1B2     		uxtb	r1, r2
 1755 00d2 07F50472 		add	r2, r7, #528
 1756 00d6 D154     		strb	r1, [r2, r3]
 341:App/STM32F4-Discovery/modbus_mk.c ****     for (i = 0; i < nb; i++) {
 1757              		.loc 1 341 0 discriminator 2
 1758 00d8 D7F81C34 		ldr	r3, [r7, #1052]
 1759 00dc 0133     		adds	r3, r3, #1
 1760 00de C7F81C34 		str	r3, [r7, #1052]
 1761              	.L48:
 341:App/STM32F4-Discovery/modbus_mk.c ****     for (i = 0; i < nb; i++) {
 1762              		.loc 1 341 0 is_stmt 0 discriminator 1
 1763 00e2 07F10803 		add	r3, r7, #8
 1764 00e6 D7F81C24 		ldr	r2, [r7, #1052]
 1765 00ea 1B68     		ldr	r3, [r3]
 1766 00ec 9A42     		cmp	r2, r3
 1767 00ee D1DB     		blt	.L49
 344:App/STM32F4-Discovery/modbus_mk.c ****     	}
 345:App/STM32F4-Discovery/modbus_mk.c **** 
 346:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 1768              		.loc 1 346 0 is_stmt 1
 1769 00f0 D7F81834 		ldr	r3, [r7, #1048]
 1770 00f4 9BB2     		uxth	r3, r3
 1771 00f6 07F50472 		add	r2, r7, #528
 1772 00fa 1046     		mov	r0, r2
 1773 00fc 1946     		mov	r1, r3
 1774 00fe FFF7FEFF 		bl	crc16
 1775 0102 0346     		mov	r3, r0
 1776 0104 A7F81234 		strh	r3, [r7, #1042]	@ movhi
 347:App/STM32F4-Discovery/modbus_mk.c **** 
 348:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 1777              		.loc 1 348 0
 1778 0108 D7F81834 		ldr	r3, [r7, #1048]
 1779 010c 5A1C     		adds	r2, r3, #1
 1780 010e C7F81824 		str	r2, [r7, #1048]
 1781 0112 B7F81224 		ldrh	r2, [r7, #1042]
 1782 0116 120A     		lsrs	r2, r2, #8
 1783 0118 92B2     		uxth	r2, r2
 1784 011a D1B2     		uxtb	r1, r2
 1785 011c 07F50472 		add	r2, r7, #528
 1786 0120 D154     		strb	r1, [r2, r3]
 349:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff;
 1787              		.loc 1 349 0
 1788 0122 D7F81834 		ldr	r3, [r7, #1048]
 1789 0126 5A1C     		adds	r2, r3, #1
 1790 0128 C7F81824 		str	r2, [r7, #1048]
 1791 012c B7F81224 		ldrh	r2, [r7, #1042]	@ movhi
 1792 0130 D1B2     		uxtb	r1, r2
 1793 0132 07F50472 		add	r2, r7, #528
 1794 0136 D154     		strb	r1, [r2, r3]
 350:App/STM32F4-Discovery/modbus_mk.c **** 
 351:App/STM32F4-Discovery/modbus_mk.c **** 	/* write request  to modbus line */
 352:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req, rsp, req_length, 8); 
 1795              		.loc 1 352 0
 1796 0138 07F50472 		add	r2, r7, #528
 1797 013c 07F11003 		add	r3, r7, #16
 1798 0140 1046     		mov	r0, r2
 1799 0142 1946     		mov	r1, r3
 1800 0144 D7F81824 		ldr	r2, [r7, #1048]
 1801 0148 0823     		movs	r3, #8
 1802 014a FFF7FEFF 		bl	write_read_modbus
 353:App/STM32F4-Discovery/modbus_mk.c **** 	return modbus_confirmation (req, rsp,req_length, 8); 
 1803              		.loc 1 353 0
 1804 014e D7F81834 		ldr	r3, [r7, #1048]
 1805 0152 9BB2     		uxth	r3, r3
 1806 0154 07F50471 		add	r1, r7, #528
 1807 0158 07F11002 		add	r2, r7, #16
 1808 015c 0846     		mov	r0, r1
 1809 015e 1146     		mov	r1, r2
 1810 0160 1A46     		mov	r2, r3
 1811 0162 0823     		movs	r3, #8
 1812 0164 FFF7FEFF 		bl	modbus_confirmation
 1813 0168 0346     		mov	r3, r0
 1814 016a DBB2     		uxtb	r3, r3
 354:App/STM32F4-Discovery/modbus_mk.c **** 
 355:App/STM32F4-Discovery/modbus_mk.c **** 
 356:App/STM32F4-Discovery/modbus_mk.c **** 
 357:App/STM32F4-Discovery/modbus_mk.c **** }
 1815              		.loc 1 357 0
 1816 016c 1846     		mov	r0, r3
 1817 016e 07F58467 		add	r7, r7, #1056
 1818 0172 BD46     		mov	sp, r7
 1819              		@ sp needed
 1820 0174 80BD     		pop	{r7, pc}
 1821              		.cfi_endproc
 1822              	.LFE118:
 1824 0176 00BF     		.section	.text.modbus_WSR,"ax",%progbits
 1825              		.align	2
 1826              		.global	modbus_WSR
 1827              		.thumb
 1828              		.thumb_func
 1830              	modbus_WSR:
 1831              	.LFB119:
 358:App/STM32F4-Discovery/modbus_mk.c **** 
 359:App/STM32F4-Discovery/modbus_mk.c **** /* Write the values from the array to the registers of the remote device */
 360:App/STM32F4-Discovery/modbus_mk.c **** uint8_t modbus_WSR( int address, const uint16_t src)
 361:App/STM32F4-Discovery/modbus_mk.c **** {
 1832              		.loc 1 361 0
 1833              		.cfi_startproc
 1834              		@ args = 0, pretend = 0, frame = 1048
 1835              		@ frame_needed = 1, uses_anonymous_args = 0
 1836 0000 80B5     		push	{r7, lr}
 1837              	.LCFI27:
 1838              		.cfi_def_cfa_offset 8
 1839              		.cfi_offset 7, -8
 1840              		.cfi_offset 14, -4
 1841 0002 ADF5836D 		sub	sp, sp, #1048
 1842              	.LCFI28:
 1843              		.cfi_def_cfa_offset 1056
 1844 0006 00AF     		add	r7, sp, #0
 1845              	.LCFI29:
 1846              		.cfi_def_cfa_register 7
 1847 0008 3B1D     		adds	r3, r7, #4
 1848 000a 1860     		str	r0, [r3]
 1849 000c 0A46     		mov	r2, r1
 1850 000e BB1C     		adds	r3, r7, #2
 1851 0010 1A80     		strh	r2, [r3]	@ movhi
 362:App/STM32F4-Discovery/modbus_mk.c **** 	int nb = 1; 
 1852              		.loc 1 362 0
 1853 0012 0123     		movs	r3, #1
 1854 0014 C7F81434 		str	r3, [r7, #1044]
 363:App/STM32F4-Discovery/modbus_mk.c **** 	int rc;
 364:App/STM32F4-Discovery/modbus_mk.c **** 	int i;
 365:App/STM32F4-Discovery/modbus_mk.c ****     	int req_length;
 366:App/STM32F4-Discovery/modbus_mk.c ****     	int byte_count;
 367:App/STM32F4-Discovery/modbus_mk.c **** 
 368:App/STM32F4-Discovery/modbus_mk.c ****     	uint8_t req[REQ_MAX_LEN];
 369:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t rsp[REQ_MAX_LEN];
 370:App/STM32F4-Discovery/modbus_mk.c **** 
 371:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 1855              		.loc 1 371 0
 1856 0018 07F50273 		add	r3, r7, #520
 1857 001c 3622     		movs	r2, #54
 1858 001e 1A70     		strb	r2, [r3]
 372:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0x6;
 1859              		.loc 1 372 0
 1860 0020 07F50273 		add	r3, r7, #520
 1861 0024 0622     		movs	r2, #6
 1862 0026 5A70     		strb	r2, [r3, #1]
 373:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 1863              		.loc 1 373 0
 1864 0028 3B1D     		adds	r3, r7, #4
 1865 002a 1B68     		ldr	r3, [r3]
 1866 002c 1B12     		asrs	r3, r3, #8
 1867 002e DAB2     		uxtb	r2, r3
 1868 0030 07F50273 		add	r3, r7, #520
 1869 0034 9A70     		strb	r2, [r3, #2]
 374:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 1870              		.loc 1 374 0
 1871 0036 3B1D     		adds	r3, r7, #4
 1872 0038 1B68     		ldr	r3, [r3]
 1873 003a DAB2     		uxtb	r2, r3
 1874 003c 07F50273 		add	r3, r7, #520
 1875 0040 DA70     		strb	r2, [r3, #3]
 375:App/STM32F4-Discovery/modbus_mk.c **** //	req[4] = nb >> 8;
 376:App/STM32F4-Discovery/modbus_mk.c **** //	req[5] = nb & 0x00ff; 
 377:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 4; 
 1876              		.loc 1 377 0
 1877 0042 0423     		movs	r3, #4
 1878 0044 C7F81034 		str	r3, [r7, #1040]
 378:App/STM32F4-Discovery/modbus_mk.c **** 	
 379:App/STM32F4-Discovery/modbus_mk.c ****    	byte_count = nb * 2;
 1879              		.loc 1 379 0
 1880 0048 D7F81434 		ldr	r3, [r7, #1044]
 1881 004c 5B00     		lsls	r3, r3, #1
 1882 004e C7F80C34 		str	r3, [r7, #1036]
 380:App/STM32F4-Discovery/modbus_mk.c ****     	req[req_length++] = byte_count;
 1883              		.loc 1 380 0
 1884 0052 D7F81034 		ldr	r3, [r7, #1040]
 1885 0056 5A1C     		adds	r2, r3, #1
 1886 0058 C7F81024 		str	r2, [r7, #1040]
 1887 005c D7F80C24 		ldr	r2, [r7, #1036]
 1888 0060 D1B2     		uxtb	r1, r2
 1889 0062 07F50272 		add	r2, r7, #520
 1890 0066 D154     		strb	r1, [r2, r3]
 381:App/STM32F4-Discovery/modbus_mk.c **** 
 382:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = src >> 8;
 1891              		.loc 1 382 0
 1892 0068 D7F81034 		ldr	r3, [r7, #1040]
 1893 006c 5A1C     		adds	r2, r3, #1
 1894 006e C7F81024 		str	r2, [r7, #1040]
 1895 0072 BA1C     		adds	r2, r7, #2
 1896 0074 1288     		ldrh	r2, [r2]
 1897 0076 120A     		lsrs	r2, r2, #8
 1898 0078 92B2     		uxth	r2, r2
 1899 007a D1B2     		uxtb	r1, r2
 1900 007c 07F50272 		add	r2, r7, #520
 1901 0080 D154     		strb	r1, [r2, r3]
 383:App/STM32F4-Discovery/modbus_mk.c ****        	req[req_length++] = src & 0x00ff;
 1902              		.loc 1 383 0
 1903 0082 D7F81034 		ldr	r3, [r7, #1040]
 1904 0086 5A1C     		adds	r2, r3, #1
 1905 0088 C7F81024 		str	r2, [r7, #1040]
 1906 008c BA1C     		adds	r2, r7, #2
 1907 008e 1288     		ldrh	r2, [r2]	@ movhi
 1908 0090 D1B2     		uxtb	r1, r2
 1909 0092 07F50272 		add	r2, r7, #520
 1910 0096 D154     		strb	r1, [r2, r3]
 384:App/STM32F4-Discovery/modbus_mk.c ****     	
 385:App/STM32F4-Discovery/modbus_mk.c **** 
 386:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 1911              		.loc 1 386 0
 1912 0098 D7F81034 		ldr	r3, [r7, #1040]
 1913 009c 9BB2     		uxth	r3, r3
 1914 009e 07F50272 		add	r2, r7, #520
 1915 00a2 1046     		mov	r0, r2
 1916 00a4 1946     		mov	r1, r3
 1917 00a6 FFF7FEFF 		bl	crc16
 1918 00aa 0346     		mov	r3, r0
 1919 00ac A7F80A34 		strh	r3, [r7, #1034]	@ movhi
 387:App/STM32F4-Discovery/modbus_mk.c **** 
 388:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 1920              		.loc 1 388 0
 1921 00b0 D7F81034 		ldr	r3, [r7, #1040]
 1922 00b4 5A1C     		adds	r2, r3, #1
 1923 00b6 C7F81024 		str	r2, [r7, #1040]
 1924 00ba B7F80A24 		ldrh	r2, [r7, #1034]
 1925 00be 120A     		lsrs	r2, r2, #8
 1926 00c0 92B2     		uxth	r2, r2
 1927 00c2 D1B2     		uxtb	r1, r2
 1928 00c4 07F50272 		add	r2, r7, #520
 1929 00c8 D154     		strb	r1, [r2, r3]
 389:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff;
 1930              		.loc 1 389 0
 1931 00ca D7F81034 		ldr	r3, [r7, #1040]
 1932 00ce 5A1C     		adds	r2, r3, #1
 1933 00d0 C7F81024 		str	r2, [r7, #1040]
 1934 00d4 B7F80A24 		ldrh	r2, [r7, #1034]	@ movhi
 1935 00d8 D1B2     		uxtb	r1, r2
 1936 00da 07F50272 		add	r2, r7, #520
 1937 00de D154     		strb	r1, [r2, r3]
 390:App/STM32F4-Discovery/modbus_mk.c **** 
 391:App/STM32F4-Discovery/modbus_mk.c **** 	/* write request  to modbus line */
 392:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req, rsp, req_length, 5); 
 1938              		.loc 1 392 0
 1939 00e0 07F50272 		add	r2, r7, #520
 1940 00e4 07F10803 		add	r3, r7, #8
 1941 00e8 1046     		mov	r0, r2
 1942 00ea 1946     		mov	r1, r3
 1943 00ec D7F81024 		ldr	r2, [r7, #1040]
 1944 00f0 0523     		movs	r3, #5
 1945 00f2 FFF7FEFF 		bl	write_read_modbus
 393:App/STM32F4-Discovery/modbus_mk.c **** 	return modbus_confirmation (req, rsp,req_length, 5); 
 1946              		.loc 1 393 0
 1947 00f6 D7F81034 		ldr	r3, [r7, #1040]
 1948 00fa 9BB2     		uxth	r3, r3
 1949 00fc 07F50271 		add	r1, r7, #520
 1950 0100 07F10802 		add	r2, r7, #8
 1951 0104 0846     		mov	r0, r1
 1952 0106 1146     		mov	r1, r2
 1953 0108 1A46     		mov	r2, r3
 1954 010a 0523     		movs	r3, #5
 1955 010c FFF7FEFF 		bl	modbus_confirmation
 1956 0110 0346     		mov	r3, r0
 1957 0112 DBB2     		uxtb	r3, r3
 394:App/STM32F4-Discovery/modbus_mk.c **** 
 395:App/STM32F4-Discovery/modbus_mk.c **** 
 396:App/STM32F4-Discovery/modbus_mk.c **** 
 397:App/STM32F4-Discovery/modbus_mk.c **** }
 1958              		.loc 1 397 0
 1959 0114 1846     		mov	r0, r3
 1960 0116 07F58367 		add	r7, r7, #1048
 1961 011a BD46     		mov	sp, r7
 1962              		@ sp needed
 1963 011c 80BD     		pop	{r7, pc}
 1964              		.cfi_endproc
 1965              	.LFE119:
 1967 011e 00BF     		.section	.text.modbus_RR,"ax",%progbits
 1968              		.align	2
 1969              		.global	modbus_RR
 1970              		.thumb
 1971              		.thumb_func
 1973              	modbus_RR:
 1974              	.LFB120:
 398:App/STM32F4-Discovery/modbus_mk.c **** 
 399:App/STM32F4-Discovery/modbus_mk.c **** 
 400:App/STM32F4-Discovery/modbus_mk.c **** /* Read the values from the array to the registers of the remote device */
 401:App/STM32F4-Discovery/modbus_mk.c **** uint8_t modbus_RR( int address, int nb, uint16_t *src)
 402:App/STM32F4-Discovery/modbus_mk.c **** {
 1975              		.loc 1 402 0
 1976              		.cfi_startproc
 1977              		@ args = 0, pretend = 0, frame = 1064
 1978              		@ frame_needed = 1, uses_anonymous_args = 0
 1979 0000 80B5     		push	{r7, lr}
 1980              	.LCFI30:
 1981              		.cfi_def_cfa_offset 8
 1982              		.cfi_offset 7, -8
 1983              		.cfi_offset 14, -4
 1984 0002 ADF5856D 		sub	sp, sp, #1064
 1985              	.LCFI31:
 1986              		.cfi_def_cfa_offset 1072
 1987 0006 00AF     		add	r7, sp, #0
 1988              	.LCFI32:
 1989              		.cfi_def_cfa_register 7
 1990 0008 07F10C03 		add	r3, r7, #12
 1991 000c 1860     		str	r0, [r3]
 1992 000e 07F10803 		add	r3, r7, #8
 1993 0012 1960     		str	r1, [r3]
 1994 0014 3B1D     		adds	r3, r7, #4
 1995 0016 1A60     		str	r2, [r3]
 403:App/STM32F4-Discovery/modbus_mk.c ****     	int rc;
 404:App/STM32F4-Discovery/modbus_mk.c ****     	int i;
 405:App/STM32F4-Discovery/modbus_mk.c ****     	int req_length;
 406:App/STM32F4-Discovery/modbus_mk.c **** 	int byte_count;
 407:App/STM32F4-Discovery/modbus_mk.c ****     	uint8_t req[REQ_MAX_LEN];
 408:App/STM32F4-Discovery/modbus_mk.c ****   	uint8_t rsp[REQ_MAX_LEN];
 409:App/STM32F4-Discovery/modbus_mk.c **** 
 410:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 1996              		.loc 1 410 0
 1997 0018 07F50573 		add	r3, r7, #532
 1998 001c 3622     		movs	r2, #54
 1999 001e 1A70     		strb	r2, [r3]
 411:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0x4;
 2000              		.loc 1 411 0
 2001 0020 07F50573 		add	r3, r7, #532
 2002 0024 0422     		movs	r2, #4
 2003 0026 5A70     		strb	r2, [r3, #1]
 412:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 2004              		.loc 1 412 0
 2005 0028 07F10C03 		add	r3, r7, #12
 2006 002c 1B68     		ldr	r3, [r3]
 2007 002e 1B12     		asrs	r3, r3, #8
 2008 0030 DAB2     		uxtb	r2, r3
 2009 0032 07F50573 		add	r3, r7, #532
 2010 0036 9A70     		strb	r2, [r3, #2]
 413:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 2011              		.loc 1 413 0
 2012 0038 07F10C03 		add	r3, r7, #12
 2013 003c 1B68     		ldr	r3, [r3]
 2014 003e DAB2     		uxtb	r2, r3
 2015 0040 07F50573 		add	r3, r7, #532
 2016 0044 DA70     		strb	r2, [r3, #3]
 414:App/STM32F4-Discovery/modbus_mk.c **** 	req[4] = nb >> 8;
 2017              		.loc 1 414 0
 2018 0046 07F10803 		add	r3, r7, #8
 2019 004a 1B68     		ldr	r3, [r3]
 2020 004c 1B12     		asrs	r3, r3, #8
 2021 004e DAB2     		uxtb	r2, r3
 2022 0050 07F50573 		add	r3, r7, #532
 2023 0054 1A71     		strb	r2, [r3, #4]
 415:App/STM32F4-Discovery/modbus_mk.c **** 	req[5] = nb & 0x00ff; 
 2024              		.loc 1 415 0
 2025 0056 07F10803 		add	r3, r7, #8
 2026 005a 1B68     		ldr	r3, [r3]
 2027 005c DAB2     		uxtb	r2, r3
 2028 005e 07F50573 		add	r3, r7, #532
 2029 0062 5A71     		strb	r2, [r3, #5]
 416:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 6; 
 2030              		.loc 1 416 0
 2031 0064 0623     		movs	r3, #6
 2032 0066 C7F82034 		str	r3, [r7, #1056]
 417:App/STM32F4-Discovery/modbus_mk.c ****    	
 418:App/STM32F4-Discovery/modbus_mk.c **** 	byte_count = nb * 2;
 2033              		.loc 1 418 0
 2034 006a 07F10803 		add	r3, r7, #8
 2035 006e 1B68     		ldr	r3, [r3]
 2036 0070 5B00     		lsls	r3, r3, #1
 2037 0072 C7F81C34 		str	r3, [r7, #1052]
 419:App/STM32F4-Discovery/modbus_mk.c ****     	req[req_length++] = byte_count;
 2038              		.loc 1 419 0
 2039 0076 D7F82034 		ldr	r3, [r7, #1056]
 2040 007a 5A1C     		adds	r2, r3, #1
 2041 007c C7F82024 		str	r2, [r7, #1056]
 2042 0080 D7F81C24 		ldr	r2, [r7, #1052]
 2043 0084 D1B2     		uxtb	r1, r2
 2044 0086 07F50572 		add	r2, r7, #532
 2045 008a D154     		strb	r1, [r2, r3]
 420:App/STM32F4-Discovery/modbus_mk.c **** 	
 421:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 2046              		.loc 1 421 0
 2047 008c D7F82034 		ldr	r3, [r7, #1056]
 2048 0090 9BB2     		uxth	r3, r3
 2049 0092 07F50572 		add	r2, r7, #532
 2050 0096 1046     		mov	r0, r2
 2051 0098 1946     		mov	r1, r3
 2052 009a FFF7FEFF 		bl	crc16
 2053 009e 0346     		mov	r3, r0
 2054 00a0 A7F81A34 		strh	r3, [r7, #1050]	@ movhi
 422:App/STM32F4-Discovery/modbus_mk.c **** 
 423:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 2055              		.loc 1 423 0
 2056 00a4 D7F82034 		ldr	r3, [r7, #1056]
 2057 00a8 5A1C     		adds	r2, r3, #1
 2058 00aa C7F82024 		str	r2, [r7, #1056]
 2059 00ae B7F81A24 		ldrh	r2, [r7, #1050]
 2060 00b2 120A     		lsrs	r2, r2, #8
 2061 00b4 92B2     		uxth	r2, r2
 2062 00b6 D1B2     		uxtb	r1, r2
 2063 00b8 07F50572 		add	r2, r7, #532
 2064 00bc D154     		strb	r1, [r2, r3]
 424:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff; 
 2065              		.loc 1 424 0
 2066 00be D7F82034 		ldr	r3, [r7, #1056]
 2067 00c2 5A1C     		adds	r2, r3, #1
 2068 00c4 C7F82024 		str	r2, [r7, #1056]
 2069 00c8 B7F81A24 		ldrh	r2, [r7, #1050]	@ movhi
 2070 00cc D1B2     		uxtb	r1, r2
 2071 00ce 07F50572 		add	r2, r7, #532
 2072 00d2 D154     		strb	r1, [r2, r3]
 425:App/STM32F4-Discovery/modbus_mk.c **** 	
 426:App/STM32F4-Discovery/modbus_mk.c **** 	/* write request  to modbus line */
 427:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req, rsp,  req_length, nb*2 + 5); 
 2073              		.loc 1 427 0
 2074 00d4 07F10803 		add	r3, r7, #8
 2075 00d8 1B68     		ldr	r3, [r3]
 2076 00da 5B00     		lsls	r3, r3, #1
 2077 00dc 0533     		adds	r3, r3, #5
 2078 00de 07F50571 		add	r1, r7, #532
 2079 00e2 07F11402 		add	r2, r7, #20
 2080 00e6 0846     		mov	r0, r1
 2081 00e8 1146     		mov	r1, r2
 2082 00ea D7F82024 		ldr	r2, [r7, #1056]
 2083 00ee FFF7FEFF 		bl	write_read_modbus
 428:App/STM32F4-Discovery/modbus_mk.c **** 	
 429:App/STM32F4-Discovery/modbus_mk.c **** 	int offset = 2;
 2084              		.loc 1 429 0
 2085 00f2 0223     		movs	r3, #2
 2086 00f4 C7F81434 		str	r3, [r7, #1044]
 430:App/STM32F4-Discovery/modbus_mk.c **** 	
 431:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < nb; i++) {
 2087              		.loc 1 431 0
 2088 00f8 0023     		movs	r3, #0
 2089 00fa C7F82434 		str	r3, [r7, #1060]
 2090 00fe 24E0     		b	.L54
 2091              	.L55:
 432:App/STM32F4-Discovery/modbus_mk.c ****             /* shift reg hi_byte to temp OR with lo_byte */
 433:App/STM32F4-Discovery/modbus_mk.c ****             src[i] = (rsp[offset + 1 + (i << 1)] << 8) |
 2092              		.loc 1 433 0 discriminator 2
 2093 0100 D7F82434 		ldr	r3, [r7, #1060]
 2094 0104 5B00     		lsls	r3, r3, #1
 2095 0106 3A1D     		adds	r2, r7, #4
 2096 0108 1268     		ldr	r2, [r2]
 2097 010a 1344     		add	r3, r3, r2
 2098 010c D7F81424 		ldr	r2, [r7, #1044]
 2099 0110 511C     		adds	r1, r2, #1
 2100 0112 D7F82424 		ldr	r2, [r7, #1060]
 2101 0116 5200     		lsls	r2, r2, #1
 2102 0118 0A44     		add	r2, r2, r1
 2103 011a 07F11401 		add	r1, r7, #20
 2104 011e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 2105 0120 1202     		lsls	r2, r2, #8
 2106 0122 91B2     		uxth	r1, r2
 434:App/STM32F4-Discovery/modbus_mk.c ****                 rsp[offset + 2 + (i << 1)];
 2107              		.loc 1 434 0 discriminator 2
 2108 0124 D7F81424 		ldr	r2, [r7, #1044]
 2109 0128 901C     		adds	r0, r2, #2
 2110 012a D7F82424 		ldr	r2, [r7, #1060]
 2111 012e 5200     		lsls	r2, r2, #1
 2112 0130 0244     		add	r2, r2, r0
 2113 0132 07F11400 		add	r0, r7, #20
 2114 0136 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 433:App/STM32F4-Discovery/modbus_mk.c ****             src[i] = (rsp[offset + 1 + (i << 1)] << 8) |
 2115              		.loc 1 433 0 discriminator 2
 2116 0138 0A43     		orrs	r2, r2, r1
 2117 013a 92B2     		uxth	r2, r2
 2118 013c 92B2     		uxth	r2, r2
 2119 013e 1A80     		strh	r2, [r3]	@ movhi
 431:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < nb; i++) {
 2120              		.loc 1 431 0 discriminator 2
 2121 0140 D7F82434 		ldr	r3, [r7, #1060]
 2122 0144 0133     		adds	r3, r3, #1
 2123 0146 C7F82434 		str	r3, [r7, #1060]
 2124              	.L54:
 431:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < nb; i++) {
 2125              		.loc 1 431 0 is_stmt 0 discriminator 1
 2126 014a 07F10803 		add	r3, r7, #8
 2127 014e D7F82424 		ldr	r2, [r7, #1060]
 2128 0152 1B68     		ldr	r3, [r3]
 2129 0154 9A42     		cmp	r2, r3
 2130 0156 D3DB     		blt	.L55
 435:App/STM32F4-Discovery/modbus_mk.c **** 		
 436:App/STM32F4-Discovery/modbus_mk.c ****         }
 437:App/STM32F4-Discovery/modbus_mk.c **** 
 438:App/STM32F4-Discovery/modbus_mk.c **** //	for (i =0; i < nb; i++ ){ t_printf("[%d] ", src[i]); }
 439:App/STM32F4-Discovery/modbus_mk.c **** //	t_printf("\n");
 440:App/STM32F4-Discovery/modbus_mk.c **** 
 441:App/STM32F4-Discovery/modbus_mk.c **** 	
 442:App/STM32F4-Discovery/modbus_mk.c **** 
 443:App/STM32F4-Discovery/modbus_mk.c **** 	return modbus_confirmation (req, rsp,req_length, nb*2 + 5); 
 2131              		.loc 1 443 0 is_stmt 1
 2132 0158 D7F82034 		ldr	r3, [r7, #1056]
 2133 015c 9AB2     		uxth	r2, r3
 2134 015e 07F10803 		add	r3, r7, #8
 2135 0162 1B68     		ldr	r3, [r3]
 2136 0164 9BB2     		uxth	r3, r3
 2137 0166 5B00     		lsls	r3, r3, #1
 2138 0168 9BB2     		uxth	r3, r3
 2139 016a 0533     		adds	r3, r3, #5
 2140 016c 9BB2     		uxth	r3, r3
 2141 016e 07F50570 		add	r0, r7, #532
 2142 0172 07F11401 		add	r1, r7, #20
 2143 0176 FFF7FEFF 		bl	modbus_confirmation
 2144 017a 0346     		mov	r3, r0
 2145 017c DBB2     		uxtb	r3, r3
 444:App/STM32F4-Discovery/modbus_mk.c **** 
 445:App/STM32F4-Discovery/modbus_mk.c **** 
 446:App/STM32F4-Discovery/modbus_mk.c **** }
 2146              		.loc 1 446 0
 2147 017e 1846     		mov	r0, r3
 2148 0180 07F58567 		add	r7, r7, #1064
 2149 0184 BD46     		mov	sp, r7
 2150              		@ sp needed
 2151 0186 80BD     		pop	{r7, pc}
 2152              		.cfi_endproc
 2153              	.LFE120:
 2155              		.section	.rodata
 2156 007e 0000     		.align	2
 2157              	.LC6:
 2158 0080 48423A20 		.ascii	"HB: %d\012\012\000"
 2158      25640A0A 
 2158      00
 2159              		.section	.text.motorHeartBeat_task,"ax",%progbits
 2160              		.align	2
 2161              		.global	motorHeartBeat_task
 2162              		.thumb
 2163              		.thumb_func
 2165              	motorHeartBeat_task:
 2166              	.LFB121:
 447:App/STM32F4-Discovery/modbus_mk.c **** 
 448:App/STM32F4-Discovery/modbus_mk.c **** 
 449:App/STM32F4-Discovery/modbus_mk.c **** 
 450:App/STM32F4-Discovery/modbus_mk.c **** /*===================================================================================
 451:App/STM32F4-Discovery/modbus_mk.c **** =====================================================================================
 452:App/STM32F4-Discovery/modbus_mk.c **** ============    		TASKS SECTION			===================== 
 453:App/STM32F4-Discovery/modbus_mk.c **** =====================================================================================
 454:App/STM32F4-Discovery/modbus_mk.c **** ====================================================================================*/
 455:App/STM32F4-Discovery/modbus_mk.c **** void motorHeartBeat_task(void * pvParameters)
 456:App/STM32F4-Discovery/modbus_mk.c **** {
 2167              		.loc 1 456 0
 2168              		.cfi_startproc
 2169              		@ args = 0, pretend = 0, frame = 32
 2170              		@ frame_needed = 1, uses_anonymous_args = 0
 2171 0000 80B5     		push	{r7, lr}
 2172              	.LCFI33:
 2173              		.cfi_def_cfa_offset 8
 2174              		.cfi_offset 7, -8
 2175              		.cfi_offset 14, -4
 2176 0002 88B0     		sub	sp, sp, #32
 2177              	.LCFI34:
 2178              		.cfi_def_cfa_offset 40
 2179 0004 00AF     		add	r7, sp, #0
 2180              	.LCFI35:
 2181              		.cfi_def_cfa_register 7
 2182 0006 7860     		str	r0, [r7, #4]
 457:App/STM32F4-Discovery/modbus_mk.c **** 	/*! sets speed of motor */
 458:App/STM32F4-Discovery/modbus_mk.c **** 
 459:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t tab_reg[10];
 460:App/STM32F4-Discovery/modbus_mk.c **** //	portTickType xLastWakeTime; 
 461:App/STM32F4-Discovery/modbus_mk.c **** //	xLastWakeTime = xTaskGetTickCount();
 462:App/STM32F4-Discovery/modbus_mk.c **** 	//vTaskDelay(portMAX_DELAY);	
 463:App/STM32F4-Discovery/modbus_mk.c **** 	//vTaskSuspend(NULL); 
 464:App/STM32F4-Discovery/modbus_mk.c **** 	int counter = 0;	
 2183              		.loc 1 464 0
 2184 0008 0023     		movs	r3, #0
 2185 000a FB61     		str	r3, [r7, #28]
 2186              	.L58:
 465:App/STM32F4-Discovery/modbus_mk.c **** 	for(;;)
 466:App/STM32F4-Discovery/modbus_mk.c **** 	{
 467:App/STM32F4-Discovery/modbus_mk.c **** 		#ifdef DEBUG
 468:App/STM32F4-Discovery/modbus_mk.c **** 		t_printf("HB: %d\n\n", counter);
 2187              		.loc 1 468 0 discriminator 1
 2188 000c 0948     		ldr	r0, .L59
 2189 000e F969     		ldr	r1, [r7, #28]
 2190 0010 FFF7FEFF 		bl	t_printf
 469:App/STM32F4-Discovery/modbus_mk.c **** 		#endif
 470:App/STM32F4-Discovery/modbus_mk.c **** 		modbus_RR(0,10,tab_reg);
 2191              		.loc 1 470 0 discriminator 1
 2192 0014 07F10803 		add	r3, r7, #8
 2193 0018 0020     		movs	r0, #0
 2194 001a 0A21     		movs	r1, #10
 2195 001c 1A46     		mov	r2, r3
 2196 001e FFF7FEFF 		bl	modbus_RR
 471:App/STM32F4-Discovery/modbus_mk.c **** 		counter ++;
 2197              		.loc 1 471 0 discriminator 1
 2198 0022 FB69     		ldr	r3, [r7, #28]
 2199 0024 0133     		adds	r3, r3, #1
 2200 0026 FB61     		str	r3, [r7, #28]
 472:App/STM32F4-Discovery/modbus_mk.c **** 	//	vTaskDelayUntil(&xLastWakeTime, 3000/portTICK_RATE_MS);
 473:App/STM32F4-Discovery/modbus_mk.c **** 		vTaskDelay(3000/portTICK_RATE_MS);
 2201              		.loc 1 473 0 discriminator 1
 2202 0028 40F6B830 		movw	r0, #3000
 2203 002c FFF7FEFF 		bl	vTaskDelay
 474:App/STM32F4-Discovery/modbus_mk.c **** 
 475:App/STM32F4-Discovery/modbus_mk.c **** 	}
 2204              		.loc 1 475 0 discriminator 1
 2205 0030 ECE7     		b	.L58
 2206              	.L60:
 2207 0032 00BF     		.align	2
 2208              	.L59:
 2209 0034 80000000 		.word	.LC6
 2210              		.cfi_endproc
 2211              	.LFE121:
 2213              		.section	.rodata
 2214 0089 000000   		.align	2
 2215              	.LC7:
 2216 008c 506F7765 		.ascii	"Power In=%d, Iout=%d, Vin=%d, PrcOut=%d, RPMOut=%d,"
 2216      7220496E 
 2216      3D25642C 
 2216      20496F75 
 2216      743D2564 
 2217 00bf 20496E74 		.ascii	" InternalTemp=%d\012\000"
 2217      65726E61 
 2217      6C54656D 
 2217      703D2564 
 2217      0A00
 2218 00d1 000000   		.section	.text.motorControl_task,"ax",%progbits
 2219              		.align	2
 2220              		.global	motorControl_task
 2221              		.thumb
 2222              		.thumb_func
 2224              	motorControl_task:
 2225              	.LFB122:
 476:App/STM32F4-Discovery/modbus_mk.c **** 	/* Tasks must not attempt to return from their implementing
 477:App/STM32F4-Discovery/modbus_mk.c ****         function or otherwise exit.  In newer FreeRTOS port
 478:App/STM32F4-Discovery/modbus_mk.c ****         attempting to do so will result in an configASSERT() being
 479:App/STM32F4-Discovery/modbus_mk.c ****         called if it is defined.  If it is necessary for a task to
 480:App/STM32F4-Discovery/modbus_mk.c ****         exit then have the task call vTaskDelete( NULL ) to ensure
 481:App/STM32F4-Discovery/modbus_mk.c ****         its exit is clean. */
 482:App/STM32F4-Discovery/modbus_mk.c **** 	closesocket(socket_0);		
 483:App/STM32F4-Discovery/modbus_mk.c ****         vTaskDelete( NULL );
 484:App/STM32F4-Discovery/modbus_mk.c **** 
 485:App/STM32F4-Discovery/modbus_mk.c **** 
 486:App/STM32F4-Discovery/modbus_mk.c **** 
 487:App/STM32F4-Discovery/modbus_mk.c **** 
 488:App/STM32F4-Discovery/modbus_mk.c **** }
 489:App/STM32F4-Discovery/modbus_mk.c **** 
 490:App/STM32F4-Discovery/modbus_mk.c **** void motorControl_task(void * pvParameters)
 491:App/STM32F4-Discovery/modbus_mk.c **** {
 2226              		.loc 1 491 0
 2227              		.cfi_startproc
 2228              		@ args = 0, pretend = 0, frame = 32
 2229              		@ frame_needed = 1, uses_anonymous_args = 0
 2230 0000 B0B5     		push	{r4, r5, r7, lr}
 2231              	.LCFI36:
 2232              		.cfi_def_cfa_offset 16
 2233              		.cfi_offset 4, -16
 2234              		.cfi_offset 5, -12
 2235              		.cfi_offset 7, -8
 2236              		.cfi_offset 14, -4
 2237 0002 8CB0     		sub	sp, sp, #48
 2238              	.LCFI37:
 2239              		.cfi_def_cfa_offset 64
 2240 0004 04AF     		add	r7, sp, #16
 2241              	.LCFI38:
 2242              		.cfi_def_cfa 7, 48
 2243 0006 7860     		str	r0, [r7, #4]
 492:App/STM32F4-Discovery/modbus_mk.c **** 	
 493:App/STM32F4-Discovery/modbus_mk.c **** 
 494:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t src[4];
 495:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t spd[5]; 
 496:App/STM32F4-Discovery/modbus_mk.c **** 	
 497:App/STM32F4-Discovery/modbus_mk.c **** 
 498:App/STM32F4-Discovery/modbus_mk.c **** //	vTaskSuspend(NULL);	
 499:App/STM32F4-Discovery/modbus_mk.c **** 
 500:App/STM32F4-Discovery/modbus_mk.c **** 	src[0]=1; src[1]=1; src[2]=1; src[3]=1;
 2244              		.loc 1 500 0
 2245 0008 0123     		movs	r3, #1
 2246 000a 3B75     		strb	r3, [r7, #20]
 2247 000c 0123     		movs	r3, #1
 2248 000e 7B75     		strb	r3, [r7, #21]
 2249 0010 0123     		movs	r3, #1
 2250 0012 BB75     		strb	r3, [r7, #22]
 2251 0014 0123     		movs	r3, #1
 2252 0016 FB75     		strb	r3, [r7, #23]
 501:App/STM32F4-Discovery/modbus_mk.c **** 	
 502:App/STM32F4-Discovery/modbus_mk.c **** //	spd[0]=1500;spd[1]=0;spd[2]=2250;spd[3]=10;spd[4]=10;
 503:App/STM32F4-Discovery/modbus_mk.c **** 	
 504:App/STM32F4-Discovery/modbus_mk.c **** 	// create usart semaphore 
 505:App/STM32F4-Discovery/modbus_mk.c **** 	xSmphrUSART = xSemaphoreCreateBinary();	
 2253              		.loc 1 505 0
 2254 0018 0120     		movs	r0, #1
 2255 001a 0021     		movs	r1, #0
 2256 001c 0322     		movs	r2, #3
 2257 001e FFF7FEFF 		bl	xQueueGenericCreate
 2258 0022 0246     		mov	r2, r0
 2259 0024 854B     		ldr	r3, .L76
 2260 0026 1A60     		str	r2, [r3]
 506:App/STM32F4-Discovery/modbus_mk.c **** 	
 507:App/STM32F4-Discovery/modbus_mk.c **** 	portTickType xDelay = portMAX_DELAY;//3000 / portTICK_RATE_MS;	
 2261              		.loc 1 507 0
 2262 0028 4FF0FF33 		mov	r3, #-1
 2263 002c FB61     		str	r3, [r7, #28]
 508:App/STM32F4-Discovery/modbus_mk.c **** 	
 509:App/STM32F4-Discovery/modbus_mk.c **** 
 510:App/STM32F4-Discovery/modbus_mk.c **** 	static	QueueTelegram telegramR, telegramS; 
 511:App/STM32F4-Discovery/modbus_mk.c **** 
 512:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.data[0] = 1000;
 2264              		.loc 1 512 0
 2265 002e 844B     		ldr	r3, .L76+4
 2266 0030 4FF47A72 		mov	r2, #1000
 2267 0034 1A81     		strh	r2, [r3, #8]	@ movhi
 513:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.data[1] = 0;	
 2268              		.loc 1 513 0
 2269 0036 824B     		ldr	r3, .L76+4
 2270 0038 0022     		movs	r2, #0
 2271 003a 5A81     		strh	r2, [r3, #10]	@ movhi
 514:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.data[2] = 2250;
 2272              		.loc 1 514 0
 2273 003c 804B     		ldr	r3, .L76+4
 2274 003e 40F6CA02 		movw	r2, #2250
 2275 0042 9A81     		strh	r2, [r3, #12]	@ movhi
 515:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.data[3] = 10;	
 2276              		.loc 1 515 0
 2277 0044 7E4B     		ldr	r3, .L76+4
 2278 0046 0A22     		movs	r2, #10
 2279 0048 DA81     		strh	r2, [r3, #14]	@ movhi
 516:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.data[4] = 10;	
 2280              		.loc 1 516 0
 2281 004a 7D4B     		ldr	r3, .L76+4
 2282 004c 0A22     		movs	r2, #10
 2283 004e 1A82     		strh	r2, [r3, #16]	@ movhi
 517:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.size = 5;
 2284              		.loc 1 517 0
 2285 0050 7B4B     		ldr	r3, .L76+4
 2286 0052 0522     		movs	r2, #5
 2287 0054 5A60     		str	r2, [r3, #4]
 518:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.Qcmd = SETDATA;	
 2288              		.loc 1 518 0
 2289 0056 7A4B     		ldr	r3, .L76+4
 2290 0058 0022     		movs	r2, #0
 2291 005a 1A70     		strb	r2, [r3]
 519:App/STM32F4-Discovery/modbus_mk.c **** 
 520:App/STM32F4-Discovery/modbus_mk.c **** 	
 521:App/STM32F4-Discovery/modbus_mk.c **** 
 522:App/STM32F4-Discovery/modbus_mk.c **** 	int HB_flag = 0;
 2292              		.loc 1 522 0
 2293 005c 0023     		movs	r3, #0
 2294 005e BB61     		str	r3, [r7, #24]
 2295              	.L75:
 523:App/STM32F4-Discovery/modbus_mk.c **** 	
 524:App/STM32F4-Discovery/modbus_mk.c **** 	while (1)
 525:App/STM32F4-Discovery/modbus_mk.c **** 	{
 526:App/STM32F4-Discovery/modbus_mk.c **** 
 527:App/STM32F4-Discovery/modbus_mk.c **** 		
 528:App/STM32F4-Discovery/modbus_mk.c **** 	
 529:App/STM32F4-Discovery/modbus_mk.c **** 		if (xQueueReceive(QSpd_handle, (void *)&telegramR, xDelay  ) == pdPASS)
 2296              		.loc 1 529 0
 2297 0060 784B     		ldr	r3, .L76+8
 2298 0062 1B68     		ldr	r3, [r3]
 2299 0064 1846     		mov	r0, r3
 2300 0066 7649     		ldr	r1, .L76+4
 2301 0068 FA69     		ldr	r2, [r7, #28]
 2302 006a 0023     		movs	r3, #0
 2303 006c FFF7FEFF 		bl	xQueueGenericReceive
 2304 0070 0346     		mov	r3, r0
 2305 0072 012B     		cmp	r3, #1
 2306 0074 40F0E080 		bne	.L62
 530:App/STM32F4-Discovery/modbus_mk.c **** 		{
 531:App/STM32F4-Discovery/modbus_mk.c **** 			switch ( telegramR.Qcmd )
 2307              		.loc 1 531 0
 2308 0078 714B     		ldr	r3, .L76+4
 2309 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2310 007c 052B     		cmp	r3, #5
 2311 007e 00F2CF80 		bhi	.L63
 2312 0082 01A2     		adr	r2, .L65
 2313 0084 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2314              		.p2align 2
 2315              	.L65:
 2316 0088 A1000000 		.word	.L64+1
 2317 008c 09010000 		.word	.L66+1
 2318 0090 21020000 		.word	.L63+1
 2319 0094 21020000 		.word	.L63+1
 2320 0098 6B010000 		.word	.L67+1
 2321 009c D7010000 		.word	.L68+1
 2322              		.p2align 1
 2323              	.L64:
 532:App/STM32F4-Discovery/modbus_mk.c **** 			{
 533:App/STM32F4-Discovery/modbus_mk.c **** 				case SETDATA:
 534:App/STM32F4-Discovery/modbus_mk.c **** 
 535:App/STM32F4-Discovery/modbus_mk.c **** 					src[0]=1; src[1]=1; src[2]=1; src[3]=1;
 2324              		.loc 1 535 0
 2325 00a0 0123     		movs	r3, #1
 2326 00a2 3B75     		strb	r3, [r7, #20]
 2327 00a4 0123     		movs	r3, #1
 2328 00a6 7B75     		strb	r3, [r7, #21]
 2329 00a8 0123     		movs	r3, #1
 2330 00aa BB75     		strb	r3, [r7, #22]
 2331 00ac 0123     		movs	r3, #1
 2332 00ae FB75     		strb	r3, [r7, #23]
 536:App/STM32F4-Discovery/modbus_mk.c **** 
 537:App/STM32F4-Discovery/modbus_mk.c **** 					if ( !modbus_WIB( 0 , 3, src))
 2333              		.loc 1 537 0
 2334 00b0 07F11403 		add	r3, r7, #20
 2335 00b4 0020     		movs	r0, #0
 2336 00b6 0321     		movs	r1, #3
 2337 00b8 1A46     		mov	r2, r3
 2338 00ba FFF7FEFF 		bl	modbus_WIB
 2339 00be 0346     		mov	r3, r0
 2340 00c0 002B     		cmp	r3, #0
 2341 00c2 02D1     		bne	.L69
 538:App/STM32F4-Discovery/modbus_mk.c **** 					{
 539:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 540:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2342              		.loc 1 540 0
 2343 00c4 604B     		ldr	r3, .L76+12
 2344 00c6 0722     		movs	r2, #7
 2345 00c8 1A70     		strb	r2, [r3]
 2346              	.L69:
 541:App/STM32F4-Discovery/modbus_mk.c **** 					//	xQueueSend(QSpd_handle, &telegramS, xDelay);
 542:App/STM32F4-Discovery/modbus_mk.c **** 					//	break;
 543:App/STM32F4-Discovery/modbus_mk.c **** 					}
 544:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2347              		.loc 1 544 0
 2348 00ca 4FF47A70 		mov	r0, #1000
 2349 00ce FFF7FEFF 		bl	vTaskDelay
 545:App/STM32F4-Discovery/modbus_mk.c **** 					
 546:App/STM32F4-Discovery/modbus_mk.c **** 					if (!modbus_WR(0, 5, telegramR.data))
 2350              		.loc 1 546 0
 2351 00d2 0020     		movs	r0, #0
 2352 00d4 0521     		movs	r1, #5
 2353 00d6 5D4A     		ldr	r2, .L76+16
 2354 00d8 FFF7FEFF 		bl	modbus_WR
 2355 00dc 0346     		mov	r3, r0
 2356 00de 002B     		cmp	r3, #0
 2357 00e0 02D1     		bne	.L70
 547:App/STM32F4-Discovery/modbus_mk.c **** 					{
 548:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 549:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2358              		.loc 1 549 0
 2359 00e2 594B     		ldr	r3, .L76+12
 2360 00e4 0722     		movs	r2, #7
 2361 00e6 1A70     		strb	r2, [r3]
 2362              	.L70:
 550:App/STM32F4-Discovery/modbus_mk.c **** 					//	xQueueSend(QSpd_handle, &telegramS, xDelay);
 551:App/STM32F4-Discovery/modbus_mk.c **** 					//	break;
 552:App/STM32F4-Discovery/modbus_mk.c **** 					}
 553:App/STM32F4-Discovery/modbus_mk.c **** 
 554:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2363              		.loc 1 554 0
 2364 00e8 4FF47A70 		mov	r0, #1000
 2365 00ec FFF7FEFF 		bl	vTaskDelay
 555:App/STM32F4-Discovery/modbus_mk.c **** 
 556:App/STM32F4-Discovery/modbus_mk.c **** 				// send response to CLI 
 557:App/STM32F4-Discovery/modbus_mk.c **** 					telegramS.Qcmd = SUCCSESS;
 2366              		.loc 1 557 0
 2367 00f0 554B     		ldr	r3, .L76+12
 2368 00f2 0622     		movs	r2, #6
 2369 00f4 1A70     		strb	r2, [r3]
 558:App/STM32F4-Discovery/modbus_mk.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2370              		.loc 1 558 0
 2371 00f6 534B     		ldr	r3, .L76+8
 2372 00f8 1B68     		ldr	r3, [r3]
 2373 00fa 1846     		mov	r0, r3
 2374 00fc 5249     		ldr	r1, .L76+12
 2375 00fe FA69     		ldr	r2, [r7, #28]
 2376 0100 0023     		movs	r3, #0
 2377 0102 FFF7FEFF 		bl	xQueueGenericSend
 559:App/STM32F4-Discovery/modbus_mk.c **** 
 560:App/STM32F4-Discovery/modbus_mk.c **** 					break;
 2378              		.loc 1 560 0
 2379 0106 97E0     		b	.L62
 2380              	.L66:
 561:App/STM32F4-Discovery/modbus_mk.c **** 				       	
 562:App/STM32F4-Discovery/modbus_mk.c **** 				
 563:App/STM32F4-Discovery/modbus_mk.c **** 				case GETDATA:
 564:App/STM32F4-Discovery/modbus_mk.c **** 				
 565:App/STM32F4-Discovery/modbus_mk.c **** 					if ( !modbus_RR(0, 10, telegramS.data))
 2381              		.loc 1 565 0
 2382 0108 0020     		movs	r0, #0
 2383 010a 0A21     		movs	r1, #10
 2384 010c 504A     		ldr	r2, .L76+20
 2385 010e FFF7FEFF 		bl	modbus_RR
 2386 0112 0346     		mov	r3, r0
 2387 0114 002B     		cmp	r3, #0
 2388 0116 02D1     		bne	.L71
 566:App/STM32F4-Discovery/modbus_mk.c **** 					{
 567:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 568:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2389              		.loc 1 568 0
 2390 0118 4B4B     		ldr	r3, .L76+12
 2391 011a 0722     		movs	r2, #7
 2392 011c 1A70     		strb	r2, [r3]
 2393              	.L71:
 569:App/STM32F4-Discovery/modbus_mk.c **** 					//	xQueueSend(QSpd_handle, &telegramS, xDelay);
 570:App/STM32F4-Discovery/modbus_mk.c **** 					//	break;
 571:App/STM32F4-Discovery/modbus_mk.c **** 					}
 572:App/STM32F4-Discovery/modbus_mk.c **** 
 573:App/STM32F4-Discovery/modbus_mk.c **** 					t_printf("Power In=%d, Iout=%d, Vin=%d, "
 574:App/STM32F4-Discovery/modbus_mk.c **** 							"PrcOut=%d, RPMOut=%d, "
 575:App/STM32F4-Discovery/modbus_mk.c **** 							"InternalTemp=%d\n",
 576:App/STM32F4-Discovery/modbus_mk.c **** 							telegramS.data[8],
 2394              		.loc 1 576 0
 2395 011e 4A4B     		ldr	r3, .L76+12
 2396 0120 1B8B     		ldrh	r3, [r3, #24]
 573:App/STM32F4-Discovery/modbus_mk.c **** 					t_printf("Power In=%d, Iout=%d, Vin=%d, "
 2397              		.loc 1 573 0
 2398 0122 1946     		mov	r1, r3
 577:App/STM32F4-Discovery/modbus_mk.c **** 							telegramS.data[7],
 2399              		.loc 1 577 0
 2400 0124 484B     		ldr	r3, .L76+12
 2401 0126 DB8A     		ldrh	r3, [r3, #22]
 573:App/STM32F4-Discovery/modbus_mk.c **** 					t_printf("Power In=%d, Iout=%d, Vin=%d, "
 2402              		.loc 1 573 0
 2403 0128 1A46     		mov	r2, r3
 578:App/STM32F4-Discovery/modbus_mk.c **** 							telegramS.data[6],
 2404              		.loc 1 578 0
 2405 012a 474B     		ldr	r3, .L76+12
 2406 012c 9B8A     		ldrh	r3, [r3, #20]
 579:App/STM32F4-Discovery/modbus_mk.c **** 							telegramS.data[3],
 2407              		.loc 1 579 0
 2408 012e 4648     		ldr	r0, .L76+12
 2409 0130 C089     		ldrh	r0, [r0, #14]
 573:App/STM32F4-Discovery/modbus_mk.c **** 					t_printf("Power In=%d, Iout=%d, Vin=%d, "
 2410              		.loc 1 573 0
 2411 0132 0546     		mov	r5, r0
 580:App/STM32F4-Discovery/modbus_mk.c **** 							telegramS.data[4],
 2412              		.loc 1 580 0
 2413 0134 4448     		ldr	r0, .L76+12
 2414 0136 008A     		ldrh	r0, [r0, #16]
 573:App/STM32F4-Discovery/modbus_mk.c **** 					t_printf("Power In=%d, Iout=%d, Vin=%d, "
 2415              		.loc 1 573 0
 2416 0138 0446     		mov	r4, r0
 581:App/STM32F4-Discovery/modbus_mk.c **** 							telegramS.data[5]);
 2417              		.loc 1 581 0
 2418 013a 4348     		ldr	r0, .L76+12
 2419 013c 408A     		ldrh	r0, [r0, #18]
 573:App/STM32F4-Discovery/modbus_mk.c **** 					t_printf("Power In=%d, Iout=%d, Vin=%d, "
 2420              		.loc 1 573 0
 2421 013e 0095     		str	r5, [sp]
 2422 0140 0194     		str	r4, [sp, #4]
 2423 0142 0290     		str	r0, [sp, #8]
 2424 0144 4348     		ldr	r0, .L76+24
 2425 0146 FFF7FEFF 		bl	t_printf
 582:App/STM32F4-Discovery/modbus_mk.c **** 
 583:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2426              		.loc 1 583 0
 2427 014a 4FF47A70 		mov	r0, #1000
 2428 014e FFF7FEFF 		bl	vTaskDelay
 584:App/STM32F4-Discovery/modbus_mk.c **** 
 585:App/STM32F4-Discovery/modbus_mk.c **** 					// send response to CLI 
 586:App/STM32F4-Discovery/modbus_mk.c **** 					telegramS.Qcmd = SUCCSESS;
 2429              		.loc 1 586 0
 2430 0152 3D4B     		ldr	r3, .L76+12
 2431 0154 0622     		movs	r2, #6
 2432 0156 1A70     		strb	r2, [r3]
 587:App/STM32F4-Discovery/modbus_mk.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2433              		.loc 1 587 0
 2434 0158 3A4B     		ldr	r3, .L76+8
 2435 015a 1B68     		ldr	r3, [r3]
 2436 015c 1846     		mov	r0, r3
 2437 015e 3A49     		ldr	r1, .L76+12
 2438 0160 FA69     		ldr	r2, [r7, #28]
 2439 0162 0023     		movs	r3, #0
 2440 0164 FFF7FEFF 		bl	xQueueGenericSend
 588:App/STM32F4-Discovery/modbus_mk.c **** 
 589:App/STM32F4-Discovery/modbus_mk.c **** 					break;
 2441              		.loc 1 589 0
 2442 0168 66E0     		b	.L62
 2443              	.L67:
 590:App/STM32F4-Discovery/modbus_mk.c **** 
 591:App/STM32F4-Discovery/modbus_mk.c **** 				
 592:App/STM32F4-Discovery/modbus_mk.c **** 				case START: 
 593:App/STM32F4-Discovery/modbus_mk.c **** 					HB_flag = 1; 
 2444              		.loc 1 593 0
 2445 016a 0123     		movs	r3, #1
 2446 016c BB61     		str	r3, [r7, #24]
 594:App/STM32F4-Discovery/modbus_mk.c **** 				//	vTaskResume(motorHeartBeatHandle);
 595:App/STM32F4-Discovery/modbus_mk.c **** 
 596:App/STM32F4-Discovery/modbus_mk.c **** 					// set motor speed to 10% 
 597:App/STM32F4-Discovery/modbus_mk.c **** 				         src[0]=1; src[1]=1; src[2]=1; src[3]=1;
 2447              		.loc 1 597 0
 2448 016e 0123     		movs	r3, #1
 2449 0170 3B75     		strb	r3, [r7, #20]
 2450 0172 0123     		movs	r3, #1
 2451 0174 7B75     		strb	r3, [r7, #21]
 2452 0176 0123     		movs	r3, #1
 2453 0178 BB75     		strb	r3, [r7, #22]
 2454 017a 0123     		movs	r3, #1
 2455 017c FB75     		strb	r3, [r7, #23]
 598:App/STM32F4-Discovery/modbus_mk.c **** 
 599:App/STM32F4-Discovery/modbus_mk.c **** 					if( !modbus_WIB( 0 , 3, src) )
 2456              		.loc 1 599 0
 2457 017e 07F11403 		add	r3, r7, #20
 2458 0182 0020     		movs	r0, #0
 2459 0184 0321     		movs	r1, #3
 2460 0186 1A46     		mov	r2, r3
 2461 0188 FFF7FEFF 		bl	modbus_WIB
 2462 018c 0346     		mov	r3, r0
 2463 018e 002B     		cmp	r3, #0
 2464 0190 02D1     		bne	.L72
 600:App/STM32F4-Discovery/modbus_mk.c **** 					{
 601:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 602:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2465              		.loc 1 602 0
 2466 0192 2D4B     		ldr	r3, .L76+12
 2467 0194 0722     		movs	r2, #7
 2468 0196 1A70     		strb	r2, [r3]
 2469              	.L72:
 603:App/STM32F4-Discovery/modbus_mk.c **** 					//	xQueueSend(QSpd_handle, &telegramS, xDelay);
 604:App/STM32F4-Discovery/modbus_mk.c **** 					//	break;
 605:App/STM32F4-Discovery/modbus_mk.c **** 					}
 606:App/STM32F4-Discovery/modbus_mk.c **** 
 607:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2470              		.loc 1 607 0
 2471 0198 4FF47A70 		mov	r0, #1000
 2472 019c FFF7FEFF 		bl	vTaskDelay
 608:App/STM32F4-Discovery/modbus_mk.c **** 					if (!modbus_WR( 0, 5, telegramR.data))
 2473              		.loc 1 608 0
 2474 01a0 0020     		movs	r0, #0
 2475 01a2 0521     		movs	r1, #5
 2476 01a4 294A     		ldr	r2, .L76+16
 2477 01a6 FFF7FEFF 		bl	modbus_WR
 2478 01aa 0346     		mov	r3, r0
 2479 01ac 002B     		cmp	r3, #0
 2480 01ae 02D1     		bne	.L73
 609:App/STM32F4-Discovery/modbus_mk.c **** 					{
 610:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 611:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2481              		.loc 1 611 0
 2482 01b0 254B     		ldr	r3, .L76+12
 2483 01b2 0722     		movs	r2, #7
 2484 01b4 1A70     		strb	r2, [r3]
 2485              	.L73:
 612:App/STM32F4-Discovery/modbus_mk.c **** 					//	xQueueSend(QSpd_handle, &telegramS, xDelay);
 613:App/STM32F4-Discovery/modbus_mk.c **** 					//	break;
 614:App/STM32F4-Discovery/modbus_mk.c **** 					}
 615:App/STM32F4-Discovery/modbus_mk.c **** 
 616:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2486              		.loc 1 616 0
 2487 01b6 4FF47A70 		mov	r0, #1000
 2488 01ba FFF7FEFF 		bl	vTaskDelay
 617:App/STM32F4-Discovery/modbus_mk.c **** 			
 618:App/STM32F4-Discovery/modbus_mk.c **** 					// send response to CLI 
 619:App/STM32F4-Discovery/modbus_mk.c **** 					telegramS.Qcmd = SUCCSESS;
 2489              		.loc 1 619 0
 2490 01be 224B     		ldr	r3, .L76+12
 2491 01c0 0622     		movs	r2, #6
 2492 01c2 1A70     		strb	r2, [r3]
 620:App/STM32F4-Discovery/modbus_mk.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2493              		.loc 1 620 0
 2494 01c4 1F4B     		ldr	r3, .L76+8
 2495 01c6 1B68     		ldr	r3, [r3]
 2496 01c8 1846     		mov	r0, r3
 2497 01ca 1F49     		ldr	r1, .L76+12
 2498 01cc FA69     		ldr	r2, [r7, #28]
 2499 01ce 0023     		movs	r3, #0
 2500 01d0 FFF7FEFF 		bl	xQueueGenericSend
 621:App/STM32F4-Discovery/modbus_mk.c **** 
 622:App/STM32F4-Discovery/modbus_mk.c **** 					break;
 2501              		.loc 1 622 0
 2502 01d4 30E0     		b	.L62
 2503              	.L68:
 623:App/STM32F4-Discovery/modbus_mk.c **** 				
 624:App/STM32F4-Discovery/modbus_mk.c **** 				case STOP:
 625:App/STM32F4-Discovery/modbus_mk.c **** 					
 626:App/STM32F4-Discovery/modbus_mk.c **** 				//	vTaskSuspend (motorHeartBeatHandle);	
 627:App/STM32F4-Discovery/modbus_mk.c **** 					// send stop bits to motor 
 628:App/STM32F4-Discovery/modbus_mk.c **** 					src[0]=0; src[1]=1; src[2]=1; src[3]=1;
 2504              		.loc 1 628 0
 2505 01d6 0023     		movs	r3, #0
 2506 01d8 3B75     		strb	r3, [r7, #20]
 2507 01da 0123     		movs	r3, #1
 2508 01dc 7B75     		strb	r3, [r7, #21]
 2509 01de 0123     		movs	r3, #1
 2510 01e0 BB75     		strb	r3, [r7, #22]
 2511 01e2 0123     		movs	r3, #1
 2512 01e4 FB75     		strb	r3, [r7, #23]
 629:App/STM32F4-Discovery/modbus_mk.c **** 
 630:App/STM32F4-Discovery/modbus_mk.c **** 					if (!modbus_WIB( 0 , 3, src)) 
 2513              		.loc 1 630 0
 2514 01e6 07F11403 		add	r3, r7, #20
 2515 01ea 0020     		movs	r0, #0
 2516 01ec 0321     		movs	r1, #3
 2517 01ee 1A46     		mov	r2, r3
 2518 01f0 FFF7FEFF 		bl	modbus_WIB
 2519 01f4 0346     		mov	r3, r0
 2520 01f6 002B     		cmp	r3, #0
 2521 01f8 02D1     		bne	.L74
 631:App/STM32F4-Discovery/modbus_mk.c **** 					{
 632:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 633:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2522              		.loc 1 633 0
 2523 01fa 134B     		ldr	r3, .L76+12
 2524 01fc 0722     		movs	r2, #7
 2525 01fe 1A70     		strb	r2, [r3]
 2526              	.L74:
 634:App/STM32F4-Discovery/modbus_mk.c **** 				//		xQueueSend(QSpd_handle, &telegramS, xDelay);
 635:App/STM32F4-Discovery/modbus_mk.c **** 					//	break;
 636:App/STM32F4-Discovery/modbus_mk.c **** 					}
 637:App/STM32F4-Discovery/modbus_mk.c **** 
 638:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2527              		.loc 1 638 0
 2528 0200 4FF47A70 		mov	r0, #1000
 2529 0204 FFF7FEFF 		bl	vTaskDelay
 639:App/STM32F4-Discovery/modbus_mk.c **** 
 640:App/STM32F4-Discovery/modbus_mk.c **** 
 641:App/STM32F4-Discovery/modbus_mk.c **** 								// send response to CLI 
 642:App/STM32F4-Discovery/modbus_mk.c **** 					telegramS.Qcmd = SUCCSESS;
 2530              		.loc 1 642 0
 2531 0208 0F4B     		ldr	r3, .L76+12
 2532 020a 0622     		movs	r2, #6
 2533 020c 1A70     		strb	r2, [r3]
 643:App/STM32F4-Discovery/modbus_mk.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2534              		.loc 1 643 0
 2535 020e 0D4B     		ldr	r3, .L76+8
 2536 0210 1B68     		ldr	r3, [r3]
 2537 0212 1846     		mov	r0, r3
 2538 0214 0C49     		ldr	r1, .L76+12
 2539 0216 FA69     		ldr	r2, [r7, #28]
 2540 0218 0023     		movs	r3, #0
 2541 021a FFF7FEFF 		bl	xQueueGenericSend
 644:App/STM32F4-Discovery/modbus_mk.c **** 
 645:App/STM32F4-Discovery/modbus_mk.c **** 					break; 
 2542              		.loc 1 645 0
 2543 021e 0BE0     		b	.L62
 2544              	.L63:
 646:App/STM32F4-Discovery/modbus_mk.c **** 
 647:App/STM32F4-Discovery/modbus_mk.c **** 				default:
 648:App/STM32F4-Discovery/modbus_mk.c **** 
 649:App/STM32F4-Discovery/modbus_mk.c **** 					telegramS.Qcmd = ERROR_MODBUS;
 2545              		.loc 1 649 0
 2546 0220 094B     		ldr	r3, .L76+12
 2547 0222 0722     		movs	r2, #7
 2548 0224 1A70     		strb	r2, [r3]
 650:App/STM32F4-Discovery/modbus_mk.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2549              		.loc 1 650 0
 2550 0226 074B     		ldr	r3, .L76+8
 2551 0228 1B68     		ldr	r3, [r3]
 2552 022a 1846     		mov	r0, r3
 2553 022c 0649     		ldr	r1, .L76+12
 2554 022e FA69     		ldr	r2, [r7, #28]
 2555 0230 0023     		movs	r3, #0
 2556 0232 FFF7FEFF 		bl	xQueueGenericSend
 651:App/STM32F4-Discovery/modbus_mk.c **** 					break;
 2557              		.loc 1 651 0
 2558 0236 00BF     		nop
 2559              	.L62:
 652:App/STM32F4-Discovery/modbus_mk.c **** 
 653:App/STM32F4-Discovery/modbus_mk.c **** 					
 654:App/STM32F4-Discovery/modbus_mk.c **** 
 655:App/STM32F4-Discovery/modbus_mk.c **** 
 656:App/STM32F4-Discovery/modbus_mk.c **** 					
 657:App/STM32F4-Discovery/modbus_mk.c **** 			}
 658:App/STM32F4-Discovery/modbus_mk.c **** 		}
 659:App/STM32F4-Discovery/modbus_mk.c **** 	
 660:App/STM32F4-Discovery/modbus_mk.c **** 		
 661:App/STM32F4-Discovery/modbus_mk.c **** 	
 662:App/STM32F4-Discovery/modbus_mk.c **** 	}
 2560              		.loc 1 662 0
 2561 0238 12E7     		b	.L75
 2562              	.L77:
 2563 023a 00BF     		.align	2
 2564              	.L76:
 2565 023c 00000000 		.word	xSmphrUSART
 2566 0240 00000000 		.word	telegramR.9445
 2567 0244 00000000 		.word	QSpd_handle
 2568 0248 00000000 		.word	telegramS.9446
 2569 024c 08000000 		.word	telegramR.9445+8
 2570 0250 08000000 		.word	telegramS.9446+8
 2571 0254 8C000000 		.word	.LC7
 2572              		.cfi_endproc
 2573              	.LFE122:
 2575              		.section	.bss.cnt.9327,"aw",%nobits
 2578              	cnt.9327:
 2579 0000 00       		.space	1
 2580              		.section	.bss.telegramR.9445,"aw",%nobits
 2581              		.align	2
 2584              	telegramR.9445:
 2585 0000 00000000 		.space	28
 2585      00000000 
 2585      00000000 
 2585      00000000 
 2585      00000000 
 2586              		.section	.bss.telegramS.9446,"aw",%nobits
 2587              		.align	2
 2590              	telegramS.9446:
 2591 0000 00000000 		.space	28
 2591      00000000 
 2591      00000000 
 2591      00000000 
 2591      00000000 
 2592              		.text
 2593              	.Letext0:
 2594              		.file 2 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/lib/gcc/arm-none-eabi/4.8.4/include/std
 2595              		.file 3 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/machine/_default_
 2596              		.file 4 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/stdint.h"
 2597              		.file 5 "App/STM32F4-Discovery/Libraries/CMSIS/ST/STM32F4xx/Include/stm32f4xx.h"
 2598              		.file 6 "App/STM32F4-Discovery/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_gpio.h"
 2599              		.file 7 "App/STM32F4-Discovery/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
 2600              		.file 8 "App/STM32F4-Discovery/Libraries/STM32F4xx_StdPeriph_Driver/inc/misc.h"
 2601              		.file 9 "Source/portable/GCC/ARM_CM4F/portmacro.h"
 2602              		.file 10 "Source/include/task.h"
 2603              		.file 11 "Source/include/queue.h"
 2604              		.file 12 "Source/include/semphr.h"
 2605              		.file 13 "App/STM32F4-Discovery/main.h"
 2606              		.file 14 "Source/FreeRTOS-Plus-CLI/FreeRTOS_CLI.h"
 2607              		.file 15 "App/STM32F4-Discovery/tcpCLI.h"
 2608              		.file 16 "App/STM32F4-Discovery/modbus_mk.h"
 2609              		.file 17 "App/STM32F4-Discovery/Libraries/CMSIS/Include/core_cm4.h"
 2610              		.file 18 "App/STM32F4-Discovery/spi.h"
 2611              		.file 19 "App/STM32F4-Discovery/W5200.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 modbus_mk.c
                            *COM*:0000000000000004 xSemaphoreDMASPI
                            *COM*:0000000000000004 xSmphrUSART
                            *COM*:0000000000000004 xSemaphoreREADLEN
                            *COM*:0000000000000004 motorHeartBeatHandle
                            *COM*:0000000000000004 motorHBHandle
                            *COM*:0000000000000004 QSpd_handle
                            *COM*:0000000000000004 QTCP_handle
                            *COM*:0000000000000004 socket_0
                            *COM*:00000000000007d0 bufferTX
                            *COM*:00000000000007d0 bufferRX
                            *COM*:0000000000000004 bufferRXidx
                            *COM*:0000000000000004 bufferTXidx
                            *COM*:0000000000000004 dat_lengthRX
                            *COM*:0000000000000004 dat_lengthTX
                            *COM*:0000000000000004 set_macTaskHandle
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:35     .rodata:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:43     .rodata.xMotorCommand:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:46     .rodata.xMotorCommand:0000000000000000 xMotorCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:60     .rodata.xTaskStatsCommand:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:63     .rodata.xTaskStatsCommand:0000000000000000 xTaskStatsCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:70     .rodata.table_crc_hi:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:73     .rodata.table_crc_hi:0000000000000000 table_crc_hi
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:331    .rodata.table_crc_lo:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:334    .rodata.table_crc_lo:0000000000000000 table_crc_lo
                            *COM*:0000000000000004 fd
                            *COM*:0000000000000201 received_string
                            *COM*:0000000000000004 rx_length
                            *COM*:0000000000000014 input_Register
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:596    .text.init_USARTx:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:601    .text.init_USARTx:0000000000000000 init_USARTx
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:749    .text.init_USARTx:00000000000000e4 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:756    .text.USART_puts:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:761    .text.USART_puts:0000000000000000 USART_puts
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:828    .text.USART_puts:000000000000004c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:833    .text.USART6_IRQHandler:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:838    .text.USART6_IRQHandler:0000000000000000 USART6_IRQHandler
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:942    .text.USART6_IRQHandler:0000000000000090 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:2578   .bss.cnt.9327:0000000000000000 cnt.9327
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:952    .text.crc16:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:957    .text.crc16:0000000000000000 crc16
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:1035   .text.crc16:0000000000000064 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:1041   .text.modbus_confirmation:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:1046   .text.modbus_confirmation:0000000000000000 modbus_confirmation
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:1124   .text.write_read_modbus:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:1129   .text.write_read_modbus:0000000000000000 write_read_modbus
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:1258   .text.write_read_modbus:00000000000000c0 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:1268   .text.modbus_RIB:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:1273   .text.modbus_RIB:0000000000000000 modbus_RIB
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:1392   .text.modbus_WIB:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:1397   .text.modbus_WIB:0000000000000000 modbus_WIB
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:1646   .text.modbus_WR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:1651   .text.modbus_WR:0000000000000000 modbus_WR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:1825   .text.modbus_WSR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:1830   .text.modbus_WSR:0000000000000000 modbus_WSR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:1968   .text.modbus_RR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:1973   .text.modbus_RR:0000000000000000 modbus_RR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:2160   .text.motorHeartBeat_task:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:2165   .text.motorHeartBeat_task:0000000000000000 motorHeartBeat_task
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:2209   .text.motorHeartBeat_task:0000000000000034 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:2219   .text.motorControl_task:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:2224   .text.motorControl_task:0000000000000000 motorControl_task
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:2316   .text.motorControl_task:0000000000000088 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:2322   .text.motorControl_task:00000000000000a0 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:2565   .text.motorControl_task:000000000000023c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:2584   .bss.telegramR.9445:0000000000000000 telegramR.9445
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:2590   .bss.telegramS.9446:0000000000000000 telegramS.9446
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:2579   .bss.cnt.9327:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:2581   .bss.telegramR.9445:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccL7ncHi.s:2587   .bss.telegramS.9446:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
prvMotorCommand
prvTaskStatsCommand
RCC_APB2PeriphClockCmd
RCC_AHB1PeriphClockCmd
GPIO_Init
GPIO_PinAFConfig
USART_Init
USART_ITConfig
NVIC_Init
USART_Cmd
USART_GetITStatus
USART_ClearITPendingBit
xQueueGenericSendFromISR
xQueueGenericReceive
t_printf
vTaskDelay
xQueueGenericCreate
xQueueGenericSend
