   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"modbus_mk.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	xSemaphoreDMASPI,4,4
  20              		.comm	xSmphrUSART,4,4
  21              		.comm	xSemaphoreREADLEN,4,4
  22              		.comm	motorHeartBeatHandle,4,4
  23              		.comm	motorHBHandle,4,4
  24              		.comm	QSpd_handle,4,4
  25              		.comm	QTCP_handle,4,4
  26              		.comm	socket_0,4,4
  27              		.comm	bufferTX,2000,4
  28              		.comm	bufferRX,2000,4
  29              		.comm	bufferRXidx,4,4
  30              		.comm	bufferTXidx,4,4
  31              		.comm	dat_lengthRX,4,4
  32              		.comm	dat_lengthTX,4,4
  33              		.comm	set_macTaskHandle,4,4
  34              		.section	.rodata
  35              		.align	2
  36              	.LC0:
  37 0000 6D6F746F 		.ascii	"motor\000"
  37      7200
  38 0006 0000     		.align	2
  39              	.LC1:
  40 0008 6D6F746F 		.ascii	"motor  [options]\302\240[parameters]\302\240- Type "
  40      7220205B 
  40      6F707469 
  40      6F6E735D 
  40      C2A05B70 
  41 002f 6D6F746F 		.ascii	"motor help for more help\015\012\012\000\000"
  41      72206865 
  41      6C702066 
  41      6F72206D 
  41      6F726520 
  42              		.section	.rodata.xMotorCommand,"a",%progbits
  43              		.align	2
  46              	xMotorCommand:
  47 0000 00000000 		.word	.LC0
  48 0004 08000000 		.word	.LC1
  49 0008 00000000 		.word	prvMotorCommand
  50 000c FF       		.byte	-1
  51 000d 000000   		.space	3
  52              		.section	.rodata
  53              		.align	2
  54              	.LC2:
  55 004c 7461736B 		.ascii	"task\000"
  55      00
  56 0051 000000   		.align	2
  57              	.LC3:
  58 0054 7461736B 		.ascii	"task - return tasks list\015\012\012\000\000"
  58      202D2072 
  58      65747572 
  58      6E207461 
  58      736B7320 
  59              		.section	.rodata.xTaskStatsCommand,"a",%progbits
  60              		.align	2
  63              	xTaskStatsCommand:
  64 0000 4C000000 		.word	.LC2
  65 0004 54000000 		.word	.LC3
  66 0008 00000000 		.word	prvTaskStatsCommand
  67 000c FF       		.byte	-1
  68 000d 000000   		.space	3
  69              		.section	.rodata.table_crc_hi,"a",%progbits
  70              		.align	2
  73              	table_crc_hi:
  74 0000 00       		.byte	0
  75 0001 C1       		.byte	-63
  76 0002 81       		.byte	-127
  77 0003 40       		.byte	64
  78 0004 01       		.byte	1
  79 0005 C0       		.byte	-64
  80 0006 80       		.byte	-128
  81 0007 41       		.byte	65
  82 0008 01       		.byte	1
  83 0009 C0       		.byte	-64
  84 000a 80       		.byte	-128
  85 000b 41       		.byte	65
  86 000c 00       		.byte	0
  87 000d C1       		.byte	-63
  88 000e 81       		.byte	-127
  89 000f 40       		.byte	64
  90 0010 01       		.byte	1
  91 0011 C0       		.byte	-64
  92 0012 80       		.byte	-128
  93 0013 41       		.byte	65
  94 0014 00       		.byte	0
  95 0015 C1       		.byte	-63
  96 0016 81       		.byte	-127
  97 0017 40       		.byte	64
  98 0018 00       		.byte	0
  99 0019 C1       		.byte	-63
 100 001a 81       		.byte	-127
 101 001b 40       		.byte	64
 102 001c 01       		.byte	1
 103 001d C0       		.byte	-64
 104 001e 80       		.byte	-128
 105 001f 41       		.byte	65
 106 0020 01       		.byte	1
 107 0021 C0       		.byte	-64
 108 0022 80       		.byte	-128
 109 0023 41       		.byte	65
 110 0024 00       		.byte	0
 111 0025 C1       		.byte	-63
 112 0026 81       		.byte	-127
 113 0027 40       		.byte	64
 114 0028 00       		.byte	0
 115 0029 C1       		.byte	-63
 116 002a 81       		.byte	-127
 117 002b 40       		.byte	64
 118 002c 01       		.byte	1
 119 002d C0       		.byte	-64
 120 002e 80       		.byte	-128
 121 002f 41       		.byte	65
 122 0030 00       		.byte	0
 123 0031 C1       		.byte	-63
 124 0032 81       		.byte	-127
 125 0033 40       		.byte	64
 126 0034 01       		.byte	1
 127 0035 C0       		.byte	-64
 128 0036 80       		.byte	-128
 129 0037 41       		.byte	65
 130 0038 01       		.byte	1
 131 0039 C0       		.byte	-64
 132 003a 80       		.byte	-128
 133 003b 41       		.byte	65
 134 003c 00       		.byte	0
 135 003d C1       		.byte	-63
 136 003e 81       		.byte	-127
 137 003f 40       		.byte	64
 138 0040 01       		.byte	1
 139 0041 C0       		.byte	-64
 140 0042 80       		.byte	-128
 141 0043 41       		.byte	65
 142 0044 00       		.byte	0
 143 0045 C1       		.byte	-63
 144 0046 81       		.byte	-127
 145 0047 40       		.byte	64
 146 0048 00       		.byte	0
 147 0049 C1       		.byte	-63
 148 004a 81       		.byte	-127
 149 004b 40       		.byte	64
 150 004c 01       		.byte	1
 151 004d C0       		.byte	-64
 152 004e 80       		.byte	-128
 153 004f 41       		.byte	65
 154 0050 00       		.byte	0
 155 0051 C1       		.byte	-63
 156 0052 81       		.byte	-127
 157 0053 40       		.byte	64
 158 0054 01       		.byte	1
 159 0055 C0       		.byte	-64
 160 0056 80       		.byte	-128
 161 0057 41       		.byte	65
 162 0058 01       		.byte	1
 163 0059 C0       		.byte	-64
 164 005a 80       		.byte	-128
 165 005b 41       		.byte	65
 166 005c 00       		.byte	0
 167 005d C1       		.byte	-63
 168 005e 81       		.byte	-127
 169 005f 40       		.byte	64
 170 0060 00       		.byte	0
 171 0061 C1       		.byte	-63
 172 0062 81       		.byte	-127
 173 0063 40       		.byte	64
 174 0064 01       		.byte	1
 175 0065 C0       		.byte	-64
 176 0066 80       		.byte	-128
 177 0067 41       		.byte	65
 178 0068 01       		.byte	1
 179 0069 C0       		.byte	-64
 180 006a 80       		.byte	-128
 181 006b 41       		.byte	65
 182 006c 00       		.byte	0
 183 006d C1       		.byte	-63
 184 006e 81       		.byte	-127
 185 006f 40       		.byte	64
 186 0070 01       		.byte	1
 187 0071 C0       		.byte	-64
 188 0072 80       		.byte	-128
 189 0073 41       		.byte	65
 190 0074 00       		.byte	0
 191 0075 C1       		.byte	-63
 192 0076 81       		.byte	-127
 193 0077 40       		.byte	64
 194 0078 00       		.byte	0
 195 0079 C1       		.byte	-63
 196 007a 81       		.byte	-127
 197 007b 40       		.byte	64
 198 007c 01       		.byte	1
 199 007d C0       		.byte	-64
 200 007e 80       		.byte	-128
 201 007f 41       		.byte	65
 202 0080 01       		.byte	1
 203 0081 C0       		.byte	-64
 204 0082 80       		.byte	-128
 205 0083 41       		.byte	65
 206 0084 00       		.byte	0
 207 0085 C1       		.byte	-63
 208 0086 81       		.byte	-127
 209 0087 40       		.byte	64
 210 0088 00       		.byte	0
 211 0089 C1       		.byte	-63
 212 008a 81       		.byte	-127
 213 008b 40       		.byte	64
 214 008c 01       		.byte	1
 215 008d C0       		.byte	-64
 216 008e 80       		.byte	-128
 217 008f 41       		.byte	65
 218 0090 00       		.byte	0
 219 0091 C1       		.byte	-63
 220 0092 81       		.byte	-127
 221 0093 40       		.byte	64
 222 0094 01       		.byte	1
 223 0095 C0       		.byte	-64
 224 0096 80       		.byte	-128
 225 0097 41       		.byte	65
 226 0098 01       		.byte	1
 227 0099 C0       		.byte	-64
 228 009a 80       		.byte	-128
 229 009b 41       		.byte	65
 230 009c 00       		.byte	0
 231 009d C1       		.byte	-63
 232 009e 81       		.byte	-127
 233 009f 40       		.byte	64
 234 00a0 00       		.byte	0
 235 00a1 C1       		.byte	-63
 236 00a2 81       		.byte	-127
 237 00a3 40       		.byte	64
 238 00a4 01       		.byte	1
 239 00a5 C0       		.byte	-64
 240 00a6 80       		.byte	-128
 241 00a7 41       		.byte	65
 242 00a8 01       		.byte	1
 243 00a9 C0       		.byte	-64
 244 00aa 80       		.byte	-128
 245 00ab 41       		.byte	65
 246 00ac 00       		.byte	0
 247 00ad C1       		.byte	-63
 248 00ae 81       		.byte	-127
 249 00af 40       		.byte	64
 250 00b0 01       		.byte	1
 251 00b1 C0       		.byte	-64
 252 00b2 80       		.byte	-128
 253 00b3 41       		.byte	65
 254 00b4 00       		.byte	0
 255 00b5 C1       		.byte	-63
 256 00b6 81       		.byte	-127
 257 00b7 40       		.byte	64
 258 00b8 00       		.byte	0
 259 00b9 C1       		.byte	-63
 260 00ba 81       		.byte	-127
 261 00bb 40       		.byte	64
 262 00bc 01       		.byte	1
 263 00bd C0       		.byte	-64
 264 00be 80       		.byte	-128
 265 00bf 41       		.byte	65
 266 00c0 00       		.byte	0
 267 00c1 C1       		.byte	-63
 268 00c2 81       		.byte	-127
 269 00c3 40       		.byte	64
 270 00c4 01       		.byte	1
 271 00c5 C0       		.byte	-64
 272 00c6 80       		.byte	-128
 273 00c7 41       		.byte	65
 274 00c8 01       		.byte	1
 275 00c9 C0       		.byte	-64
 276 00ca 80       		.byte	-128
 277 00cb 41       		.byte	65
 278 00cc 00       		.byte	0
 279 00cd C1       		.byte	-63
 280 00ce 81       		.byte	-127
 281 00cf 40       		.byte	64
 282 00d0 01       		.byte	1
 283 00d1 C0       		.byte	-64
 284 00d2 80       		.byte	-128
 285 00d3 41       		.byte	65
 286 00d4 00       		.byte	0
 287 00d5 C1       		.byte	-63
 288 00d6 81       		.byte	-127
 289 00d7 40       		.byte	64
 290 00d8 00       		.byte	0
 291 00d9 C1       		.byte	-63
 292 00da 81       		.byte	-127
 293 00db 40       		.byte	64
 294 00dc 01       		.byte	1
 295 00dd C0       		.byte	-64
 296 00de 80       		.byte	-128
 297 00df 41       		.byte	65
 298 00e0 01       		.byte	1
 299 00e1 C0       		.byte	-64
 300 00e2 80       		.byte	-128
 301 00e3 41       		.byte	65
 302 00e4 00       		.byte	0
 303 00e5 C1       		.byte	-63
 304 00e6 81       		.byte	-127
 305 00e7 40       		.byte	64
 306 00e8 00       		.byte	0
 307 00e9 C1       		.byte	-63
 308 00ea 81       		.byte	-127
 309 00eb 40       		.byte	64
 310 00ec 01       		.byte	1
 311 00ed C0       		.byte	-64
 312 00ee 80       		.byte	-128
 313 00ef 41       		.byte	65
 314 00f0 00       		.byte	0
 315 00f1 C1       		.byte	-63
 316 00f2 81       		.byte	-127
 317 00f3 40       		.byte	64
 318 00f4 01       		.byte	1
 319 00f5 C0       		.byte	-64
 320 00f6 80       		.byte	-128
 321 00f7 41       		.byte	65
 322 00f8 01       		.byte	1
 323 00f9 C0       		.byte	-64
 324 00fa 80       		.byte	-128
 325 00fb 41       		.byte	65
 326 00fc 00       		.byte	0
 327 00fd C1       		.byte	-63
 328 00fe 81       		.byte	-127
 329 00ff 40       		.byte	64
 330              		.section	.rodata.table_crc_lo,"a",%progbits
 331              		.align	2
 334              	table_crc_lo:
 335 0000 00       		.byte	0
 336 0001 C0       		.byte	-64
 337 0002 C1       		.byte	-63
 338 0003 01       		.byte	1
 339 0004 C3       		.byte	-61
 340 0005 03       		.byte	3
 341 0006 02       		.byte	2
 342 0007 C2       		.byte	-62
 343 0008 C6       		.byte	-58
 344 0009 06       		.byte	6
 345 000a 07       		.byte	7
 346 000b C7       		.byte	-57
 347 000c 05       		.byte	5
 348 000d C5       		.byte	-59
 349 000e C4       		.byte	-60
 350 000f 04       		.byte	4
 351 0010 CC       		.byte	-52
 352 0011 0C       		.byte	12
 353 0012 0D       		.byte	13
 354 0013 CD       		.byte	-51
 355 0014 0F       		.byte	15
 356 0015 CF       		.byte	-49
 357 0016 CE       		.byte	-50
 358 0017 0E       		.byte	14
 359 0018 0A       		.byte	10
 360 0019 CA       		.byte	-54
 361 001a CB       		.byte	-53
 362 001b 0B       		.byte	11
 363 001c C9       		.byte	-55
 364 001d 09       		.byte	9
 365 001e 08       		.byte	8
 366 001f C8       		.byte	-56
 367 0020 D8       		.byte	-40
 368 0021 18       		.byte	24
 369 0022 19       		.byte	25
 370 0023 D9       		.byte	-39
 371 0024 1B       		.byte	27
 372 0025 DB       		.byte	-37
 373 0026 DA       		.byte	-38
 374 0027 1A       		.byte	26
 375 0028 1E       		.byte	30
 376 0029 DE       		.byte	-34
 377 002a DF       		.byte	-33
 378 002b 1F       		.byte	31
 379 002c DD       		.byte	-35
 380 002d 1D       		.byte	29
 381 002e 1C       		.byte	28
 382 002f DC       		.byte	-36
 383 0030 14       		.byte	20
 384 0031 D4       		.byte	-44
 385 0032 D5       		.byte	-43
 386 0033 15       		.byte	21
 387 0034 D7       		.byte	-41
 388 0035 17       		.byte	23
 389 0036 16       		.byte	22
 390 0037 D6       		.byte	-42
 391 0038 D2       		.byte	-46
 392 0039 12       		.byte	18
 393 003a 13       		.byte	19
 394 003b D3       		.byte	-45
 395 003c 11       		.byte	17
 396 003d D1       		.byte	-47
 397 003e D0       		.byte	-48
 398 003f 10       		.byte	16
 399 0040 F0       		.byte	-16
 400 0041 30       		.byte	48
 401 0042 31       		.byte	49
 402 0043 F1       		.byte	-15
 403 0044 33       		.byte	51
 404 0045 F3       		.byte	-13
 405 0046 F2       		.byte	-14
 406 0047 32       		.byte	50
 407 0048 36       		.byte	54
 408 0049 F6       		.byte	-10
 409 004a F7       		.byte	-9
 410 004b 37       		.byte	55
 411 004c F5       		.byte	-11
 412 004d 35       		.byte	53
 413 004e 34       		.byte	52
 414 004f F4       		.byte	-12
 415 0050 3C       		.byte	60
 416 0051 FC       		.byte	-4
 417 0052 FD       		.byte	-3
 418 0053 3D       		.byte	61
 419 0054 FF       		.byte	-1
 420 0055 3F       		.byte	63
 421 0056 3E       		.byte	62
 422 0057 FE       		.byte	-2
 423 0058 FA       		.byte	-6
 424 0059 3A       		.byte	58
 425 005a 3B       		.byte	59
 426 005b FB       		.byte	-5
 427 005c 39       		.byte	57
 428 005d F9       		.byte	-7
 429 005e F8       		.byte	-8
 430 005f 38       		.byte	56
 431 0060 28       		.byte	40
 432 0061 E8       		.byte	-24
 433 0062 E9       		.byte	-23
 434 0063 29       		.byte	41
 435 0064 EB       		.byte	-21
 436 0065 2B       		.byte	43
 437 0066 2A       		.byte	42
 438 0067 EA       		.byte	-22
 439 0068 EE       		.byte	-18
 440 0069 2E       		.byte	46
 441 006a 2F       		.byte	47
 442 006b EF       		.byte	-17
 443 006c 2D       		.byte	45
 444 006d ED       		.byte	-19
 445 006e EC       		.byte	-20
 446 006f 2C       		.byte	44
 447 0070 E4       		.byte	-28
 448 0071 24       		.byte	36
 449 0072 25       		.byte	37
 450 0073 E5       		.byte	-27
 451 0074 27       		.byte	39
 452 0075 E7       		.byte	-25
 453 0076 E6       		.byte	-26
 454 0077 26       		.byte	38
 455 0078 22       		.byte	34
 456 0079 E2       		.byte	-30
 457 007a E3       		.byte	-29
 458 007b 23       		.byte	35
 459 007c E1       		.byte	-31
 460 007d 21       		.byte	33
 461 007e 20       		.byte	32
 462 007f E0       		.byte	-32
 463 0080 A0       		.byte	-96
 464 0081 60       		.byte	96
 465 0082 61       		.byte	97
 466 0083 A1       		.byte	-95
 467 0084 63       		.byte	99
 468 0085 A3       		.byte	-93
 469 0086 A2       		.byte	-94
 470 0087 62       		.byte	98
 471 0088 66       		.byte	102
 472 0089 A6       		.byte	-90
 473 008a A7       		.byte	-89
 474 008b 67       		.byte	103
 475 008c A5       		.byte	-91
 476 008d 65       		.byte	101
 477 008e 64       		.byte	100
 478 008f A4       		.byte	-92
 479 0090 6C       		.byte	108
 480 0091 AC       		.byte	-84
 481 0092 AD       		.byte	-83
 482 0093 6D       		.byte	109
 483 0094 AF       		.byte	-81
 484 0095 6F       		.byte	111
 485 0096 6E       		.byte	110
 486 0097 AE       		.byte	-82
 487 0098 AA       		.byte	-86
 488 0099 6A       		.byte	106
 489 009a 6B       		.byte	107
 490 009b AB       		.byte	-85
 491 009c 69       		.byte	105
 492 009d A9       		.byte	-87
 493 009e A8       		.byte	-88
 494 009f 68       		.byte	104
 495 00a0 78       		.byte	120
 496 00a1 B8       		.byte	-72
 497 00a2 B9       		.byte	-71
 498 00a3 79       		.byte	121
 499 00a4 BB       		.byte	-69
 500 00a5 7B       		.byte	123
 501 00a6 7A       		.byte	122
 502 00a7 BA       		.byte	-70
 503 00a8 BE       		.byte	-66
 504 00a9 7E       		.byte	126
 505 00aa 7F       		.byte	127
 506 00ab BF       		.byte	-65
 507 00ac 7D       		.byte	125
 508 00ad BD       		.byte	-67
 509 00ae BC       		.byte	-68
 510 00af 7C       		.byte	124
 511 00b0 B4       		.byte	-76
 512 00b1 74       		.byte	116
 513 00b2 75       		.byte	117
 514 00b3 B5       		.byte	-75
 515 00b4 77       		.byte	119
 516 00b5 B7       		.byte	-73
 517 00b6 B6       		.byte	-74
 518 00b7 76       		.byte	118
 519 00b8 72       		.byte	114
 520 00b9 B2       		.byte	-78
 521 00ba B3       		.byte	-77
 522 00bb 73       		.byte	115
 523 00bc B1       		.byte	-79
 524 00bd 71       		.byte	113
 525 00be 70       		.byte	112
 526 00bf B0       		.byte	-80
 527 00c0 50       		.byte	80
 528 00c1 90       		.byte	-112
 529 00c2 91       		.byte	-111
 530 00c3 51       		.byte	81
 531 00c4 93       		.byte	-109
 532 00c5 53       		.byte	83
 533 00c6 52       		.byte	82
 534 00c7 92       		.byte	-110
 535 00c8 96       		.byte	-106
 536 00c9 56       		.byte	86
 537 00ca 57       		.byte	87
 538 00cb 97       		.byte	-105
 539 00cc 55       		.byte	85
 540 00cd 95       		.byte	-107
 541 00ce 94       		.byte	-108
 542 00cf 54       		.byte	84
 543 00d0 9C       		.byte	-100
 544 00d1 5C       		.byte	92
 545 00d2 5D       		.byte	93
 546 00d3 9D       		.byte	-99
 547 00d4 5F       		.byte	95
 548 00d5 9F       		.byte	-97
 549 00d6 9E       		.byte	-98
 550 00d7 5E       		.byte	94
 551 00d8 5A       		.byte	90
 552 00d9 9A       		.byte	-102
 553 00da 9B       		.byte	-101
 554 00db 5B       		.byte	91
 555 00dc 99       		.byte	-103
 556 00dd 59       		.byte	89
 557 00de 58       		.byte	88
 558 00df 98       		.byte	-104
 559 00e0 88       		.byte	-120
 560 00e1 48       		.byte	72
 561 00e2 49       		.byte	73
 562 00e3 89       		.byte	-119
 563 00e4 4B       		.byte	75
 564 00e5 8B       		.byte	-117
 565 00e6 8A       		.byte	-118
 566 00e7 4A       		.byte	74
 567 00e8 4E       		.byte	78
 568 00e9 8E       		.byte	-114
 569 00ea 8F       		.byte	-113
 570 00eb 4F       		.byte	79
 571 00ec 8D       		.byte	-115
 572 00ed 4D       		.byte	77
 573 00ee 4C       		.byte	76
 574 00ef 8C       		.byte	-116
 575 00f0 44       		.byte	68
 576 00f1 84       		.byte	-124
 577 00f2 85       		.byte	-123
 578 00f3 45       		.byte	69
 579 00f4 87       		.byte	-121
 580 00f5 47       		.byte	71
 581 00f6 46       		.byte	70
 582 00f7 86       		.byte	-122
 583 00f8 82       		.byte	-126
 584 00f9 42       		.byte	66
 585 00fa 43       		.byte	67
 586 00fb 83       		.byte	-125
 587 00fc 41       		.byte	65
 588 00fd 81       		.byte	-127
 589 00fe 80       		.byte	-128
 590 00ff 40       		.byte	64
 591              		.comm	fd,4,4
 592              		.comm	received_string,513,4
 593              		.comm	rx_length,4,4
 594              		.comm	input_Register,20,4
 595              		.section	.text.init_USARTx,"ax",%progbits
 596              		.align	2
 597              		.global	init_USARTx
 598              		.thumb
 599              		.thumb_func
 601              	init_USARTx:
 602              	.LFB110:
 603              		.file 1 "App/STM32F4-Discovery/modbus_mk.c"
   1:App/STM32F4-Discovery/modbus_mk.c **** /*! \file modbus_mk.c
   2:App/STM32F4-Discovery/modbus_mk.c ****  *  \brief modbus protocol functions and motor control
   3:App/STM32F4-Discovery/modbus_mk.c ****  */
   4:App/STM32F4-Discovery/modbus_mk.c **** 
   5:App/STM32F4-Discovery/modbus_mk.c **** 
   6:App/STM32F4-Discovery/modbus_mk.c **** #include "modbus_mk.h"
   7:App/STM32F4-Discovery/modbus_mk.c **** #include "printf.h"
   8:App/STM32F4-Discovery/modbus_mk.c **** 
   9:App/STM32F4-Discovery/modbus_mk.c **** 
  10:App/STM32F4-Discovery/modbus_mk.c **** #define DEBUG
  11:App/STM32F4-Discovery/modbus_mk.c **** 
  12:App/STM32F4-Discovery/modbus_mk.c **** 
  13:App/STM32F4-Discovery/modbus_mk.c **** /* This funcion initializes the USART1 peripheral
  14:App/STM32F4-Discovery/modbus_mk.c ****  * 
  15:App/STM32F4-Discovery/modbus_mk.c ****  * Arguments: baudrate --> the baudrate at which the USART is 
  16:App/STM32F4-Discovery/modbus_mk.c ****  * 						   supposed to operate
  17:App/STM32F4-Discovery/modbus_mk.c ****  */
  18:App/STM32F4-Discovery/modbus_mk.c **** 
  19:App/STM32F4-Discovery/modbus_mk.c **** #define pdFalse 0
  20:App/STM32F4-Discovery/modbus_mk.c **** #define pdTrue 	1
  21:App/STM32F4-Discovery/modbus_mk.c **** 
  22:App/STM32F4-Discovery/modbus_mk.c **** 
  23:App/STM32F4-Discovery/modbus_mk.c **** void init_USARTx(void)
  24:App/STM32F4-Discovery/modbus_mk.c **** {
 604              		.loc 1 24 0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 32
 607              		@ frame_needed = 1, uses_anonymous_args = 0
 608 0000 80B5     		push	{r7, lr}
 609              	.LCFI0:
 610              		.cfi_def_cfa_offset 8
 611              		.cfi_offset 7, -8
 612              		.cfi_offset 14, -4
 613 0002 88B0     		sub	sp, sp, #32
 614              	.LCFI1:
 615              		.cfi_def_cfa_offset 40
 616 0004 00AF     		add	r7, sp, #0
 617              	.LCFI2:
 618              		.cfi_def_cfa_register 7
  25:App/STM32F4-Discovery/modbus_mk.c **** 	
  26:App/STM32F4-Discovery/modbus_mk.c **** 	
  27:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitTypeDef GPIO_InitStruct; // this is for the GPIO pins used as TX and RX
  28:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitTypeDef USART_InitStruct; // this is for the USART1 initilization
  29:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitTypeDef NVIC_InitStructure; // this is used to configure the NVIC (nested vector interrup
  30:App/STM32F4-Discovery/modbus_mk.c **** 	
  31:App/STM32F4-Discovery/modbus_mk.c **** 	/* enable APB2 peripheral clock for USART1 
  32:App/STM32F4-Discovery/modbus_mk.c **** 	 * note that only USART1 and USART6 are connected to APB2
  33:App/STM32F4-Discovery/modbus_mk.c **** 	 * the other USARTs are connected to APB1
  34:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  35:App/STM32F4-Discovery/modbus_mk.c **** 	RCC_APB2PeriphClockCmd(USARTx_CLK, ENABLE);
 619              		.loc 1 35 0
 620 0006 2020     		movs	r0, #32
 621 0008 0121     		movs	r1, #1
 622 000a FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
  36:App/STM32F4-Discovery/modbus_mk.c **** 	
  37:App/STM32F4-Discovery/modbus_mk.c **** 	/* enable the peripheral clock for the pins used by 
  38:App/STM32F4-Discovery/modbus_mk.c **** 	 * USART1, PB6 for TX and PB7 for RX 
  39:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  40:App/STM32F4-Discovery/modbus_mk.c **** 	RCC_AHB1PeriphClockCmd(USARTx_TX_GPIO_CLK, ENABLE);
 623              		.loc 1 40 0
 624 000e 0420     		movs	r0, #4
 625 0010 0121     		movs	r1, #1
 626 0012 FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  41:App/STM32F4-Discovery/modbus_mk.c **** 	RCC_AHB1PeriphClockCmd(USARTx_RX_GPIO_CLK, ENABLE);
 627              		.loc 1 41 0
 628 0016 0420     		movs	r0, #4
 629 0018 0121     		movs	r1, #1
 630 001a FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  42:App/STM32F4-Discovery/modbus_mk.c **** 	RCC_AHB1PeriphClockCmd(USARTx_CS_GPIO_CLK, ENABLE);
 631              		.loc 1 42 0
 632 001e 4020     		movs	r0, #64
 633 0020 0121     		movs	r1, #1
 634 0022 FFF7FEFF 		bl	RCC_AHB1PeriphClockCmd
  43:App/STM32F4-Discovery/modbus_mk.c **** 
  44:App/STM32F4-Discovery/modbus_mk.c **** 	
  45:App/STM32F4-Discovery/modbus_mk.c **** 	/* This sequence sets up the TX and RX pins 
  46:App/STM32F4-Discovery/modbus_mk.c **** 	 * so they work correctly with the USART1 peripheral
  47:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  48:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Pin = USARTx_RX_GPIO_PIN | USARTx_TX_GPIO_PIN; // Pins 6 (TX) and 7 (RX) are 
 635              		.loc 1 48 0
 636 0026 C023     		movs	r3, #192
 637 0028 BB61     		str	r3, [r7, #24]
  49:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF; 			// the pins are configured as alternate function so t
 638              		.loc 1 49 0
 639 002a 0223     		movs	r3, #2
 640 002c 3B77     		strb	r3, [r7, #28]
  50:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;		// this defines the IO speed and has nothing to d
 641              		.loc 1 50 0
 642 002e 0323     		movs	r3, #3
 643 0030 7B77     		strb	r3, [r7, #29]
  51:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;			// this defines the output type as push pull mode (a
 644              		.loc 1 51 0
 645 0032 0023     		movs	r3, #0
 646 0034 BB77     		strb	r3, [r7, #30]
  52:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;			// this activates the pullup resistors on the IO pins
 647              		.loc 1 52 0
 648 0036 0123     		movs	r3, #1
 649 0038 FB77     		strb	r3, [r7, #31]
  53:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_Init(USARTx_TX_GPIO_PORT, &GPIO_InitStruct);					// now all the values are passed to the GPIO
 650              		.loc 1 53 0
 651 003a 07F11803 		add	r3, r7, #24
 652 003e 2948     		ldr	r0, .L2
 653 0040 1946     		mov	r1, r3
 654 0042 FFF7FEFF 		bl	GPIO_Init
  54:App/STM32F4-Discovery/modbus_mk.c **** 	
  55:App/STM32F4-Discovery/modbus_mk.c **** 	
  56:App/STM32F4-Discovery/modbus_mk.c **** 	
  57:App/STM32F4-Discovery/modbus_mk.c **** 	/* Configure the chip select pin in this case we will use PG8 */
  58:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Pin = USARTx_CS_GPIO_PIN;
 655              		.loc 1 58 0
 656 0046 4FF48073 		mov	r3, #256
 657 004a BB61     		str	r3, [r7, #24]
  59:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_OUT;
 658              		.loc 1 59 0
 659 004c 0123     		movs	r3, #1
 660 004e 3B77     		strb	r3, [r7, #28]
  60:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;
 661              		.loc 1 60 0
 662 0050 0023     		movs	r3, #0
 663 0052 BB77     		strb	r3, [r7, #30]
  61:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_100MHz;
 664              		.loc 1 61 0
 665 0054 0323     		movs	r3, #3
 666 0056 7B77     		strb	r3, [r7, #29]
  62:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;
 667              		.loc 1 62 0
 668 0058 0123     		movs	r3, #1
 669 005a FB77     		strb	r3, [r7, #31]
  63:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_Init(USARTx_CS_GPIO_PORT, &GPIO_InitStruct);
 670              		.loc 1 63 0
 671 005c 07F11803 		add	r3, r7, #24
 672 0060 2148     		ldr	r0, .L2+4
 673 0062 1946     		mov	r1, r3
 674 0064 FFF7FEFF 		bl	GPIO_Init
  64:App/STM32F4-Discovery/modbus_mk.c **** 
  65:App/STM32F4-Discovery/modbus_mk.c **** 	DD() // set PG8 high
 675              		.loc 1 65 0
 676 0068 1F4B     		ldr	r3, .L2+4
 677 006a 1F4A     		ldr	r2, .L2+4
 678 006c 128B     		ldrh	r2, [r2, #24]	@ movhi
 679 006e 92B2     		uxth	r2, r2
 680 0070 42F48072 		orr	r2, r2, #256
 681 0074 92B2     		uxth	r2, r2
 682 0076 1A83     		strh	r2, [r3, #24]	@ movhi
  66:App/STM32F4-Discovery/modbus_mk.c **** 	
  67:App/STM32F4-Discovery/modbus_mk.c **** 	
  68:App/STM32F4-Discovery/modbus_mk.c **** 	/* The RX and TX pins are now connected to their AF
  69:App/STM32F4-Discovery/modbus_mk.c **** 	 * so that the USART1 can take over control of the 
  70:App/STM32F4-Discovery/modbus_mk.c **** 	 * pins
  71:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  72:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_PinAFConfig(GPIOC, GPIO_PinSource6, GPIO_AF_USART6); //
 683              		.loc 1 72 0
 684 0078 1A48     		ldr	r0, .L2
 685 007a 0621     		movs	r1, #6
 686 007c 0822     		movs	r2, #8
 687 007e FFF7FEFF 		bl	GPIO_PinAFConfig
  73:App/STM32F4-Discovery/modbus_mk.c **** 	GPIO_PinAFConfig(GPIOC, GPIO_PinSource7, GPIO_AF_USART6);
 688              		.loc 1 73 0
 689 0082 1848     		ldr	r0, .L2
 690 0084 0721     		movs	r1, #7
 691 0086 0822     		movs	r2, #8
 692 0088 FFF7FEFF 		bl	GPIO_PinAFConfig
  74:App/STM32F4-Discovery/modbus_mk.c **** 	
  75:App/STM32F4-Discovery/modbus_mk.c **** 	/* Now the USART_InitStruct is used to define the 
  76:App/STM32F4-Discovery/modbus_mk.c **** 	 * properties of USART1 
  77:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  78:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_BaudRate = 38400;				// the baudrate is set to the value we passed into thi
 693              		.loc 1 78 0
 694 008c 4FF41643 		mov	r3, #38400
 695 0090 BB60     		str	r3, [r7, #8]
  79:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_WordLength = USART_WordLength_8b;// we want the data frame size to be 8 bit
 696              		.loc 1 79 0
 697 0092 0023     		movs	r3, #0
 698 0094 BB81     		strh	r3, [r7, #12]	@ movhi
  80:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_StopBits = USART_StopBits_1;		// we want 1 stop bit (standard)
 699              		.loc 1 80 0
 700 0096 0023     		movs	r3, #0
 701 0098 FB81     		strh	r3, [r7, #14]	@ movhi
  81:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_Parity = USART_Parity_No;		// we don't want a parity bit (standard)
 702              		.loc 1 81 0
 703 009a 0023     		movs	r3, #0
 704 009c 3B82     		strh	r3, [r7, #16]	@ movhi
  82:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_HardwareFlowControl = USART_HardwareFlowControl_None; // we don't want flow
 705              		.loc 1 82 0
 706 009e 0023     		movs	r3, #0
 707 00a0 BB82     		strh	r3, [r7, #20]	@ movhi
  83:App/STM32F4-Discovery/modbus_mk.c **** 	USART_InitStruct.USART_Mode = USART_Mode_Tx | USART_Mode_Rx; // we want to enable the transmitter 
 708              		.loc 1 83 0
 709 00a2 0C23     		movs	r3, #12
 710 00a4 7B82     		strh	r3, [r7, #18]	@ movhi
  84:App/STM32F4-Discovery/modbus_mk.c **** 	USART_Init(USART6, &USART_InitStruct);					// again all the properties are passed to the USART_Ini
 711              		.loc 1 84 0
 712 00a6 07F10803 		add	r3, r7, #8
 713 00aa 1048     		ldr	r0, .L2+8
 714 00ac 1946     		mov	r1, r3
 715 00ae FFF7FEFF 		bl	USART_Init
  85:App/STM32F4-Discovery/modbus_mk.c **** 	
  86:App/STM32F4-Discovery/modbus_mk.c **** 	
  87:App/STM32F4-Discovery/modbus_mk.c **** 	/* Here the USART1 receive interrupt is enabled
  88:App/STM32F4-Discovery/modbus_mk.c **** 	 * and the interrupt controller is configured 
  89:App/STM32F4-Discovery/modbus_mk.c **** 	 * to jump to the USART1_IRQHandler() function
  90:App/STM32F4-Discovery/modbus_mk.c **** 	 * if the USART1 receive interrupt occurs
  91:App/STM32F4-Discovery/modbus_mk.c **** 	 */
  92:App/STM32F4-Discovery/modbus_mk.c **** 	USART_ITConfig(USART6, USART_IT_RXNE, ENABLE); // enable the USART1 receive interrupt 
 716              		.loc 1 92 0
 717 00b2 0E48     		ldr	r0, .L2+8
 718 00b4 40F22551 		movw	r1, #1317
 719 00b8 0122     		movs	r2, #1
 720 00ba FFF7FEFF 		bl	USART_ITConfig
  93:App/STM32F4-Discovery/modbus_mk.c **** 	
  94:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitStructure.NVIC_IRQChannel = USART6_IRQn;		 // we want to configure the USART interrupts
 721              		.loc 1 94 0
 722 00be 4723     		movs	r3, #71
 723 00c0 3B71     		strb	r3, [r7, #4]
  95:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORIT
 724              		.loc 1 95 0
 725 00c2 0623     		movs	r3, #6
 726 00c4 7B71     		strb	r3, [r7, #5]
  96:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x1;		 // this sets the subpriority inside the gro
 727              		.loc 1 96 0
 728 00c6 0123     		movs	r3, #1
 729 00c8 BB71     		strb	r3, [r7, #6]
  97:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;			 // the USART1 interrupts are globally enabled
 730              		.loc 1 97 0
 731 00ca 0123     		movs	r3, #1
 732 00cc FB71     		strb	r3, [r7, #7]
  98:App/STM32F4-Discovery/modbus_mk.c **** 	NVIC_Init(&NVIC_InitStructure);	 // the properties are passed to the NVIC_Init function which take
 733              		.loc 1 98 0
 734 00ce 3B1D     		adds	r3, r7, #4
 735 00d0 1846     		mov	r0, r3
 736 00d2 FFF7FEFF 		bl	NVIC_Init
  99:App/STM32F4-Discovery/modbus_mk.c **** 
 100:App/STM32F4-Discovery/modbus_mk.c **** 	// finally this enables the complete USART1 peripheral
 101:App/STM32F4-Discovery/modbus_mk.c **** 	USART_Cmd(USART6, ENABLE);
 737              		.loc 1 101 0
 738 00d6 0548     		ldr	r0, .L2+8
 739 00d8 0121     		movs	r1, #1
 740 00da FFF7FEFF 		bl	USART_Cmd
 102:App/STM32F4-Discovery/modbus_mk.c **** }
 741              		.loc 1 102 0
 742 00de 2037     		adds	r7, r7, #32
 743 00e0 BD46     		mov	sp, r7
 744              		@ sp needed
 745 00e2 80BD     		pop	{r7, pc}
 746              	.L3:
 747              		.align	2
 748              	.L2:
 749 00e4 00080240 		.word	1073874944
 750 00e8 00180240 		.word	1073879040
 751 00ec 00140140 		.word	1073812480
 752              		.cfi_endproc
 753              	.LFE110:
 755              		.section	.text.USART_puts,"ax",%progbits
 756              		.align	2
 757              		.global	USART_puts
 758              		.thumb
 759              		.thumb_func
 761              	USART_puts:
 762              	.LFB111:
 103:App/STM32F4-Discovery/modbus_mk.c **** 
 104:App/STM32F4-Discovery/modbus_mk.c **** 
 105:App/STM32F4-Discovery/modbus_mk.c **** void USART_puts(uint8_t *s, int nb)
 106:App/STM32F4-Discovery/modbus_mk.c **** {
 763              		.loc 1 106 0
 764              		.cfi_startproc
 765              		@ args = 0, pretend = 0, frame = 16
 766              		@ frame_needed = 1, uses_anonymous_args = 0
 767              		@ link register save eliminated.
 768 0000 80B4     		push	{r7}
 769              	.LCFI3:
 770              		.cfi_def_cfa_offset 4
 771              		.cfi_offset 7, -4
 772 0002 85B0     		sub	sp, sp, #20
 773              	.LCFI4:
 774              		.cfi_def_cfa_offset 24
 775 0004 00AF     		add	r7, sp, #0
 776              	.LCFI5:
 777              		.cfi_def_cfa_register 7
 778 0006 7860     		str	r0, [r7, #4]
 779 0008 3960     		str	r1, [r7]
 107:App/STM32F4-Discovery/modbus_mk.c **** 
 108:App/STM32F4-Discovery/modbus_mk.c **** 	/*! This function is used to transmit a string of characters via 
 109:App/STM32F4-Discovery/modbus_mk.c **** 	 * the USART specified in USARTx.
 110:App/STM32F4-Discovery/modbus_mk.c **** 	 * 
 111:App/STM32F4-Discovery/modbus_mk.c **** 	 * It takes two arguments: USARTx --> can be any of the USARTs e.g. USART1, USART2 etc.
 112:App/STM32F4-Discovery/modbus_mk.c **** 	 * 						   (volatile) char *s is the string you want to send
 113:App/STM32F4-Discovery/modbus_mk.c **** 	 * 
 114:App/STM32F4-Discovery/modbus_mk.c **** 	 * Note: The string has to be passed to the function as a pointer because
 115:App/STM32F4-Discovery/modbus_mk.c **** 	 * 		 the compiler doesn't know the 'string' data type. In standard
 116:App/STM32F4-Discovery/modbus_mk.c **** 	 * 		 C a string is just an array of characters
 117:App/STM32F4-Discovery/modbus_mk.c **** 	 * 
 118:App/STM32F4-Discovery/modbus_mk.c **** 	 * Note 2: At the moment it takes a volatile char because the received_string variable
 119:App/STM32F4-Discovery/modbus_mk.c **** 	 * 		   declared as volatile char --> otherwise the compiler will spit out warnings
 120:App/STM32F4-Discovery/modbus_mk.c **** 	 * */
 121:App/STM32F4-Discovery/modbus_mk.c **** 
 122:App/STM32F4-Discovery/modbus_mk.c **** 	int i = 0;
 780              		.loc 1 122 0
 781 000a 0023     		movs	r3, #0
 782 000c FB60     		str	r3, [r7, #12]
 123:App/STM32F4-Discovery/modbus_mk.c **** 	while(i < nb && *s){
 783              		.loc 1 123 0
 784 000e 10E0     		b	.L5
 785              	.L8:
 124:App/STM32F4-Discovery/modbus_mk.c **** 		// wait until data register is empty
 125:App/STM32F4-Discovery/modbus_mk.c **** 		while( !(USARTx->SR & 0x00000040) ); 
 786              		.loc 1 125 0
 787 0010 00BF     		nop
 788              	.L6:
 789              		.loc 1 125 0 is_stmt 0 discriminator 1
 790 0012 0E4B     		ldr	r3, .L9
 791 0014 1B88     		ldrh	r3, [r3]	@ movhi
 792 0016 9BB2     		uxth	r3, r3
 793 0018 03F04003 		and	r3, r3, #64
 794 001c 002B     		cmp	r3, #0
 795 001e F8D0     		beq	.L6
 126:App/STM32F4-Discovery/modbus_mk.c **** 		//USART_SendData(USART6, s[i]);
 127:App/STM32F4-Discovery/modbus_mk.c **** 		USARTx->DR = s[i];
 796              		.loc 1 127 0 is_stmt 1
 797 0020 0A4B     		ldr	r3, .L9
 798 0022 FA68     		ldr	r2, [r7, #12]
 799 0024 7968     		ldr	r1, [r7, #4]
 800 0026 0A44     		add	r2, r2, r1
 801 0028 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 802 002a 9A80     		strh	r2, [r3, #4]	@ movhi
 128:App/STM32F4-Discovery/modbus_mk.c **** 		i++;
 803              		.loc 1 128 0
 804 002c FB68     		ldr	r3, [r7, #12]
 805 002e 0133     		adds	r3, r3, #1
 806 0030 FB60     		str	r3, [r7, #12]
 807              	.L5:
 123:App/STM32F4-Discovery/modbus_mk.c **** 	while(i < nb && *s){
 808              		.loc 1 123 0 discriminator 1
 809 0032 FA68     		ldr	r2, [r7, #12]
 810 0034 3B68     		ldr	r3, [r7]
 811 0036 9A42     		cmp	r2, r3
 812 0038 03DA     		bge	.L4
 123:App/STM32F4-Discovery/modbus_mk.c **** 	while(i < nb && *s){
 813              		.loc 1 123 0 is_stmt 0 discriminator 2
 814 003a 7B68     		ldr	r3, [r7, #4]
 815 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 816 003e 002B     		cmp	r3, #0
 817 0040 E6D1     		bne	.L8
 818              	.L4:
 129:App/STM32F4-Discovery/modbus_mk.c **** 	
 130:App/STM32F4-Discovery/modbus_mk.c **** 	}
 131:App/STM32F4-Discovery/modbus_mk.c **** 	
 132:App/STM32F4-Discovery/modbus_mk.c **** 	
 133:App/STM32F4-Discovery/modbus_mk.c **** }
 819              		.loc 1 133 0 is_stmt 1
 820 0042 1437     		adds	r7, r7, #20
 821 0044 BD46     		mov	sp, r7
 822              		@ sp needed
 823 0046 5DF8047B 		ldr	r7, [sp], #4
 824 004a 7047     		bx	lr
 825              	.L10:
 826              		.align	2
 827              	.L9:
 828 004c 00140140 		.word	1073812480
 829              		.cfi_endproc
 830              	.LFE111:
 832              		.section	.text.USART6_IRQHandler,"ax",%progbits
 833              		.align	2
 834              		.global	USART6_IRQHandler
 835              		.thumb
 836              		.thumb_func
 838              	USART6_IRQHandler:
 839              	.LFB112:
 134:App/STM32F4-Discovery/modbus_mk.c **** 
 135:App/STM32F4-Discovery/modbus_mk.c **** // this is the interrupt request handler (IRQ) for ALL USART6 interrupts
 136:App/STM32F4-Discovery/modbus_mk.c **** void USART6_IRQHandler(void){
 840              		.loc 1 136 0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 8
 843              		@ frame_needed = 1, uses_anonymous_args = 0
 844 0000 80B5     		push	{r7, lr}
 845              	.LCFI6:
 846              		.cfi_def_cfa_offset 8
 847              		.cfi_offset 7, -8
 848              		.cfi_offset 14, -4
 849 0002 82B0     		sub	sp, sp, #8
 850              	.LCFI7:
 851              		.cfi_def_cfa_offset 16
 852 0004 00AF     		add	r7, sp, #0
 853              	.LCFI8:
 854              		.cfi_def_cfa_register 7
 137:App/STM32F4-Discovery/modbus_mk.c **** 	
 138:App/STM32F4-Discovery/modbus_mk.c **** 	unsigned portBASE_TYPE xHigherPriorityTaskWoken_usart = pdFalse;
 855              		.loc 1 138 0
 856 0006 0023     		movs	r3, #0
 857 0008 3B60     		str	r3, [r7]
 139:App/STM32F4-Discovery/modbus_mk.c **** 	
 140:App/STM32F4-Discovery/modbus_mk.c **** 
 141:App/STM32F4-Discovery/modbus_mk.c **** 	// check if the USART1 receive interrupt flag was set
 142:App/STM32F4-Discovery/modbus_mk.c **** 	if( USART_GetITStatus(USARTx, USART_IT_RXNE) ){
 858              		.loc 1 142 0
 859 000a 2148     		ldr	r0, .L15
 860 000c 40F22551 		movw	r1, #1317
 861 0010 FFF7FEFF 		bl	USART_GetITStatus
 862 0014 0346     		mov	r3, r0
 863 0016 002B     		cmp	r3, #0
 864 0018 30D0     		beq	.L12
 865              	.LBB2:
 143:App/STM32F4-Discovery/modbus_mk.c **** 		
 144:App/STM32F4-Discovery/modbus_mk.c **** 		
 145:App/STM32F4-Discovery/modbus_mk.c **** 	//	USART_ClearITPendingBit ( USARTx, USART_IT_RXNE ) ;
 146:App/STM32F4-Discovery/modbus_mk.c **** 		static uint8_t cnt = 0; // this counter is used to determine the string length
 147:App/STM32F4-Discovery/modbus_mk.c **** 	 	char t = USARTx->DR; // the character from the USART1 data register is saved in t
 866              		.loc 1 147 0
 867 001a 1D4B     		ldr	r3, .L15
 868 001c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 869 001e 9BB2     		uxth	r3, r3
 870 0020 FB71     		strb	r3, [r7, #7]
 148:App/STM32F4-Discovery/modbus_mk.c **** 		
 149:App/STM32F4-Discovery/modbus_mk.c **** 		/* check if the received character is not the LF character (used to determine end of string) 
 150:App/STM32F4-Discovery/modbus_mk.c **** 		 * or the if the maximum string length has been been reached 
 151:App/STM32F4-Discovery/modbus_mk.c **** 		 */
 152:App/STM32F4-Discovery/modbus_mk.c **** 	
 153:App/STM32F4-Discovery/modbus_mk.c **** 		
 154:App/STM32F4-Discovery/modbus_mk.c **** 		if( (cnt < rx_length) &&
 871              		.loc 1 154 0
 872 0022 1C4B     		ldr	r3, .L15+4
 873 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 874 0026 1A46     		mov	r2, r3
 875 0028 1B4B     		ldr	r3, .L15+8
 876 002a 1B68     		ldr	r3, [r3]
 877 002c 9A42     		cmp	r2, r3
 878 002e 0FDA     		bge	.L13
 155:App/STM32F4-Discovery/modbus_mk.c **** 				(cnt < MAX_STRLEN-400) ){ 
 879              		.loc 1 155 0 discriminator 1
 880 0030 184B     		ldr	r3, .L15+4
 881 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 154:App/STM32F4-Discovery/modbus_mk.c **** 		if( (cnt < rx_length) &&
 882              		.loc 1 154 0 discriminator 1
 883 0034 6F2B     		cmp	r3, #111
 884 0036 0BD8     		bhi	.L13
 156:App/STM32F4-Discovery/modbus_mk.c **** 			received_string[cnt] = t;
 885              		.loc 1 156 0
 886 0038 164B     		ldr	r3, .L15+4
 887 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 888 003c 174A     		ldr	r2, .L15+12
 889 003e F979     		ldrb	r1, [r7, #7]
 890 0040 D154     		strb	r1, [r2, r3]
 157:App/STM32F4-Discovery/modbus_mk.c **** 			cnt++;
 891              		.loc 1 157 0
 892 0042 144B     		ldr	r3, .L15+4
 893 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 894 0046 0133     		adds	r3, r3, #1
 895 0048 DAB2     		uxtb	r2, r3
 896 004a 124B     		ldr	r3, .L15+4
 897 004c 1A70     		strb	r2, [r3]
 898 004e 15E0     		b	.L12
 899              	.L13:
 158:App/STM32F4-Discovery/modbus_mk.c **** 		}
 159:App/STM32F4-Discovery/modbus_mk.c **** 		else{ // otherwise reset the character counter and print the received string
 160:App/STM32F4-Discovery/modbus_mk.c **** 			received_string[cnt] = t; 
 900              		.loc 1 160 0
 901 0050 104B     		ldr	r3, .L15+4
 902 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 903 0054 114A     		ldr	r2, .L15+12
 904 0056 F979     		ldrb	r1, [r7, #7]
 905 0058 D154     		strb	r1, [r2, r3]
 161:App/STM32F4-Discovery/modbus_mk.c **** 			cnt = 0;
 906              		.loc 1 161 0
 907 005a 0E4B     		ldr	r3, .L15+4
 908 005c 0022     		movs	r2, #0
 909 005e 1A70     		strb	r2, [r3]
 162:App/STM32F4-Discovery/modbus_mk.c **** 		//	USART_ITConfig(USART6, USART_IT_RXNE, DISABLE); 
 163:App/STM32F4-Discovery/modbus_mk.c **** 	
 164:App/STM32F4-Discovery/modbus_mk.c **** 			USART_ClearITPendingBit ( USARTx, USART_IT_RXNE ) ;
 910              		.loc 1 164 0
 911 0060 0B48     		ldr	r0, .L15
 912 0062 40F22551 		movw	r1, #1317
 913 0066 FFF7FEFF 		bl	USART_ClearITPendingBit
 165:App/STM32F4-Discovery/modbus_mk.c **** 	
 166:App/STM32F4-Discovery/modbus_mk.c **** 			xSemaphoreGiveFromISR(xSmphrUSART,&xHigherPriorityTaskWoken_usart );
 914              		.loc 1 166 0
 915 006a 0D4B     		ldr	r3, .L15+16
 916 006c 1A68     		ldr	r2, [r3]
 917 006e 3B46     		mov	r3, r7
 918 0070 1046     		mov	r0, r2
 919 0072 0021     		movs	r1, #0
 920 0074 1A46     		mov	r2, r3
 921 0076 0023     		movs	r3, #0
 922 0078 FFF7FEFF 		bl	xQueueGenericSendFromISR
 923              	.L12:
 924              	.LBE2:
 167:App/STM32F4-Discovery/modbus_mk.c **** 	
 168:App/STM32F4-Discovery/modbus_mk.c **** 			//USART_puts(USART1, received_string);
 169:App/STM32F4-Discovery/modbus_mk.c **** 		}
 170:App/STM32F4-Discovery/modbus_mk.c **** 
 171:App/STM32F4-Discovery/modbus_mk.c **** 
 172:App/STM32F4-Discovery/modbus_mk.c **** 	}
 173:App/STM32F4-Discovery/modbus_mk.c ****  portEND_SWITCHING_ISR( xHigherPriorityTaskWoken_usart );	
 925              		.loc 1 173 0
 926 007c 3B68     		ldr	r3, [r7]
 927 007e 002B     		cmp	r3, #0
 928 0080 03D0     		beq	.L11
 929              		.loc 1 173 0 is_stmt 0 discriminator 1
 930 0082 084B     		ldr	r3, .L15+20
 931 0084 4FF08052 		mov	r2, #268435456
 932 0088 1A60     		str	r2, [r3]
 933              	.L11:
 174:App/STM32F4-Discovery/modbus_mk.c **** }
 934              		.loc 1 174 0 is_stmt 1
 935 008a 0837     		adds	r7, r7, #8
 936 008c BD46     		mov	sp, r7
 937              		@ sp needed
 938 008e 80BD     		pop	{r7, pc}
 939              	.L16:
 940              		.align	2
 941              	.L15:
 942 0090 00140140 		.word	1073812480
 943 0094 00000000 		.word	cnt.9327
 944 0098 00000000 		.word	rx_length
 945 009c 00000000 		.word	received_string
 946 00a0 00000000 		.word	xSmphrUSART
 947 00a4 04ED00E0 		.word	-536810236
 948              		.cfi_endproc
 949              	.LFE112:
 951              		.section	.text.crc16,"ax",%progbits
 952              		.align	2
 953              		.global	crc16
 954              		.thumb
 955              		.thumb_func
 957              	crc16:
 958              	.LFB113:
 175:App/STM32F4-Discovery/modbus_mk.c **** 
 176:App/STM32F4-Discovery/modbus_mk.c **** 
 177:App/STM32F4-Discovery/modbus_mk.c **** 
 178:App/STM32F4-Discovery/modbus_mk.c **** /* function for  */
 179:App/STM32F4-Discovery/modbus_mk.c **** uint16_t crc16(uint8_t *buffer, uint16_t buffer_length)
 180:App/STM32F4-Discovery/modbus_mk.c **** {
 959              		.loc 1 180 0
 960              		.cfi_startproc
 961              		@ args = 0, pretend = 0, frame = 16
 962              		@ frame_needed = 1, uses_anonymous_args = 0
 963              		@ link register save eliminated.
 964 0000 80B4     		push	{r7}
 965              	.LCFI9:
 966              		.cfi_def_cfa_offset 4
 967              		.cfi_offset 7, -4
 968 0002 85B0     		sub	sp, sp, #20
 969              	.LCFI10:
 970              		.cfi_def_cfa_offset 24
 971 0004 00AF     		add	r7, sp, #0
 972              	.LCFI11:
 973              		.cfi_def_cfa_register 7
 974 0006 7860     		str	r0, [r7, #4]
 975 0008 0B46     		mov	r3, r1
 976 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 181:App/STM32F4-Discovery/modbus_mk.c ****      uint8_t crc_hi = 0xFF; /* high CRC byte initialized */
 977              		.loc 1 181 0
 978 000c FF23     		movs	r3, #255
 979 000e FB73     		strb	r3, [r7, #15]
 182:App/STM32F4-Discovery/modbus_mk.c ****      uint8_t crc_lo = 0xFF; /* low CRC byte initialized */
 980              		.loc 1 182 0
 981 0010 FF23     		movs	r3, #255
 982 0012 BB73     		strb	r3, [r7, #14]
 183:App/STM32F4-Discovery/modbus_mk.c ****      unsigned int i; /* will index into CRC lookup */
 184:App/STM32F4-Discovery/modbus_mk.c ****  
 185:App/STM32F4-Discovery/modbus_mk.c ****      /* pass through message buffer */
 186:App/STM32F4-Discovery/modbus_mk.c ****      while (buffer_length--) {
 983              		.loc 1 186 0
 984 0014 13E0     		b	.L18
 985              	.L19:
 187:App/STM32F4-Discovery/modbus_mk.c ****          i = crc_hi ^ *buffer++; /* calculate the CRC  */
 986              		.loc 1 187 0
 987 0016 7B68     		ldr	r3, [r7, #4]
 988 0018 5A1C     		adds	r2, r3, #1
 989 001a 7A60     		str	r2, [r7, #4]
 990 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 991 001e FB7B     		ldrb	r3, [r7, #15]
 992 0020 5340     		eors	r3, r3, r2
 993 0022 DBB2     		uxtb	r3, r3
 994 0024 BB60     		str	r3, [r7, #8]
 188:App/STM32F4-Discovery/modbus_mk.c ****          crc_hi = crc_lo ^ table_crc_hi[i];
 995              		.loc 1 188 0
 996 0026 0F4A     		ldr	r2, .L21
 997 0028 BB68     		ldr	r3, [r7, #8]
 998 002a 1344     		add	r3, r3, r2
 999 002c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1000 002e BB7B     		ldrb	r3, [r7, #14]
 1001 0030 5340     		eors	r3, r3, r2
 1002 0032 FB73     		strb	r3, [r7, #15]
 189:App/STM32F4-Discovery/modbus_mk.c ****          crc_lo = table_crc_lo[i];
 1003              		.loc 1 189 0
 1004 0034 0C4A     		ldr	r2, .L21+4
 1005 0036 BB68     		ldr	r3, [r7, #8]
 1006 0038 1344     		add	r3, r3, r2
 1007 003a 1B78     		ldrb	r3, [r3]
 1008 003c BB73     		strb	r3, [r7, #14]
 1009              	.L18:
 186:App/STM32F4-Discovery/modbus_mk.c ****      while (buffer_length--) {
 1010              		.loc 1 186 0 discriminator 1
 1011 003e 7B88     		ldrh	r3, [r7, #2]
 1012 0040 5A1E     		subs	r2, r3, #1
 1013 0042 7A80     		strh	r2, [r7, #2]	@ movhi
 1014 0044 002B     		cmp	r3, #0
 1015 0046 E6D1     		bne	.L19
 190:App/STM32F4-Discovery/modbus_mk.c ****      }
 191:App/STM32F4-Discovery/modbus_mk.c ****  
 192:App/STM32F4-Discovery/modbus_mk.c ****      return (crc_hi << 8 | crc_lo);
 1016              		.loc 1 192 0
 1017 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1018 004a 1B02     		lsls	r3, r3, #8
 1019 004c 9AB2     		uxth	r2, r3
 1020 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1021 0050 9BB2     		uxth	r3, r3
 1022 0052 1343     		orrs	r3, r3, r2
 1023 0054 9BB2     		uxth	r3, r3
 1024 0056 9BB2     		uxth	r3, r3
 193:App/STM32F4-Discovery/modbus_mk.c **** }
 1025              		.loc 1 193 0
 1026 0058 1846     		mov	r0, r3
 1027 005a 1437     		adds	r7, r7, #20
 1028 005c BD46     		mov	sp, r7
 1029              		@ sp needed
 1030 005e 5DF8047B 		ldr	r7, [sp], #4
 1031 0062 7047     		bx	lr
 1032              	.L22:
 1033              		.align	2
 1034              	.L21:
 1035 0064 00000000 		.word	table_crc_hi
 1036 0068 00000000 		.word	table_crc_lo
 1037              		.cfi_endproc
 1038              	.LFE113:
 1040              		.section	.rodata
 1041 0071 000000   		.align	2
 1042              	.LC4:
 1043 0074 6D6F6462 		.ascii	"modbus OK.\012\000"
 1043      7573204F 
 1043      4B2E0A00 
 1044              		.section	.text.modbus_confirmation,"ax",%progbits
 1045              		.align	2
 1046              		.global	modbus_confirmation
 1047              		.thumb
 1048              		.thumb_func
 1050              	modbus_confirmation:
 1051              	.LFB114:
 194:App/STM32F4-Discovery/modbus_mk.c **** 
 195:App/STM32F4-Discovery/modbus_mk.c **** /* modbus_confirmation */ 
 196:App/STM32F4-Discovery/modbus_mk.c **** 
 197:App/STM32F4-Discovery/modbus_mk.c **** int modbus_confirmation ( uint8_t * req, uint8_t * rsp, uint16_t write_len, uint16_t read_len)
 198:App/STM32F4-Discovery/modbus_mk.c **** {
 1052              		.loc 1 198 0
 1053              		.cfi_startproc
 1054              		@ args = 0, pretend = 0, frame = 24
 1055              		@ frame_needed = 1, uses_anonymous_args = 0
 1056 0000 80B5     		push	{r7, lr}
 1057              	.LCFI12:
 1058              		.cfi_def_cfa_offset 8
 1059              		.cfi_offset 7, -8
 1060              		.cfi_offset 14, -4
 1061 0002 86B0     		sub	sp, sp, #24
 1062              	.LCFI13:
 1063              		.cfi_def_cfa_offset 32
 1064 0004 00AF     		add	r7, sp, #0
 1065              	.LCFI14:
 1066              		.cfi_def_cfa_register 7
 1067 0006 F860     		str	r0, [r7, #12]
 1068 0008 B960     		str	r1, [r7, #8]
 1069 000a FA80     		strh	r2, [r7, #6]	@ movhi
 1070 000c BB80     		strh	r3, [r7, #4]	@ movhi
 199:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(rsp, read_len - 2 );
 1071              		.loc 1 199 0
 1072 000e BB88     		ldrh	r3, [r7, #4]	@ movhi
 1073 0010 023B     		subs	r3, r3, #2
 1074 0012 9BB2     		uxth	r3, r3
 1075 0014 B868     		ldr	r0, [r7, #8]
 1076 0016 1946     		mov	r1, r3
 1077 0018 FFF7FEFF 		bl	crc16
 1078 001c 0346     		mov	r3, r0
 1079 001e FB82     		strh	r3, [r7, #22]	@ movhi
 200:App/STM32F4-Discovery/modbus_mk.c **** 
 201:App/STM32F4-Discovery/modbus_mk.c **** 	if (	rsp[read_len -1 ] == ( crc & 0x00ff ) && 
 1080              		.loc 1 201 0
 1081 0020 BB88     		ldrh	r3, [r7, #4]
 1082 0022 013B     		subs	r3, r3, #1
 1083 0024 BA68     		ldr	r2, [r7, #8]
 1084 0026 1344     		add	r3, r3, r2
 1085 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1086 002a 1A46     		mov	r2, r3
 1087 002c FB8A     		ldrh	r3, [r7, #22]
 1088 002e DBB2     		uxtb	r3, r3
 1089 0030 9A42     		cmp	r2, r3
 1090 0032 0FD1     		bne	.L24
 202:App/STM32F4-Discovery/modbus_mk.c **** 		rsp[read_len - 2 ] == ( crc >> 8 ) ) 
 1091              		.loc 1 202 0 discriminator 1
 1092 0034 BB88     		ldrh	r3, [r7, #4]
 1093 0036 023B     		subs	r3, r3, #2
 1094 0038 BA68     		ldr	r2, [r7, #8]
 1095 003a 1344     		add	r3, r3, r2
 1096 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1097 003e 1A46     		mov	r2, r3
 1098 0040 FB8A     		ldrh	r3, [r7, #22]
 1099 0042 1B0A     		lsrs	r3, r3, #8
 1100 0044 9BB2     		uxth	r3, r3
 201:App/STM32F4-Discovery/modbus_mk.c **** 	if (	rsp[read_len -1 ] == ( crc & 0x00ff ) && 
 1101              		.loc 1 201 0 discriminator 1
 1102 0046 9A42     		cmp	r2, r3
 1103 0048 04D1     		bne	.L24
 203:App/STM32F4-Discovery/modbus_mk.c **** 	{
 204:App/STM32F4-Discovery/modbus_mk.c **** #ifdef DEBUG
 205:App/STM32F4-Discovery/modbus_mk.c **** 		t_printf("modbus OK.\n");
 1104              		.loc 1 205 0
 1105 004a 0548     		ldr	r0, .L26
 1106 004c FFF7FEFF 		bl	t_printf
 206:App/STM32F4-Discovery/modbus_mk.c **** #endif
 207:App/STM32F4-Discovery/modbus_mk.c **** 		return 1;
 1107              		.loc 1 207 0
 1108 0050 0123     		movs	r3, #1
 1109 0052 00E0     		b	.L25
 1110              	.L24:
 208:App/STM32F4-Discovery/modbus_mk.c **** 	}
 209:App/STM32F4-Discovery/modbus_mk.c **** #ifdef DEBUF
 210:App/STM32F4-Discovery/modbus_mk.c **** 		t_printf("modbus FAIL.\n");
 211:App/STM32F4-Discovery/modbus_mk.c **** #endif
 212:App/STM32F4-Discovery/modbus_mk.c **** 	return 0; 
 1111              		.loc 1 212 0
 1112 0054 0023     		movs	r3, #0
 1113              	.L25:
 213:App/STM32F4-Discovery/modbus_mk.c **** 	
 214:App/STM32F4-Discovery/modbus_mk.c **** }
 1114              		.loc 1 214 0
 1115 0056 1846     		mov	r0, r3
 1116 0058 1837     		adds	r7, r7, #24
 1117 005a BD46     		mov	sp, r7
 1118              		@ sp needed
 1119 005c 80BD     		pop	{r7, pc}
 1120              	.L27:
 1121 005e 00BF     		.align	2
 1122              	.L26:
 1123 0060 74000000 		.word	.LC4
 1124              		.cfi_endproc
 1125              	.LFE114:
 1127              		.section	.rodata
 1128              		.align	2
 1129              	.LC5:
 1130 0080 5B25785D 		.ascii	"[%x]\000"
 1130      00
 1131 0085 000000   		.align	2
 1132              	.LC6:
 1133 0088 0A00     		.ascii	"\012\000"
 1134              		.section	.text.write_read_modbus,"ax",%progbits
 1135              		.align	2
 1136              		.global	write_read_modbus
 1137              		.thumb
 1138              		.thumb_func
 1140              	write_read_modbus:
 1141              	.LFB115:
 215:App/STM32F4-Discovery/modbus_mk.c **** 
 216:App/STM32F4-Discovery/modbus_mk.c **** /* write to modbus */
 217:App/STM32F4-Discovery/modbus_mk.c **** void write_read_modbus( uint8_t * req, uint8_t * rsp, int write_len, int read_len )
 218:App/STM32F4-Discovery/modbus_mk.c **** {
 1142              		.loc 1 218 0
 1143              		.cfi_startproc
 1144              		@ args = 0, pretend = 0, frame = 24
 1145              		@ frame_needed = 1, uses_anonymous_args = 0
 1146 0000 80B5     		push	{r7, lr}
 1147              	.LCFI15:
 1148              		.cfi_def_cfa_offset 8
 1149              		.cfi_offset 7, -8
 1150              		.cfi_offset 14, -4
 1151 0002 86B0     		sub	sp, sp, #24
 1152              	.LCFI16:
 1153              		.cfi_def_cfa_offset 32
 1154 0004 00AF     		add	r7, sp, #0
 1155              	.LCFI17:
 1156              		.cfi_def_cfa_register 7
 1157 0006 F860     		str	r0, [r7, #12]
 1158 0008 B960     		str	r1, [r7, #8]
 1159 000a 7A60     		str	r2, [r7, #4]
 1160 000c 3B60     		str	r3, [r7]
 219:App/STM32F4-Discovery/modbus_mk.c **** 	int i; 
 220:App/STM32F4-Discovery/modbus_mk.c **** 	rx_length = read_len + write_len - 1 ; 
 1161              		.loc 1 220 0
 1162 000e 3A68     		ldr	r2, [r7]
 1163 0010 7B68     		ldr	r3, [r7, #4]
 1164 0012 1344     		add	r3, r3, r2
 1165 0014 5A1E     		subs	r2, r3, #1
 1166 0016 2A4B     		ldr	r3, .L35
 1167 0018 1A60     		str	r2, [r3]
 221:App/STM32F4-Discovery/modbus_mk.c **** 
 222:App/STM32F4-Discovery/modbus_mk.c **** 	// driver disable 
 223:App/STM32F4-Discovery/modbus_mk.c **** 	DD();
 1168              		.loc 1 223 0
 1169 001a 2A4B     		ldr	r3, .L35+4
 1170 001c 294A     		ldr	r2, .L35+4
 1171 001e 128B     		ldrh	r2, [r2, #24]	@ movhi
 1172 0020 92B2     		uxth	r2, r2
 1173 0022 42F48072 		orr	r2, r2, #256
 1174 0026 92B2     		uxth	r2, r2
 1175 0028 1A83     		strh	r2, [r3, #24]	@ movhi
 224:App/STM32F4-Discovery/modbus_mk.c **** 	for (i=0; i < 4000; i++) ;
 1176              		.loc 1 224 0
 1177 002a 0023     		movs	r3, #0
 1178 002c 7B61     		str	r3, [r7, #20]
 1179 002e 02E0     		b	.L29
 1180              	.L30:
 1181              		.loc 1 224 0 is_stmt 0 discriminator 2
 1182 0030 7B69     		ldr	r3, [r7, #20]
 1183 0032 0133     		adds	r3, r3, #1
 1184 0034 7B61     		str	r3, [r7, #20]
 1185              	.L29:
 1186              		.loc 1 224 0 discriminator 1
 1187 0036 7B69     		ldr	r3, [r7, #20]
 1188 0038 B3F57A6F 		cmp	r3, #4000
 1189 003c F8DB     		blt	.L30
 225:App/STM32F4-Discovery/modbus_mk.c **** 	USART_puts(req,write_len);
 1190              		.loc 1 225 0 is_stmt 1
 1191 003e F868     		ldr	r0, [r7, #12]
 1192 0040 7968     		ldr	r1, [r7, #4]
 1193 0042 FFF7FEFF 		bl	USART_puts
 226:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < 4000; i++);
 1194              		.loc 1 226 0
 1195 0046 0023     		movs	r3, #0
 1196 0048 7B61     		str	r3, [r7, #20]
 1197 004a 02E0     		b	.L31
 1198              	.L32:
 1199              		.loc 1 226 0 is_stmt 0 discriminator 2
 1200 004c 7B69     		ldr	r3, [r7, #20]
 1201 004e 0133     		adds	r3, r3, #1
 1202 0050 7B61     		str	r3, [r7, #20]
 1203              	.L31:
 1204              		.loc 1 226 0 discriminator 1
 1205 0052 7B69     		ldr	r3, [r7, #20]
 1206 0054 B3F57A6F 		cmp	r3, #4000
 1207 0058 F8DB     		blt	.L32
 227:App/STM32F4-Discovery/modbus_mk.c **** 	// driver enable 
 228:App/STM32F4-Discovery/modbus_mk.c **** 	DE();
 1208              		.loc 1 228 0 is_stmt 1
 1209 005a 1A4B     		ldr	r3, .L35+4
 1210 005c 194A     		ldr	r2, .L35+4
 1211 005e 528B     		ldrh	r2, [r2, #26]	@ movhi
 1212 0060 92B2     		uxth	r2, r2
 1213 0062 42F48072 		orr	r2, r2, #256
 1214 0066 92B2     		uxth	r2, r2
 1215 0068 5A83     		strh	r2, [r3, #26]	@ movhi
 229:App/STM32F4-Discovery/modbus_mk.c **** 	
 230:App/STM32F4-Discovery/modbus_mk.c **** 	xSemaphoreTake(xSmphrUSART, 500/portTICK_RATE_MS);
 1216              		.loc 1 230 0
 1217 006a 174B     		ldr	r3, .L35+8
 1218 006c 1B68     		ldr	r3, [r3]
 1219 006e 1846     		mov	r0, r3
 1220 0070 0021     		movs	r1, #0
 1221 0072 4FF4FA72 		mov	r2, #500
 1222 0076 0023     		movs	r3, #0
 1223 0078 FFF7FEFF 		bl	xQueueGenericReceive
 231:App/STM32F4-Discovery/modbus_mk.c **** 	
 232:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < read_len; i++) 
 1224              		.loc 1 232 0
 1225 007c 0023     		movs	r3, #0
 1226 007e 7B61     		str	r3, [r7, #20]
 1227 0080 14E0     		b	.L33
 1228              	.L34:
 233:App/STM32F4-Discovery/modbus_mk.c **** 	{
 234:App/STM32F4-Discovery/modbus_mk.c **** 
 235:App/STM32F4-Discovery/modbus_mk.c **** 		rsp[i] = received_string[i+write_len]; 
 1229              		.loc 1 235 0 discriminator 2
 1230 0082 7B69     		ldr	r3, [r7, #20]
 1231 0084 BA68     		ldr	r2, [r7, #8]
 1232 0086 1344     		add	r3, r3, r2
 1233 0088 7969     		ldr	r1, [r7, #20]
 1234 008a 7A68     		ldr	r2, [r7, #4]
 1235 008c 0A44     		add	r2, r2, r1
 1236 008e 0F49     		ldr	r1, .L35+12
 1237 0090 8A5C     		ldrb	r2, [r1, r2]
 1238 0092 D2B2     		uxtb	r2, r2
 1239 0094 1A70     		strb	r2, [r3]
 236:App/STM32F4-Discovery/modbus_mk.c **** #ifdef DEBUG
 237:App/STM32F4-Discovery/modbus_mk.c **** 		t_printf("[%x]", rsp[i]);
 1240              		.loc 1 237 0 discriminator 2
 1241 0096 7B69     		ldr	r3, [r7, #20]
 1242 0098 BA68     		ldr	r2, [r7, #8]
 1243 009a 1344     		add	r3, r3, r2
 1244 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1245 009e 0C48     		ldr	r0, .L35+16
 1246 00a0 1946     		mov	r1, r3
 1247 00a2 FFF7FEFF 		bl	t_printf
 232:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < read_len; i++) 
 1248              		.loc 1 232 0 discriminator 2
 1249 00a6 7B69     		ldr	r3, [r7, #20]
 1250 00a8 0133     		adds	r3, r3, #1
 1251 00aa 7B61     		str	r3, [r7, #20]
 1252              	.L33:
 232:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < read_len; i++) 
 1253              		.loc 1 232 0 is_stmt 0 discriminator 1
 1254 00ac 7A69     		ldr	r2, [r7, #20]
 1255 00ae 3B68     		ldr	r3, [r7]
 1256 00b0 9A42     		cmp	r2, r3
 1257 00b2 E6DB     		blt	.L34
 238:App/STM32F4-Discovery/modbus_mk.c **** #endif	
 239:App/STM32F4-Discovery/modbus_mk.c **** 	}
 240:App/STM32F4-Discovery/modbus_mk.c **** 
 241:App/STM32F4-Discovery/modbus_mk.c **** #ifdef DEBUG
 242:App/STM32F4-Discovery/modbus_mk.c **** 		t_printf("\n");
 1258              		.loc 1 242 0 is_stmt 1
 1259 00b4 0748     		ldr	r0, .L35+20
 1260 00b6 FFF7FEFF 		bl	t_printf
 243:App/STM32F4-Discovery/modbus_mk.c **** #endif		
 244:App/STM32F4-Discovery/modbus_mk.c **** 
 245:App/STM32F4-Discovery/modbus_mk.c **** }
 1261              		.loc 1 245 0
 1262 00ba 1837     		adds	r7, r7, #24
 1263 00bc BD46     		mov	sp, r7
 1264              		@ sp needed
 1265 00be 80BD     		pop	{r7, pc}
 1266              	.L36:
 1267              		.align	2
 1268              	.L35:
 1269 00c0 00000000 		.word	rx_length
 1270 00c4 00180240 		.word	1073879040
 1271 00c8 00000000 		.word	xSmphrUSART
 1272 00cc 00000000 		.word	received_string
 1273 00d0 80000000 		.word	.LC5
 1274 00d4 88000000 		.word	.LC6
 1275              		.cfi_endproc
 1276              	.LFE115:
 1278              		.section	.text.modbus_RIB,"ax",%progbits
 1279              		.align	2
 1280              		.global	modbus_RIB
 1281              		.thumb
 1282              		.thumb_func
 1284              	modbus_RIB:
 1285              	.LFB116:
 246:App/STM32F4-Discovery/modbus_mk.c **** 
 247:App/STM32F4-Discovery/modbus_mk.c **** 
 248:App/STM32F4-Discovery/modbus_mk.c **** /* modbus read input bits */
 249:App/STM32F4-Discovery/modbus_mk.c **** uint8_t modbus_RIB( int16_t address, int nb, uint8_t *dst )
 250:App/STM32F4-Discovery/modbus_mk.c **** {
 1286              		.loc 1 250 0
 1287              		.cfi_startproc
 1288              		@ args = 0, pretend = 0, frame = 536
 1289              		@ frame_needed = 1, uses_anonymous_args = 0
 1290 0000 80B5     		push	{r7, lr}
 1291              	.LCFI18:
 1292              		.cfi_def_cfa_offset 8
 1293              		.cfi_offset 7, -8
 1294              		.cfi_offset 14, -4
 1295 0002 ADF5067D 		sub	sp, sp, #536
 1296              	.LCFI19:
 1297              		.cfi_def_cfa_offset 544
 1298 0006 00AF     		add	r7, sp, #0
 1299              	.LCFI20:
 1300              		.cfi_def_cfa_register 7
 1301 0008 07F10803 		add	r3, r7, #8
 1302 000c 1960     		str	r1, [r3]
 1303 000e 3B1D     		adds	r3, r7, #4
 1304 0010 1A60     		str	r2, [r3]
 1305 0012 07F10E03 		add	r3, r7, #14
 1306 0016 0246     		mov	r2, r0	@ movhi
 1307 0018 1A80     		strh	r2, [r3]	@ movhi
 251:App/STM32F4-Discovery/modbus_mk.c **** 	/* first send request */
 252:App/STM32F4-Discovery/modbus_mk.c **** 
 253:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t req[REQ_MAX_LEN];
 254:App/STM32F4-Discovery/modbus_mk.c **** 	int req_length; 
 255:App/STM32F4-Discovery/modbus_mk.c **** 	
 256:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 1308              		.loc 1 256 0
 1309 001a 07F11003 		add	r3, r7, #16
 1310 001e 3622     		movs	r2, #54
 1311 0020 1A70     		strb	r2, [r3]
 257:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0x2;
 1312              		.loc 1 257 0
 1313 0022 07F11003 		add	r3, r7, #16
 1314 0026 0222     		movs	r2, #2
 1315 0028 5A70     		strb	r2, [r3, #1]
 258:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 1316              		.loc 1 258 0
 1317 002a 07F10E03 		add	r3, r7, #14
 1318 002e B3F90030 		ldrsh	r3, [r3]
 1319 0032 1B12     		asrs	r3, r3, #8
 1320 0034 9BB2     		uxth	r3, r3
 1321 0036 DAB2     		uxtb	r2, r3
 1322 0038 07F11003 		add	r3, r7, #16
 1323 003c 9A70     		strb	r2, [r3, #2]
 259:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 1324              		.loc 1 259 0
 1325 003e 07F10E03 		add	r3, r7, #14
 1326 0042 1B88     		ldrh	r3, [r3]	@ movhi
 1327 0044 DAB2     		uxtb	r2, r3
 1328 0046 07F11003 		add	r3, r7, #16
 1329 004a DA70     		strb	r2, [r3, #3]
 260:App/STM32F4-Discovery/modbus_mk.c **** 	req[4] = nb >> 8;
 1330              		.loc 1 260 0
 1331 004c 07F10803 		add	r3, r7, #8
 1332 0050 1B68     		ldr	r3, [r3]
 1333 0052 1B12     		asrs	r3, r3, #8
 1334 0054 DAB2     		uxtb	r2, r3
 1335 0056 07F11003 		add	r3, r7, #16
 1336 005a 1A71     		strb	r2, [r3, #4]
 261:App/STM32F4-Discovery/modbus_mk.c **** 	req[5] = nb & 0x00ff; 
 1337              		.loc 1 261 0
 1338 005c 07F10803 		add	r3, r7, #8
 1339 0060 1B68     		ldr	r3, [r3]
 1340 0062 DAB2     		uxtb	r2, r3
 1341 0064 07F11003 		add	r3, r7, #16
 1342 0068 5A71     		strb	r2, [r3, #5]
 262:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 6;
 1343              		.loc 1 262 0
 1344 006a 0623     		movs	r3, #6
 1345 006c C7F81432 		str	r3, [r7, #532]
 263:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 1346              		.loc 1 263 0
 1347 0070 D7F81432 		ldr	r3, [r7, #532]
 1348 0074 9BB2     		uxth	r3, r3
 1349 0076 07F11002 		add	r2, r7, #16
 1350 007a 1046     		mov	r0, r2
 1351 007c 1946     		mov	r1, r3
 1352 007e FFF7FEFF 		bl	crc16
 1353 0082 0346     		mov	r3, r0
 1354 0084 A7F81232 		strh	r3, [r7, #530]	@ movhi
 264:App/STM32F4-Discovery/modbus_mk.c **** 
 265:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 1355              		.loc 1 265 0
 1356 0088 D7F81432 		ldr	r3, [r7, #532]
 1357 008c 5A1C     		adds	r2, r3, #1
 1358 008e C7F81422 		str	r2, [r7, #532]
 1359 0092 B7F81222 		ldrh	r2, [r7, #530]
 1360 0096 120A     		lsrs	r2, r2, #8
 1361 0098 92B2     		uxth	r2, r2
 1362 009a D1B2     		uxtb	r1, r2
 1363 009c 07F11002 		add	r2, r7, #16
 1364 00a0 D154     		strb	r1, [r2, r3]
 266:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff; 
 1365              		.loc 1 266 0
 1366 00a2 D7F81432 		ldr	r3, [r7, #532]
 1367 00a6 5A1C     		adds	r2, r3, #1
 1368 00a8 C7F81422 		str	r2, [r7, #532]
 1369 00ac B7F81222 		ldrh	r2, [r7, #530]	@ movhi
 1370 00b0 D1B2     		uxtb	r1, r2
 1371 00b2 07F11002 		add	r2, r7, #16
 1372 00b6 D154     		strb	r1, [r2, r3]
 267:App/STM32F4-Discovery/modbus_mk.c **** 	
 268:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req, dst, req_length, 6);
 1373              		.loc 1 268 0
 1374 00b8 07F11002 		add	r2, r7, #16
 1375 00bc 3B1D     		adds	r3, r7, #4
 1376 00be 1046     		mov	r0, r2
 1377 00c0 1968     		ldr	r1, [r3]
 1378 00c2 D7F81422 		ldr	r2, [r7, #532]
 1379 00c6 0623     		movs	r3, #6
 1380 00c8 FFF7FEFF 		bl	write_read_modbus
 269:App/STM32F4-Discovery/modbus_mk.c **** 	return modbus_confirmation (req, dst, req_length, 6);
 1381              		.loc 1 269 0
 1382 00cc D7F81432 		ldr	r3, [r7, #532]
 1383 00d0 9BB2     		uxth	r3, r3
 1384 00d2 07F11001 		add	r1, r7, #16
 1385 00d6 3A1D     		adds	r2, r7, #4
 1386 00d8 0846     		mov	r0, r1
 1387 00da 1168     		ldr	r1, [r2]
 1388 00dc 1A46     		mov	r2, r3
 1389 00de 0623     		movs	r3, #6
 1390 00e0 FFF7FEFF 		bl	modbus_confirmation
 1391 00e4 0346     		mov	r3, r0
 1392 00e6 DBB2     		uxtb	r3, r3
 270:App/STM32F4-Discovery/modbus_mk.c **** 
 271:App/STM32F4-Discovery/modbus_mk.c **** }
 1393              		.loc 1 271 0
 1394 00e8 1846     		mov	r0, r3
 1395 00ea 07F50677 		add	r7, r7, #536
 1396 00ee BD46     		mov	sp, r7
 1397              		@ sp needed
 1398 00f0 80BD     		pop	{r7, pc}
 1399              		.cfi_endproc
 1400              	.LFE116:
 1402 00f2 00BF     		.section	.text.modbus_WIB,"ax",%progbits
 1403              		.align	2
 1404              		.global	modbus_WIB
 1405              		.thumb
 1406              		.thumb_func
 1408              	modbus_WIB:
 1409              	.LFB117:
 272:App/STM32F4-Discovery/modbus_mk.c **** 
 273:App/STM32F4-Discovery/modbus_mk.c **** 
 274:App/STM32F4-Discovery/modbus_mk.c **** /* modbus write input bits */
 275:App/STM32F4-Discovery/modbus_mk.c **** uint8_t modbus_WIB( uint16_t address, int nb, uint8_t *src )
 276:App/STM32F4-Discovery/modbus_mk.c **** {
 1410              		.loc 1 276 0
 1411              		.cfi_startproc
 1412              		@ args = 0, pretend = 0, frame = 1072
 1413              		@ frame_needed = 1, uses_anonymous_args = 0
 1414 0000 80B5     		push	{r7, lr}
 1415              	.LCFI21:
 1416              		.cfi_def_cfa_offset 8
 1417              		.cfi_offset 7, -8
 1418              		.cfi_offset 14, -4
 1419 0002 ADF5866D 		sub	sp, sp, #1072
 1420              	.LCFI22:
 1421              		.cfi_def_cfa_offset 1080
 1422 0006 00AF     		add	r7, sp, #0
 1423              	.LCFI23:
 1424              		.cfi_def_cfa_register 7
 1425 0008 07F10803 		add	r3, r7, #8
 1426 000c 1960     		str	r1, [r3]
 1427 000e 3B1D     		adds	r3, r7, #4
 1428 0010 1A60     		str	r2, [r3]
 1429 0012 07F10E03 		add	r3, r7, #14
 1430 0016 0246     		mov	r2, r0	@ movhi
 1431 0018 1A80     		strh	r2, [r3]	@ movhi
 277:App/STM32F4-Discovery/modbus_mk.c **** 	/* first send request */
 278:App/STM32F4-Discovery/modbus_mk.c **** 
 279:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t req[REQ_MAX_LEN];
 280:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t rsp[REQ_MAX_LEN];
 281:App/STM32F4-Discovery/modbus_mk.c **** 	int byte_count; 
 282:App/STM32F4-Discovery/modbus_mk.c **** 	int req_length; 
 283:App/STM32F4-Discovery/modbus_mk.c **** 	int bit_check = 0; 
 1432              		.loc 1 283 0
 1433 001a 0023     		movs	r3, #0
 1434 001c C7F82834 		str	r3, [r7, #1064]
 284:App/STM32F4-Discovery/modbus_mk.c **** 	int pos = 0; 
 1435              		.loc 1 284 0
 1436 0020 0023     		movs	r3, #0
 1437 0022 C7F82434 		str	r3, [r7, #1060]
 285:App/STM32F4-Discovery/modbus_mk.c **** 	
 286:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 1438              		.loc 1 286 0
 1439 0026 07F50573 		add	r3, r7, #532
 1440 002a 3622     		movs	r2, #54
 1441 002c 1A70     		strb	r2, [r3]
 287:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0xF;
 1442              		.loc 1 287 0
 1443 002e 07F50573 		add	r3, r7, #532
 1444 0032 0F22     		movs	r2, #15
 1445 0034 5A70     		strb	r2, [r3, #1]
 288:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 1446              		.loc 1 288 0
 1447 0036 07F10E03 		add	r3, r7, #14
 1448 003a 1B88     		ldrh	r3, [r3]
 1449 003c 1B0A     		lsrs	r3, r3, #8
 1450 003e 9BB2     		uxth	r3, r3
 1451 0040 DAB2     		uxtb	r2, r3
 1452 0042 07F50573 		add	r3, r7, #532
 1453 0046 9A70     		strb	r2, [r3, #2]
 289:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 1454              		.loc 1 289 0
 1455 0048 07F10E03 		add	r3, r7, #14
 1456 004c 1B88     		ldrh	r3, [r3]	@ movhi
 1457 004e DAB2     		uxtb	r2, r3
 1458 0050 07F50573 		add	r3, r7, #532
 1459 0054 DA70     		strb	r2, [r3, #3]
 290:App/STM32F4-Discovery/modbus_mk.c **** 	req[4] = nb >> 8;
 1460              		.loc 1 290 0
 1461 0056 07F10803 		add	r3, r7, #8
 1462 005a 1B68     		ldr	r3, [r3]
 1463 005c 1B12     		asrs	r3, r3, #8
 1464 005e DAB2     		uxtb	r2, r3
 1465 0060 07F50573 		add	r3, r7, #532
 1466 0064 1A71     		strb	r2, [r3, #4]
 291:App/STM32F4-Discovery/modbus_mk.c **** 	req[5] = nb & 0x00ff; 
 1467              		.loc 1 291 0
 1468 0066 07F10803 		add	r3, r7, #8
 1469 006a 1B68     		ldr	r3, [r3]
 1470 006c DAB2     		uxtb	r2, r3
 1471 006e 07F50573 		add	r3, r7, #532
 1472 0072 5A71     		strb	r2, [r3, #5]
 292:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 6; 
 1473              		.loc 1 292 0
 1474 0074 0623     		movs	r3, #6
 1475 0076 C7F82C34 		str	r3, [r7, #1068]
 293:App/STM32F4-Discovery/modbus_mk.c **** 	
 294:App/STM32F4-Discovery/modbus_mk.c ****     	byte_count = (nb / 8) + ((nb % 8) ? 1 : 0);
 1476              		.loc 1 294 0
 1477 007a 07F10803 		add	r3, r7, #8
 1478 007e 1B68     		ldr	r3, [r3]
 1479 0080 002B     		cmp	r3, #0
 1480 0082 00DA     		bge	.L40
 1481 0084 0733     		adds	r3, r3, #7
 1482              	.L40:
 1483 0086 DB10     		asrs	r3, r3, #3
 1484 0088 1A46     		mov	r2, r3
 1485 008a 07F10803 		add	r3, r7, #8
 1486 008e 1B68     		ldr	r3, [r3]
 1487 0090 03F00703 		and	r3, r3, #7
 1488 0094 002B     		cmp	r3, #0
 1489 0096 0CBF     		ite	eq
 1490 0098 0023     		moveq	r3, #0
 1491 009a 0123     		movne	r3, #1
 1492 009c DBB2     		uxtb	r3, r3
 1493 009e 1344     		add	r3, r3, r2
 1494 00a0 C7F81834 		str	r3, [r7, #1048]
 295:App/STM32F4-Discovery/modbus_mk.c ****   	req[req_length++] = byte_count;
 1495              		.loc 1 295 0
 1496 00a4 D7F82C34 		ldr	r3, [r7, #1068]
 1497 00a8 5A1C     		adds	r2, r3, #1
 1498 00aa C7F82C24 		str	r2, [r7, #1068]
 1499 00ae D7F81824 		ldr	r2, [r7, #1048]
 1500 00b2 D1B2     		uxtb	r1, r2
 1501 00b4 07F50572 		add	r2, r7, #532
 1502 00b8 D154     		strb	r1, [r2, r3]
 296:App/STM32F4-Discovery/modbus_mk.c **** 
 297:App/STM32F4-Discovery/modbus_mk.c **** 	int i; 
 298:App/STM32F4-Discovery/modbus_mk.c ****     	for (i = 0; i < byte_count; i++) {
 1503              		.loc 1 298 0
 1504 00ba 0023     		movs	r3, #0
 1505 00bc C7F82034 		str	r3, [r7, #1056]
 1506 00c0 5CE0     		b	.L41
 1507              	.L47:
 1508              	.LBB3:
 299:App/STM32F4-Discovery/modbus_mk.c ****         
 300:App/STM32F4-Discovery/modbus_mk.c **** 		int bit;
 301:App/STM32F4-Discovery/modbus_mk.c **** 		bit = 0x01;
 1509              		.loc 1 301 0
 1510 00c2 0123     		movs	r3, #1
 1511 00c4 C7F81C34 		str	r3, [r7, #1052]
 302:App/STM32F4-Discovery/modbus_mk.c ****         	req[req_length] = 0;
 1512              		.loc 1 302 0
 1513 00c8 07F50572 		add	r2, r7, #532
 1514 00cc D7F82C34 		ldr	r3, [r7, #1068]
 1515 00d0 1344     		add	r3, r3, r2
 1516 00d2 0022     		movs	r2, #0
 1517 00d4 1A70     		strb	r2, [r3]
 303:App/STM32F4-Discovery/modbus_mk.c **** 
 304:App/STM32F4-Discovery/modbus_mk.c ****         	while ((bit & 0xFF) && (bit_check++ < nb)) {
 1518              		.loc 1 304 0
 1519 00d6 38E0     		b	.L42
 1520              	.L46:
 305:App/STM32F4-Discovery/modbus_mk.c ****             		if (src[pos++])
 1521              		.loc 1 305 0
 1522 00d8 D7F82434 		ldr	r3, [r7, #1060]
 1523 00dc 5A1C     		adds	r2, r3, #1
 1524 00de C7F82424 		str	r2, [r7, #1060]
 1525 00e2 3A1D     		adds	r2, r7, #4
 1526 00e4 1268     		ldr	r2, [r2]
 1527 00e6 1344     		add	r3, r3, r2
 1528 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1529 00ea 002B     		cmp	r3, #0
 1530 00ec 13D0     		beq	.L43
 306:App/STM32F4-Discovery/modbus_mk.c ****                 		req[req_length] |= bit;
 1531              		.loc 1 306 0
 1532 00ee 07F50572 		add	r2, r7, #532
 1533 00f2 D7F82C34 		ldr	r3, [r7, #1068]
 1534 00f6 1344     		add	r3, r3, r2
 1535 00f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1536 00fa DAB2     		uxtb	r2, r3
 1537 00fc D7F81C34 		ldr	r3, [r7, #1052]
 1538 0100 DBB2     		uxtb	r3, r3
 1539 0102 1343     		orrs	r3, r3, r2
 1540 0104 DBB2     		uxtb	r3, r3
 1541 0106 DAB2     		uxtb	r2, r3
 1542 0108 07F50571 		add	r1, r7, #532
 1543 010c D7F82C34 		ldr	r3, [r7, #1068]
 1544 0110 0B44     		add	r3, r3, r1
 1545 0112 1A70     		strb	r2, [r3]
 1546 0114 14E0     		b	.L44
 1547              	.L43:
 307:App/STM32F4-Discovery/modbus_mk.c ****             		else
 308:App/STM32F4-Discovery/modbus_mk.c ****                 		req[req_length] &=~ bit;
 1548              		.loc 1 308 0
 1549 0116 07F50572 		add	r2, r7, #532
 1550 011a D7F82C34 		ldr	r3, [r7, #1068]
 1551 011e 1344     		add	r3, r3, r2
 1552 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1553 0122 DAB2     		uxtb	r2, r3
 1554 0124 D7F81C34 		ldr	r3, [r7, #1052]
 1555 0128 DBB2     		uxtb	r3, r3
 1556 012a DB43     		mvns	r3, r3
 1557 012c DBB2     		uxtb	r3, r3
 1558 012e 1340     		ands	r3, r3, r2
 1559 0130 DBB2     		uxtb	r3, r3
 1560 0132 DAB2     		uxtb	r2, r3
 1561 0134 07F50571 		add	r1, r7, #532
 1562 0138 D7F82C34 		ldr	r3, [r7, #1068]
 1563 013c 0B44     		add	r3, r3, r1
 1564 013e 1A70     		strb	r2, [r3]
 1565              	.L44:
 309:App/STM32F4-Discovery/modbus_mk.c **** 
 310:App/STM32F4-Discovery/modbus_mk.c ****             		bit = bit << 1;
 1566              		.loc 1 310 0
 1567 0140 D7F81C34 		ldr	r3, [r7, #1052]
 1568 0144 5B00     		lsls	r3, r3, #1
 1569 0146 C7F81C34 		str	r3, [r7, #1052]
 1570              	.L42:
 304:App/STM32F4-Discovery/modbus_mk.c ****         	while ((bit & 0xFF) && (bit_check++ < nb)) {
 1571              		.loc 1 304 0 discriminator 1
 1572 014a D7F81C34 		ldr	r3, [r7, #1052]
 1573 014e DBB2     		uxtb	r3, r3
 1574 0150 002B     		cmp	r3, #0
 1575 0152 09D0     		beq	.L45
 304:App/STM32F4-Discovery/modbus_mk.c ****         	while ((bit & 0xFF) && (bit_check++ < nb)) {
 1576              		.loc 1 304 0 is_stmt 0 discriminator 2
 1577 0154 D7F82834 		ldr	r3, [r7, #1064]
 1578 0158 5A1C     		adds	r2, r3, #1
 1579 015a C7F82824 		str	r2, [r7, #1064]
 1580 015e 07F10802 		add	r2, r7, #8
 1581 0162 1268     		ldr	r2, [r2]
 1582 0164 9342     		cmp	r3, r2
 1583 0166 B7DB     		blt	.L46
 1584              	.L45:
 311:App/STM32F4-Discovery/modbus_mk.c ****         	}	
 312:App/STM32F4-Discovery/modbus_mk.c ****         	
 313:App/STM32F4-Discovery/modbus_mk.c **** 		req_length++;
 1585              		.loc 1 313 0 is_stmt 1
 1586 0168 D7F82C34 		ldr	r3, [r7, #1068]
 1587 016c 0133     		adds	r3, r3, #1
 1588 016e C7F82C34 		str	r3, [r7, #1068]
 1589              	.LBE3:
 298:App/STM32F4-Discovery/modbus_mk.c ****     	for (i = 0; i < byte_count; i++) {
 1590              		.loc 1 298 0
 1591 0172 D7F82034 		ldr	r3, [r7, #1056]
 1592 0176 0133     		adds	r3, r3, #1
 1593 0178 C7F82034 		str	r3, [r7, #1056]
 1594              	.L41:
 298:App/STM32F4-Discovery/modbus_mk.c ****     	for (i = 0; i < byte_count; i++) {
 1595              		.loc 1 298 0 is_stmt 0 discriminator 1
 1596 017c D7F82024 		ldr	r2, [r7, #1056]
 1597 0180 D7F81834 		ldr	r3, [r7, #1048]
 1598 0184 9A42     		cmp	r2, r3
 1599 0186 9CDB     		blt	.L47
 314:App/STM32F4-Discovery/modbus_mk.c **** 	 }
 315:App/STM32F4-Discovery/modbus_mk.c **** 
 316:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 1600              		.loc 1 316 0 is_stmt 1
 1601 0188 D7F82C34 		ldr	r3, [r7, #1068]
 1602 018c 9BB2     		uxth	r3, r3
 1603 018e 07F50572 		add	r2, r7, #532
 1604 0192 1046     		mov	r0, r2
 1605 0194 1946     		mov	r1, r3
 1606 0196 FFF7FEFF 		bl	crc16
 1607 019a 0346     		mov	r3, r0
 1608 019c A7F81634 		strh	r3, [r7, #1046]	@ movhi
 317:App/STM32F4-Discovery/modbus_mk.c **** 
 318:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 1609              		.loc 1 318 0
 1610 01a0 D7F82C34 		ldr	r3, [r7, #1068]
 1611 01a4 5A1C     		adds	r2, r3, #1
 1612 01a6 C7F82C24 		str	r2, [r7, #1068]
 1613 01aa B7F81624 		ldrh	r2, [r7, #1046]
 1614 01ae 120A     		lsrs	r2, r2, #8
 1615 01b0 92B2     		uxth	r2, r2
 1616 01b2 D1B2     		uxtb	r1, r2
 1617 01b4 07F50572 		add	r2, r7, #532
 1618 01b8 D154     		strb	r1, [r2, r3]
 319:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff; 
 1619              		.loc 1 319 0
 1620 01ba D7F82C34 		ldr	r3, [r7, #1068]
 1621 01be 5A1C     		adds	r2, r3, #1
 1622 01c0 C7F82C24 		str	r2, [r7, #1068]
 1623 01c4 B7F81624 		ldrh	r2, [r7, #1046]	@ movhi
 1624 01c8 D1B2     		uxtb	r1, r2
 1625 01ca 07F50572 		add	r2, r7, #532
 1626 01ce D154     		strb	r1, [r2, r3]
 320:App/STM32F4-Discovery/modbus_mk.c **** 	
 321:App/STM32F4-Discovery/modbus_mk.c **** 	/* write request  to modbus line */
 322:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req,rsp, req_length ,8); 
 1627              		.loc 1 322 0
 1628 01d0 07F50572 		add	r2, r7, #532
 1629 01d4 07F11403 		add	r3, r7, #20
 1630 01d8 1046     		mov	r0, r2
 1631 01da 1946     		mov	r1, r3
 1632 01dc D7F82C24 		ldr	r2, [r7, #1068]
 1633 01e0 0823     		movs	r3, #8
 1634 01e2 FFF7FEFF 		bl	write_read_modbus
 323:App/STM32F4-Discovery/modbus_mk.c **** 	return modbus_confirmation (req, rsp,req_length, 8); 
 1635              		.loc 1 323 0
 1636 01e6 D7F82C34 		ldr	r3, [r7, #1068]
 1637 01ea 9BB2     		uxth	r3, r3
 1638 01ec 07F50571 		add	r1, r7, #532
 1639 01f0 07F11402 		add	r2, r7, #20
 1640 01f4 0846     		mov	r0, r1
 1641 01f6 1146     		mov	r1, r2
 1642 01f8 1A46     		mov	r2, r3
 1643 01fa 0823     		movs	r3, #8
 1644 01fc FFF7FEFF 		bl	modbus_confirmation
 1645 0200 0346     		mov	r3, r0
 1646 0202 DBB2     		uxtb	r3, r3
 324:App/STM32F4-Discovery/modbus_mk.c **** 
 325:App/STM32F4-Discovery/modbus_mk.c **** 	
 326:App/STM32F4-Discovery/modbus_mk.c **** }
 1647              		.loc 1 326 0
 1648 0204 1846     		mov	r0, r3
 1649 0206 07F58667 		add	r7, r7, #1072
 1650 020a BD46     		mov	sp, r7
 1651              		@ sp needed
 1652 020c 80BD     		pop	{r7, pc}
 1653              		.cfi_endproc
 1654              	.LFE117:
 1656 020e 00BF     		.section	.text.modbus_WR,"ax",%progbits
 1657              		.align	2
 1658              		.global	modbus_WR
 1659              		.thumb
 1660              		.thumb_func
 1662              	modbus_WR:
 1663              	.LFB118:
 327:App/STM32F4-Discovery/modbus_mk.c **** 
 328:App/STM32F4-Discovery/modbus_mk.c **** /* Write the values from the array to the registers of the remote device */
 329:App/STM32F4-Discovery/modbus_mk.c **** uint8_t modbus_WR( int address, int nb, const uint16_t *src)
 330:App/STM32F4-Discovery/modbus_mk.c **** {
 1664              		.loc 1 330 0
 1665              		.cfi_startproc
 1666              		@ args = 0, pretend = 0, frame = 1056
 1667              		@ frame_needed = 1, uses_anonymous_args = 0
 1668 0000 80B5     		push	{r7, lr}
 1669              	.LCFI24:
 1670              		.cfi_def_cfa_offset 8
 1671              		.cfi_offset 7, -8
 1672              		.cfi_offset 14, -4
 1673 0002 ADF5846D 		sub	sp, sp, #1056
 1674              	.LCFI25:
 1675              		.cfi_def_cfa_offset 1064
 1676 0006 00AF     		add	r7, sp, #0
 1677              	.LCFI26:
 1678              		.cfi_def_cfa_register 7
 1679 0008 07F10C03 		add	r3, r7, #12
 1680 000c 1860     		str	r0, [r3]
 1681 000e 07F10803 		add	r3, r7, #8
 1682 0012 1960     		str	r1, [r3]
 1683 0014 3B1D     		adds	r3, r7, #4
 1684 0016 1A60     		str	r2, [r3]
 331:App/STM32F4-Discovery/modbus_mk.c **** 	int rc;
 332:App/STM32F4-Discovery/modbus_mk.c **** 	int i;
 333:App/STM32F4-Discovery/modbus_mk.c ****     	int req_length;
 334:App/STM32F4-Discovery/modbus_mk.c ****     	int byte_count;
 335:App/STM32F4-Discovery/modbus_mk.c **** 
 336:App/STM32F4-Discovery/modbus_mk.c ****     	uint8_t req[REQ_MAX_LEN];
 337:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t rsp[REQ_MAX_LEN];
 338:App/STM32F4-Discovery/modbus_mk.c **** 
 339:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 1685              		.loc 1 339 0
 1686 0018 07F50473 		add	r3, r7, #528
 1687 001c 3622     		movs	r2, #54
 1688 001e 1A70     		strb	r2, [r3]
 340:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0x10;
 1689              		.loc 1 340 0
 1690 0020 07F50473 		add	r3, r7, #528
 1691 0024 1022     		movs	r2, #16
 1692 0026 5A70     		strb	r2, [r3, #1]
 341:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 1693              		.loc 1 341 0
 1694 0028 07F10C03 		add	r3, r7, #12
 1695 002c 1B68     		ldr	r3, [r3]
 1696 002e 1B12     		asrs	r3, r3, #8
 1697 0030 DAB2     		uxtb	r2, r3
 1698 0032 07F50473 		add	r3, r7, #528
 1699 0036 9A70     		strb	r2, [r3, #2]
 342:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 1700              		.loc 1 342 0
 1701 0038 07F10C03 		add	r3, r7, #12
 1702 003c 1B68     		ldr	r3, [r3]
 1703 003e DAB2     		uxtb	r2, r3
 1704 0040 07F50473 		add	r3, r7, #528
 1705 0044 DA70     		strb	r2, [r3, #3]
 343:App/STM32F4-Discovery/modbus_mk.c **** 	req[4] = nb >> 8;
 1706              		.loc 1 343 0
 1707 0046 07F10803 		add	r3, r7, #8
 1708 004a 1B68     		ldr	r3, [r3]
 1709 004c 1B12     		asrs	r3, r3, #8
 1710 004e DAB2     		uxtb	r2, r3
 1711 0050 07F50473 		add	r3, r7, #528
 1712 0054 1A71     		strb	r2, [r3, #4]
 344:App/STM32F4-Discovery/modbus_mk.c **** 	req[5] = nb & 0x00ff; 
 1713              		.loc 1 344 0
 1714 0056 07F10803 		add	r3, r7, #8
 1715 005a 1B68     		ldr	r3, [r3]
 1716 005c DAB2     		uxtb	r2, r3
 1717 005e 07F50473 		add	r3, r7, #528
 1718 0062 5A71     		strb	r2, [r3, #5]
 345:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 6; 
 1719              		.loc 1 345 0
 1720 0064 0623     		movs	r3, #6
 1721 0066 C7F81834 		str	r3, [r7, #1048]
 346:App/STM32F4-Discovery/modbus_mk.c **** 	
 347:App/STM32F4-Discovery/modbus_mk.c ****    	byte_count = nb * 2;
 1722              		.loc 1 347 0
 1723 006a 07F10803 		add	r3, r7, #8
 1724 006e 1B68     		ldr	r3, [r3]
 1725 0070 5B00     		lsls	r3, r3, #1
 1726 0072 C7F81434 		str	r3, [r7, #1044]
 348:App/STM32F4-Discovery/modbus_mk.c ****     	req[req_length++] = byte_count;
 1727              		.loc 1 348 0
 1728 0076 D7F81834 		ldr	r3, [r7, #1048]
 1729 007a 5A1C     		adds	r2, r3, #1
 1730 007c C7F81824 		str	r2, [r7, #1048]
 1731 0080 D7F81424 		ldr	r2, [r7, #1044]
 1732 0084 D1B2     		uxtb	r1, r2
 1733 0086 07F50472 		add	r2, r7, #528
 1734 008a D154     		strb	r1, [r2, r3]
 349:App/STM32F4-Discovery/modbus_mk.c **** 
 350:App/STM32F4-Discovery/modbus_mk.c ****     for (i = 0; i < nb; i++) {
 1735              		.loc 1 350 0
 1736 008c 0023     		movs	r3, #0
 1737 008e C7F81C34 		str	r3, [r7, #1052]
 1738 0092 26E0     		b	.L50
 1739              	.L51:
 351:App/STM32F4-Discovery/modbus_mk.c **** 		req[req_length++] = src[i] >> 8;
 1740              		.loc 1 351 0 discriminator 2
 1741 0094 D7F81834 		ldr	r3, [r7, #1048]
 1742 0098 5A1C     		adds	r2, r3, #1
 1743 009a C7F81824 		str	r2, [r7, #1048]
 1744 009e D7F81C24 		ldr	r2, [r7, #1052]
 1745 00a2 5200     		lsls	r2, r2, #1
 1746 00a4 391D     		adds	r1, r7, #4
 1747 00a6 0968     		ldr	r1, [r1]
 1748 00a8 0A44     		add	r2, r2, r1
 1749 00aa 1288     		ldrh	r2, [r2]
 1750 00ac 120A     		lsrs	r2, r2, #8
 1751 00ae 92B2     		uxth	r2, r2
 1752 00b0 D1B2     		uxtb	r1, r2
 1753 00b2 07F50472 		add	r2, r7, #528
 1754 00b6 D154     		strb	r1, [r2, r3]
 352:App/STM32F4-Discovery/modbus_mk.c ****         	req[req_length++] = src[i] & 0x00ff;
 1755              		.loc 1 352 0 discriminator 2
 1756 00b8 D7F81834 		ldr	r3, [r7, #1048]
 1757 00bc 5A1C     		adds	r2, r3, #1
 1758 00be C7F81824 		str	r2, [r7, #1048]
 1759 00c2 D7F81C24 		ldr	r2, [r7, #1052]
 1760 00c6 5200     		lsls	r2, r2, #1
 1761 00c8 391D     		adds	r1, r7, #4
 1762 00ca 0968     		ldr	r1, [r1]
 1763 00cc 0A44     		add	r2, r2, r1
 1764 00ce 1288     		ldrh	r2, [r2]
 1765 00d0 D1B2     		uxtb	r1, r2
 1766 00d2 07F50472 		add	r2, r7, #528
 1767 00d6 D154     		strb	r1, [r2, r3]
 350:App/STM32F4-Discovery/modbus_mk.c ****     for (i = 0; i < nb; i++) {
 1768              		.loc 1 350 0 discriminator 2
 1769 00d8 D7F81C34 		ldr	r3, [r7, #1052]
 1770 00dc 0133     		adds	r3, r3, #1
 1771 00de C7F81C34 		str	r3, [r7, #1052]
 1772              	.L50:
 350:App/STM32F4-Discovery/modbus_mk.c ****     for (i = 0; i < nb; i++) {
 1773              		.loc 1 350 0 is_stmt 0 discriminator 1
 1774 00e2 07F10803 		add	r3, r7, #8
 1775 00e6 D7F81C24 		ldr	r2, [r7, #1052]
 1776 00ea 1B68     		ldr	r3, [r3]
 1777 00ec 9A42     		cmp	r2, r3
 1778 00ee D1DB     		blt	.L51
 353:App/STM32F4-Discovery/modbus_mk.c ****     	}
 354:App/STM32F4-Discovery/modbus_mk.c **** 
 355:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 1779              		.loc 1 355 0 is_stmt 1
 1780 00f0 D7F81834 		ldr	r3, [r7, #1048]
 1781 00f4 9BB2     		uxth	r3, r3
 1782 00f6 07F50472 		add	r2, r7, #528
 1783 00fa 1046     		mov	r0, r2
 1784 00fc 1946     		mov	r1, r3
 1785 00fe FFF7FEFF 		bl	crc16
 1786 0102 0346     		mov	r3, r0
 1787 0104 A7F81234 		strh	r3, [r7, #1042]	@ movhi
 356:App/STM32F4-Discovery/modbus_mk.c **** 
 357:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 1788              		.loc 1 357 0
 1789 0108 D7F81834 		ldr	r3, [r7, #1048]
 1790 010c 5A1C     		adds	r2, r3, #1
 1791 010e C7F81824 		str	r2, [r7, #1048]
 1792 0112 B7F81224 		ldrh	r2, [r7, #1042]
 1793 0116 120A     		lsrs	r2, r2, #8
 1794 0118 92B2     		uxth	r2, r2
 1795 011a D1B2     		uxtb	r1, r2
 1796 011c 07F50472 		add	r2, r7, #528
 1797 0120 D154     		strb	r1, [r2, r3]
 358:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff;
 1798              		.loc 1 358 0
 1799 0122 D7F81834 		ldr	r3, [r7, #1048]
 1800 0126 5A1C     		adds	r2, r3, #1
 1801 0128 C7F81824 		str	r2, [r7, #1048]
 1802 012c B7F81224 		ldrh	r2, [r7, #1042]	@ movhi
 1803 0130 D1B2     		uxtb	r1, r2
 1804 0132 07F50472 		add	r2, r7, #528
 1805 0136 D154     		strb	r1, [r2, r3]
 359:App/STM32F4-Discovery/modbus_mk.c **** 
 360:App/STM32F4-Discovery/modbus_mk.c **** 	/* write request  to modbus line */
 361:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req, rsp, req_length, 8); 
 1806              		.loc 1 361 0
 1807 0138 07F50472 		add	r2, r7, #528
 1808 013c 07F11003 		add	r3, r7, #16
 1809 0140 1046     		mov	r0, r2
 1810 0142 1946     		mov	r1, r3
 1811 0144 D7F81824 		ldr	r2, [r7, #1048]
 1812 0148 0823     		movs	r3, #8
 1813 014a FFF7FEFF 		bl	write_read_modbus
 362:App/STM32F4-Discovery/modbus_mk.c **** 	return modbus_confirmation (req, rsp,req_length, 8); 
 1814              		.loc 1 362 0
 1815 014e D7F81834 		ldr	r3, [r7, #1048]
 1816 0152 9BB2     		uxth	r3, r3
 1817 0154 07F50471 		add	r1, r7, #528
 1818 0158 07F11002 		add	r2, r7, #16
 1819 015c 0846     		mov	r0, r1
 1820 015e 1146     		mov	r1, r2
 1821 0160 1A46     		mov	r2, r3
 1822 0162 0823     		movs	r3, #8
 1823 0164 FFF7FEFF 		bl	modbus_confirmation
 1824 0168 0346     		mov	r3, r0
 1825 016a DBB2     		uxtb	r3, r3
 363:App/STM32F4-Discovery/modbus_mk.c **** 
 364:App/STM32F4-Discovery/modbus_mk.c **** 
 365:App/STM32F4-Discovery/modbus_mk.c **** 
 366:App/STM32F4-Discovery/modbus_mk.c **** }
 1826              		.loc 1 366 0
 1827 016c 1846     		mov	r0, r3
 1828 016e 07F58467 		add	r7, r7, #1056
 1829 0172 BD46     		mov	sp, r7
 1830              		@ sp needed
 1831 0174 80BD     		pop	{r7, pc}
 1832              		.cfi_endproc
 1833              	.LFE118:
 1835 0176 00BF     		.section	.text.modbus_WSR,"ax",%progbits
 1836              		.align	2
 1837              		.global	modbus_WSR
 1838              		.thumb
 1839              		.thumb_func
 1841              	modbus_WSR:
 1842              	.LFB119:
 367:App/STM32F4-Discovery/modbus_mk.c **** 
 368:App/STM32F4-Discovery/modbus_mk.c **** /* Write the values from the array to the registers of the remote device */
 369:App/STM32F4-Discovery/modbus_mk.c **** uint8_t modbus_WSR( int address, const uint16_t src)
 370:App/STM32F4-Discovery/modbus_mk.c **** {
 1843              		.loc 1 370 0
 1844              		.cfi_startproc
 1845              		@ args = 0, pretend = 0, frame = 1048
 1846              		@ frame_needed = 1, uses_anonymous_args = 0
 1847 0000 80B5     		push	{r7, lr}
 1848              	.LCFI27:
 1849              		.cfi_def_cfa_offset 8
 1850              		.cfi_offset 7, -8
 1851              		.cfi_offset 14, -4
 1852 0002 ADF5836D 		sub	sp, sp, #1048
 1853              	.LCFI28:
 1854              		.cfi_def_cfa_offset 1056
 1855 0006 00AF     		add	r7, sp, #0
 1856              	.LCFI29:
 1857              		.cfi_def_cfa_register 7
 1858 0008 3B1D     		adds	r3, r7, #4
 1859 000a 1860     		str	r0, [r3]
 1860 000c 0A46     		mov	r2, r1
 1861 000e BB1C     		adds	r3, r7, #2
 1862 0010 1A80     		strh	r2, [r3]	@ movhi
 371:App/STM32F4-Discovery/modbus_mk.c **** 	int nb = 1; 
 1863              		.loc 1 371 0
 1864 0012 0123     		movs	r3, #1
 1865 0014 C7F81434 		str	r3, [r7, #1044]
 372:App/STM32F4-Discovery/modbus_mk.c **** 	int rc;
 373:App/STM32F4-Discovery/modbus_mk.c **** 	int i;
 374:App/STM32F4-Discovery/modbus_mk.c ****     	int req_length;
 375:App/STM32F4-Discovery/modbus_mk.c ****     	int byte_count;
 376:App/STM32F4-Discovery/modbus_mk.c **** 
 377:App/STM32F4-Discovery/modbus_mk.c ****     	uint8_t req[REQ_MAX_LEN];
 378:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t rsp[REQ_MAX_LEN];
 379:App/STM32F4-Discovery/modbus_mk.c **** 
 380:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 1866              		.loc 1 380 0
 1867 0018 07F50273 		add	r3, r7, #520
 1868 001c 3622     		movs	r2, #54
 1869 001e 1A70     		strb	r2, [r3]
 381:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0x6;
 1870              		.loc 1 381 0
 1871 0020 07F50273 		add	r3, r7, #520
 1872 0024 0622     		movs	r2, #6
 1873 0026 5A70     		strb	r2, [r3, #1]
 382:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 1874              		.loc 1 382 0
 1875 0028 3B1D     		adds	r3, r7, #4
 1876 002a 1B68     		ldr	r3, [r3]
 1877 002c 1B12     		asrs	r3, r3, #8
 1878 002e DAB2     		uxtb	r2, r3
 1879 0030 07F50273 		add	r3, r7, #520
 1880 0034 9A70     		strb	r2, [r3, #2]
 383:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 1881              		.loc 1 383 0
 1882 0036 3B1D     		adds	r3, r7, #4
 1883 0038 1B68     		ldr	r3, [r3]
 1884 003a DAB2     		uxtb	r2, r3
 1885 003c 07F50273 		add	r3, r7, #520
 1886 0040 DA70     		strb	r2, [r3, #3]
 384:App/STM32F4-Discovery/modbus_mk.c **** //	req[4] = nb >> 8;
 385:App/STM32F4-Discovery/modbus_mk.c **** //	req[5] = nb & 0x00ff; 
 386:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 4; 
 1887              		.loc 1 386 0
 1888 0042 0423     		movs	r3, #4
 1889 0044 C7F81034 		str	r3, [r7, #1040]
 387:App/STM32F4-Discovery/modbus_mk.c **** 	
 388:App/STM32F4-Discovery/modbus_mk.c ****    	byte_count = nb * 2;
 1890              		.loc 1 388 0
 1891 0048 D7F81434 		ldr	r3, [r7, #1044]
 1892 004c 5B00     		lsls	r3, r3, #1
 1893 004e C7F80C34 		str	r3, [r7, #1036]
 389:App/STM32F4-Discovery/modbus_mk.c ****     	req[req_length++] = byte_count;
 1894              		.loc 1 389 0
 1895 0052 D7F81034 		ldr	r3, [r7, #1040]
 1896 0056 5A1C     		adds	r2, r3, #1
 1897 0058 C7F81024 		str	r2, [r7, #1040]
 1898 005c D7F80C24 		ldr	r2, [r7, #1036]
 1899 0060 D1B2     		uxtb	r1, r2
 1900 0062 07F50272 		add	r2, r7, #520
 1901 0066 D154     		strb	r1, [r2, r3]
 390:App/STM32F4-Discovery/modbus_mk.c **** 
 391:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = src >> 8;
 1902              		.loc 1 391 0
 1903 0068 D7F81034 		ldr	r3, [r7, #1040]
 1904 006c 5A1C     		adds	r2, r3, #1
 1905 006e C7F81024 		str	r2, [r7, #1040]
 1906 0072 BA1C     		adds	r2, r7, #2
 1907 0074 1288     		ldrh	r2, [r2]
 1908 0076 120A     		lsrs	r2, r2, #8
 1909 0078 92B2     		uxth	r2, r2
 1910 007a D1B2     		uxtb	r1, r2
 1911 007c 07F50272 		add	r2, r7, #520
 1912 0080 D154     		strb	r1, [r2, r3]
 392:App/STM32F4-Discovery/modbus_mk.c ****        	req[req_length++] = src & 0x00ff;
 1913              		.loc 1 392 0
 1914 0082 D7F81034 		ldr	r3, [r7, #1040]
 1915 0086 5A1C     		adds	r2, r3, #1
 1916 0088 C7F81024 		str	r2, [r7, #1040]
 1917 008c BA1C     		adds	r2, r7, #2
 1918 008e 1288     		ldrh	r2, [r2]	@ movhi
 1919 0090 D1B2     		uxtb	r1, r2
 1920 0092 07F50272 		add	r2, r7, #520
 1921 0096 D154     		strb	r1, [r2, r3]
 393:App/STM32F4-Discovery/modbus_mk.c ****     	
 394:App/STM32F4-Discovery/modbus_mk.c **** 
 395:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 1922              		.loc 1 395 0
 1923 0098 D7F81034 		ldr	r3, [r7, #1040]
 1924 009c 9BB2     		uxth	r3, r3
 1925 009e 07F50272 		add	r2, r7, #520
 1926 00a2 1046     		mov	r0, r2
 1927 00a4 1946     		mov	r1, r3
 1928 00a6 FFF7FEFF 		bl	crc16
 1929 00aa 0346     		mov	r3, r0
 1930 00ac A7F80A34 		strh	r3, [r7, #1034]	@ movhi
 396:App/STM32F4-Discovery/modbus_mk.c **** 
 397:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 1931              		.loc 1 397 0
 1932 00b0 D7F81034 		ldr	r3, [r7, #1040]
 1933 00b4 5A1C     		adds	r2, r3, #1
 1934 00b6 C7F81024 		str	r2, [r7, #1040]
 1935 00ba B7F80A24 		ldrh	r2, [r7, #1034]
 1936 00be 120A     		lsrs	r2, r2, #8
 1937 00c0 92B2     		uxth	r2, r2
 1938 00c2 D1B2     		uxtb	r1, r2
 1939 00c4 07F50272 		add	r2, r7, #520
 1940 00c8 D154     		strb	r1, [r2, r3]
 398:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff;
 1941              		.loc 1 398 0
 1942 00ca D7F81034 		ldr	r3, [r7, #1040]
 1943 00ce 5A1C     		adds	r2, r3, #1
 1944 00d0 C7F81024 		str	r2, [r7, #1040]
 1945 00d4 B7F80A24 		ldrh	r2, [r7, #1034]	@ movhi
 1946 00d8 D1B2     		uxtb	r1, r2
 1947 00da 07F50272 		add	r2, r7, #520
 1948 00de D154     		strb	r1, [r2, r3]
 399:App/STM32F4-Discovery/modbus_mk.c **** 
 400:App/STM32F4-Discovery/modbus_mk.c **** 	/* write request  to modbus line */
 401:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req, rsp, req_length, 5); 
 1949              		.loc 1 401 0
 1950 00e0 07F50272 		add	r2, r7, #520
 1951 00e4 07F10803 		add	r3, r7, #8
 1952 00e8 1046     		mov	r0, r2
 1953 00ea 1946     		mov	r1, r3
 1954 00ec D7F81024 		ldr	r2, [r7, #1040]
 1955 00f0 0523     		movs	r3, #5
 1956 00f2 FFF7FEFF 		bl	write_read_modbus
 402:App/STM32F4-Discovery/modbus_mk.c **** 	return modbus_confirmation (req, rsp,req_length, 5); 
 1957              		.loc 1 402 0
 1958 00f6 D7F81034 		ldr	r3, [r7, #1040]
 1959 00fa 9BB2     		uxth	r3, r3
 1960 00fc 07F50271 		add	r1, r7, #520
 1961 0100 07F10802 		add	r2, r7, #8
 1962 0104 0846     		mov	r0, r1
 1963 0106 1146     		mov	r1, r2
 1964 0108 1A46     		mov	r2, r3
 1965 010a 0523     		movs	r3, #5
 1966 010c FFF7FEFF 		bl	modbus_confirmation
 1967 0110 0346     		mov	r3, r0
 1968 0112 DBB2     		uxtb	r3, r3
 403:App/STM32F4-Discovery/modbus_mk.c **** 
 404:App/STM32F4-Discovery/modbus_mk.c **** 
 405:App/STM32F4-Discovery/modbus_mk.c **** 
 406:App/STM32F4-Discovery/modbus_mk.c **** }
 1969              		.loc 1 406 0
 1970 0114 1846     		mov	r0, r3
 1971 0116 07F58367 		add	r7, r7, #1048
 1972 011a BD46     		mov	sp, r7
 1973              		@ sp needed
 1974 011c 80BD     		pop	{r7, pc}
 1975              		.cfi_endproc
 1976              	.LFE119:
 1978 011e 00BF     		.section	.text.modbus_RR,"ax",%progbits
 1979              		.align	2
 1980              		.global	modbus_RR
 1981              		.thumb
 1982              		.thumb_func
 1984              	modbus_RR:
 1985              	.LFB120:
 407:App/STM32F4-Discovery/modbus_mk.c **** 
 408:App/STM32F4-Discovery/modbus_mk.c **** 
 409:App/STM32F4-Discovery/modbus_mk.c **** /* Read the values from the array to the registers of the remote device */
 410:App/STM32F4-Discovery/modbus_mk.c **** uint8_t modbus_RR( int address, int nb, uint16_t *src)
 411:App/STM32F4-Discovery/modbus_mk.c **** {
 1986              		.loc 1 411 0
 1987              		.cfi_startproc
 1988              		@ args = 0, pretend = 0, frame = 1064
 1989              		@ frame_needed = 1, uses_anonymous_args = 0
 1990 0000 80B5     		push	{r7, lr}
 1991              	.LCFI30:
 1992              		.cfi_def_cfa_offset 8
 1993              		.cfi_offset 7, -8
 1994              		.cfi_offset 14, -4
 1995 0002 ADF5856D 		sub	sp, sp, #1064
 1996              	.LCFI31:
 1997              		.cfi_def_cfa_offset 1072
 1998 0006 00AF     		add	r7, sp, #0
 1999              	.LCFI32:
 2000              		.cfi_def_cfa_register 7
 2001 0008 07F10C03 		add	r3, r7, #12
 2002 000c 1860     		str	r0, [r3]
 2003 000e 07F10803 		add	r3, r7, #8
 2004 0012 1960     		str	r1, [r3]
 2005 0014 3B1D     		adds	r3, r7, #4
 2006 0016 1A60     		str	r2, [r3]
 412:App/STM32F4-Discovery/modbus_mk.c ****     	int rc;
 413:App/STM32F4-Discovery/modbus_mk.c ****     	int i;
 414:App/STM32F4-Discovery/modbus_mk.c ****     	int req_length;
 415:App/STM32F4-Discovery/modbus_mk.c **** 	int byte_count;
 416:App/STM32F4-Discovery/modbus_mk.c ****     	uint8_t req[REQ_MAX_LEN];
 417:App/STM32F4-Discovery/modbus_mk.c ****   	uint8_t rsp[REQ_MAX_LEN];
 418:App/STM32F4-Discovery/modbus_mk.c **** 
 419:App/STM32F4-Discovery/modbus_mk.c **** 	req[0] = 0x36; 
 2007              		.loc 1 419 0
 2008 0018 07F50573 		add	r3, r7, #532
 2009 001c 3622     		movs	r2, #54
 2010 001e 1A70     		strb	r2, [r3]
 420:App/STM32F4-Discovery/modbus_mk.c **** 	req[1] = 0x4;
 2011              		.loc 1 420 0
 2012 0020 07F50573 		add	r3, r7, #532
 2013 0024 0422     		movs	r2, #4
 2014 0026 5A70     		strb	r2, [r3, #1]
 421:App/STM32F4-Discovery/modbus_mk.c **** 	req[2] = address >> 8;
 2015              		.loc 1 421 0
 2016 0028 07F10C03 		add	r3, r7, #12
 2017 002c 1B68     		ldr	r3, [r3]
 2018 002e 1B12     		asrs	r3, r3, #8
 2019 0030 DAB2     		uxtb	r2, r3
 2020 0032 07F50573 		add	r3, r7, #532
 2021 0036 9A70     		strb	r2, [r3, #2]
 422:App/STM32F4-Discovery/modbus_mk.c **** 	req[3] = address & 0x00ff;
 2022              		.loc 1 422 0
 2023 0038 07F10C03 		add	r3, r7, #12
 2024 003c 1B68     		ldr	r3, [r3]
 2025 003e DAB2     		uxtb	r2, r3
 2026 0040 07F50573 		add	r3, r7, #532
 2027 0044 DA70     		strb	r2, [r3, #3]
 423:App/STM32F4-Discovery/modbus_mk.c **** 	req[4] = nb >> 8;
 2028              		.loc 1 423 0
 2029 0046 07F10803 		add	r3, r7, #8
 2030 004a 1B68     		ldr	r3, [r3]
 2031 004c 1B12     		asrs	r3, r3, #8
 2032 004e DAB2     		uxtb	r2, r3
 2033 0050 07F50573 		add	r3, r7, #532
 2034 0054 1A71     		strb	r2, [r3, #4]
 424:App/STM32F4-Discovery/modbus_mk.c **** 	req[5] = nb & 0x00ff; 
 2035              		.loc 1 424 0
 2036 0056 07F10803 		add	r3, r7, #8
 2037 005a 1B68     		ldr	r3, [r3]
 2038 005c DAB2     		uxtb	r2, r3
 2039 005e 07F50573 		add	r3, r7, #532
 2040 0062 5A71     		strb	r2, [r3, #5]
 425:App/STM32F4-Discovery/modbus_mk.c **** 	req_length = 6; 
 2041              		.loc 1 425 0
 2042 0064 0623     		movs	r3, #6
 2043 0066 C7F82034 		str	r3, [r7, #1056]
 426:App/STM32F4-Discovery/modbus_mk.c ****    	
 427:App/STM32F4-Discovery/modbus_mk.c **** 	byte_count = nb * 2;
 2044              		.loc 1 427 0
 2045 006a 07F10803 		add	r3, r7, #8
 2046 006e 1B68     		ldr	r3, [r3]
 2047 0070 5B00     		lsls	r3, r3, #1
 2048 0072 C7F81C34 		str	r3, [r7, #1052]
 428:App/STM32F4-Discovery/modbus_mk.c ****     	req[req_length++] = byte_count;
 2049              		.loc 1 428 0
 2050 0076 D7F82034 		ldr	r3, [r7, #1056]
 2051 007a 5A1C     		adds	r2, r3, #1
 2052 007c C7F82024 		str	r2, [r7, #1056]
 2053 0080 D7F81C24 		ldr	r2, [r7, #1052]
 2054 0084 D1B2     		uxtb	r1, r2
 2055 0086 07F50572 		add	r2, r7, #532
 2056 008a D154     		strb	r1, [r2, r3]
 429:App/STM32F4-Discovery/modbus_mk.c **** 	
 430:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t crc = crc16(req, req_length);
 2057              		.loc 1 430 0
 2058 008c D7F82034 		ldr	r3, [r7, #1056]
 2059 0090 9BB2     		uxth	r3, r3
 2060 0092 07F50572 		add	r2, r7, #532
 2061 0096 1046     		mov	r0, r2
 2062 0098 1946     		mov	r1, r3
 2063 009a FFF7FEFF 		bl	crc16
 2064 009e 0346     		mov	r3, r0
 2065 00a0 A7F81A34 		strh	r3, [r7, #1050]	@ movhi
 431:App/STM32F4-Discovery/modbus_mk.c **** 
 432:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc >> 8; 
 2066              		.loc 1 432 0
 2067 00a4 D7F82034 		ldr	r3, [r7, #1056]
 2068 00a8 5A1C     		adds	r2, r3, #1
 2069 00aa C7F82024 		str	r2, [r7, #1056]
 2070 00ae B7F81A24 		ldrh	r2, [r7, #1050]
 2071 00b2 120A     		lsrs	r2, r2, #8
 2072 00b4 92B2     		uxth	r2, r2
 2073 00b6 D1B2     		uxtb	r1, r2
 2074 00b8 07F50572 		add	r2, r7, #532
 2075 00bc D154     		strb	r1, [r2, r3]
 433:App/STM32F4-Discovery/modbus_mk.c **** 	req[req_length++] = crc & 0x00ff; 
 2076              		.loc 1 433 0
 2077 00be D7F82034 		ldr	r3, [r7, #1056]
 2078 00c2 5A1C     		adds	r2, r3, #1
 2079 00c4 C7F82024 		str	r2, [r7, #1056]
 2080 00c8 B7F81A24 		ldrh	r2, [r7, #1050]	@ movhi
 2081 00cc D1B2     		uxtb	r1, r2
 2082 00ce 07F50572 		add	r2, r7, #532
 2083 00d2 D154     		strb	r1, [r2, r3]
 434:App/STM32F4-Discovery/modbus_mk.c **** 	
 435:App/STM32F4-Discovery/modbus_mk.c **** 	/* write request  to modbus line */
 436:App/STM32F4-Discovery/modbus_mk.c **** 	write_read_modbus( req, rsp,  req_length, nb*2 + 5); 
 2084              		.loc 1 436 0
 2085 00d4 07F10803 		add	r3, r7, #8
 2086 00d8 1B68     		ldr	r3, [r3]
 2087 00da 5B00     		lsls	r3, r3, #1
 2088 00dc 0533     		adds	r3, r3, #5
 2089 00de 07F50571 		add	r1, r7, #532
 2090 00e2 07F11402 		add	r2, r7, #20
 2091 00e6 0846     		mov	r0, r1
 2092 00e8 1146     		mov	r1, r2
 2093 00ea D7F82024 		ldr	r2, [r7, #1056]
 2094 00ee FFF7FEFF 		bl	write_read_modbus
 437:App/STM32F4-Discovery/modbus_mk.c **** 	
 438:App/STM32F4-Discovery/modbus_mk.c **** 	int offset = 2;
 2095              		.loc 1 438 0
 2096 00f2 0223     		movs	r3, #2
 2097 00f4 C7F81434 		str	r3, [r7, #1044]
 439:App/STM32F4-Discovery/modbus_mk.c **** 	
 440:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < nb; i++) {
 2098              		.loc 1 440 0
 2099 00f8 0023     		movs	r3, #0
 2100 00fa C7F82434 		str	r3, [r7, #1060]
 2101 00fe 24E0     		b	.L56
 2102              	.L57:
 441:App/STM32F4-Discovery/modbus_mk.c ****             /* shift reg hi_byte to temp OR with lo_byte */
 442:App/STM32F4-Discovery/modbus_mk.c ****             src[i] = (rsp[offset + 1 + (i << 1)] << 8) |
 2103              		.loc 1 442 0 discriminator 2
 2104 0100 D7F82434 		ldr	r3, [r7, #1060]
 2105 0104 5B00     		lsls	r3, r3, #1
 2106 0106 3A1D     		adds	r2, r7, #4
 2107 0108 1268     		ldr	r2, [r2]
 2108 010a 1344     		add	r3, r3, r2
 2109 010c D7F81424 		ldr	r2, [r7, #1044]
 2110 0110 511C     		adds	r1, r2, #1
 2111 0112 D7F82424 		ldr	r2, [r7, #1060]
 2112 0116 5200     		lsls	r2, r2, #1
 2113 0118 0A44     		add	r2, r2, r1
 2114 011a 07F11401 		add	r1, r7, #20
 2115 011e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 2116 0120 1202     		lsls	r2, r2, #8
 2117 0122 91B2     		uxth	r1, r2
 443:App/STM32F4-Discovery/modbus_mk.c ****                 rsp[offset + 2 + (i << 1)];
 2118              		.loc 1 443 0 discriminator 2
 2119 0124 D7F81424 		ldr	r2, [r7, #1044]
 2120 0128 901C     		adds	r0, r2, #2
 2121 012a D7F82424 		ldr	r2, [r7, #1060]
 2122 012e 5200     		lsls	r2, r2, #1
 2123 0130 0244     		add	r2, r2, r0
 2124 0132 07F11400 		add	r0, r7, #20
 2125 0136 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 442:App/STM32F4-Discovery/modbus_mk.c ****             src[i] = (rsp[offset + 1 + (i << 1)] << 8) |
 2126              		.loc 1 442 0 discriminator 2
 2127 0138 0A43     		orrs	r2, r2, r1
 2128 013a 92B2     		uxth	r2, r2
 2129 013c 92B2     		uxth	r2, r2
 2130 013e 1A80     		strh	r2, [r3]	@ movhi
 440:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < nb; i++) {
 2131              		.loc 1 440 0 discriminator 2
 2132 0140 D7F82434 		ldr	r3, [r7, #1060]
 2133 0144 0133     		adds	r3, r3, #1
 2134 0146 C7F82434 		str	r3, [r7, #1060]
 2135              	.L56:
 440:App/STM32F4-Discovery/modbus_mk.c **** 	for (i = 0; i < nb; i++) {
 2136              		.loc 1 440 0 is_stmt 0 discriminator 1
 2137 014a 07F10803 		add	r3, r7, #8
 2138 014e D7F82424 		ldr	r2, [r7, #1060]
 2139 0152 1B68     		ldr	r3, [r3]
 2140 0154 9A42     		cmp	r2, r3
 2141 0156 D3DB     		blt	.L57
 444:App/STM32F4-Discovery/modbus_mk.c **** 		
 445:App/STM32F4-Discovery/modbus_mk.c ****         }
 446:App/STM32F4-Discovery/modbus_mk.c **** 
 447:App/STM32F4-Discovery/modbus_mk.c **** //	for (i =0; i < nb; i++ ){ t_printf("[%d] ", src[i]); }
 448:App/STM32F4-Discovery/modbus_mk.c **** //	t_printf("\n");
 449:App/STM32F4-Discovery/modbus_mk.c **** 
 450:App/STM32F4-Discovery/modbus_mk.c **** 	
 451:App/STM32F4-Discovery/modbus_mk.c **** 
 452:App/STM32F4-Discovery/modbus_mk.c **** 	return modbus_confirmation (req, rsp,req_length, nb*2 + 5); 
 2142              		.loc 1 452 0 is_stmt 1
 2143 0158 D7F82034 		ldr	r3, [r7, #1056]
 2144 015c 9AB2     		uxth	r2, r3
 2145 015e 07F10803 		add	r3, r7, #8
 2146 0162 1B68     		ldr	r3, [r3]
 2147 0164 9BB2     		uxth	r3, r3
 2148 0166 5B00     		lsls	r3, r3, #1
 2149 0168 9BB2     		uxth	r3, r3
 2150 016a 0533     		adds	r3, r3, #5
 2151 016c 9BB2     		uxth	r3, r3
 2152 016e 07F50570 		add	r0, r7, #532
 2153 0172 07F11401 		add	r1, r7, #20
 2154 0176 FFF7FEFF 		bl	modbus_confirmation
 2155 017a 0346     		mov	r3, r0
 2156 017c DBB2     		uxtb	r3, r3
 453:App/STM32F4-Discovery/modbus_mk.c **** 
 454:App/STM32F4-Discovery/modbus_mk.c **** 
 455:App/STM32F4-Discovery/modbus_mk.c **** }
 2157              		.loc 1 455 0
 2158 017e 1846     		mov	r0, r3
 2159 0180 07F58567 		add	r7, r7, #1064
 2160 0184 BD46     		mov	sp, r7
 2161              		@ sp needed
 2162 0186 80BD     		pop	{r7, pc}
 2163              		.cfi_endproc
 2164              	.LFE120:
 2166              		.section	.rodata
 2167 008a 0000     		.align	2
 2168              	.LC7:
 2169 008c 48423A20 		.ascii	"HB: %d\012\012\000"
 2169      25640A0A 
 2169      00
 2170 0095 000000   		.section	.text.motorHeartBeat_task,"ax",%progbits
 2171              		.align	2
 2172              		.global	motorHeartBeat_task
 2173              		.thumb
 2174              		.thumb_func
 2176              	motorHeartBeat_task:
 2177              	.LFB121:
 456:App/STM32F4-Discovery/modbus_mk.c **** 
 457:App/STM32F4-Discovery/modbus_mk.c **** 
 458:App/STM32F4-Discovery/modbus_mk.c **** 
 459:App/STM32F4-Discovery/modbus_mk.c **** /*===================================================================================
 460:App/STM32F4-Discovery/modbus_mk.c **** =====================================================================================
 461:App/STM32F4-Discovery/modbus_mk.c **** ============    		TASKS SECTION			===================== 
 462:App/STM32F4-Discovery/modbus_mk.c **** =====================================================================================
 463:App/STM32F4-Discovery/modbus_mk.c **** ====================================================================================*/
 464:App/STM32F4-Discovery/modbus_mk.c **** void motorHeartBeat_task(void * pvParameters)
 465:App/STM32F4-Discovery/modbus_mk.c **** {
 2178              		.loc 1 465 0
 2179              		.cfi_startproc
 2180              		@ args = 0, pretend = 0, frame = 32
 2181              		@ frame_needed = 1, uses_anonymous_args = 0
 2182 0000 80B5     		push	{r7, lr}
 2183              	.LCFI33:
 2184              		.cfi_def_cfa_offset 8
 2185              		.cfi_offset 7, -8
 2186              		.cfi_offset 14, -4
 2187 0002 88B0     		sub	sp, sp, #32
 2188              	.LCFI34:
 2189              		.cfi_def_cfa_offset 40
 2190 0004 00AF     		add	r7, sp, #0
 2191              	.LCFI35:
 2192              		.cfi_def_cfa_register 7
 2193 0006 7860     		str	r0, [r7, #4]
 466:App/STM32F4-Discovery/modbus_mk.c **** 	/*! sets speed of motor */
 467:App/STM32F4-Discovery/modbus_mk.c **** 
 468:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t tab_reg[10];
 469:App/STM32F4-Discovery/modbus_mk.c **** //	portTickType xLastWakeTime; 
 470:App/STM32F4-Discovery/modbus_mk.c **** //	xLastWakeTime = xTaskGetTickCount();
 471:App/STM32F4-Discovery/modbus_mk.c **** 	//vTaskDelay(portMAX_DELAY);	
 472:App/STM32F4-Discovery/modbus_mk.c **** 	//vTaskSuspend(NULL); 
 473:App/STM32F4-Discovery/modbus_mk.c **** 	int counter = 0;	
 2194              		.loc 1 473 0
 2195 0008 0023     		movs	r3, #0
 2196 000a FB61     		str	r3, [r7, #28]
 2197              	.L60:
 474:App/STM32F4-Discovery/modbus_mk.c **** 	for(;;)
 475:App/STM32F4-Discovery/modbus_mk.c **** 	{
 476:App/STM32F4-Discovery/modbus_mk.c **** 		#ifdef DEBUG
 477:App/STM32F4-Discovery/modbus_mk.c **** 		t_printf("HB: %d\n\n", counter);
 2198              		.loc 1 477 0 discriminator 1
 2199 000c 0948     		ldr	r0, .L61
 2200 000e F969     		ldr	r1, [r7, #28]
 2201 0010 FFF7FEFF 		bl	t_printf
 478:App/STM32F4-Discovery/modbus_mk.c **** 		#endif
 479:App/STM32F4-Discovery/modbus_mk.c **** 		modbus_RR(0,10,tab_reg);
 2202              		.loc 1 479 0 discriminator 1
 2203 0014 07F10803 		add	r3, r7, #8
 2204 0018 0020     		movs	r0, #0
 2205 001a 0A21     		movs	r1, #10
 2206 001c 1A46     		mov	r2, r3
 2207 001e FFF7FEFF 		bl	modbus_RR
 480:App/STM32F4-Discovery/modbus_mk.c **** 		counter ++;
 2208              		.loc 1 480 0 discriminator 1
 2209 0022 FB69     		ldr	r3, [r7, #28]
 2210 0024 0133     		adds	r3, r3, #1
 2211 0026 FB61     		str	r3, [r7, #28]
 481:App/STM32F4-Discovery/modbus_mk.c **** 	//	vTaskDelayUntil(&xLastWakeTime, 3000/portTICK_RATE_MS);
 482:App/STM32F4-Discovery/modbus_mk.c **** 		vTaskDelay(3000/portTICK_RATE_MS);
 2212              		.loc 1 482 0 discriminator 1
 2213 0028 40F6B830 		movw	r0, #3000
 2214 002c FFF7FEFF 		bl	vTaskDelay
 483:App/STM32F4-Discovery/modbus_mk.c **** 
 484:App/STM32F4-Discovery/modbus_mk.c **** 	}
 2215              		.loc 1 484 0 discriminator 1
 2216 0030 ECE7     		b	.L60
 2217              	.L62:
 2218 0032 00BF     		.align	2
 2219              	.L61:
 2220 0034 8C000000 		.word	.LC7
 2221              		.cfi_endproc
 2222              	.LFE121:
 2224              		.section	.text.motorControl_task,"ax",%progbits
 2225              		.align	2
 2226              		.global	motorControl_task
 2227              		.thumb
 2228              		.thumb_func
 2230              	motorControl_task:
 2231              	.LFB122:
 485:App/STM32F4-Discovery/modbus_mk.c **** 	/* Tasks must not attempt to return from their implementing
 486:App/STM32F4-Discovery/modbus_mk.c ****         function or otherwise exit.  In newer FreeRTOS port
 487:App/STM32F4-Discovery/modbus_mk.c ****         attempting to do so will result in an configASSERT() being
 488:App/STM32F4-Discovery/modbus_mk.c ****         called if it is defined.  If it is necessary for a task to
 489:App/STM32F4-Discovery/modbus_mk.c ****         exit then have the task call vTaskDelete( NULL ) to ensure
 490:App/STM32F4-Discovery/modbus_mk.c ****         its exit is clean. */
 491:App/STM32F4-Discovery/modbus_mk.c **** 	closesocket(socket_0);		
 492:App/STM32F4-Discovery/modbus_mk.c ****         vTaskDelete( NULL );
 493:App/STM32F4-Discovery/modbus_mk.c **** 
 494:App/STM32F4-Discovery/modbus_mk.c **** 
 495:App/STM32F4-Discovery/modbus_mk.c **** 
 496:App/STM32F4-Discovery/modbus_mk.c **** 
 497:App/STM32F4-Discovery/modbus_mk.c **** }
 498:App/STM32F4-Discovery/modbus_mk.c **** 
 499:App/STM32F4-Discovery/modbus_mk.c **** void motorControl_task(void * pvParameters)
 500:App/STM32F4-Discovery/modbus_mk.c **** {
 2232              		.loc 1 500 0
 2233              		.cfi_startproc
 2234              		@ args = 0, pretend = 0, frame = 32
 2235              		@ frame_needed = 1, uses_anonymous_args = 0
 2236 0000 80B5     		push	{r7, lr}
 2237              	.LCFI36:
 2238              		.cfi_def_cfa_offset 8
 2239              		.cfi_offset 7, -8
 2240              		.cfi_offset 14, -4
 2241 0002 88B0     		sub	sp, sp, #32
 2242              	.LCFI37:
 2243              		.cfi_def_cfa_offset 40
 2244 0004 00AF     		add	r7, sp, #0
 2245              	.LCFI38:
 2246              		.cfi_def_cfa_register 7
 2247 0006 7860     		str	r0, [r7, #4]
 501:App/STM32F4-Discovery/modbus_mk.c **** 	
 502:App/STM32F4-Discovery/modbus_mk.c **** 
 503:App/STM32F4-Discovery/modbus_mk.c **** 	uint8_t src[4];
 504:App/STM32F4-Discovery/modbus_mk.c **** 	uint16_t spd[5]; 
 505:App/STM32F4-Discovery/modbus_mk.c **** 	
 506:App/STM32F4-Discovery/modbus_mk.c **** 
 507:App/STM32F4-Discovery/modbus_mk.c **** //	vTaskSuspend(NULL);	
 508:App/STM32F4-Discovery/modbus_mk.c **** 
 509:App/STM32F4-Discovery/modbus_mk.c **** 	src[0]=1; src[1]=1; src[2]=1; src[3]=1;
 2248              		.loc 1 509 0
 2249 0008 0123     		movs	r3, #1
 2250 000a 3B75     		strb	r3, [r7, #20]
 2251 000c 0123     		movs	r3, #1
 2252 000e 7B75     		strb	r3, [r7, #21]
 2253 0010 0123     		movs	r3, #1
 2254 0012 BB75     		strb	r3, [r7, #22]
 2255 0014 0123     		movs	r3, #1
 2256 0016 FB75     		strb	r3, [r7, #23]
 510:App/STM32F4-Discovery/modbus_mk.c **** 	
 511:App/STM32F4-Discovery/modbus_mk.c **** //	spd[0]=1500;spd[1]=0;spd[2]=2250;spd[3]=10;spd[4]=10;
 512:App/STM32F4-Discovery/modbus_mk.c **** 	
 513:App/STM32F4-Discovery/modbus_mk.c **** 	// create usart semaphore 
 514:App/STM32F4-Discovery/modbus_mk.c **** 	xSmphrUSART = xSemaphoreCreateBinary();	
 2257              		.loc 1 514 0
 2258 0018 0120     		movs	r0, #1
 2259 001a 0021     		movs	r1, #0
 2260 001c 0322     		movs	r2, #3
 2261 001e FFF7FEFF 		bl	xQueueGenericCreate
 2262 0022 0246     		mov	r2, r0
 2263 0024 954B     		ldr	r3, .L78
 2264 0026 1A60     		str	r2, [r3]
 515:App/STM32F4-Discovery/modbus_mk.c **** 	
 516:App/STM32F4-Discovery/modbus_mk.c **** 	portTickType xDelay = portMAX_DELAY;//3000 / portTICK_RATE_MS;	
 2265              		.loc 1 516 0
 2266 0028 4FF0FF33 		mov	r3, #-1
 2267 002c FB61     		str	r3, [r7, #28]
 517:App/STM32F4-Discovery/modbus_mk.c **** 	
 518:App/STM32F4-Discovery/modbus_mk.c **** 
 519:App/STM32F4-Discovery/modbus_mk.c **** 	static	QueueTelegram telegramR, telegramS; 
 520:App/STM32F4-Discovery/modbus_mk.c **** 
 521:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.data[0] = 1000;
 2268              		.loc 1 521 0
 2269 002e 944B     		ldr	r3, .L78+4
 2270 0030 4FF47A72 		mov	r2, #1000
 2271 0034 1A81     		strh	r2, [r3, #8]	@ movhi
 522:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.data[1] = 0;	
 2272              		.loc 1 522 0
 2273 0036 924B     		ldr	r3, .L78+4
 2274 0038 0022     		movs	r2, #0
 2275 003a 5A81     		strh	r2, [r3, #10]	@ movhi
 523:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.data[2] = 2250;
 2276              		.loc 1 523 0
 2277 003c 904B     		ldr	r3, .L78+4
 2278 003e 40F6CA02 		movw	r2, #2250
 2279 0042 9A81     		strh	r2, [r3, #12]	@ movhi
 524:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.data[3] = 10;	
 2280              		.loc 1 524 0
 2281 0044 8E4B     		ldr	r3, .L78+4
 2282 0046 0A22     		movs	r2, #10
 2283 0048 DA81     		strh	r2, [r3, #14]	@ movhi
 525:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.data[4] = 10;	
 2284              		.loc 1 525 0
 2285 004a 8D4B     		ldr	r3, .L78+4
 2286 004c 0A22     		movs	r2, #10
 2287 004e 1A82     		strh	r2, [r3, #16]	@ movhi
 526:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.size = 5;
 2288              		.loc 1 526 0
 2289 0050 8B4B     		ldr	r3, .L78+4
 2290 0052 0522     		movs	r2, #5
 2291 0054 5A60     		str	r2, [r3, #4]
 527:App/STM32F4-Discovery/modbus_mk.c **** 	telegramR.Qcmd = SETDATA;	
 2292              		.loc 1 527 0
 2293 0056 8A4B     		ldr	r3, .L78+4
 2294 0058 0022     		movs	r2, #0
 2295 005a 1A70     		strb	r2, [r3]
 528:App/STM32F4-Discovery/modbus_mk.c **** 
 529:App/STM32F4-Discovery/modbus_mk.c **** 	
 530:App/STM32F4-Discovery/modbus_mk.c **** 
 531:App/STM32F4-Discovery/modbus_mk.c **** 	int HB_flag = 0;
 2296              		.loc 1 531 0
 2297 005c 0023     		movs	r3, #0
 2298 005e BB61     		str	r3, [r7, #24]
 2299              	.L77:
 532:App/STM32F4-Discovery/modbus_mk.c **** 	
 533:App/STM32F4-Discovery/modbus_mk.c **** 	while (1)
 534:App/STM32F4-Discovery/modbus_mk.c **** 	{
 535:App/STM32F4-Discovery/modbus_mk.c **** 
 536:App/STM32F4-Discovery/modbus_mk.c **** 		
 537:App/STM32F4-Discovery/modbus_mk.c **** 	
 538:App/STM32F4-Discovery/modbus_mk.c **** 		if (xQueueReceive(QSpd_handle, (void *)&telegramR, xDelay  ) == pdPASS)
 2300              		.loc 1 538 0
 2301 0060 884B     		ldr	r3, .L78+8
 2302 0062 1B68     		ldr	r3, [r3]
 2303 0064 1846     		mov	r0, r3
 2304 0066 8649     		ldr	r1, .L78+4
 2305 0068 FA69     		ldr	r2, [r7, #28]
 2306 006a 0023     		movs	r3, #0
 2307 006c FFF7FEFF 		bl	xQueueGenericReceive
 2308 0070 0346     		mov	r3, r0
 2309 0072 012B     		cmp	r3, #1
 2310 0074 40F00081 		bne	.L64
 539:App/STM32F4-Discovery/modbus_mk.c **** 		{
 540:App/STM32F4-Discovery/modbus_mk.c **** 			switch ( telegramR.Qcmd )
 2311              		.loc 1 540 0
 2312 0078 814B     		ldr	r3, .L78+4
 2313 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2314 007c 052B     		cmp	r3, #5
 2315 007e 00F2EF80 		bhi	.L65
 2316 0082 01A2     		adr	r2, .L67
 2317 0084 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2318              		.p2align 2
 2319              	.L67:
 2320 0088 A1000000 		.word	.L66+1
 2321 008c 2D010000 		.word	.L68+1
 2322 0090 61020000 		.word	.L65+1
 2323 0094 61020000 		.word	.L65+1
 2324 0098 75010000 		.word	.L69+1
 2325 009c 05020000 		.word	.L70+1
 2326              		.p2align 1
 2327              	.L66:
 541:App/STM32F4-Discovery/modbus_mk.c **** 			{
 542:App/STM32F4-Discovery/modbus_mk.c **** 				case SETDATA:
 543:App/STM32F4-Discovery/modbus_mk.c **** 
 544:App/STM32F4-Discovery/modbus_mk.c **** 					src[0]=1; src[1]=1; src[2]=1; src[3]=1;
 2328              		.loc 1 544 0
 2329 00a0 0123     		movs	r3, #1
 2330 00a2 3B75     		strb	r3, [r7, #20]
 2331 00a4 0123     		movs	r3, #1
 2332 00a6 7B75     		strb	r3, [r7, #21]
 2333 00a8 0123     		movs	r3, #1
 2334 00aa BB75     		strb	r3, [r7, #22]
 2335 00ac 0123     		movs	r3, #1
 2336 00ae FB75     		strb	r3, [r7, #23]
 545:App/STM32F4-Discovery/modbus_mk.c **** 
 546:App/STM32F4-Discovery/modbus_mk.c **** 					if ( !modbus_WIB( 0 , 3, src))
 2337              		.loc 1 546 0
 2338 00b0 07F11403 		add	r3, r7, #20
 2339 00b4 0020     		movs	r0, #0
 2340 00b6 0321     		movs	r1, #3
 2341 00b8 1A46     		mov	r2, r3
 2342 00ba FFF7FEFF 		bl	modbus_WIB
 2343 00be 0346     		mov	r3, r0
 2344 00c0 002B     		cmp	r3, #0
 2345 00c2 0BD1     		bne	.L71
 547:App/STM32F4-Discovery/modbus_mk.c **** 					{
 548:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 549:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2346              		.loc 1 549 0
 2347 00c4 704B     		ldr	r3, .L78+12
 2348 00c6 0722     		movs	r2, #7
 2349 00c8 1A70     		strb	r2, [r3]
 550:App/STM32F4-Discovery/modbus_mk.c **** 						xQueueSend(QSpd_handle, &telegramS, xDelay);
 2350              		.loc 1 550 0
 2351 00ca 6E4B     		ldr	r3, .L78+8
 2352 00cc 1B68     		ldr	r3, [r3]
 2353 00ce 1846     		mov	r0, r3
 2354 00d0 6D49     		ldr	r1, .L78+12
 2355 00d2 FA69     		ldr	r2, [r7, #28]
 2356 00d4 0023     		movs	r3, #0
 2357 00d6 FFF7FEFF 		bl	xQueueGenericSend
 551:App/STM32F4-Discovery/modbus_mk.c **** 						break;
 2358              		.loc 1 551 0
 2359 00da CDE0     		b	.L64
 2360              	.L71:
 552:App/STM32F4-Discovery/modbus_mk.c **** 					}
 553:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2361              		.loc 1 553 0
 2362 00dc 4FF47A70 		mov	r0, #1000
 2363 00e0 FFF7FEFF 		bl	vTaskDelay
 554:App/STM32F4-Discovery/modbus_mk.c **** 					
 555:App/STM32F4-Discovery/modbus_mk.c **** 					if (!modbus_WR(0, 5, telegramR.data))
 2364              		.loc 1 555 0
 2365 00e4 0020     		movs	r0, #0
 2366 00e6 0521     		movs	r1, #5
 2367 00e8 684A     		ldr	r2, .L78+16
 2368 00ea FFF7FEFF 		bl	modbus_WR
 2369 00ee 0346     		mov	r3, r0
 2370 00f0 002B     		cmp	r3, #0
 2371 00f2 0BD1     		bne	.L72
 556:App/STM32F4-Discovery/modbus_mk.c **** 					{
 557:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 558:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2372              		.loc 1 558 0
 2373 00f4 644B     		ldr	r3, .L78+12
 2374 00f6 0722     		movs	r2, #7
 2375 00f8 1A70     		strb	r2, [r3]
 559:App/STM32F4-Discovery/modbus_mk.c **** 						xQueueSend(QSpd_handle, &telegramS, xDelay);
 2376              		.loc 1 559 0
 2377 00fa 624B     		ldr	r3, .L78+8
 2378 00fc 1B68     		ldr	r3, [r3]
 2379 00fe 1846     		mov	r0, r3
 2380 0100 6149     		ldr	r1, .L78+12
 2381 0102 FA69     		ldr	r2, [r7, #28]
 2382 0104 0023     		movs	r3, #0
 2383 0106 FFF7FEFF 		bl	xQueueGenericSend
 560:App/STM32F4-Discovery/modbus_mk.c **** 						break;
 2384              		.loc 1 560 0
 2385 010a B5E0     		b	.L64
 2386              	.L72:
 561:App/STM32F4-Discovery/modbus_mk.c **** 					}
 562:App/STM32F4-Discovery/modbus_mk.c **** 
 563:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2387              		.loc 1 563 0
 2388 010c 4FF47A70 		mov	r0, #1000
 2389 0110 FFF7FEFF 		bl	vTaskDelay
 564:App/STM32F4-Discovery/modbus_mk.c **** 
 565:App/STM32F4-Discovery/modbus_mk.c **** 				// send response to CLI 
 566:App/STM32F4-Discovery/modbus_mk.c **** 					telegramS.Qcmd = SUCCSESS;
 2390              		.loc 1 566 0
 2391 0114 5C4B     		ldr	r3, .L78+12
 2392 0116 0622     		movs	r2, #6
 2393 0118 1A70     		strb	r2, [r3]
 567:App/STM32F4-Discovery/modbus_mk.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2394              		.loc 1 567 0
 2395 011a 5A4B     		ldr	r3, .L78+8
 2396 011c 1B68     		ldr	r3, [r3]
 2397 011e 1846     		mov	r0, r3
 2398 0120 5949     		ldr	r1, .L78+12
 2399 0122 FA69     		ldr	r2, [r7, #28]
 2400 0124 0023     		movs	r3, #0
 2401 0126 FFF7FEFF 		bl	xQueueGenericSend
 568:App/STM32F4-Discovery/modbus_mk.c **** 
 569:App/STM32F4-Discovery/modbus_mk.c **** 					break;
 2402              		.loc 1 569 0
 2403 012a A5E0     		b	.L64
 2404              	.L68:
 570:App/STM32F4-Discovery/modbus_mk.c **** 				       	
 571:App/STM32F4-Discovery/modbus_mk.c **** 				
 572:App/STM32F4-Discovery/modbus_mk.c **** 				case GETDATA:
 573:App/STM32F4-Discovery/modbus_mk.c **** 				
 574:App/STM32F4-Discovery/modbus_mk.c **** 					if ( !modbus_RR(0, 10, telegramS.data))
 2405              		.loc 1 574 0
 2406 012c 0020     		movs	r0, #0
 2407 012e 0A21     		movs	r1, #10
 2408 0130 574A     		ldr	r2, .L78+20
 2409 0132 FFF7FEFF 		bl	modbus_RR
 2410 0136 0346     		mov	r3, r0
 2411 0138 002B     		cmp	r3, #0
 2412 013a 0BD1     		bne	.L73
 575:App/STM32F4-Discovery/modbus_mk.c **** 					{
 576:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 577:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2413              		.loc 1 577 0
 2414 013c 524B     		ldr	r3, .L78+12
 2415 013e 0722     		movs	r2, #7
 2416 0140 1A70     		strb	r2, [r3]
 578:App/STM32F4-Discovery/modbus_mk.c **** 						xQueueSend(QSpd_handle, &telegramS, xDelay);
 2417              		.loc 1 578 0
 2418 0142 504B     		ldr	r3, .L78+8
 2419 0144 1B68     		ldr	r3, [r3]
 2420 0146 1846     		mov	r0, r3
 2421 0148 4F49     		ldr	r1, .L78+12
 2422 014a FA69     		ldr	r2, [r7, #28]
 2423 014c 0023     		movs	r3, #0
 2424 014e FFF7FEFF 		bl	xQueueGenericSend
 579:App/STM32F4-Discovery/modbus_mk.c **** 						break;
 2425              		.loc 1 579 0
 2426 0152 91E0     		b	.L64
 2427              	.L73:
 580:App/STM32F4-Discovery/modbus_mk.c **** 					}
 581:App/STM32F4-Discovery/modbus_mk.c **** 
 582:App/STM32F4-Discovery/modbus_mk.c **** 				
 583:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2428              		.loc 1 583 0
 2429 0154 4FF47A70 		mov	r0, #1000
 2430 0158 FFF7FEFF 		bl	vTaskDelay
 584:App/STM32F4-Discovery/modbus_mk.c **** 
 585:App/STM32F4-Discovery/modbus_mk.c **** 					// send response to CLI 
 586:App/STM32F4-Discovery/modbus_mk.c **** 					telegramS.Qcmd = SUCCSESS;
 2431              		.loc 1 586 0
 2432 015c 4A4B     		ldr	r3, .L78+12
 2433 015e 0622     		movs	r2, #6
 2434 0160 1A70     		strb	r2, [r3]
 587:App/STM32F4-Discovery/modbus_mk.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2435              		.loc 1 587 0
 2436 0162 484B     		ldr	r3, .L78+8
 2437 0164 1B68     		ldr	r3, [r3]
 2438 0166 1846     		mov	r0, r3
 2439 0168 4749     		ldr	r1, .L78+12
 2440 016a FA69     		ldr	r2, [r7, #28]
 2441 016c 0023     		movs	r3, #0
 2442 016e FFF7FEFF 		bl	xQueueGenericSend
 588:App/STM32F4-Discovery/modbus_mk.c **** 
 589:App/STM32F4-Discovery/modbus_mk.c **** 					break;
 2443              		.loc 1 589 0
 2444 0172 81E0     		b	.L64
 2445              	.L69:
 590:App/STM32F4-Discovery/modbus_mk.c **** 
 591:App/STM32F4-Discovery/modbus_mk.c **** 				
 592:App/STM32F4-Discovery/modbus_mk.c **** 				case START: 
 593:App/STM32F4-Discovery/modbus_mk.c **** 					HB_flag = 1; 
 2446              		.loc 1 593 0
 2447 0174 0123     		movs	r3, #1
 2448 0176 BB61     		str	r3, [r7, #24]
 594:App/STM32F4-Discovery/modbus_mk.c **** 				//	vTaskResume(motorHeartBeatHandle);
 595:App/STM32F4-Discovery/modbus_mk.c **** 
 596:App/STM32F4-Discovery/modbus_mk.c **** 					// set motor speed to 10% 
 597:App/STM32F4-Discovery/modbus_mk.c **** 				         src[0]=1; src[1]=1; src[2]=1; src[3]=1;
 2449              		.loc 1 597 0
 2450 0178 0123     		movs	r3, #1
 2451 017a 3B75     		strb	r3, [r7, #20]
 2452 017c 0123     		movs	r3, #1
 2453 017e 7B75     		strb	r3, [r7, #21]
 2454 0180 0123     		movs	r3, #1
 2455 0182 BB75     		strb	r3, [r7, #22]
 2456 0184 0123     		movs	r3, #1
 2457 0186 FB75     		strb	r3, [r7, #23]
 598:App/STM32F4-Discovery/modbus_mk.c **** 
 599:App/STM32F4-Discovery/modbus_mk.c **** 					if( !modbus_WIB( 0 , 3, src) )
 2458              		.loc 1 599 0
 2459 0188 07F11403 		add	r3, r7, #20
 2460 018c 0020     		movs	r0, #0
 2461 018e 0321     		movs	r1, #3
 2462 0190 1A46     		mov	r2, r3
 2463 0192 FFF7FEFF 		bl	modbus_WIB
 2464 0196 0346     		mov	r3, r0
 2465 0198 002B     		cmp	r3, #0
 2466 019a 0BD1     		bne	.L74
 600:App/STM32F4-Discovery/modbus_mk.c **** 					{
 601:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 602:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2467              		.loc 1 602 0
 2468 019c 3A4B     		ldr	r3, .L78+12
 2469 019e 0722     		movs	r2, #7
 2470 01a0 1A70     		strb	r2, [r3]
 603:App/STM32F4-Discovery/modbus_mk.c **** 						xQueueSend(QSpd_handle, &telegramS, xDelay);
 2471              		.loc 1 603 0
 2472 01a2 384B     		ldr	r3, .L78+8
 2473 01a4 1B68     		ldr	r3, [r3]
 2474 01a6 1846     		mov	r0, r3
 2475 01a8 3749     		ldr	r1, .L78+12
 2476 01aa FA69     		ldr	r2, [r7, #28]
 2477 01ac 0023     		movs	r3, #0
 2478 01ae FFF7FEFF 		bl	xQueueGenericSend
 604:App/STM32F4-Discovery/modbus_mk.c **** 						break;
 2479              		.loc 1 604 0
 2480 01b2 61E0     		b	.L64
 2481              	.L74:
 605:App/STM32F4-Discovery/modbus_mk.c **** 					}
 606:App/STM32F4-Discovery/modbus_mk.c **** 
 607:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2482              		.loc 1 607 0
 2483 01b4 4FF47A70 		mov	r0, #1000
 2484 01b8 FFF7FEFF 		bl	vTaskDelay
 608:App/STM32F4-Discovery/modbus_mk.c **** 					if (!modbus_WR( 0, 5, telegramR.data))
 2485              		.loc 1 608 0
 2486 01bc 0020     		movs	r0, #0
 2487 01be 0521     		movs	r1, #5
 2488 01c0 324A     		ldr	r2, .L78+16
 2489 01c2 FFF7FEFF 		bl	modbus_WR
 2490 01c6 0346     		mov	r3, r0
 2491 01c8 002B     		cmp	r3, #0
 2492 01ca 0BD1     		bne	.L75
 609:App/STM32F4-Discovery/modbus_mk.c **** 					{
 610:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 611:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2493              		.loc 1 611 0
 2494 01cc 2E4B     		ldr	r3, .L78+12
 2495 01ce 0722     		movs	r2, #7
 2496 01d0 1A70     		strb	r2, [r3]
 612:App/STM32F4-Discovery/modbus_mk.c **** 						xQueueSend(QSpd_handle, &telegramS, xDelay);
 2497              		.loc 1 612 0
 2498 01d2 2C4B     		ldr	r3, .L78+8
 2499 01d4 1B68     		ldr	r3, [r3]
 2500 01d6 1846     		mov	r0, r3
 2501 01d8 2B49     		ldr	r1, .L78+12
 2502 01da FA69     		ldr	r2, [r7, #28]
 2503 01dc 0023     		movs	r3, #0
 2504 01de FFF7FEFF 		bl	xQueueGenericSend
 613:App/STM32F4-Discovery/modbus_mk.c **** 						break;
 2505              		.loc 1 613 0
 2506 01e2 49E0     		b	.L64
 2507              	.L75:
 614:App/STM32F4-Discovery/modbus_mk.c **** 					}
 615:App/STM32F4-Discovery/modbus_mk.c **** 
 616:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2508              		.loc 1 616 0
 2509 01e4 4FF47A70 		mov	r0, #1000
 2510 01e8 FFF7FEFF 		bl	vTaskDelay
 617:App/STM32F4-Discovery/modbus_mk.c **** 			
 618:App/STM32F4-Discovery/modbus_mk.c **** 					// send response to CLI 
 619:App/STM32F4-Discovery/modbus_mk.c **** 					telegramS.Qcmd = SUCCSESS;
 2511              		.loc 1 619 0
 2512 01ec 264B     		ldr	r3, .L78+12
 2513 01ee 0622     		movs	r2, #6
 2514 01f0 1A70     		strb	r2, [r3]
 620:App/STM32F4-Discovery/modbus_mk.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2515              		.loc 1 620 0
 2516 01f2 244B     		ldr	r3, .L78+8
 2517 01f4 1B68     		ldr	r3, [r3]
 2518 01f6 1846     		mov	r0, r3
 2519 01f8 2349     		ldr	r1, .L78+12
 2520 01fa FA69     		ldr	r2, [r7, #28]
 2521 01fc 0023     		movs	r3, #0
 2522 01fe FFF7FEFF 		bl	xQueueGenericSend
 621:App/STM32F4-Discovery/modbus_mk.c **** 
 622:App/STM32F4-Discovery/modbus_mk.c **** 					break;
 2523              		.loc 1 622 0
 2524 0202 39E0     		b	.L64
 2525              	.L70:
 623:App/STM32F4-Discovery/modbus_mk.c **** 				
 624:App/STM32F4-Discovery/modbus_mk.c **** 				case STOP:
 625:App/STM32F4-Discovery/modbus_mk.c **** 					
 626:App/STM32F4-Discovery/modbus_mk.c **** 				//	vTaskSuspend (motorHeartBeatHandle);	
 627:App/STM32F4-Discovery/modbus_mk.c **** 					// send stop bits to motor 
 628:App/STM32F4-Discovery/modbus_mk.c **** 					src[0]=0; src[1]=1; src[2]=1; src[3]=1;
 2526              		.loc 1 628 0
 2527 0204 0023     		movs	r3, #0
 2528 0206 3B75     		strb	r3, [r7, #20]
 2529 0208 0123     		movs	r3, #1
 2530 020a 7B75     		strb	r3, [r7, #21]
 2531 020c 0123     		movs	r3, #1
 2532 020e BB75     		strb	r3, [r7, #22]
 2533 0210 0123     		movs	r3, #1
 2534 0212 FB75     		strb	r3, [r7, #23]
 629:App/STM32F4-Discovery/modbus_mk.c **** 
 630:App/STM32F4-Discovery/modbus_mk.c **** 					if (!modbus_WIB( 0 , 3, src)) 
 2535              		.loc 1 630 0
 2536 0214 07F11403 		add	r3, r7, #20
 2537 0218 0020     		movs	r0, #0
 2538 021a 0321     		movs	r1, #3
 2539 021c 1A46     		mov	r2, r3
 2540 021e FFF7FEFF 		bl	modbus_WIB
 2541 0222 0346     		mov	r3, r0
 2542 0224 002B     		cmp	r3, #0
 2543 0226 0BD1     		bne	.L76
 631:App/STM32F4-Discovery/modbus_mk.c **** 					{
 632:App/STM32F4-Discovery/modbus_mk.c **** 							// send response to CLI 
 633:App/STM32F4-Discovery/modbus_mk.c **** 						telegramS.Qcmd = ERROR_MODBUS;
 2544              		.loc 1 633 0
 2545 0228 174B     		ldr	r3, .L78+12
 2546 022a 0722     		movs	r2, #7
 2547 022c 1A70     		strb	r2, [r3]
 634:App/STM32F4-Discovery/modbus_mk.c **** 						xQueueSend(QSpd_handle, &telegramS, xDelay);
 2548              		.loc 1 634 0
 2549 022e 154B     		ldr	r3, .L78+8
 2550 0230 1B68     		ldr	r3, [r3]
 2551 0232 1846     		mov	r0, r3
 2552 0234 1449     		ldr	r1, .L78+12
 2553 0236 FA69     		ldr	r2, [r7, #28]
 2554 0238 0023     		movs	r3, #0
 2555 023a FFF7FEFF 		bl	xQueueGenericSend
 635:App/STM32F4-Discovery/modbus_mk.c **** 						break;
 2556              		.loc 1 635 0
 2557 023e 1BE0     		b	.L64
 2558              	.L76:
 636:App/STM32F4-Discovery/modbus_mk.c **** 					}
 637:App/STM32F4-Discovery/modbus_mk.c **** 
 638:App/STM32F4-Discovery/modbus_mk.c **** 					vTaskDelay ( 1000 / portTICK_RATE_MS);
 2559              		.loc 1 638 0
 2560 0240 4FF47A70 		mov	r0, #1000
 2561 0244 FFF7FEFF 		bl	vTaskDelay
 639:App/STM32F4-Discovery/modbus_mk.c **** 
 640:App/STM32F4-Discovery/modbus_mk.c **** 
 641:App/STM32F4-Discovery/modbus_mk.c **** 								// send response to CLI 
 642:App/STM32F4-Discovery/modbus_mk.c **** 					telegramS.Qcmd = SUCCSESS;
 2562              		.loc 1 642 0
 2563 0248 0F4B     		ldr	r3, .L78+12
 2564 024a 0622     		movs	r2, #6
 2565 024c 1A70     		strb	r2, [r3]
 643:App/STM32F4-Discovery/modbus_mk.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2566              		.loc 1 643 0
 2567 024e 0D4B     		ldr	r3, .L78+8
 2568 0250 1B68     		ldr	r3, [r3]
 2569 0252 1846     		mov	r0, r3
 2570 0254 0C49     		ldr	r1, .L78+12
 2571 0256 FA69     		ldr	r2, [r7, #28]
 2572 0258 0023     		movs	r3, #0
 2573 025a FFF7FEFF 		bl	xQueueGenericSend
 644:App/STM32F4-Discovery/modbus_mk.c **** 
 645:App/STM32F4-Discovery/modbus_mk.c **** 					break; 
 2574              		.loc 1 645 0
 2575 025e 0BE0     		b	.L64
 2576              	.L65:
 646:App/STM32F4-Discovery/modbus_mk.c **** 
 647:App/STM32F4-Discovery/modbus_mk.c **** 				default:
 648:App/STM32F4-Discovery/modbus_mk.c **** 
 649:App/STM32F4-Discovery/modbus_mk.c **** 					telegramS.Qcmd = ERROR_MODBUS;
 2577              		.loc 1 649 0
 2578 0260 094B     		ldr	r3, .L78+12
 2579 0262 0722     		movs	r2, #7
 2580 0264 1A70     		strb	r2, [r3]
 650:App/STM32F4-Discovery/modbus_mk.c **** 					xQueueSend(QSpd_handle, &telegramS, xDelay);
 2581              		.loc 1 650 0
 2582 0266 074B     		ldr	r3, .L78+8
 2583 0268 1B68     		ldr	r3, [r3]
 2584 026a 1846     		mov	r0, r3
 2585 026c 0649     		ldr	r1, .L78+12
 2586 026e FA69     		ldr	r2, [r7, #28]
 2587 0270 0023     		movs	r3, #0
 2588 0272 FFF7FEFF 		bl	xQueueGenericSend
 651:App/STM32F4-Discovery/modbus_mk.c **** 					break;
 2589              		.loc 1 651 0
 2590 0276 00BF     		nop
 2591              	.L64:
 652:App/STM32F4-Discovery/modbus_mk.c **** 
 653:App/STM32F4-Discovery/modbus_mk.c **** 					
 654:App/STM32F4-Discovery/modbus_mk.c **** 
 655:App/STM32F4-Discovery/modbus_mk.c **** 
 656:App/STM32F4-Discovery/modbus_mk.c **** 					
 657:App/STM32F4-Discovery/modbus_mk.c **** 			}
 658:App/STM32F4-Discovery/modbus_mk.c **** 		}
 659:App/STM32F4-Discovery/modbus_mk.c **** 	
 660:App/STM32F4-Discovery/modbus_mk.c **** 		
 661:App/STM32F4-Discovery/modbus_mk.c **** 	
 662:App/STM32F4-Discovery/modbus_mk.c **** 	}
 2592              		.loc 1 662 0
 2593 0278 F2E6     		b	.L77
 2594              	.L79:
 2595 027a 00BF     		.align	2
 2596              	.L78:
 2597 027c 00000000 		.word	xSmphrUSART
 2598 0280 00000000 		.word	telegramR.9445
 2599 0284 00000000 		.word	QSpd_handle
 2600 0288 00000000 		.word	telegramS.9446
 2601 028c 08000000 		.word	telegramR.9445+8
 2602 0290 08000000 		.word	telegramS.9446+8
 2603              		.cfi_endproc
 2604              	.LFE122:
 2606              		.section	.bss.cnt.9327,"aw",%nobits
 2609              	cnt.9327:
 2610 0000 00       		.space	1
 2611              		.section	.bss.telegramR.9445,"aw",%nobits
 2612              		.align	2
 2615              	telegramR.9445:
 2616 0000 00000000 		.space	28
 2616      00000000 
 2616      00000000 
 2616      00000000 
 2616      00000000 
 2617              		.section	.bss.telegramS.9446,"aw",%nobits
 2618              		.align	2
 2621              	telegramS.9446:
 2622 0000 00000000 		.space	28
 2622      00000000 
 2622      00000000 
 2622      00000000 
 2622      00000000 
 2623              		.text
 2624              	.Letext0:
 2625              		.file 2 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/lib/gcc/arm-none-eabi/4.8.4/include/std
 2626              		.file 3 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/machine/_default_
 2627              		.file 4 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/stdint.h"
 2628              		.file 5 "App/STM32F4-Discovery/Libraries/CMSIS/ST/STM32F4xx/Include/stm32f4xx.h"
 2629              		.file 6 "App/STM32F4-Discovery/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_gpio.h"
 2630              		.file 7 "App/STM32F4-Discovery/Libraries/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_usart.h"
 2631              		.file 8 "App/STM32F4-Discovery/Libraries/STM32F4xx_StdPeriph_Driver/inc/misc.h"
 2632              		.file 9 "Source/portable/GCC/ARM_CM4F/portmacro.h"
 2633              		.file 10 "Source/include/task.h"
 2634              		.file 11 "Source/include/queue.h"
 2635              		.file 12 "Source/include/semphr.h"
 2636              		.file 13 "App/STM32F4-Discovery/main.h"
 2637              		.file 14 "Source/FreeRTOS-Plus-CLI/FreeRTOS_CLI.h"
 2638              		.file 15 "App/STM32F4-Discovery/tcpCLI.h"
 2639              		.file 16 "App/STM32F4-Discovery/modbus_mk.h"
 2640              		.file 17 "App/STM32F4-Discovery/Libraries/CMSIS/Include/core_cm4.h"
 2641              		.file 18 "App/STM32F4-Discovery/spi.h"
 2642              		.file 19 "App/STM32F4-Discovery/W5200.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 modbus_mk.c
                            *COM*:0000000000000004 xSemaphoreDMASPI
                            *COM*:0000000000000004 xSmphrUSART
                            *COM*:0000000000000004 xSemaphoreREADLEN
                            *COM*:0000000000000004 motorHeartBeatHandle
                            *COM*:0000000000000004 motorHBHandle
                            *COM*:0000000000000004 QSpd_handle
                            *COM*:0000000000000004 QTCP_handle
                            *COM*:0000000000000004 socket_0
                            *COM*:00000000000007d0 bufferTX
                            *COM*:00000000000007d0 bufferRX
                            *COM*:0000000000000004 bufferRXidx
                            *COM*:0000000000000004 bufferTXidx
                            *COM*:0000000000000004 dat_lengthRX
                            *COM*:0000000000000004 dat_lengthTX
                            *COM*:0000000000000004 set_macTaskHandle
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:35     .rodata:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:43     .rodata.xMotorCommand:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:46     .rodata.xMotorCommand:0000000000000000 xMotorCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:60     .rodata.xTaskStatsCommand:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:63     .rodata.xTaskStatsCommand:0000000000000000 xTaskStatsCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:70     .rodata.table_crc_hi:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:73     .rodata.table_crc_hi:0000000000000000 table_crc_hi
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:331    .rodata.table_crc_lo:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:334    .rodata.table_crc_lo:0000000000000000 table_crc_lo
                            *COM*:0000000000000004 fd
                            *COM*:0000000000000201 received_string
                            *COM*:0000000000000004 rx_length
                            *COM*:0000000000000014 input_Register
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:596    .text.init_USARTx:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:601    .text.init_USARTx:0000000000000000 init_USARTx
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:749    .text.init_USARTx:00000000000000e4 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:756    .text.USART_puts:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:761    .text.USART_puts:0000000000000000 USART_puts
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:828    .text.USART_puts:000000000000004c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:833    .text.USART6_IRQHandler:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:838    .text.USART6_IRQHandler:0000000000000000 USART6_IRQHandler
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:942    .text.USART6_IRQHandler:0000000000000090 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:2609   .bss.cnt.9327:0000000000000000 cnt.9327
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:952    .text.crc16:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:957    .text.crc16:0000000000000000 crc16
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:1035   .text.crc16:0000000000000064 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:1045   .text.modbus_confirmation:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:1050   .text.modbus_confirmation:0000000000000000 modbus_confirmation
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:1123   .text.modbus_confirmation:0000000000000060 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:1135   .text.write_read_modbus:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:1140   .text.write_read_modbus:0000000000000000 write_read_modbus
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:1269   .text.write_read_modbus:00000000000000c0 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:1279   .text.modbus_RIB:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:1284   .text.modbus_RIB:0000000000000000 modbus_RIB
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:1403   .text.modbus_WIB:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:1408   .text.modbus_WIB:0000000000000000 modbus_WIB
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:1657   .text.modbus_WR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:1662   .text.modbus_WR:0000000000000000 modbus_WR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:1836   .text.modbus_WSR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:1841   .text.modbus_WSR:0000000000000000 modbus_WSR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:1979   .text.modbus_RR:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:1984   .text.modbus_RR:0000000000000000 modbus_RR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:2171   .text.motorHeartBeat_task:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:2176   .text.motorHeartBeat_task:0000000000000000 motorHeartBeat_task
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:2220   .text.motorHeartBeat_task:0000000000000034 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:2225   .text.motorControl_task:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:2230   .text.motorControl_task:0000000000000000 motorControl_task
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:2320   .text.motorControl_task:0000000000000088 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:2326   .text.motorControl_task:00000000000000a0 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:2597   .text.motorControl_task:000000000000027c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:2615   .bss.telegramR.9445:0000000000000000 telegramR.9445
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:2621   .bss.telegramS.9446:0000000000000000 telegramS.9446
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:2610   .bss.cnt.9327:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:2612   .bss.telegramR.9445:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cca0yS5a.s:2618   .bss.telegramS.9446:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
prvMotorCommand
prvTaskStatsCommand
RCC_APB2PeriphClockCmd
RCC_AHB1PeriphClockCmd
GPIO_Init
GPIO_PinAFConfig
USART_Init
USART_ITConfig
NVIC_Init
USART_Cmd
USART_GetITStatus
USART_ClearITPendingBit
xQueueGenericSendFromISR
t_printf
xQueueGenericReceive
vTaskDelay
xQueueGenericCreate
xQueueGenericSend
