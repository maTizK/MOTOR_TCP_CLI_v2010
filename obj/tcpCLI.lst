   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"tcpCLI.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	xSemaphoreDMASPI,4,4
  20              		.comm	xSmphrUSART,4,4
  21              		.comm	xSemaphoreREADLEN,4,4
  22              		.comm	motorHeartBeatHandle,4,4
  23              		.comm	motorHBHandle,4,4
  24              		.comm	QSpd_handle,4,4
  25              		.comm	QTCP_handle,4,4
  26              		.comm	socket_0,4,4
  27              		.comm	bufferTX,2000,4
  28              		.comm	bufferRX,2000,4
  29              		.comm	bufferRXidx,4,4
  30              		.comm	bufferTXidx,4,4
  31              		.comm	dat_lengthRX,4,4
  32              		.comm	dat_lengthTX,4,4
  33              		.comm	set_macTaskHandle,4,4
  34              		.section	.rodata.table_crc_hi,"a",%progbits
  35              		.align	2
  38              	table_crc_hi:
  39 0000 00       		.byte	0
  40 0001 C1       		.byte	-63
  41 0002 81       		.byte	-127
  42 0003 40       		.byte	64
  43 0004 01       		.byte	1
  44 0005 C0       		.byte	-64
  45 0006 80       		.byte	-128
  46 0007 41       		.byte	65
  47 0008 01       		.byte	1
  48 0009 C0       		.byte	-64
  49 000a 80       		.byte	-128
  50 000b 41       		.byte	65
  51 000c 00       		.byte	0
  52 000d C1       		.byte	-63
  53 000e 81       		.byte	-127
  54 000f 40       		.byte	64
  55 0010 01       		.byte	1
  56 0011 C0       		.byte	-64
  57 0012 80       		.byte	-128
  58 0013 41       		.byte	65
  59 0014 00       		.byte	0
  60 0015 C1       		.byte	-63
  61 0016 81       		.byte	-127
  62 0017 40       		.byte	64
  63 0018 00       		.byte	0
  64 0019 C1       		.byte	-63
  65 001a 81       		.byte	-127
  66 001b 40       		.byte	64
  67 001c 01       		.byte	1
  68 001d C0       		.byte	-64
  69 001e 80       		.byte	-128
  70 001f 41       		.byte	65
  71 0020 01       		.byte	1
  72 0021 C0       		.byte	-64
  73 0022 80       		.byte	-128
  74 0023 41       		.byte	65
  75 0024 00       		.byte	0
  76 0025 C1       		.byte	-63
  77 0026 81       		.byte	-127
  78 0027 40       		.byte	64
  79 0028 00       		.byte	0
  80 0029 C1       		.byte	-63
  81 002a 81       		.byte	-127
  82 002b 40       		.byte	64
  83 002c 01       		.byte	1
  84 002d C0       		.byte	-64
  85 002e 80       		.byte	-128
  86 002f 41       		.byte	65
  87 0030 00       		.byte	0
  88 0031 C1       		.byte	-63
  89 0032 81       		.byte	-127
  90 0033 40       		.byte	64
  91 0034 01       		.byte	1
  92 0035 C0       		.byte	-64
  93 0036 80       		.byte	-128
  94 0037 41       		.byte	65
  95 0038 01       		.byte	1
  96 0039 C0       		.byte	-64
  97 003a 80       		.byte	-128
  98 003b 41       		.byte	65
  99 003c 00       		.byte	0
 100 003d C1       		.byte	-63
 101 003e 81       		.byte	-127
 102 003f 40       		.byte	64
 103 0040 01       		.byte	1
 104 0041 C0       		.byte	-64
 105 0042 80       		.byte	-128
 106 0043 41       		.byte	65
 107 0044 00       		.byte	0
 108 0045 C1       		.byte	-63
 109 0046 81       		.byte	-127
 110 0047 40       		.byte	64
 111 0048 00       		.byte	0
 112 0049 C1       		.byte	-63
 113 004a 81       		.byte	-127
 114 004b 40       		.byte	64
 115 004c 01       		.byte	1
 116 004d C0       		.byte	-64
 117 004e 80       		.byte	-128
 118 004f 41       		.byte	65
 119 0050 00       		.byte	0
 120 0051 C1       		.byte	-63
 121 0052 81       		.byte	-127
 122 0053 40       		.byte	64
 123 0054 01       		.byte	1
 124 0055 C0       		.byte	-64
 125 0056 80       		.byte	-128
 126 0057 41       		.byte	65
 127 0058 01       		.byte	1
 128 0059 C0       		.byte	-64
 129 005a 80       		.byte	-128
 130 005b 41       		.byte	65
 131 005c 00       		.byte	0
 132 005d C1       		.byte	-63
 133 005e 81       		.byte	-127
 134 005f 40       		.byte	64
 135 0060 00       		.byte	0
 136 0061 C1       		.byte	-63
 137 0062 81       		.byte	-127
 138 0063 40       		.byte	64
 139 0064 01       		.byte	1
 140 0065 C0       		.byte	-64
 141 0066 80       		.byte	-128
 142 0067 41       		.byte	65
 143 0068 01       		.byte	1
 144 0069 C0       		.byte	-64
 145 006a 80       		.byte	-128
 146 006b 41       		.byte	65
 147 006c 00       		.byte	0
 148 006d C1       		.byte	-63
 149 006e 81       		.byte	-127
 150 006f 40       		.byte	64
 151 0070 01       		.byte	1
 152 0071 C0       		.byte	-64
 153 0072 80       		.byte	-128
 154 0073 41       		.byte	65
 155 0074 00       		.byte	0
 156 0075 C1       		.byte	-63
 157 0076 81       		.byte	-127
 158 0077 40       		.byte	64
 159 0078 00       		.byte	0
 160 0079 C1       		.byte	-63
 161 007a 81       		.byte	-127
 162 007b 40       		.byte	64
 163 007c 01       		.byte	1
 164 007d C0       		.byte	-64
 165 007e 80       		.byte	-128
 166 007f 41       		.byte	65
 167 0080 01       		.byte	1
 168 0081 C0       		.byte	-64
 169 0082 80       		.byte	-128
 170 0083 41       		.byte	65
 171 0084 00       		.byte	0
 172 0085 C1       		.byte	-63
 173 0086 81       		.byte	-127
 174 0087 40       		.byte	64
 175 0088 00       		.byte	0
 176 0089 C1       		.byte	-63
 177 008a 81       		.byte	-127
 178 008b 40       		.byte	64
 179 008c 01       		.byte	1
 180 008d C0       		.byte	-64
 181 008e 80       		.byte	-128
 182 008f 41       		.byte	65
 183 0090 00       		.byte	0
 184 0091 C1       		.byte	-63
 185 0092 81       		.byte	-127
 186 0093 40       		.byte	64
 187 0094 01       		.byte	1
 188 0095 C0       		.byte	-64
 189 0096 80       		.byte	-128
 190 0097 41       		.byte	65
 191 0098 01       		.byte	1
 192 0099 C0       		.byte	-64
 193 009a 80       		.byte	-128
 194 009b 41       		.byte	65
 195 009c 00       		.byte	0
 196 009d C1       		.byte	-63
 197 009e 81       		.byte	-127
 198 009f 40       		.byte	64
 199 00a0 00       		.byte	0
 200 00a1 C1       		.byte	-63
 201 00a2 81       		.byte	-127
 202 00a3 40       		.byte	64
 203 00a4 01       		.byte	1
 204 00a5 C0       		.byte	-64
 205 00a6 80       		.byte	-128
 206 00a7 41       		.byte	65
 207 00a8 01       		.byte	1
 208 00a9 C0       		.byte	-64
 209 00aa 80       		.byte	-128
 210 00ab 41       		.byte	65
 211 00ac 00       		.byte	0
 212 00ad C1       		.byte	-63
 213 00ae 81       		.byte	-127
 214 00af 40       		.byte	64
 215 00b0 01       		.byte	1
 216 00b1 C0       		.byte	-64
 217 00b2 80       		.byte	-128
 218 00b3 41       		.byte	65
 219 00b4 00       		.byte	0
 220 00b5 C1       		.byte	-63
 221 00b6 81       		.byte	-127
 222 00b7 40       		.byte	64
 223 00b8 00       		.byte	0
 224 00b9 C1       		.byte	-63
 225 00ba 81       		.byte	-127
 226 00bb 40       		.byte	64
 227 00bc 01       		.byte	1
 228 00bd C0       		.byte	-64
 229 00be 80       		.byte	-128
 230 00bf 41       		.byte	65
 231 00c0 00       		.byte	0
 232 00c1 C1       		.byte	-63
 233 00c2 81       		.byte	-127
 234 00c3 40       		.byte	64
 235 00c4 01       		.byte	1
 236 00c5 C0       		.byte	-64
 237 00c6 80       		.byte	-128
 238 00c7 41       		.byte	65
 239 00c8 01       		.byte	1
 240 00c9 C0       		.byte	-64
 241 00ca 80       		.byte	-128
 242 00cb 41       		.byte	65
 243 00cc 00       		.byte	0
 244 00cd C1       		.byte	-63
 245 00ce 81       		.byte	-127
 246 00cf 40       		.byte	64
 247 00d0 01       		.byte	1
 248 00d1 C0       		.byte	-64
 249 00d2 80       		.byte	-128
 250 00d3 41       		.byte	65
 251 00d4 00       		.byte	0
 252 00d5 C1       		.byte	-63
 253 00d6 81       		.byte	-127
 254 00d7 40       		.byte	64
 255 00d8 00       		.byte	0
 256 00d9 C1       		.byte	-63
 257 00da 81       		.byte	-127
 258 00db 40       		.byte	64
 259 00dc 01       		.byte	1
 260 00dd C0       		.byte	-64
 261 00de 80       		.byte	-128
 262 00df 41       		.byte	65
 263 00e0 01       		.byte	1
 264 00e1 C0       		.byte	-64
 265 00e2 80       		.byte	-128
 266 00e3 41       		.byte	65
 267 00e4 00       		.byte	0
 268 00e5 C1       		.byte	-63
 269 00e6 81       		.byte	-127
 270 00e7 40       		.byte	64
 271 00e8 00       		.byte	0
 272 00e9 C1       		.byte	-63
 273 00ea 81       		.byte	-127
 274 00eb 40       		.byte	64
 275 00ec 01       		.byte	1
 276 00ed C0       		.byte	-64
 277 00ee 80       		.byte	-128
 278 00ef 41       		.byte	65
 279 00f0 00       		.byte	0
 280 00f1 C1       		.byte	-63
 281 00f2 81       		.byte	-127
 282 00f3 40       		.byte	64
 283 00f4 01       		.byte	1
 284 00f5 C0       		.byte	-64
 285 00f6 80       		.byte	-128
 286 00f7 41       		.byte	65
 287 00f8 01       		.byte	1
 288 00f9 C0       		.byte	-64
 289 00fa 80       		.byte	-128
 290 00fb 41       		.byte	65
 291 00fc 00       		.byte	0
 292 00fd C1       		.byte	-63
 293 00fe 81       		.byte	-127
 294 00ff 40       		.byte	64
 295              		.section	.rodata.table_crc_lo,"a",%progbits
 296              		.align	2
 299              	table_crc_lo:
 300 0000 00       		.byte	0
 301 0001 C0       		.byte	-64
 302 0002 C1       		.byte	-63
 303 0003 01       		.byte	1
 304 0004 C3       		.byte	-61
 305 0005 03       		.byte	3
 306 0006 02       		.byte	2
 307 0007 C2       		.byte	-62
 308 0008 C6       		.byte	-58
 309 0009 06       		.byte	6
 310 000a 07       		.byte	7
 311 000b C7       		.byte	-57
 312 000c 05       		.byte	5
 313 000d C5       		.byte	-59
 314 000e C4       		.byte	-60
 315 000f 04       		.byte	4
 316 0010 CC       		.byte	-52
 317 0011 0C       		.byte	12
 318 0012 0D       		.byte	13
 319 0013 CD       		.byte	-51
 320 0014 0F       		.byte	15
 321 0015 CF       		.byte	-49
 322 0016 CE       		.byte	-50
 323 0017 0E       		.byte	14
 324 0018 0A       		.byte	10
 325 0019 CA       		.byte	-54
 326 001a CB       		.byte	-53
 327 001b 0B       		.byte	11
 328 001c C9       		.byte	-55
 329 001d 09       		.byte	9
 330 001e 08       		.byte	8
 331 001f C8       		.byte	-56
 332 0020 D8       		.byte	-40
 333 0021 18       		.byte	24
 334 0022 19       		.byte	25
 335 0023 D9       		.byte	-39
 336 0024 1B       		.byte	27
 337 0025 DB       		.byte	-37
 338 0026 DA       		.byte	-38
 339 0027 1A       		.byte	26
 340 0028 1E       		.byte	30
 341 0029 DE       		.byte	-34
 342 002a DF       		.byte	-33
 343 002b 1F       		.byte	31
 344 002c DD       		.byte	-35
 345 002d 1D       		.byte	29
 346 002e 1C       		.byte	28
 347 002f DC       		.byte	-36
 348 0030 14       		.byte	20
 349 0031 D4       		.byte	-44
 350 0032 D5       		.byte	-43
 351 0033 15       		.byte	21
 352 0034 D7       		.byte	-41
 353 0035 17       		.byte	23
 354 0036 16       		.byte	22
 355 0037 D6       		.byte	-42
 356 0038 D2       		.byte	-46
 357 0039 12       		.byte	18
 358 003a 13       		.byte	19
 359 003b D3       		.byte	-45
 360 003c 11       		.byte	17
 361 003d D1       		.byte	-47
 362 003e D0       		.byte	-48
 363 003f 10       		.byte	16
 364 0040 F0       		.byte	-16
 365 0041 30       		.byte	48
 366 0042 31       		.byte	49
 367 0043 F1       		.byte	-15
 368 0044 33       		.byte	51
 369 0045 F3       		.byte	-13
 370 0046 F2       		.byte	-14
 371 0047 32       		.byte	50
 372 0048 36       		.byte	54
 373 0049 F6       		.byte	-10
 374 004a F7       		.byte	-9
 375 004b 37       		.byte	55
 376 004c F5       		.byte	-11
 377 004d 35       		.byte	53
 378 004e 34       		.byte	52
 379 004f F4       		.byte	-12
 380 0050 3C       		.byte	60
 381 0051 FC       		.byte	-4
 382 0052 FD       		.byte	-3
 383 0053 3D       		.byte	61
 384 0054 FF       		.byte	-1
 385 0055 3F       		.byte	63
 386 0056 3E       		.byte	62
 387 0057 FE       		.byte	-2
 388 0058 FA       		.byte	-6
 389 0059 3A       		.byte	58
 390 005a 3B       		.byte	59
 391 005b FB       		.byte	-5
 392 005c 39       		.byte	57
 393 005d F9       		.byte	-7
 394 005e F8       		.byte	-8
 395 005f 38       		.byte	56
 396 0060 28       		.byte	40
 397 0061 E8       		.byte	-24
 398 0062 E9       		.byte	-23
 399 0063 29       		.byte	41
 400 0064 EB       		.byte	-21
 401 0065 2B       		.byte	43
 402 0066 2A       		.byte	42
 403 0067 EA       		.byte	-22
 404 0068 EE       		.byte	-18
 405 0069 2E       		.byte	46
 406 006a 2F       		.byte	47
 407 006b EF       		.byte	-17
 408 006c 2D       		.byte	45
 409 006d ED       		.byte	-19
 410 006e EC       		.byte	-20
 411 006f 2C       		.byte	44
 412 0070 E4       		.byte	-28
 413 0071 24       		.byte	36
 414 0072 25       		.byte	37
 415 0073 E5       		.byte	-27
 416 0074 27       		.byte	39
 417 0075 E7       		.byte	-25
 418 0076 E6       		.byte	-26
 419 0077 26       		.byte	38
 420 0078 22       		.byte	34
 421 0079 E2       		.byte	-30
 422 007a E3       		.byte	-29
 423 007b 23       		.byte	35
 424 007c E1       		.byte	-31
 425 007d 21       		.byte	33
 426 007e 20       		.byte	32
 427 007f E0       		.byte	-32
 428 0080 A0       		.byte	-96
 429 0081 60       		.byte	96
 430 0082 61       		.byte	97
 431 0083 A1       		.byte	-95
 432 0084 63       		.byte	99
 433 0085 A3       		.byte	-93
 434 0086 A2       		.byte	-94
 435 0087 62       		.byte	98
 436 0088 66       		.byte	102
 437 0089 A6       		.byte	-90
 438 008a A7       		.byte	-89
 439 008b 67       		.byte	103
 440 008c A5       		.byte	-91
 441 008d 65       		.byte	101
 442 008e 64       		.byte	100
 443 008f A4       		.byte	-92
 444 0090 6C       		.byte	108
 445 0091 AC       		.byte	-84
 446 0092 AD       		.byte	-83
 447 0093 6D       		.byte	109
 448 0094 AF       		.byte	-81
 449 0095 6F       		.byte	111
 450 0096 6E       		.byte	110
 451 0097 AE       		.byte	-82
 452 0098 AA       		.byte	-86
 453 0099 6A       		.byte	106
 454 009a 6B       		.byte	107
 455 009b AB       		.byte	-85
 456 009c 69       		.byte	105
 457 009d A9       		.byte	-87
 458 009e A8       		.byte	-88
 459 009f 68       		.byte	104
 460 00a0 78       		.byte	120
 461 00a1 B8       		.byte	-72
 462 00a2 B9       		.byte	-71
 463 00a3 79       		.byte	121
 464 00a4 BB       		.byte	-69
 465 00a5 7B       		.byte	123
 466 00a6 7A       		.byte	122
 467 00a7 BA       		.byte	-70
 468 00a8 BE       		.byte	-66
 469 00a9 7E       		.byte	126
 470 00aa 7F       		.byte	127
 471 00ab BF       		.byte	-65
 472 00ac 7D       		.byte	125
 473 00ad BD       		.byte	-67
 474 00ae BC       		.byte	-68
 475 00af 7C       		.byte	124
 476 00b0 B4       		.byte	-76
 477 00b1 74       		.byte	116
 478 00b2 75       		.byte	117
 479 00b3 B5       		.byte	-75
 480 00b4 77       		.byte	119
 481 00b5 B7       		.byte	-73
 482 00b6 B6       		.byte	-74
 483 00b7 76       		.byte	118
 484 00b8 72       		.byte	114
 485 00b9 B2       		.byte	-78
 486 00ba B3       		.byte	-77
 487 00bb 73       		.byte	115
 488 00bc B1       		.byte	-79
 489 00bd 71       		.byte	113
 490 00be 70       		.byte	112
 491 00bf B0       		.byte	-80
 492 00c0 50       		.byte	80
 493 00c1 90       		.byte	-112
 494 00c2 91       		.byte	-111
 495 00c3 51       		.byte	81
 496 00c4 93       		.byte	-109
 497 00c5 53       		.byte	83
 498 00c6 52       		.byte	82
 499 00c7 92       		.byte	-110
 500 00c8 96       		.byte	-106
 501 00c9 56       		.byte	86
 502 00ca 57       		.byte	87
 503 00cb 97       		.byte	-105
 504 00cc 55       		.byte	85
 505 00cd 95       		.byte	-107
 506 00ce 94       		.byte	-108
 507 00cf 54       		.byte	84
 508 00d0 9C       		.byte	-100
 509 00d1 5C       		.byte	92
 510 00d2 5D       		.byte	93
 511 00d3 9D       		.byte	-99
 512 00d4 5F       		.byte	95
 513 00d5 9F       		.byte	-97
 514 00d6 9E       		.byte	-98
 515 00d7 5E       		.byte	94
 516 00d8 5A       		.byte	90
 517 00d9 9A       		.byte	-102
 518 00da 9B       		.byte	-101
 519 00db 5B       		.byte	91
 520 00dc 99       		.byte	-103
 521 00dd 59       		.byte	89
 522 00de 58       		.byte	88
 523 00df 98       		.byte	-104
 524 00e0 88       		.byte	-120
 525 00e1 48       		.byte	72
 526 00e2 49       		.byte	73
 527 00e3 89       		.byte	-119
 528 00e4 4B       		.byte	75
 529 00e5 8B       		.byte	-117
 530 00e6 8A       		.byte	-118
 531 00e7 4A       		.byte	74
 532 00e8 4E       		.byte	78
 533 00e9 8E       		.byte	-114
 534 00ea 8F       		.byte	-113
 535 00eb 4F       		.byte	79
 536 00ec 8D       		.byte	-115
 537 00ed 4D       		.byte	77
 538 00ee 4C       		.byte	76
 539 00ef 8C       		.byte	-116
 540 00f0 44       		.byte	68
 541 00f1 84       		.byte	-124
 542 00f2 85       		.byte	-123
 543 00f3 45       		.byte	69
 544 00f4 87       		.byte	-121
 545 00f5 47       		.byte	71
 546 00f6 46       		.byte	70
 547 00f7 86       		.byte	-122
 548 00f8 82       		.byte	-126
 549 00f9 42       		.byte	66
 550 00fa 43       		.byte	67
 551 00fb 83       		.byte	-125
 552 00fc 41       		.byte	65
 553 00fd 81       		.byte	-127
 554 00fe 80       		.byte	-128
 555 00ff 40       		.byte	64
 556              		.comm	fd,4,4
 557              		.comm	received_string,513,4
 558              		.comm	rx_length,4,4
 559              		.comm	input_Register,20,4
 560              		.section	.rodata
 561              		.align	2
 562              	.LC0:
 563 0000 6D6F746F 		.ascii	"motor\000"
 563      7200
 564 0006 0000     		.align	2
 565              	.LC1:
 566 0008 6D6F746F 		.ascii	"motor  [options]\302\240[parameters]\302\240- Type "
 566      7220205B 
 566      6F707469 
 566      6F6E735D 
 566      C2A05B70 
 567 002f 6D6F746F 		.ascii	"motor help for more help\015\012\012\000\000"
 567      72206865 
 567      6C702066 
 567      6F72206D 
 567      6F726520 
 568              		.section	.rodata.xMotorCommand,"a",%progbits
 569              		.align	2
 572              	xMotorCommand:
 573 0000 00000000 		.word	.LC0
 574 0004 08000000 		.word	.LC1
 575 0008 00000000 		.word	prvMotorCommand
 576 000c FF       		.byte	-1
 577 000d 000000   		.space	3
 578              		.section	.rodata
 579              		.align	2
 580              	.LC2:
 581 004c 7461736B 		.ascii	"task\000"
 581      00
 582 0051 000000   		.align	2
 583              	.LC3:
 584 0054 7461736B 		.ascii	"task - return tasks list\015\012\012\000\000"
 584      202D2072 
 584      65747572 
 584      6E207461 
 584      736B7320 
 585              		.section	.rodata.xTaskStatsCommand,"a",%progbits
 586              		.align	2
 589              	xTaskStatsCommand:
 590 0000 4C000000 		.word	.LC2
 591 0004 54000000 		.word	.LC3
 592 0008 00000000 		.word	prvTaskStatsCommand
 593 000c FF       		.byte	-1
 594 000d 000000   		.space	3
 595              		.section	.data.xDelay,"aw",%progbits
 596              		.align	2
 599              	xDelay:
 600 0000 FFFFFFFF 		.word	-1
 601              		.comm	telegramS,28,4
 602              		.comm	telegramR,28,4
 603              		.section	.rodata
 604 0071 000000   		.align	2
 605              	.LC4:
 606 0074 73706565 		.ascii	"speed\000"
 606      6400
 607 007a 0000     		.align	2
 608              	.LC5:
 609 007c 4572726F 		.ascii	"Error: speed is out of range [1,100]p : %d\012\012\000"
 609      723A2073 
 609      70656564 
 609      20697320 
 609      6F757420 
 610 00a9 00       		.ascii	"\000"
 611 00aa 0000     		.align	2
 612              	.LC6:
 613 00ac 53706565 		.ascii	"Speed succsesfully set.\012\012\000"
 613      64207375 
 613      63637365 
 613      7366756C 
 613      6C792073 
 614 00c6 0000     		.align	2
 615              	.LC7:
 616 00c8 4D4F4442 		.ascii	"MODBUS ERROR !!!.\012\012\000"
 616      55532045 
 616      52524F52 
 616      20212121 
 616      2E0A0A00 
 617              		.align	2
 618              	.LC8:
 619 00dc 4572726F 		.ascii	"Error recieving response!\012\012\000"
 619      72207265 
 619      63696576 
 619      696E6720 
 619      72657370 
 620              		.align	2
 621              	.LC9:
 622 00f8 4572726F 		.ascii	"Error sending Queue!\012\012\000"
 622      72207365 
 622      6E64696E 
 622      67205175 
 622      65756521 
 623 010f 00       		.align	2
 624              	.LC10:
 625 0110 75707261 		.ascii	"upramp\000"
 625      6D7000
 626 0117 00       		.align	2
 627              	.LC11:
 628 0118 4572726F 		.ascii	"Error: speed is out of range [15,300]p : %d\012\012"
 628      723A2073 
 628      70656564 
 628      20697320 
 628      6F757420 
 629 0145 0000     		.ascii	"\000\000"
 630 0147 00       		.align	2
 631              	.LC12:
 632 0148 55702072 		.ascii	"Up ramp succsesfully set.\012\012\000"
 632      616D7020 
 632      73756363 
 632      73657366 
 632      756C6C79 
 633              		.align	2
 634              	.LC13:
 635 0164 646F776E 		.ascii	"downramp\000"
 635      72616D70 
 635      00
 636              		.section	.text.handleVariable_set,"ax",%progbits
 637              		.align	2
 638              		.global	handleVariable_set
 639              		.thumb
 640              		.thumb_func
 642              	handleVariable_set:
 643              	.LFB110:
 644              		.file 1 "App/STM32F4-Discovery/tcpCLI.c"
   1:App/STM32F4-Discovery/tcpCLI.c **** #include "tcpCLI.h"
   2:App/STM32F4-Discovery/tcpCLI.c **** 
   3:App/STM32F4-Discovery/tcpCLI.c **** 
   4:App/STM32F4-Discovery/tcpCLI.c **** static 	portTickType xDelay = portMAX_DELAY;//3000 / portTICK_RATE_MS;
   5:App/STM32F4-Discovery/tcpCLI.c **** 
   6:App/STM32F4-Discovery/tcpCLI.c **** QueueTelegram telegramS, telegramR; 
   7:App/STM32F4-Discovery/tcpCLI.c **** 
   8:App/STM32F4-Discovery/tcpCLI.c **** /* default telegram */
   9:App/STM32F4-Discovery/tcpCLI.c **** /*
  10:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[0] = 1000;
  11:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[1] = 0;	
  12:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[2] = 2250;
  13:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[3] = 10;	
  14:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[4] = 10;	
  15:App/STM32F4-Discovery/tcpCLI.c **** telegram.size = 5;
  16:App/STM32F4-Discovery/tcpCLI.c **** telegram.Qcmd = SETDATA;		
  17:App/STM32F4-Discovery/tcpCLI.c **** */
  18:App/STM32F4-Discovery/tcpCLI.c **** 
  19:App/STM32F4-Discovery/tcpCLI.c **** 
  20:App/STM32F4-Discovery/tcpCLI.c **** 
  21:App/STM32F4-Discovery/tcpCLI.c **** int handleVariable_set (	
  22:App/STM32F4-Discovery/tcpCLI.c **** 				int8_t *pcWriteBuffer, 
  23:App/STM32F4-Discovery/tcpCLI.c **** 				size_t xWriteBufferLen,
  24:App/STM32F4-Discovery/tcpCLI.c **** 				uint8_t * Param, 
  25:App/STM32F4-Discovery/tcpCLI.c **** 				int xParamLength,
  26:App/STM32F4-Discovery/tcpCLI.c **** 				xQueueHandle Qhandle,
  27:App/STM32F4-Discovery/tcpCLI.c **** 				uint8_t * Value,
  28:App/STM32F4-Discovery/tcpCLI.c **** 				int xValueLength,
  29:App/STM32F4-Discovery/tcpCLI.c **** 				int socket )
  30:App/STM32F4-Discovery/tcpCLI.c **** {
 645              		.loc 1 30 0
 646              		.cfi_startproc
 647              		@ args = 16, pretend = 0, frame = 32
 648              		@ frame_needed = 1, uses_anonymous_args = 0
 649 0000 B0B5     		push	{r4, r5, r7, lr}
 650              	.LCFI0:
 651              		.cfi_def_cfa_offset 16
 652              		.cfi_offset 4, -16
 653              		.cfi_offset 5, -12
 654              		.cfi_offset 7, -8
 655              		.cfi_offset 14, -4
 656 0002 88B0     		sub	sp, sp, #32
 657              	.LCFI1:
 658              		.cfi_def_cfa_offset 48
 659 0004 00AF     		add	r7, sp, #0
 660              	.LCFI2:
 661              		.cfi_def_cfa_register 7
 662 0006 F860     		str	r0, [r7, #12]
 663 0008 B960     		str	r1, [r7, #8]
 664 000a 7A60     		str	r2, [r7, #4]
 665 000c 3B60     		str	r3, [r7]
  31:App/STM32F4-Discovery/tcpCLI.c **** 
  32:App/STM32F4-Discovery/tcpCLI.c **** 
  33:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
  34:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER speed [value]
  35:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
  36:App/STM32F4-Discovery/tcpCLI.c **** 
  37:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "speed", 5))
 666              		.loc 1 37 0
 667 000e 7868     		ldr	r0, [r7, #4]
 668 0010 9A49     		ldr	r1, .L15
 669 0012 0522     		movs	r2, #5
 670 0014 FFF7FEFF 		bl	strncmp
 671 0018 0346     		mov	r3, r0
 672 001a 002B     		cmp	r3, #0
 673 001c 40F0A280 		bne	.L2
 674              	.LBB2:
  38:App/STM32F4-Discovery/tcpCLI.c **** 	{	
  39:App/STM32F4-Discovery/tcpCLI.c **** 	
  40:App/STM32F4-Discovery/tcpCLI.c **** 	
  41:App/STM32F4-Discovery/tcpCLI.c **** 		
  42:App/STM32F4-Discovery/tcpCLI.c **** 		// now convert parameter to proper value and check if it is in range 
  43:App/STM32F4-Discovery/tcpCLI.c ****         	Value[xValueLength] = '\0'; 	
 675              		.loc 1 43 0
 676 0020 BB6B     		ldr	r3, [r7, #56]
 677 0022 7A6B     		ldr	r2, [r7, #52]
 678 0024 1344     		add	r3, r3, r2
 679 0026 0022     		movs	r2, #0
 680 0028 1A70     		strb	r2, [r3]
  44:App/STM32F4-Discovery/tcpCLI.c **** 		uint16_t s1 = atoi ( Value ); 
 681              		.loc 1 44 0
 682 002a 786B     		ldr	r0, [r7, #52]
 683 002c FFF7FEFF 		bl	atoi
 684 0030 0346     		mov	r3, r0
 685 0032 FB83     		strh	r3, [r7, #30]	@ movhi
  45:App/STM32F4-Discovery/tcpCLI.c **** 		// if speed is in range
  46:App/STM32F4-Discovery/tcpCLI.c **** 		if(s1 < 1 ||  s1 > 100 )
 686              		.loc 1 46 0
 687 0034 FB8B     		ldrh	r3, [r7, #30]
 688 0036 002B     		cmp	r3, #0
 689 0038 02D0     		beq	.L3
 690              		.loc 1 46 0 is_stmt 0 discriminator 1
 691 003a FB8B     		ldrh	r3, [r7, #30]
 692 003c 642B     		cmp	r3, #100
 693 003e 07D9     		bls	.L4
 694              	.L3:
  47:App/STM32F4-Discovery/tcpCLI.c **** 		{
  48:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP
  49:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error: speed is out of range [1,100]p : %d\n\n\0", s1);
 695              		.loc 1 49 0 is_stmt 1
 696 0040 FB8B     		ldrh	r3, [r7, #30]
 697 0042 F868     		ldr	r0, [r7, #12]
 698 0044 8E49     		ldr	r1, .L15+4
 699 0046 1A46     		mov	r2, r3
 700 0048 FFF7FEFF 		bl	sprintf
  50:App/STM32F4-Discovery/tcpCLI.c **** 		//	pcWriteBuffer[11+ 3] = "\0"; 
  51:App/STM32F4-Discovery/tcpCLI.c **** 			
  52:App/STM32F4-Discovery/tcpCLI.c **** 			////send( socket_0, buf, 11+3, 0);
  53:App/STM32F4-Discovery/tcpCLI.c **** 
  54:App/STM32F4-Discovery/tcpCLI.c **** 	       		return pdFALSE; 	
 701              		.loc 1 54 0
 702 004c 0023     		movs	r3, #0
 703 004e 10E1     		b	.L1
 704              	.L4:
  55:App/STM32F4-Discovery/tcpCLI.c **** 		}	
  56:App/STM32F4-Discovery/tcpCLI.c **** 	
  57:App/STM32F4-Discovery/tcpCLI.c **** 		// convert to correct value ( * 100 ) 
  58:App/STM32F4-Discovery/tcpCLI.c **** 		s1 *= 100; 
 705              		.loc 1 58 0
 706 0050 FB8B     		ldrh	r3, [r7, #30]	@ movhi
 707 0052 1A46     		mov	r2, r3	@ movhi
 708 0054 9200     		lsls	r2, r2, #2
 709 0056 1344     		add	r3, r3, r2
 710 0058 1A46     		mov	r2, r3	@ movhi
 711 005a 9100     		lsls	r1, r2, #2
 712 005c 1A46     		mov	r2, r3	@ movhi
 713 005e 0B46     		mov	r3, r1	@ movhi
 714 0060 1344     		add	r3, r3, r2
 715 0062 9B00     		lsls	r3, r3, #2
 716 0064 FB83     		strh	r3, [r7, #30]	@ movhi
  59:App/STM32F4-Discovery/tcpCLI.c **** 		
  60:App/STM32F4-Discovery/tcpCLI.c **** 		// test i
  61:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[1] = 0;	
 717              		.loc 1 61 0
 718 0066 874B     		ldr	r3, .L15+8
 719 0068 0022     		movs	r2, #0
 720 006a 5A81     		strh	r2, [r3, #10]	@ movhi
  62:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[2] = 2250;
 721              		.loc 1 62 0
 722 006c 854B     		ldr	r3, .L15+8
 723 006e 40F6CA02 		movw	r2, #2250
 724 0072 9A81     		strh	r2, [r3, #12]	@ movhi
  63:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[3] = 10;	
 725              		.loc 1 63 0
 726 0074 834B     		ldr	r3, .L15+8
 727 0076 0A22     		movs	r2, #10
 728 0078 DA81     		strh	r2, [r3, #14]	@ movhi
  64:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[4] = 10;	
 729              		.loc 1 64 0
 730 007a 824B     		ldr	r3, .L15+8
 731 007c 0A22     		movs	r2, #10
 732 007e 1A82     		strh	r2, [r3, #16]	@ movhi
  65:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5;
 733              		.loc 1 65 0
 734 0080 804B     		ldr	r3, .L15+8
 735 0082 0522     		movs	r2, #5
 736 0084 5A60     		str	r2, [r3, #4]
  66:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = SETDATA;	
 737              		.loc 1 66 0
 738 0086 7F4B     		ldr	r3, .L15+8
 739 0088 0022     		movs	r2, #0
 740 008a 1A70     		strb	r2, [r3]
  67:App/STM32F4-Discovery/tcpCLI.c **** 		// test /
  68:App/STM32F4-Discovery/tcpCLI.c **** 		// setup telegram 
  69:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = SETDATA;
 741              		.loc 1 69 0
 742 008c 7D4B     		ldr	r3, .L15+8
 743 008e 0022     		movs	r2, #0
 744 0090 1A70     		strb	r2, [r3]
  70:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5;
 745              		.loc 1 70 0
 746 0092 7C4B     		ldr	r3, .L15+8
 747 0094 0522     		movs	r2, #5
 748 0096 5A60     		str	r2, [r3, #4]
  71:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[0] = s1;
 749              		.loc 1 71 0
 750 0098 7A4B     		ldr	r3, .L15+8
 751 009a FA8B     		ldrh	r2, [r7, #30]	@ movhi
 752 009c 1A81     		strh	r2, [r3, #8]	@ movhi
  72:App/STM32F4-Discovery/tcpCLI.c **** 		
  73:App/STM32F4-Discovery/tcpCLI.c **** 	
  74:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
  75:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 753              		.loc 1 75 0
 754 009e 7A4B     		ldr	r3, .L15+12
 755 00a0 1A68     		ldr	r2, [r3]
 756 00a2 7A4B     		ldr	r3, .L15+16
 757 00a4 1B68     		ldr	r3, [r3]
 758 00a6 1046     		mov	r0, r2
 759 00a8 7649     		ldr	r1, .L15+8
 760 00aa 1A46     		mov	r2, r3
 761 00ac 0023     		movs	r3, #0
 762 00ae FFF7FEFF 		bl	xQueueGenericSend
 763 00b2 0346     		mov	r3, r0
 764 00b4 012B     		cmp	r3, #1
 765 00b6 42D1     		bne	.L6
  76:App/STM32F4-Discovery/tcpCLI.c **** 		{	
  77:App/STM32F4-Discovery/tcpCLI.c **** 					
  78:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay)== pdPASS)
 766              		.loc 1 78 0
 767 00b8 734B     		ldr	r3, .L15+12
 768 00ba 1A68     		ldr	r2, [r3]
 769 00bc 734B     		ldr	r3, .L15+16
 770 00be 1B68     		ldr	r3, [r3]
 771 00c0 1046     		mov	r0, r2
 772 00c2 7349     		ldr	r1, .L15+20
 773 00c4 1A46     		mov	r2, r3
 774 00c6 0023     		movs	r3, #0
 775 00c8 FFF7FEFF 		bl	xQueueGenericReceive
 776 00cc 0346     		mov	r3, r0
 777 00ce 012B     		cmp	r3, #1
 778 00d0 24D1     		bne	.L7
  79:App/STM32F4-Discovery/tcpCLI.c **** 			{
  80:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 779              		.loc 1 80 0
 780 00d2 6F4B     		ldr	r3, .L15+20
 781 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 782 00d6 062B     		cmp	r3, #6
 783 00d8 11D1     		bne	.L8
  81:App/STM32F4-Discovery/tcpCLI.c **** 				{	
  82:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed succsesfully set.\n\n");
 784              		.loc 1 82 0
 785 00da FA68     		ldr	r2, [r7, #12]
 786 00dc 6D4B     		ldr	r3, .L15+24
 787 00de 1546     		mov	r5, r2
 788 00e0 1C46     		mov	r4, r3
 789 00e2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 790 00e4 2860     		str	r0, [r5]	@ unaligned
 791 00e6 6960     		str	r1, [r5, #4]	@ unaligned
 792 00e8 AA60     		str	r2, [r5, #8]	@ unaligned
 793 00ea EB60     		str	r3, [r5, #12]	@ unaligned
 794 00ec 03CC     		ldmia	r4!, {r0, r1}
 795 00ee 2861     		str	r0, [r5, #16]	@ unaligned
 796 00f0 6961     		str	r1, [r5, #20]	@ unaligned
 797 00f2 2388     		ldrh	r3, [r4]	@ unaligned
 798 00f4 2B83     		strh	r3, [r5, #24]	@ unaligned
  83:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 25; 	
 799              		.loc 1 83 0
 800 00f6 1923     		movs	r3, #25
 801 00f8 BB61     		str	r3, [r7, #24]
  84:App/STM32F4-Discovery/tcpCLI.c **** 				//	//send( socket, buf, len, 0);
  85:App/STM32F4-Discovery/tcpCLI.c **** 
  86:App/STM32F4-Discovery/tcpCLI.c **** 
  87:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 802              		.loc 1 87 0
 803 00fa 0123     		movs	r3, #1
 804 00fc B9E0     		b	.L1
 805              	.L8:
  88:App/STM32F4-Discovery/tcpCLI.c **** 
  89:App/STM32F4-Discovery/tcpCLI.c **** 				}
  90:App/STM32F4-Discovery/tcpCLI.c **** 				else
  91:App/STM32F4-Discovery/tcpCLI.c **** 				{
  92:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 806              		.loc 1 92 0
 807 00fe FA68     		ldr	r2, [r7, #12]
 808 0100 654B     		ldr	r3, .L15+28
 809 0102 1546     		mov	r5, r2
 810 0104 1C46     		mov	r4, r3
 811 0106 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 812 0108 2860     		str	r0, [r5]	@ unaligned
 813 010a 6960     		str	r1, [r5, #4]	@ unaligned
 814 010c AA60     		str	r2, [r5, #8]	@ unaligned
 815 010e EB60     		str	r3, [r5, #12]	@ unaligned
 816 0110 2068     		ldr	r0, [r4]	@ unaligned
 817 0112 2861     		str	r0, [r5, #16]	@ unaligned
  93:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 818              		.loc 1 93 0
 819 0114 1323     		movs	r3, #19
 820 0116 BB61     		str	r3, [r7, #24]
  94:App/STM32F4-Discovery/tcpCLI.c **** //					//send( socket, buf, len, 0);
  95:App/STM32F4-Discovery/tcpCLI.c **** 
  96:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 821              		.loc 1 96 0
 822 0118 0023     		movs	r3, #0
 823 011a AAE0     		b	.L1
 824              	.L7:
  97:App/STM32F4-Discovery/tcpCLI.c **** 
  98:App/STM32F4-Discovery/tcpCLI.c **** 
  99:App/STM32F4-Discovery/tcpCLI.c **** 				}
 100:App/STM32F4-Discovery/tcpCLI.c **** 						
 101:App/STM32F4-Discovery/tcpCLI.c **** 			}
 102:App/STM32F4-Discovery/tcpCLI.c **** 			else
 103:App/STM32F4-Discovery/tcpCLI.c **** 			{
 104:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 105:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 106:App/STM32F4-Discovery/tcpCLI.c **** 		
 107:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 825              		.loc 1 107 0
 826 011c FA68     		ldr	r2, [r7, #12]
 827 011e 5F4B     		ldr	r3, .L15+32
 828 0120 1546     		mov	r5, r2
 829 0122 1C46     		mov	r4, r3
 830 0124 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 831 0126 2860     		str	r0, [r5]	@ unaligned
 832 0128 6960     		str	r1, [r5, #4]	@ unaligned
 833 012a AA60     		str	r2, [r5, #8]	@ unaligned
 834 012c EB60     		str	r3, [r5, #12]	@ unaligned
 835 012e 07CC     		ldmia	r4!, {r0, r1, r2}
 836 0130 2861     		str	r0, [r5, #16]	@ unaligned
 837 0132 6961     		str	r1, [r5, #20]	@ unaligned
 838 0134 AA61     		str	r2, [r5, #24]	@ unaligned
 108:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 839              		.loc 1 108 0
 840 0136 1B23     		movs	r3, #27
 841 0138 BB61     		str	r3, [r7, #24]
 109:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 110:App/STM32F4-Discovery/tcpCLI.c **** 
 111:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 842              		.loc 1 111 0
 843 013a 0023     		movs	r3, #0
 844 013c 99E0     		b	.L1
 845              	.L6:
 112:App/STM32F4-Discovery/tcpCLI.c **** 			}
 113:App/STM32F4-Discovery/tcpCLI.c **** 
 114:App/STM32F4-Discovery/tcpCLI.c **** 
 115:App/STM32F4-Discovery/tcpCLI.c **** 		}
 116:App/STM32F4-Discovery/tcpCLI.c **** 		else
 117:App/STM32F4-Discovery/tcpCLI.c **** 		{
 118:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 119:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 120:App/STM32F4-Discovery/tcpCLI.c **** 		
 121:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 846              		.loc 1 121 0
 847 013e FA68     		ldr	r2, [r7, #12]
 848 0140 574B     		ldr	r3, .L15+36
 849 0142 1446     		mov	r4, r2
 850 0144 1D46     		mov	r5, r3
 851 0146 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 852 0148 2060     		str	r0, [r4]	@ unaligned
 853 014a 6160     		str	r1, [r4, #4]	@ unaligned
 854 014c A260     		str	r2, [r4, #8]	@ unaligned
 855 014e E360     		str	r3, [r4, #12]	@ unaligned
 856 0150 2868     		ldr	r0, [r5]	@ unaligned
 857 0152 2061     		str	r0, [r4, #16]	@ unaligned
 858 0154 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 859 0156 AB79     		ldrb	r3, [r5, #6]
 860 0158 A282     		strh	r2, [r4, #20]	@ unaligned
 861 015a A375     		strb	r3, [r4, #22]
 122:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 862              		.loc 1 122 0
 863 015c 1623     		movs	r3, #22
 864 015e BB61     		str	r3, [r7, #24]
 123:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 124:App/STM32F4-Discovery/tcpCLI.c **** 
 125:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 865              		.loc 1 125 0
 866 0160 0023     		movs	r3, #0
 867 0162 86E0     		b	.L1
 868              	.L2:
 869              	.LBE2:
 126:App/STM32F4-Discovery/tcpCLI.c **** 		}
 127:App/STM32F4-Discovery/tcpCLI.c **** 	}
 128:App/STM32F4-Discovery/tcpCLI.c **** 	
 129:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 130:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER upramp [value]
 131:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 132:App/STM32F4-Discovery/tcpCLI.c **** 
 133:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "upramp", 6))
 870              		.loc 1 133 0
 871 0164 7868     		ldr	r0, [r7, #4]
 872 0166 4F49     		ldr	r1, .L15+40
 873 0168 0622     		movs	r2, #6
 874 016a FFF7FEFF 		bl	strncmp
 875 016e 0346     		mov	r3, r0
 876 0170 002B     		cmp	r3, #0
 877 0172 74D1     		bne	.L9
 878              	.LBB3:
 134:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 135:App/STM32F4-Discovery/tcpCLI.c **** 	
 136:App/STM32F4-Discovery/tcpCLI.c **** 	
 137:App/STM32F4-Discovery/tcpCLI.c **** 		
 138:App/STM32F4-Discovery/tcpCLI.c **** 		// now convert parameter to proper value and check if it is in range 
 139:App/STM32F4-Discovery/tcpCLI.c ****         	Value[xValueLength] = '\0'; 	
 879              		.loc 1 139 0
 880 0174 BB6B     		ldr	r3, [r7, #56]
 881 0176 7A6B     		ldr	r2, [r7, #52]
 882 0178 1344     		add	r3, r3, r2
 883 017a 0022     		movs	r2, #0
 884 017c 1A70     		strb	r2, [r3]
 140:App/STM32F4-Discovery/tcpCLI.c **** 		uint16_t s1 = atoi ( Value ); 
 885              		.loc 1 140 0
 886 017e 786B     		ldr	r0, [r7, #52]
 887 0180 FFF7FEFF 		bl	atoi
 888 0184 0346     		mov	r3, r0
 889 0186 FB82     		strh	r3, [r7, #22]	@ movhi
 141:App/STM32F4-Discovery/tcpCLI.c **** 		// if speed is in range
 142:App/STM32F4-Discovery/tcpCLI.c **** 		if(s1 < 15 ||  s1 > 300 )
 890              		.loc 1 142 0
 891 0188 FB8A     		ldrh	r3, [r7, #22]
 892 018a 0E2B     		cmp	r3, #14
 893 018c 03D9     		bls	.L10
 894              		.loc 1 142 0 is_stmt 0 discriminator 1
 895 018e FB8A     		ldrh	r3, [r7, #22]
 896 0190 B3F5967F 		cmp	r3, #300
 897 0194 09D9     		bls	.L11
 898              	.L10:
 143:App/STM32F4-Discovery/tcpCLI.c **** 		{
 144:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP
 145:App/STM32F4-Discovery/tcpCLI.c **** 			//
 146:App/STM32F4-Discovery/tcpCLI.c **** 			xWriteBufferLen = 100; 
 899              		.loc 1 146 0 is_stmt 1
 900 0196 6423     		movs	r3, #100
 901 0198 BB61     		str	r3, [r7, #24]
 147:App/STM32F4-Discovery/tcpCLI.c **** 		//	uint8_t buf [len]; //= "Error: speed is out of range!\n\n");
 148:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error: speed is out of range [15,300]p : %d\n\n\0", s1);
 902              		.loc 1 148 0
 903 019a FB8A     		ldrh	r3, [r7, #22]
 904 019c F868     		ldr	r0, [r7, #12]
 905 019e 4249     		ldr	r1, .L15+44
 906 01a0 1A46     		mov	r2, r3
 907 01a2 FFF7FEFF 		bl	sprintf
 149:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket_0, buf, len, 0);
 150:App/STM32F4-Discovery/tcpCLI.c **** 
 151:App/STM32F4-Discovery/tcpCLI.c **** 	       		return pdFALSE; 	
 908              		.loc 1 151 0
 909 01a6 0023     		movs	r3, #0
 910 01a8 63E0     		b	.L1
 911              	.L11:
 152:App/STM32F4-Discovery/tcpCLI.c **** 		}	
 153:App/STM32F4-Discovery/tcpCLI.c **** 	
 154:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[3] = s1; 
 912              		.loc 1 154 0
 913 01aa 364B     		ldr	r3, .L15+8
 914 01ac FA8A     		ldrh	r2, [r7, #22]	@ movhi
 915 01ae DA81     		strh	r2, [r3, #14]	@ movhi
 155:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5; 
 916              		.loc 1 155 0
 917 01b0 344B     		ldr	r3, .L15+8
 918 01b2 0522     		movs	r2, #5
 919 01b4 5A60     		str	r2, [r3, #4]
 156:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = SETDATA;
 920              		.loc 1 156 0
 921 01b6 334B     		ldr	r3, .L15+8
 922 01b8 0022     		movs	r2, #0
 923 01ba 1A70     		strb	r2, [r3]
 157:App/STM32F4-Discovery/tcpCLI.c **** 		
 158:App/STM32F4-Discovery/tcpCLI.c **** 	
 159:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 160:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 924              		.loc 1 160 0
 925 01bc 324B     		ldr	r3, .L15+12
 926 01be 1A68     		ldr	r2, [r3]
 927 01c0 324B     		ldr	r3, .L15+16
 928 01c2 1B68     		ldr	r3, [r3]
 929 01c4 1046     		mov	r0, r2
 930 01c6 2F49     		ldr	r1, .L15+8
 931 01c8 1A46     		mov	r2, r3
 932 01ca 0023     		movs	r3, #0
 933 01cc FFF7FEFF 		bl	xQueueGenericSend
 934 01d0 0346     		mov	r3, r0
 935 01d2 012B     		cmp	r3, #1
 936 01d4 30D1     		bne	.L12
 161:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 162:App/STM32F4-Discovery/tcpCLI.c **** 					
 163:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay))
 937              		.loc 1 163 0
 938 01d6 2C4B     		ldr	r3, .L15+12
 939 01d8 1A68     		ldr	r2, [r3]
 940 01da 2C4B     		ldr	r3, .L15+16
 941 01dc 1B68     		ldr	r3, [r3]
 942 01de 1046     		mov	r0, r2
 943 01e0 2B49     		ldr	r1, .L15+20
 944 01e2 1A46     		mov	r2, r3
 945 01e4 0023     		movs	r3, #0
 946 01e6 FFF7FEFF 		bl	xQueueGenericReceive
 947 01ea 0346     		mov	r3, r0
 948 01ec 002B     		cmp	r3, #0
 949 01ee 36D0     		beq	.L9
 164:App/STM32F4-Discovery/tcpCLI.c **** 			{
 165:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 950              		.loc 1 165 0
 951 01f0 274B     		ldr	r3, .L15+20
 952 01f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 953 01f4 062B     		cmp	r3, #6
 954 01f6 10D1     		bne	.L13
 166:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 167:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Up ramp succsesfully set.\n\n");
 955              		.loc 1 167 0
 956 01f8 FA68     		ldr	r2, [r7, #12]
 957 01fa 2C4B     		ldr	r3, .L15+48
 958 01fc 1546     		mov	r5, r2
 959 01fe 1C46     		mov	r4, r3
 960 0200 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 961 0202 2860     		str	r0, [r5]	@ unaligned
 962 0204 6960     		str	r1, [r5, #4]	@ unaligned
 963 0206 AA60     		str	r2, [r5, #8]	@ unaligned
 964 0208 EB60     		str	r3, [r5, #12]	@ unaligned
 965 020a 07CC     		ldmia	r4!, {r0, r1, r2}
 966 020c 2861     		str	r0, [r5, #16]	@ unaligned
 967 020e 6961     		str	r1, [r5, #20]	@ unaligned
 968 0210 AA61     		str	r2, [r5, #24]	@ unaligned
 168:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 27; 	
 969              		.loc 1 168 0
 970 0212 1B23     		movs	r3, #27
 971 0214 BB61     		str	r3, [r7, #24]
 169:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 170:App/STM32F4-Discovery/tcpCLI.c **** 
 171:App/STM32F4-Discovery/tcpCLI.c **** 
 172:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 972              		.loc 1 172 0
 973 0216 0123     		movs	r3, #1
 974 0218 2BE0     		b	.L1
 975              	.L13:
 173:App/STM32F4-Discovery/tcpCLI.c **** 
 174:App/STM32F4-Discovery/tcpCLI.c **** 				}
 175:App/STM32F4-Discovery/tcpCLI.c **** 				else
 176:App/STM32F4-Discovery/tcpCLI.c **** 				{
 177:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 976              		.loc 1 177 0
 977 021a FA68     		ldr	r2, [r7, #12]
 978 021c 1E4B     		ldr	r3, .L15+28
 979 021e 1546     		mov	r5, r2
 980 0220 1C46     		mov	r4, r3
 981 0222 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 982 0224 2860     		str	r0, [r5]	@ unaligned
 983 0226 6960     		str	r1, [r5, #4]	@ unaligned
 984 0228 AA60     		str	r2, [r5, #8]	@ unaligned
 985 022a EB60     		str	r3, [r5, #12]	@ unaligned
 986 022c 2068     		ldr	r0, [r4]	@ unaligned
 987 022e 2861     		str	r0, [r5, #16]	@ unaligned
 178:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 988              		.loc 1 178 0
 989 0230 1323     		movs	r3, #19
 990 0232 BB61     		str	r3, [r7, #24]
 179:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 180:App/STM32F4-Discovery/tcpCLI.c **** 
 181:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 991              		.loc 1 181 0
 992 0234 0023     		movs	r3, #0
 993 0236 1CE0     		b	.L1
 994              	.L12:
 182:App/STM32F4-Discovery/tcpCLI.c **** 
 183:App/STM32F4-Discovery/tcpCLI.c **** 
 184:App/STM32F4-Discovery/tcpCLI.c **** 				}
 185:App/STM32F4-Discovery/tcpCLI.c **** 						
 186:App/STM32F4-Discovery/tcpCLI.c **** 			}
 187:App/STM32F4-Discovery/tcpCLI.c **** 
 188:App/STM32F4-Discovery/tcpCLI.c **** 		}
 189:App/STM32F4-Discovery/tcpCLI.c **** 		else
 190:App/STM32F4-Discovery/tcpCLI.c **** 		{
 191:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 192:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 193:App/STM32F4-Discovery/tcpCLI.c **** 		
 194:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 995              		.loc 1 194 0
 996 0238 FA68     		ldr	r2, [r7, #12]
 997 023a 194B     		ldr	r3, .L15+36
 998 023c 1446     		mov	r4, r2
 999 023e 1D46     		mov	r5, r3
 1000 0240 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1001 0242 2060     		str	r0, [r4]	@ unaligned
 1002 0244 6160     		str	r1, [r4, #4]	@ unaligned
 1003 0246 A260     		str	r2, [r4, #8]	@ unaligned
 1004 0248 E360     		str	r3, [r4, #12]	@ unaligned
 1005 024a 2868     		ldr	r0, [r5]	@ unaligned
 1006 024c 2061     		str	r0, [r4, #16]	@ unaligned
 1007 024e AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1008 0250 AB79     		ldrb	r3, [r5, #6]
 1009 0252 A282     		strh	r2, [r4, #20]	@ unaligned
 1010 0254 A375     		strb	r3, [r4, #22]
 195:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1011              		.loc 1 195 0
 1012 0256 1623     		movs	r3, #22
 1013 0258 BB61     		str	r3, [r7, #24]
 196:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 197:App/STM32F4-Discovery/tcpCLI.c **** 
 198:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1014              		.loc 1 198 0
 1015 025a 0023     		movs	r3, #0
 1016 025c 09E0     		b	.L1
 1017              	.L9:
 1018              	.LBE3:
 199:App/STM32F4-Discovery/tcpCLI.c **** 		}
 200:App/STM32F4-Discovery/tcpCLI.c **** 	}
 201:App/STM32F4-Discovery/tcpCLI.c **** 
 202:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 203:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER downramp [value]
 204:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 205:App/STM32F4-Discovery/tcpCLI.c **** 
 206:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "downramp", 8))
 1019              		.loc 1 206 0
 1020 025e 7868     		ldr	r0, [r7, #4]
 1021 0260 1349     		ldr	r1, .L15+52
 1022 0262 0822     		movs	r2, #8
 1023 0264 FFF7FEFF 		bl	strncmp
 1024 0268 0346     		mov	r3, r0
 1025 026a 002B     		cmp	r3, #0
 1026 026c 01D1     		bne	.L14
 207:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 208:App/STM32F4-Discovery/tcpCLI.c **** 	
 209:App/STM32F4-Discovery/tcpCLI.c **** 	
 210:App/STM32F4-Discovery/tcpCLI.c **** 		
 211:App/STM32F4-Discovery/tcpCLI.c **** 				return 0; 
 1027              		.loc 1 211 0
 1028 026e 0023     		movs	r3, #0
 1029 0270 FFE7     		b	.L1
 1030              	.L14:
 1031              	.L1:
 212:App/STM32F4-Discovery/tcpCLI.c **** 
 213:App/STM32F4-Discovery/tcpCLI.c **** 	}
 214:App/STM32F4-Discovery/tcpCLI.c **** 			
 215:App/STM32F4-Discovery/tcpCLI.c **** }
 1032              		.loc 1 215 0
 1033 0272 1846     		mov	r0, r3
 1034 0274 2037     		adds	r7, r7, #32
 1035 0276 BD46     		mov	sp, r7
 1036              		@ sp needed
 1037 0278 B0BD     		pop	{r4, r5, r7, pc}
 1038              	.L16:
 1039 027a 00BF     		.align	2
 1040              	.L15:
 1041 027c 74000000 		.word	.LC4
 1042 0280 7C000000 		.word	.LC5
 1043 0284 00000000 		.word	telegramS
 1044 0288 00000000 		.word	QSpd_handle
 1045 028c 00000000 		.word	xDelay
 1046 0290 00000000 		.word	telegramR
 1047 0294 AC000000 		.word	.LC6
 1048 0298 C8000000 		.word	.LC7
 1049 029c DC000000 		.word	.LC8
 1050 02a0 F8000000 		.word	.LC9
 1051 02a4 10010000 		.word	.LC10
 1052 02a8 18010000 		.word	.LC11
 1053 02ac 48010000 		.word	.LC12
 1054 02b0 64010000 		.word	.LC13
 1055              		.cfi_endproc
 1056              	.LFE110:
 1058              		.section	.rodata
 1059 016d 000000   		.align	2
 1060              	.LC14:
 1061 0170 53706565 		.ascii	"Speed is  %2d.%2dp \012\012\000\000"
 1061      64206973 
 1061      20202532 
 1061      642E2532 
 1061      6470200A 
 1062 0187 00       		.align	2
 1063              	.LC15:
 1064 0188 55702072 		.ascii	"Up ramp is %d seconds\012\012\000\000"
 1064      616D7020 
 1064      69732025 
 1064      64207365 
 1064      636F6E64 
 1065              		.section	.text.handleVariable_get,"ax",%progbits
 1066              		.align	2
 1067              		.global	handleVariable_get
 1068              		.thumb
 1069              		.thumb_func
 1071              	handleVariable_get:
 1072              	.LFB111:
 216:App/STM32F4-Discovery/tcpCLI.c **** //=======================================================================================//
 217:App/STM32F4-Discovery/tcpCLI.c **** //=======================================================================================//
 218:App/STM32F4-Discovery/tcpCLI.c **** //		GET PARAMETETERS 
 219:App/STM32F4-Discovery/tcpCLI.c **** //=======================================================================================//
 220:App/STM32F4-Discovery/tcpCLI.c **** //=======================================================================================//
 221:App/STM32F4-Discovery/tcpCLI.c **** int handleVariable_get (	
 222:App/STM32F4-Discovery/tcpCLI.c **** 				int8_t *pcWriteBuffer, 
 223:App/STM32F4-Discovery/tcpCLI.c **** 				size_t xWriteBufferLen,
 224:App/STM32F4-Discovery/tcpCLI.c **** 				uint8_t * Param, 
 225:App/STM32F4-Discovery/tcpCLI.c **** 				int xParamLength,
 226:App/STM32F4-Discovery/tcpCLI.c **** 				xQueueHandle Qhandle,
 227:App/STM32F4-Discovery/tcpCLI.c **** 				int socket )
 228:App/STM32F4-Discovery/tcpCLI.c **** {
 1073              		.loc 1 228 0
 1074              		.cfi_startproc
 1075              		@ args = 8, pretend = 0, frame = 24
 1076              		@ frame_needed = 1, uses_anonymous_args = 0
 1077 0000 B0B5     		push	{r4, r5, r7, lr}
 1078              	.LCFI3:
 1079              		.cfi_def_cfa_offset 16
 1080              		.cfi_offset 4, -16
 1081              		.cfi_offset 5, -12
 1082              		.cfi_offset 7, -8
 1083              		.cfi_offset 14, -4
 1084 0002 86B0     		sub	sp, sp, #24
 1085              	.LCFI4:
 1086              		.cfi_def_cfa_offset 40
 1087 0004 00AF     		add	r7, sp, #0
 1088              	.LCFI5:
 1089              		.cfi_def_cfa_register 7
 1090 0006 F860     		str	r0, [r7, #12]
 1091 0008 B960     		str	r1, [r7, #8]
 1092 000a 7A60     		str	r2, [r7, #4]
 1093 000c 3B60     		str	r3, [r7]
 229:App/STM32F4-Discovery/tcpCLI.c **** 
 230:App/STM32F4-Discovery/tcpCLI.c **** 
 231:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 232:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER speed [value]
 233:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 234:App/STM32F4-Discovery/tcpCLI.c **** 
 235:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "speed", 5))
 1094              		.loc 1 235 0
 1095 000e 7868     		ldr	r0, [r7, #4]
 1096 0010 6B49     		ldr	r1, .L27
 1097 0012 0522     		movs	r2, #5
 1098 0014 FFF7FEFF 		bl	strncmp
 1099 0018 0346     		mov	r3, r0
 1100 001a 002B     		cmp	r3, #0
 1101 001c 6CD1     		bne	.L18
 236:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 237:App/STM32F4-Discovery/tcpCLI.c **** 	
 238:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = GETDATA; 
 1102              		.loc 1 238 0
 1103 001e 694B     		ldr	r3, .L27+4
 1104 0020 0122     		movs	r2, #1
 1105 0022 1A70     		strb	r2, [r3]
 239:App/STM32F4-Discovery/tcpCLI.c **** 		
 240:App/STM32F4-Discovery/tcpCLI.c **** 	
 241:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 242:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 1106              		.loc 1 242 0
 1107 0024 684B     		ldr	r3, .L27+8
 1108 0026 1A68     		ldr	r2, [r3]
 1109 0028 684B     		ldr	r3, .L27+12
 1110 002a 1B68     		ldr	r3, [r3]
 1111 002c 1046     		mov	r0, r2
 1112 002e 6549     		ldr	r1, .L27+4
 1113 0030 1A46     		mov	r2, r3
 1114 0032 0023     		movs	r3, #0
 1115 0034 FFF7FEFF 		bl	xQueueGenericSend
 1116 0038 0346     		mov	r3, r0
 1117 003a 012B     		cmp	r3, #1
 1118 003c 49D1     		bne	.L19
 243:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 244:App/STM32F4-Discovery/tcpCLI.c **** 					
 245:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay)== pdPASS)
 1119              		.loc 1 245 0
 1120 003e 624B     		ldr	r3, .L27+8
 1121 0040 1A68     		ldr	r2, [r3]
 1122 0042 624B     		ldr	r3, .L27+12
 1123 0044 1B68     		ldr	r3, [r3]
 1124 0046 1046     		mov	r0, r2
 1125 0048 6149     		ldr	r1, .L27+16
 1126 004a 1A46     		mov	r2, r3
 1127 004c 0023     		movs	r3, #0
 1128 004e FFF7FEFF 		bl	xQueueGenericReceive
 1129 0052 0346     		mov	r3, r0
 1130 0054 012B     		cmp	r3, #1
 1131 0056 2BD1     		bne	.L20
 246:App/STM32F4-Discovery/tcpCLI.c **** 			{
 247:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 1132              		.loc 1 247 0
 1133 0058 5D4B     		ldr	r3, .L27+16
 1134 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1135 005c 062B     		cmp	r3, #6
 1136 005e 18D1     		bne	.L21
 248:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 249:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 250:App/STM32F4-Discovery/tcpCLI.c **** 					telegramR.data[3]/100,
 1137              		.loc 1 250 0
 1138 0060 5B4B     		ldr	r3, .L27+16
 1139 0062 DA89     		ldrh	r2, [r3, #14]
 249:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 1140              		.loc 1 249 0
 1141 0064 5B4B     		ldr	r3, .L27+20
 1142 0066 A3FB0203 		umull	r0, r3, r3, r2
 1143 006a 5B09     		lsrs	r3, r3, #5
 1144 006c 9BB2     		uxth	r3, r3
 1145 006e 1A46     		mov	r2, r3
 251:App/STM32F4-Discovery/tcpCLI.c **** 					telegramR.data[3] % 100);
 1146              		.loc 1 251 0
 1147 0070 574B     		ldr	r3, .L27+16
 1148 0072 DB89     		ldrh	r3, [r3, #14]
 249:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 1149              		.loc 1 249 0
 1150 0074 5749     		ldr	r1, .L27+20
 1151 0076 A1FB0301 		umull	r0, r1, r1, r3
 1152 007a 4909     		lsrs	r1, r1, #5
 1153 007c 6420     		movs	r0, #100
 1154 007e 00FB01F1 		mul	r1, r0, r1
 1155 0082 5B1A     		subs	r3, r3, r1
 1156 0084 9BB2     		uxth	r3, r3
 1157 0086 F868     		ldr	r0, [r7, #12]
 1158 0088 5349     		ldr	r1, .L27+24
 1159 008a FFF7FEFF 		bl	sprintf
 252:App/STM32F4-Discovery/tcpCLI.c **** 				
 253:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 254:App/STM32F4-Discovery/tcpCLI.c **** 
 255:App/STM32F4-Discovery/tcpCLI.c **** 
 256:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 1160              		.loc 1 256 0
 1161 008e 0123     		movs	r3, #1
 1162 0090 92E0     		b	.L17
 1163              	.L21:
 257:App/STM32F4-Discovery/tcpCLI.c **** 
 258:App/STM32F4-Discovery/tcpCLI.c **** 				}
 259:App/STM32F4-Discovery/tcpCLI.c **** 				else
 260:App/STM32F4-Discovery/tcpCLI.c **** 				{
 261:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1164              		.loc 1 261 0
 1165 0092 FA68     		ldr	r2, [r7, #12]
 1166 0094 514B     		ldr	r3, .L27+28
 1167 0096 1546     		mov	r5, r2
 1168 0098 1C46     		mov	r4, r3
 1169 009a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1170 009c 2860     		str	r0, [r5]	@ unaligned
 1171 009e 6960     		str	r1, [r5, #4]	@ unaligned
 1172 00a0 AA60     		str	r2, [r5, #8]	@ unaligned
 1173 00a2 EB60     		str	r3, [r5, #12]	@ unaligned
 1174 00a4 2068     		ldr	r0, [r4]	@ unaligned
 1175 00a6 2861     		str	r0, [r5, #16]	@ unaligned
 262:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 1176              		.loc 1 262 0
 1177 00a8 1323     		movs	r3, #19
 1178 00aa 7B61     		str	r3, [r7, #20]
 263:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 264:App/STM32F4-Discovery/tcpCLI.c **** 
 265:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 1179              		.loc 1 265 0
 1180 00ac 0023     		movs	r3, #0
 1181 00ae 83E0     		b	.L17
 1182              	.L20:
 266:App/STM32F4-Discovery/tcpCLI.c **** 
 267:App/STM32F4-Discovery/tcpCLI.c **** 
 268:App/STM32F4-Discovery/tcpCLI.c **** 				}
 269:App/STM32F4-Discovery/tcpCLI.c **** 						
 270:App/STM32F4-Discovery/tcpCLI.c **** 			}
 271:App/STM32F4-Discovery/tcpCLI.c **** 			else
 272:App/STM32F4-Discovery/tcpCLI.c **** 			{
 273:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 274:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 275:App/STM32F4-Discovery/tcpCLI.c **** 		
 276:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 1183              		.loc 1 276 0
 1184 00b0 FA68     		ldr	r2, [r7, #12]
 1185 00b2 4B4B     		ldr	r3, .L27+32
 1186 00b4 1546     		mov	r5, r2
 1187 00b6 1C46     		mov	r4, r3
 1188 00b8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1189 00ba 2860     		str	r0, [r5]	@ unaligned
 1190 00bc 6960     		str	r1, [r5, #4]	@ unaligned
 1191 00be AA60     		str	r2, [r5, #8]	@ unaligned
 1192 00c0 EB60     		str	r3, [r5, #12]	@ unaligned
 1193 00c2 07CC     		ldmia	r4!, {r0, r1, r2}
 1194 00c4 2861     		str	r0, [r5, #16]	@ unaligned
 1195 00c6 6961     		str	r1, [r5, #20]	@ unaligned
 1196 00c8 AA61     		str	r2, [r5, #24]	@ unaligned
 277:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 1197              		.loc 1 277 0
 1198 00ca 1B23     		movs	r3, #27
 1199 00cc 7B61     		str	r3, [r7, #20]
 278:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 279:App/STM32F4-Discovery/tcpCLI.c **** 
 280:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 1200              		.loc 1 280 0
 1201 00ce 0023     		movs	r3, #0
 1202 00d0 72E0     		b	.L17
 1203              	.L19:
 281:App/STM32F4-Discovery/tcpCLI.c **** 			}
 282:App/STM32F4-Discovery/tcpCLI.c **** 
 283:App/STM32F4-Discovery/tcpCLI.c **** 
 284:App/STM32F4-Discovery/tcpCLI.c **** 		}
 285:App/STM32F4-Discovery/tcpCLI.c **** 		else
 286:App/STM32F4-Discovery/tcpCLI.c **** 		{
 287:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 288:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 289:App/STM32F4-Discovery/tcpCLI.c **** 		
 290:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 1204              		.loc 1 290 0
 1205 00d2 FA68     		ldr	r2, [r7, #12]
 1206 00d4 434B     		ldr	r3, .L27+36
 1207 00d6 1446     		mov	r4, r2
 1208 00d8 1D46     		mov	r5, r3
 1209 00da 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1210 00dc 2060     		str	r0, [r4]	@ unaligned
 1211 00de 6160     		str	r1, [r4, #4]	@ unaligned
 1212 00e0 A260     		str	r2, [r4, #8]	@ unaligned
 1213 00e2 E360     		str	r3, [r4, #12]	@ unaligned
 1214 00e4 2868     		ldr	r0, [r5]	@ unaligned
 1215 00e6 2061     		str	r0, [r4, #16]	@ unaligned
 1216 00e8 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1217 00ea AB79     		ldrb	r3, [r5, #6]
 1218 00ec A282     		strh	r2, [r4, #20]	@ unaligned
 1219 00ee A375     		strb	r3, [r4, #22]
 291:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1220              		.loc 1 291 0
 1221 00f0 1623     		movs	r3, #22
 1222 00f2 7B61     		str	r3, [r7, #20]
 292:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 293:App/STM32F4-Discovery/tcpCLI.c **** 
 294:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1223              		.loc 1 294 0
 1224 00f4 0023     		movs	r3, #0
 1225 00f6 5FE0     		b	.L17
 1226              	.L18:
 295:App/STM32F4-Discovery/tcpCLI.c **** 		}
 296:App/STM32F4-Discovery/tcpCLI.c **** 	}
 297:App/STM32F4-Discovery/tcpCLI.c **** 	
 298:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 299:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER upramp [value]
 300:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 301:App/STM32F4-Discovery/tcpCLI.c **** 
 302:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "upramp", 6))
 1227              		.loc 1 302 0
 1228 00f8 7868     		ldr	r0, [r7, #4]
 1229 00fa 3B49     		ldr	r1, .L27+40
 1230 00fc 0622     		movs	r2, #6
 1231 00fe FFF7FEFF 		bl	strncmp
 1232 0102 0346     		mov	r3, r0
 1233 0104 002B     		cmp	r3, #0
 1234 0106 4DD1     		bne	.L23
 303:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 304:App/STM32F4-Discovery/tcpCLI.c **** 	
 305:App/STM32F4-Discovery/tcpCLI.c **** 	
 306:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = GETDATA;
 1235              		.loc 1 306 0
 1236 0108 2E4B     		ldr	r3, .L27+4
 1237 010a 0122     		movs	r2, #1
 1238 010c 1A70     		strb	r2, [r3]
 307:App/STM32F4-Discovery/tcpCLI.c **** 			
 308:App/STM32F4-Discovery/tcpCLI.c **** 	
 309:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 310:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 1239              		.loc 1 310 0
 1240 010e 2E4B     		ldr	r3, .L27+8
 1241 0110 1A68     		ldr	r2, [r3]
 1242 0112 2E4B     		ldr	r3, .L27+12
 1243 0114 1B68     		ldr	r3, [r3]
 1244 0116 1046     		mov	r0, r2
 1245 0118 2A49     		ldr	r1, .L27+4
 1246 011a 1A46     		mov	r2, r3
 1247 011c 0023     		movs	r3, #0
 1248 011e FFF7FEFF 		bl	xQueueGenericSend
 1249 0122 0346     		mov	r3, r0
 1250 0124 012B     		cmp	r3, #1
 1251 0126 2AD1     		bne	.L24
 311:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 312:App/STM32F4-Discovery/tcpCLI.c **** 					
 313:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay))
 1252              		.loc 1 313 0
 1253 0128 274B     		ldr	r3, .L27+8
 1254 012a 1A68     		ldr	r2, [r3]
 1255 012c 274B     		ldr	r3, .L27+12
 1256 012e 1B68     		ldr	r3, [r3]
 1257 0130 1046     		mov	r0, r2
 1258 0132 2749     		ldr	r1, .L27+16
 1259 0134 1A46     		mov	r2, r3
 1260 0136 0023     		movs	r3, #0
 1261 0138 FFF7FEFF 		bl	xQueueGenericReceive
 1262 013c 0346     		mov	r3, r0
 1263 013e 002B     		cmp	r3, #0
 1264 0140 30D0     		beq	.L23
 314:App/STM32F4-Discovery/tcpCLI.c **** 			{
 315:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 1265              		.loc 1 315 0
 1266 0142 234B     		ldr	r3, .L27+16
 1267 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1268 0146 062B     		cmp	r3, #6
 1269 0148 0AD1     		bne	.L25
 316:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 317:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Up ramp is %d seconds\n\n\0", 
 318:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[3]);
 1270              		.loc 1 318 0
 1271 014a 214B     		ldr	r3, .L27+16
 1272 014c DB89     		ldrh	r3, [r3, #14]
 317:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Up ramp is %d seconds\n\n\0", 
 1273              		.loc 1 317 0
 1274 014e F868     		ldr	r0, [r7, #12]
 1275 0150 2649     		ldr	r1, .L27+44
 1276 0152 1A46     		mov	r2, r3
 1277 0154 FFF7FEFF 		bl	sprintf
 319:App/STM32F4-Discovery/tcpCLI.c **** 					
 320:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 25; 	
 1278              		.loc 1 320 0
 1279 0158 1923     		movs	r3, #25
 1280 015a 7B61     		str	r3, [r7, #20]
 321:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 322:App/STM32F4-Discovery/tcpCLI.c **** 
 323:App/STM32F4-Discovery/tcpCLI.c **** 
 324:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 1281              		.loc 1 324 0
 1282 015c 0123     		movs	r3, #1
 1283 015e 2BE0     		b	.L17
 1284              	.L25:
 325:App/STM32F4-Discovery/tcpCLI.c **** 
 326:App/STM32F4-Discovery/tcpCLI.c **** 				}
 327:App/STM32F4-Discovery/tcpCLI.c **** 				else
 328:App/STM32F4-Discovery/tcpCLI.c **** 				{
 329:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1285              		.loc 1 329 0
 1286 0160 FA68     		ldr	r2, [r7, #12]
 1287 0162 1E4B     		ldr	r3, .L27+28
 1288 0164 1546     		mov	r5, r2
 1289 0166 1C46     		mov	r4, r3
 1290 0168 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1291 016a 2860     		str	r0, [r5]	@ unaligned
 1292 016c 6960     		str	r1, [r5, #4]	@ unaligned
 1293 016e AA60     		str	r2, [r5, #8]	@ unaligned
 1294 0170 EB60     		str	r3, [r5, #12]	@ unaligned
 1295 0172 2068     		ldr	r0, [r4]	@ unaligned
 1296 0174 2861     		str	r0, [r5, #16]	@ unaligned
 330:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 1297              		.loc 1 330 0
 1298 0176 1323     		movs	r3, #19
 1299 0178 7B61     		str	r3, [r7, #20]
 331:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 332:App/STM32F4-Discovery/tcpCLI.c **** 
 333:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 1300              		.loc 1 333 0
 1301 017a 0023     		movs	r3, #0
 1302 017c 1CE0     		b	.L17
 1303              	.L24:
 334:App/STM32F4-Discovery/tcpCLI.c **** 
 335:App/STM32F4-Discovery/tcpCLI.c **** 
 336:App/STM32F4-Discovery/tcpCLI.c **** 				}
 337:App/STM32F4-Discovery/tcpCLI.c **** 						
 338:App/STM32F4-Discovery/tcpCLI.c **** 			}
 339:App/STM32F4-Discovery/tcpCLI.c **** 
 340:App/STM32F4-Discovery/tcpCLI.c **** 		}
 341:App/STM32F4-Discovery/tcpCLI.c **** 		else
 342:App/STM32F4-Discovery/tcpCLI.c **** 		{
 343:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 344:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 345:App/STM32F4-Discovery/tcpCLI.c **** 		
 346:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 1304              		.loc 1 346 0
 1305 017e FA68     		ldr	r2, [r7, #12]
 1306 0180 184B     		ldr	r3, .L27+36
 1307 0182 1446     		mov	r4, r2
 1308 0184 1D46     		mov	r5, r3
 1309 0186 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1310 0188 2060     		str	r0, [r4]	@ unaligned
 1311 018a 6160     		str	r1, [r4, #4]	@ unaligned
 1312 018c A260     		str	r2, [r4, #8]	@ unaligned
 1313 018e E360     		str	r3, [r4, #12]	@ unaligned
 1314 0190 2868     		ldr	r0, [r5]	@ unaligned
 1315 0192 2061     		str	r0, [r4, #16]	@ unaligned
 1316 0194 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1317 0196 AB79     		ldrb	r3, [r5, #6]
 1318 0198 A282     		strh	r2, [r4, #20]	@ unaligned
 1319 019a A375     		strb	r3, [r4, #22]
 347:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1320              		.loc 1 347 0
 1321 019c 1623     		movs	r3, #22
 1322 019e 7B61     		str	r3, [r7, #20]
 348:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 349:App/STM32F4-Discovery/tcpCLI.c **** 
 350:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1323              		.loc 1 350 0
 1324 01a0 0023     		movs	r3, #0
 1325 01a2 09E0     		b	.L17
 1326              	.L23:
 351:App/STM32F4-Discovery/tcpCLI.c **** 		}
 352:App/STM32F4-Discovery/tcpCLI.c **** 	}
 353:App/STM32F4-Discovery/tcpCLI.c **** 
 354:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 355:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER downramp [value]
 356:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 357:App/STM32F4-Discovery/tcpCLI.c **** 
 358:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "downramp", 8))
 1327              		.loc 1 358 0
 1328 01a4 7868     		ldr	r0, [r7, #4]
 1329 01a6 1249     		ldr	r1, .L27+48
 1330 01a8 0822     		movs	r2, #8
 1331 01aa FFF7FEFF 		bl	strncmp
 1332 01ae 0346     		mov	r3, r0
 1333 01b0 002B     		cmp	r3, #0
 1334 01b2 01D1     		bne	.L26
 359:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 360:App/STM32F4-Discovery/tcpCLI.c **** 	
 361:App/STM32F4-Discovery/tcpCLI.c **** 	
 362:App/STM32F4-Discovery/tcpCLI.c **** 				
 363:App/STM32F4-Discovery/tcpCLI.c **** 	
 364:App/STM32F4-Discovery/tcpCLI.c **** 	
 365:App/STM32F4-Discovery/tcpCLI.c **** 
 366:App/STM32F4-Discovery/tcpCLI.c **** 			return 0; 
 1335              		.loc 1 366 0
 1336 01b4 0023     		movs	r3, #0
 1337 01b6 FFE7     		b	.L17
 1338              	.L26:
 1339              	.L17:
 367:App/STM32F4-Discovery/tcpCLI.c **** 
 368:App/STM32F4-Discovery/tcpCLI.c **** 	}
 369:App/STM32F4-Discovery/tcpCLI.c **** 
 370:App/STM32F4-Discovery/tcpCLI.c **** 
 371:App/STM32F4-Discovery/tcpCLI.c **** 
 372:App/STM32F4-Discovery/tcpCLI.c **** 
 373:App/STM32F4-Discovery/tcpCLI.c **** }
 1340              		.loc 1 373 0
 1341 01b8 1846     		mov	r0, r3
 1342 01ba 1837     		adds	r7, r7, #24
 1343 01bc BD46     		mov	sp, r7
 1344              		@ sp needed
 1345 01be B0BD     		pop	{r4, r5, r7, pc}
 1346              	.L28:
 1347              		.align	2
 1348              	.L27:
 1349 01c0 74000000 		.word	.LC4
 1350 01c4 00000000 		.word	telegramS
 1351 01c8 00000000 		.word	QSpd_handle
 1352 01cc 00000000 		.word	xDelay
 1353 01d0 00000000 		.word	telegramR
 1354 01d4 1F85EB51 		.word	1374389535
 1355 01d8 70010000 		.word	.LC14
 1356 01dc C8000000 		.word	.LC7
 1357 01e0 DC000000 		.word	.LC8
 1358 01e4 F8000000 		.word	.LC9
 1359 01e8 10010000 		.word	.LC10
 1360 01ec 88010000 		.word	.LC15
 1361 01f0 64010000 		.word	.LC13
 1362              		.cfi_endproc
 1363              	.LFE111:
 1365              		.section	.rodata
 1366 01a1 000000   		.align	2
 1367              	.LC16:
 1368 01a4 546F2066 		.ascii	"To few arguments. \012\012\000\000"
 1368      65772061 
 1368      7267756D 
 1368      656E7473 
 1368      2E200A0A 
 1369 01ba 0000     		.align	2
 1370              	.LC17:
 1371 01bc 68656C70 		.ascii	"help\000"
 1371      00
 1372 01c1 000000   		.align	2
 1373              	.LC18:
 1374 01c4 55736167 		.ascii	"Usage and parameters\012options:\012\011get - get m"
 1374      6520616E 
 1374      64207061 
 1374      72616D65 
 1374      74657273 
 1375 01ee 6F746F72 		.ascii	"otor parameter value\012\011set - set motor paramet"
 1375      20706172 
 1375      616D6574 
 1375      65722076 
 1375      616C7565 
 1376 021b 65722076 		.ascii	"er value\012\011start - starts motor\012\011stop - "
 1376      616C7565 
 1376      0A097374 
 1376      61727420 
 1376      2D207374 
 1377 0242 73746F70 		.ascii	"stops motor\012parametrs:\012\011speed - sets speed"
 1377      73206D6F 
 1377      746F720A 
 1377      70617261 
 1377      6D657472 
 1378 026c 0A097570 		.ascii	"\012\011upramp\012\011downramp\012\000\000"
 1378      72616D70 
 1378      0A09646F 
 1378      776E7261 
 1378      6D700A00 
 1379 0281 000000   		.align	2
 1380              	.LC19:
 1381 0284 73657400 		.ascii	"set\000"
 1382              		.align	2
 1383              	.LC20:
 1384 0288 67657400 		.ascii	"get\000"
 1385              		.align	2
 1386              	.LC21:
 1387 028c 506F7765 		.ascii	"Power In=%d, Iout=%d, Vin=%d, PrcOut=%d, RPMOut=%d,"
 1387      7220496E 
 1387      3D25642C 
 1387      20496F75 
 1387      743D2564 
 1388 02bf 20496E74 		.ascii	" InternalTemp=%d\012\000"
 1388      65726E61 
 1388      6C54656D 
 1388      703D2564 
 1388      0A00
 1389 02d1 000000   		.align	2
 1390              	.LC22:
 1391 02d4 73746F70 		.ascii	"stop\000"
 1391      00
 1392 02d9 000000   		.align	2
 1393              	.LC23:
 1394 02dc 4D6F746F 		.ascii	"Motor succsesfully stopped.\012\012\000"
 1394      72207375 
 1394      63637365 
 1394      7366756C 
 1394      6C792073 
 1395 02fa 0000     		.align	2
 1396              	.LC24:
 1397 02fc 73746172 		.ascii	"start\000"
 1397      7400
 1398 0302 0000     		.align	2
 1399              	.LC25:
 1400 0304 4D6F746F 		.ascii	"Motor succsesfully started.\012\012\000"
 1400      72207375 
 1400      63637365 
 1400      7366756C 
 1400      6C792073 
 1401              		.section	.text.prvMotorCommand,"ax",%progbits
 1402              		.align	2
 1403              		.global	prvMotorCommand
 1404              		.thumb
 1405              		.thumb_func
 1407              	prvMotorCommand:
 1408              	.LFB112:
 374:App/STM32F4-Discovery/tcpCLI.c **** 
 375:App/STM32F4-Discovery/tcpCLI.c **** 
 376:App/STM32F4-Discovery/tcpCLI.c **** 
 377:App/STM32F4-Discovery/tcpCLI.c **** 
 378:App/STM32F4-Discovery/tcpCLI.c **** 
 379:App/STM32F4-Discovery/tcpCLI.c **** 
 380:App/STM32F4-Discovery/tcpCLI.c **** /* ================================================================================================
 381:App/STM32F4-Discovery/tcpCLI.c ****  * ================================================================================================
 382:App/STM32F4-Discovery/tcpCLI.c ****  * 		prvMotorCommand 
 383:App/STM32F4-Discovery/tcpCLI.c ****  * ================================================================================================
 384:App/STM32F4-Discovery/tcpCLI.c ****  * ==============================================================================================*/
 385:App/STM32F4-Discovery/tcpCLI.c **** 
 386:App/STM32F4-Discovery/tcpCLI.c **** portBASE_TYPE prvMotorCommand ( 	int8_t *pcWriteBuffer, 
 387:App/STM32F4-Discovery/tcpCLI.c **** 						size_t xWriteBufferLen, 
 388:App/STM32F4-Discovery/tcpCLI.c **** 						const int8_t *pcCommandString)
 389:App/STM32F4-Discovery/tcpCLI.c **** {
 1409              		.loc 1 389 0
 1410              		.cfi_startproc
 1411              		@ args = 0, pretend = 0, frame = 40
 1412              		@ frame_needed = 1, uses_anonymous_args = 0
 1413 0000 B0B5     		push	{r4, r5, r7, lr}
 1414              	.LCFI6:
 1415              		.cfi_def_cfa_offset 16
 1416              		.cfi_offset 4, -16
 1417              		.cfi_offset 5, -12
 1418              		.cfi_offset 7, -8
 1419              		.cfi_offset 14, -4
 1420 0002 8EB0     		sub	sp, sp, #56
 1421              	.LCFI7:
 1422              		.cfi_def_cfa_offset 72
 1423 0004 04AF     		add	r7, sp, #16
 1424              	.LCFI8:
 1425              		.cfi_def_cfa 7, 56
 1426 0006 F860     		str	r0, [r7, #12]
 1427 0008 B960     		str	r1, [r7, #8]
 1428 000a 7A60     		str	r2, [r7, #4]
 390:App/STM32F4-Discovery/tcpCLI.c **** 	/* globals: 
 391:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	socket 
 392:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	setSpeedHandle
 393:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	QSpd_Handle
 394:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	QStatus_handle
 395:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	
 396:App/STM32F4-Discovery/tcpCLI.c **** 	 **/
 397:App/STM32F4-Discovery/tcpCLI.c **** 
 398:App/STM32F4-Discovery/tcpCLI.c **** 	int8_t *Option, *Param, *Value;
 399:App/STM32F4-Discovery/tcpCLI.c **** 	int xOptionLength, xParamLength, xValueLength; 
 400:App/STM32F4-Discovery/tcpCLI.c **** 	//QueueTelegram telegram; 
 401:App/STM32F4-Discovery/tcpCLI.c **** 	
 402:App/STM32F4-Discovery/tcpCLI.c **** 	// get option from command line 
 403:App/STM32F4-Discovery/tcpCLI.c **** 
 404:App/STM32F4-Discovery/tcpCLI.c **** 	Option = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1429              		.loc 1 404 0
 1430 000c 07F11803 		add	r3, r7, #24
 1431 0010 7868     		ldr	r0, [r7, #4]
 1432 0012 0121     		movs	r1, #1
 1433 0014 1A46     		mov	r2, r3
 1434 0016 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1435 001a 7862     		str	r0, [r7, #36]
 405:App/STM32F4-Discovery/tcpCLI.c **** 					  1,  		   // first parameter
 406:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xOptionLength // parameter string length
 407:App/STM32F4-Discovery/tcpCLI.c **** 					  
 408:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 409:App/STM32F4-Discovery/tcpCLI.c **** 
 410:App/STM32F4-Discovery/tcpCLI.c **** 	if ( Option == NULL)
 1436              		.loc 1 410 0
 1437 001c 7B6A     		ldr	r3, [r7, #36]
 1438 001e 002B     		cmp	r3, #0
 1439 0020 0ED1     		bne	.L30
 411:App/STM32F4-Discovery/tcpCLI.c **** 	{
 412:App/STM32F4-Discovery/tcpCLI.c **** 		sprintf(pcWriteBuffer, "To few arguments. \n\n\0");
 1440              		.loc 1 412 0
 1441 0022 FA68     		ldr	r2, [r7, #12]
 1442 0024 9A4B     		ldr	r3, .L52
 1443 0026 1546     		mov	r5, r2
 1444 0028 1C46     		mov	r4, r3
 1445 002a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1446 002c 2860     		str	r0, [r5]	@ unaligned
 1447 002e 6960     		str	r1, [r5, #4]	@ unaligned
 1448 0030 AA60     		str	r2, [r5, #8]	@ unaligned
 1449 0032 EB60     		str	r3, [r5, #12]	@ unaligned
 1450 0034 2068     		ldr	r0, [r4]	@ unaligned
 1451 0036 2861     		str	r0, [r5, #16]	@ unaligned
 1452 0038 2379     		ldrb	r3, [r4, #4]
 1453 003a 2B75     		strb	r3, [r5, #20]
 413:App/STM32F4-Discovery/tcpCLI.c **** 		return pdFALSE;
 1454              		.loc 1 413 0
 1455 003c 0023     		movs	r3, #0
 1456 003e F4E1     		b	.L51
 1457              	.L30:
 414:App/STM32F4-Discovery/tcpCLI.c **** 	}
 415:App/STM32F4-Discovery/tcpCLI.c **** 
 416:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp(Option, "help", 4))
 1458              		.loc 1 416 0
 1459 0040 786A     		ldr	r0, [r7, #36]
 1460 0042 9449     		ldr	r1, .L52+4
 1461 0044 0422     		movs	r2, #4
 1462 0046 FFF7FEFF 		bl	strncmp
 1463 004a 0346     		mov	r3, r0
 1464 004c 002B     		cmp	r3, #0
 1465 004e 0BD1     		bne	.L32
 417:App/STM32F4-Discovery/tcpCLI.c **** 	{
 418:App/STM32F4-Discovery/tcpCLI.c **** 		strcpy(pcWriteBuffer, 
 1466              		.loc 1 418 0
 1467 0050 FA68     		ldr	r2, [r7, #12]
 1468 0052 914B     		ldr	r3, .L52+8
 1469 0054 1146     		mov	r1, r2
 1470 0056 1A46     		mov	r2, r3
 1471 0058 BC23     		movs	r3, #188
 1472 005a 0846     		mov	r0, r1
 1473 005c 1146     		mov	r1, r2
 1474 005e 1A46     		mov	r2, r3
 1475 0060 FFF7FEFF 		bl	memcpy
 419:App/STM32F4-Discovery/tcpCLI.c **** 			"Usage and parameters\n"
 420:App/STM32F4-Discovery/tcpCLI.c **** 			"options:\n"
 421:App/STM32F4-Discovery/tcpCLI.c **** 			"\tget - get motor parameter value\n"
 422:App/STM32F4-Discovery/tcpCLI.c **** 			"\tset - set motor parameter value\n"
 423:App/STM32F4-Discovery/tcpCLI.c **** 			"\tstart - starts motor\n"
 424:App/STM32F4-Discovery/tcpCLI.c **** 			"\tstop - stops motor\n"
 425:App/STM32F4-Discovery/tcpCLI.c **** 			"parametrs:\n"
 426:App/STM32F4-Discovery/tcpCLI.c **** 			"\tspeed - sets speed\n"
 427:App/STM32F4-Discovery/tcpCLI.c **** 			"\tupramp\n"
 428:App/STM32F4-Discovery/tcpCLI.c **** 			"\tdownramp\n"
 429:App/STM32F4-Discovery/tcpCLI.c **** 
 430:App/STM32F4-Discovery/tcpCLI.c **** 			
 431:App/STM32F4-Discovery/tcpCLI.c **** 			"\0"
 432:App/STM32F4-Discovery/tcpCLI.c **** 
 433:App/STM32F4-Discovery/tcpCLI.c **** 		      );
 434:App/STM32F4-Discovery/tcpCLI.c **** 
 435:App/STM32F4-Discovery/tcpCLI.c **** 		return pdPASS;
 1476              		.loc 1 435 0
 1477 0064 0123     		movs	r3, #1
 1478 0066 E0E1     		b	.L51
 1479              	.L32:
 436:App/STM32F4-Discovery/tcpCLI.c **** 	}
 437:App/STM32F4-Discovery/tcpCLI.c **** 
 438:App/STM32F4-Discovery/tcpCLI.c **** 
 439:App/STM32F4-Discovery/tcpCLI.c ****     //	vTaskResume(motorHBHandle);
 440:App/STM32F4-Discovery/tcpCLI.c **** 
 441:App/STM32F4-Discovery/tcpCLI.c **** 
 442:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 443:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND SET [parameter name] [value]
 444:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 445:App/STM32F4-Discovery/tcpCLI.c **** 
 446:App/STM32F4-Discovery/tcpCLI.c **** 	if( !strncmp( Option, "set", 3) ) 
 1480              		.loc 1 446 0
 1481 0068 786A     		ldr	r0, [r7, #36]
 1482 006a 8C49     		ldr	r1, .L52+12
 1483 006c 0322     		movs	r2, #3
 1484 006e FFF7FEFF 		bl	strncmp
 1485 0072 0346     		mov	r3, r0
 1486 0074 002B     		cmp	r3, #0
 1487 0076 33D1     		bne	.L33
 447:App/STM32F4-Discovery/tcpCLI.c **** 	{
 448:App/STM32F4-Discovery/tcpCLI.c **** 
 449:App/STM32F4-Discovery/tcpCLI.c **** 		// get parameter from command line 
 450:App/STM32F4-Discovery/tcpCLI.c **** 	
 451:App/STM32F4-Discovery/tcpCLI.c **** 		Param = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1488              		.loc 1 451 0
 1489 0078 07F11403 		add	r3, r7, #20
 1490 007c 7868     		ldr	r0, [r7, #4]
 1491 007e 0221     		movs	r1, #2
 1492 0080 1A46     		mov	r2, r3
 1493 0082 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1494 0086 3862     		str	r0, [r7, #32]
 452:App/STM32F4-Discovery/tcpCLI.c **** 					  2,  		   // 2nd parameter
 453:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xParamLength // parameter string length
 454:App/STM32F4-Discovery/tcpCLI.c **** 					  
 455:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 456:App/STM32F4-Discovery/tcpCLI.c **** 		Value = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1495              		.loc 1 456 0
 1496 0088 07F11003 		add	r3, r7, #16
 1497 008c 7868     		ldr	r0, [r7, #4]
 1498 008e 0321     		movs	r1, #3
 1499 0090 1A46     		mov	r2, r3
 1500 0092 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1501 0096 F861     		str	r0, [r7, #28]
 457:App/STM32F4-Discovery/tcpCLI.c **** 					  3,  		   // 2nd parameter
 458:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xValueLength // parameter string length
 459:App/STM32F4-Discovery/tcpCLI.c **** 					  
 460:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 461:App/STM32F4-Discovery/tcpCLI.c **** 		
 462:App/STM32F4-Discovery/tcpCLI.c **** 		// return pdFALSE if there is no 3rd parameter 
 463:App/STM32F4-Discovery/tcpCLI.c **** 
 464:App/STM32F4-Discovery/tcpCLI.c **** 		if (Value==NULL||Param==NULL)
 1502              		.loc 1 464 0
 1503 0098 FB69     		ldr	r3, [r7, #28]
 1504 009a 002B     		cmp	r3, #0
 1505 009c 02D0     		beq	.L34
 1506              		.loc 1 464 0 is_stmt 0 discriminator 1
 1507 009e 3B6A     		ldr	r3, [r7, #32]
 1508 00a0 002B     		cmp	r3, #0
 1509 00a2 06D1     		bne	.L35
 1510              	.L34:
 465:App/STM32F4-Discovery/tcpCLI.c **** 		{
 466:App/STM32F4-Discovery/tcpCLI.c **** 			strcpy(pcWriteBuffer, xMotorCommand.pcHelpString);
 1511              		.loc 1 466 0 is_stmt 1
 1512 00a4 7E4B     		ldr	r3, .L52+16
 1513 00a6 F868     		ldr	r0, [r7, #12]
 1514 00a8 1946     		mov	r1, r3
 1515 00aa FFF7FEFF 		bl	strcpy
 467:App/STM32F4-Discovery/tcpCLI.c **** 
 468:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 
 1516              		.loc 1 468 0
 1517 00ae 0023     		movs	r3, #0
 1518 00b0 BBE1     		b	.L51
 1519              	.L35:
 469:App/STM32F4-Discovery/tcpCLI.c **** 
 470:App/STM32F4-Discovery/tcpCLI.c **** 		}
 471:App/STM32F4-Discovery/tcpCLI.c **** 
 472:App/STM32F4-Discovery/tcpCLI.c **** 		
 473:App/STM32F4-Discovery/tcpCLI.c **** 		if ( handleVariable_set ( 
 1520              		.loc 1 473 0
 1521 00b2 7B69     		ldr	r3, [r7, #20]
 1522 00b4 7B4A     		ldr	r2, .L52+20
 1523 00b6 1068     		ldr	r0, [r2]
 1524 00b8 3969     		ldr	r1, [r7, #16]
 1525 00ba 7B4A     		ldr	r2, .L52+24
 1526 00bc 1268     		ldr	r2, [r2]
 1527 00be 0090     		str	r0, [sp]
 1528 00c0 F869     		ldr	r0, [r7, #28]
 1529 00c2 0190     		str	r0, [sp, #4]
 1530 00c4 0291     		str	r1, [sp, #8]
 1531 00c6 0392     		str	r2, [sp, #12]
 1532 00c8 F868     		ldr	r0, [r7, #12]
 1533 00ca B968     		ldr	r1, [r7, #8]
 1534 00cc 3A6A     		ldr	r2, [r7, #32]
 1535 00ce FFF7FEFF 		bl	handleVariable_set
 1536 00d2 0346     		mov	r3, r0
 1537 00d4 002B     		cmp	r3, #0
 1538 00d6 01D0     		beq	.L36
 474:App/STM32F4-Discovery/tcpCLI.c **** 				           pcWriteBuffer, 
 475:App/STM32F4-Discovery/tcpCLI.c **** 					   xWriteBufferLen,
 476:App/STM32F4-Discovery/tcpCLI.c **** 					   Param, 
 477:App/STM32F4-Discovery/tcpCLI.c **** 					   xParamLength, 
 478:App/STM32F4-Discovery/tcpCLI.c **** 					   QSpd_handle, 
 479:App/STM32F4-Discovery/tcpCLI.c **** 					   Value,
 480:App/STM32F4-Discovery/tcpCLI.c **** 					   xValueLength,  
 481:App/STM32F4-Discovery/tcpCLI.c **** 					   socket_0)) return pdPASS;
 1539              		.loc 1 481 0
 1540 00d8 0123     		movs	r3, #1
 1541 00da A6E1     		b	.L51
 1542              	.L36:
 482:App/STM32F4-Discovery/tcpCLI.c **** 
 483:App/STM32F4-Discovery/tcpCLI.c **** 		
 484:App/STM32F4-Discovery/tcpCLI.c **** 			
 485:App/STM32F4-Discovery/tcpCLI.c **** 		return pdFALSE;
 1543              		.loc 1 485 0
 1544 00dc 0023     		movs	r3, #0
 1545 00de A4E1     		b	.L51
 1546              	.L33:
 486:App/STM32F4-Discovery/tcpCLI.c **** 
 487:App/STM32F4-Discovery/tcpCLI.c **** 	}
 488:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 489:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND GET [parameter name] [value]
 490:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 491:App/STM32F4-Discovery/tcpCLI.c **** 
 492:App/STM32F4-Discovery/tcpCLI.c **** 
 493:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "get", 3))
 1547              		.loc 1 493 0
 1548 00e0 786A     		ldr	r0, [r7, #36]
 1549 00e2 7249     		ldr	r1, .L52+28
 1550 00e4 0322     		movs	r2, #3
 1551 00e6 FFF7FEFF 		bl	strncmp
 1552 00ea 0346     		mov	r3, r0
 1553 00ec 002B     		cmp	r3, #0
 1554 00ee 40F08E80 		bne	.L37
 494:App/STM32F4-Discovery/tcpCLI.c **** 	{
 495:App/STM32F4-Discovery/tcpCLI.c **** 		// get parameter from command line 
 496:App/STM32F4-Discovery/tcpCLI.c **** 	
 497:App/STM32F4-Discovery/tcpCLI.c **** 		Param = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1555              		.loc 1 497 0
 1556 00f2 07F11403 		add	r3, r7, #20
 1557 00f6 7868     		ldr	r0, [r7, #4]
 1558 00f8 0221     		movs	r1, #2
 1559 00fa 1A46     		mov	r2, r3
 1560 00fc FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1561 0100 3862     		str	r0, [r7, #32]
 498:App/STM32F4-Discovery/tcpCLI.c **** 					  2,  		   // 2nd parameter
 499:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xParamLength // parameter string length
 500:App/STM32F4-Discovery/tcpCLI.c **** 					  
 501:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 502:App/STM32F4-Discovery/tcpCLI.c **** 			
 503:App/STM32F4-Discovery/tcpCLI.c **** 		// return pdFALSE if there is no 3rd parameter 
 504:App/STM32F4-Discovery/tcpCLI.c **** 
 505:App/STM32F4-Discovery/tcpCLI.c **** 		if(Param==NULL)
 1562              		.loc 1 505 0
 1563 0102 3B6A     		ldr	r3, [r7, #32]
 1564 0104 002B     		cmp	r3, #0
 1565 0106 6FD1     		bne	.L38
 506:App/STM32F4-Discovery/tcpCLI.c **** 		{
 507:App/STM32F4-Discovery/tcpCLI.c **** 			telegramS.Qcmd = GETDATA;
 1566              		.loc 1 507 0
 1567 0108 694B     		ldr	r3, .L52+32
 1568 010a 0122     		movs	r2, #1
 1569 010c 1A70     		strb	r2, [r3]
 508:App/STM32F4-Discovery/tcpCLI.c **** 		
 509:App/STM32F4-Discovery/tcpCLI.c **** 			if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) )
 1570              		.loc 1 509 0
 1571 010e 654B     		ldr	r3, .L52+20
 1572 0110 1A68     		ldr	r2, [r3]
 1573 0112 684B     		ldr	r3, .L52+36
 1574 0114 1B68     		ldr	r3, [r3]
 1575 0116 1046     		mov	r0, r2
 1576 0118 6549     		ldr	r1, .L52+32
 1577 011a 1A46     		mov	r2, r3
 1578 011c 0023     		movs	r3, #0
 1579 011e FFF7FEFF 		bl	xQueueGenericSend
 1580 0122 0346     		mov	r3, r0
 1581 0124 002B     		cmp	r3, #0
 1582 0126 4CD0     		beq	.L39
 510:App/STM32F4-Discovery/tcpCLI.c **** 			{	
 511:App/STM32F4-Discovery/tcpCLI.c **** 					
 512:App/STM32F4-Discovery/tcpCLI.c **** 				if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay)== pdPASS)
 1583              		.loc 1 512 0
 1584 0128 5E4B     		ldr	r3, .L52+20
 1585 012a 1A68     		ldr	r2, [r3]
 1586 012c 614B     		ldr	r3, .L52+36
 1587 012e 1B68     		ldr	r3, [r3]
 1588 0130 1046     		mov	r0, r2
 1589 0132 6149     		ldr	r1, .L52+40
 1590 0134 1A46     		mov	r2, r3
 1591 0136 0023     		movs	r3, #0
 1592 0138 FFF7FEFF 		bl	xQueueGenericReceive
 1593 013c 0346     		mov	r3, r0
 1594 013e 012B     		cmp	r3, #1
 1595 0140 2ED1     		bne	.L40
 513:App/STM32F4-Discovery/tcpCLI.c **** 				{
 514:App/STM32F4-Discovery/tcpCLI.c **** 					if ( telegramR.Qcmd == SUCCSESS) 
 1596              		.loc 1 514 0
 1597 0142 5D4B     		ldr	r3, .L52+40
 1598 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1599 0146 062B     		cmp	r3, #6
 1600 0148 1BD1     		bne	.L41
 515:App/STM32F4-Discovery/tcpCLI.c **** 					{
 516:App/STM32F4-Discovery/tcpCLI.c **** 
 517:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 518:App/STM32F4-Discovery/tcpCLI.c **** 							"Power In=%d, Iout=%d, Vin=%d, "
 519:App/STM32F4-Discovery/tcpCLI.c **** 							"PrcOut=%d, RPMOut=%d, "
 520:App/STM32F4-Discovery/tcpCLI.c **** 							"InternalTemp=%d\n",
 521:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[8],
 1601              		.loc 1 521 0
 1602 014a 5B4B     		ldr	r3, .L52+40
 1603 014c 1B8B     		ldrh	r3, [r3, #24]
 517:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1604              		.loc 1 517 0
 1605 014e 1A46     		mov	r2, r3
 522:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[7],
 1606              		.loc 1 522 0
 1607 0150 594B     		ldr	r3, .L52+40
 1608 0152 DB8A     		ldrh	r3, [r3, #22]
 523:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[6],
 1609              		.loc 1 523 0
 1610 0154 5849     		ldr	r1, .L52+40
 1611 0156 898A     		ldrh	r1, [r1, #20]
 517:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1612              		.loc 1 517 0
 1613 0158 0D46     		mov	r5, r1
 524:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[3],
 1614              		.loc 1 524 0
 1615 015a 5749     		ldr	r1, .L52+40
 1616 015c C989     		ldrh	r1, [r1, #14]
 517:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1617              		.loc 1 517 0
 1618 015e 0C46     		mov	r4, r1
 525:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[4],
 1619              		.loc 1 525 0
 1620 0160 5549     		ldr	r1, .L52+40
 1621 0162 098A     		ldrh	r1, [r1, #16]
 517:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1622              		.loc 1 517 0
 1623 0164 0846     		mov	r0, r1
 526:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[5]);
 1624              		.loc 1 526 0
 1625 0166 5449     		ldr	r1, .L52+40
 1626 0168 498A     		ldrh	r1, [r1, #18]
 517:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1627              		.loc 1 517 0
 1628 016a 0095     		str	r5, [sp]
 1629 016c 0194     		str	r4, [sp, #4]
 1630 016e 0290     		str	r0, [sp, #8]
 1631 0170 0391     		str	r1, [sp, #12]
 1632 0172 F868     		ldr	r0, [r7, #12]
 1633 0174 5149     		ldr	r1, .L52+44
 1634 0176 FFF7FEFF 		bl	sprintf
 527:App/STM32F4-Discovery/tcpCLI.c **** 						xWriteBufferLen = 50 ; 	
 1635              		.loc 1 527 0
 1636 017a 3223     		movs	r3, #50
 1637 017c BB60     		str	r3, [r7, #8]
 528:App/STM32F4-Discovery/tcpCLI.c **** 						//send( socket_0, buf, len, 0);
 529:App/STM32F4-Discovery/tcpCLI.c **** 
 530:App/STM32F4-Discovery/tcpCLI.c **** 					
 531:App/STM32F4-Discovery/tcpCLI.c **** 						return pdPASS;
 1638              		.loc 1 531 0
 1639 017e 0123     		movs	r3, #1
 1640 0180 53E1     		b	.L51
 1641              	.L41:
 532:App/STM32F4-Discovery/tcpCLI.c **** 
 533:App/STM32F4-Discovery/tcpCLI.c **** 					}
 534:App/STM32F4-Discovery/tcpCLI.c **** 					else
 535:App/STM32F4-Discovery/tcpCLI.c **** 					{
 536:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1642              		.loc 1 536 0
 1643 0182 FA68     		ldr	r2, [r7, #12]
 1644 0184 4E4B     		ldr	r3, .L52+48
 1645 0186 1546     		mov	r5, r2
 1646 0188 1C46     		mov	r4, r3
 1647 018a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1648 018c 2860     		str	r0, [r5]	@ unaligned
 1649 018e 6960     		str	r1, [r5, #4]	@ unaligned
 1650 0190 AA60     		str	r2, [r5, #8]	@ unaligned
 1651 0192 EB60     		str	r3, [r5, #12]	@ unaligned
 1652 0194 2068     		ldr	r0, [r4]	@ unaligned
 1653 0196 2861     		str	r0, [r5, #16]	@ unaligned
 537:App/STM32F4-Discovery/tcpCLI.c **** 			       			xWriteBufferLen = 19; 	
 1654              		.loc 1 537 0
 1655 0198 1323     		movs	r3, #19
 1656 019a BB60     		str	r3, [r7, #8]
 538:App/STM32F4-Discovery/tcpCLI.c **** 						//send( socket_0, buf, len, 0);
 539:App/STM32F4-Discovery/tcpCLI.c **** 
 540:App/STM32F4-Discovery/tcpCLI.c **** 						return pdFALSE;
 1657              		.loc 1 540 0
 1658 019c 0023     		movs	r3, #0
 1659 019e 44E1     		b	.L51
 1660              	.L40:
 541:App/STM32F4-Discovery/tcpCLI.c **** 
 542:App/STM32F4-Discovery/tcpCLI.c **** 
 543:App/STM32F4-Discovery/tcpCLI.c **** 					}
 544:App/STM32F4-Discovery/tcpCLI.c **** 				}
 545:App/STM32F4-Discovery/tcpCLI.c **** 				else
 546:App/STM32F4-Discovery/tcpCLI.c **** 				{
 547:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 548:App/STM32F4-Discovery/tcpCLI.c **** 					// send error via TCP 
 549:App/STM32F4-Discovery/tcpCLI.c **** 		
 550:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 1661              		.loc 1 550 0
 1662 01a0 FA68     		ldr	r2, [r7, #12]
 1663 01a2 484B     		ldr	r3, .L52+52
 1664 01a4 1546     		mov	r5, r2
 1665 01a6 1C46     		mov	r4, r3
 1666 01a8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1667 01aa 2860     		str	r0, [r5]	@ unaligned
 1668 01ac 6960     		str	r1, [r5, #4]	@ unaligned
 1669 01ae AA60     		str	r2, [r5, #8]	@ unaligned
 1670 01b0 EB60     		str	r3, [r5, #12]	@ unaligned
 1671 01b2 07CC     		ldmia	r4!, {r0, r1, r2}
 1672 01b4 2861     		str	r0, [r5, #16]	@ unaligned
 1673 01b6 6961     		str	r1, [r5, #20]	@ unaligned
 1674 01b8 AA61     		str	r2, [r5, #24]	@ unaligned
 551:App/STM32F4-Discovery/tcpCLI.c **** 	 				xWriteBufferLen = 27; 	
 1675              		.loc 1 551 0
 1676 01ba 1B23     		movs	r3, #27
 1677 01bc BB60     		str	r3, [r7, #8]
 552:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 553:App/STM32F4-Discovery/tcpCLI.c **** 
 554:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE; 	
 1678              		.loc 1 554 0
 1679 01be 0023     		movs	r3, #0
 1680 01c0 33E1     		b	.L51
 1681              	.L39:
 555:App/STM32F4-Discovery/tcpCLI.c **** 				}	
 556:App/STM32F4-Discovery/tcpCLI.c **** 			}
 557:App/STM32F4-Discovery/tcpCLI.c **** 			else
 558:App/STM32F4-Discovery/tcpCLI.c **** 			{
 559:App/STM32F4-Discovery/tcpCLI.c **** 			
 560:App/STM32F4-Discovery/tcpCLI.c **** 				// send to Queue was unsuccsessful
 561:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 562:App/STM32F4-Discovery/tcpCLI.c **** 		
 563:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 1682              		.loc 1 563 0
 1683 01c2 FA68     		ldr	r2, [r7, #12]
 1684 01c4 404B     		ldr	r3, .L52+56
 1685 01c6 1446     		mov	r4, r2
 1686 01c8 1D46     		mov	r5, r3
 1687 01ca 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1688 01cc 2060     		str	r0, [r4]	@ unaligned
 1689 01ce 6160     		str	r1, [r4, #4]	@ unaligned
 1690 01d0 A260     		str	r2, [r4, #8]	@ unaligned
 1691 01d2 E360     		str	r3, [r4, #12]	@ unaligned
 1692 01d4 2868     		ldr	r0, [r5]	@ unaligned
 1693 01d6 2061     		str	r0, [r4, #16]	@ unaligned
 1694 01d8 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1695 01da AB79     		ldrb	r3, [r5, #6]
 1696 01dc A282     		strh	r2, [r4, #20]	@ unaligned
 1697 01de A375     		strb	r3, [r4, #22]
 564:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 22; 	
 1698              		.loc 1 564 0
 1699 01e0 1623     		movs	r3, #22
 1700 01e2 BB60     		str	r3, [r7, #8]
 565:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket, buf, len, 0);
 566:App/STM32F4-Discovery/tcpCLI.c **** 
 567:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 1701              		.loc 1 567 0
 1702 01e4 0023     		movs	r3, #0
 1703 01e6 20E1     		b	.L51
 1704              	.L38:
 568:App/STM32F4-Discovery/tcpCLI.c **** 			}
 569:App/STM32F4-Discovery/tcpCLI.c **** 		
 570:App/STM32F4-Discovery/tcpCLI.c **** 		
 571:App/STM32F4-Discovery/tcpCLI.c **** 		}
 572:App/STM32F4-Discovery/tcpCLI.c **** 
 573:App/STM32F4-Discovery/tcpCLI.c **** 		
 574:App/STM32F4-Discovery/tcpCLI.c **** 		if ( handleVariable_get ( 
 1705              		.loc 1 574 0
 1706 01e8 7B69     		ldr	r3, [r7, #20]
 1707 01ea 2E4A     		ldr	r2, .L52+20
 1708 01ec 1168     		ldr	r1, [r2]
 1709 01ee 2E4A     		ldr	r2, .L52+24
 1710 01f0 1268     		ldr	r2, [r2]
 1711 01f2 0091     		str	r1, [sp]
 1712 01f4 0192     		str	r2, [sp, #4]
 1713 01f6 F868     		ldr	r0, [r7, #12]
 1714 01f8 B968     		ldr	r1, [r7, #8]
 1715 01fa 3A6A     		ldr	r2, [r7, #32]
 1716 01fc FFF7FEFF 		bl	handleVariable_get
 1717 0200 0346     		mov	r3, r0
 1718 0202 002B     		cmp	r3, #0
 1719 0204 01D0     		beq	.L42
 575:App/STM32F4-Discovery/tcpCLI.c **** 				        pcWriteBuffer, 
 576:App/STM32F4-Discovery/tcpCLI.c **** 					   xWriteBufferLen,
 577:App/STM32F4-Discovery/tcpCLI.c **** 	
 578:App/STM32F4-Discovery/tcpCLI.c **** 				           Param, 
 579:App/STM32F4-Discovery/tcpCLI.c **** 					   xParamLength, 
 580:App/STM32F4-Discovery/tcpCLI.c **** 					   QSpd_handle, 
 581:App/STM32F4-Discovery/tcpCLI.c **** 					   socket_0)) return pdPASS;
 1720              		.loc 1 581 0
 1721 0206 0123     		movs	r3, #1
 1722 0208 0FE1     		b	.L51
 1723              	.L42:
 582:App/STM32F4-Discovery/tcpCLI.c **** 		return pdFALSE;
 1724              		.loc 1 582 0
 1725 020a 0023     		movs	r3, #0
 1726 020c 0DE1     		b	.L51
 1727              	.L37:
 583:App/STM32F4-Discovery/tcpCLI.c **** 
 584:App/STM32F4-Discovery/tcpCLI.c **** 
 585:App/STM32F4-Discovery/tcpCLI.c **** 	}
 586:App/STM32F4-Discovery/tcpCLI.c **** 		
 587:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 588:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND STOP 
 589:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 590:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "stop", 4))
 1728              		.loc 1 590 0
 1729 020e 786A     		ldr	r0, [r7, #36]
 1730 0210 2E49     		ldr	r1, .L52+60
 1731 0212 0422     		movs	r2, #4
 1732 0214 FFF7FEFF 		bl	strncmp
 1733 0218 0346     		mov	r3, r0
 1734 021a 002B     		cmp	r3, #0
 1735 021c 40F08D80 		bne	.L43
 591:App/STM32F4-Discovery/tcpCLI.c **** 	{
 592:App/STM32F4-Discovery/tcpCLI.c **** 
 593:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = STOP; 
 1736              		.loc 1 593 0
 1737 0220 234B     		ldr	r3, .L52+32
 1738 0222 0522     		movs	r2, #5
 1739 0224 1A70     		strb	r2, [r3]
 594:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5; 
 1740              		.loc 1 594 0
 1741 0226 224B     		ldr	r3, .L52+32
 1742 0228 0522     		movs	r2, #5
 1743 022a 5A60     		str	r2, [r3, #4]
 595:App/STM32F4-Discovery/tcpCLI.c **** 			// send value to setSpeed_task via Queue 
 596:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) )
 1744              		.loc 1 596 0
 1745 022c 1D4B     		ldr	r3, .L52+20
 1746 022e 1A68     		ldr	r2, [r3]
 1747 0230 204B     		ldr	r3, .L52+36
 1748 0232 1B68     		ldr	r3, [r3]
 1749 0234 1046     		mov	r0, r2
 1750 0236 1E49     		ldr	r1, .L52+32
 1751 0238 1A46     		mov	r2, r3
 1752 023a 0023     		movs	r3, #0
 1753 023c FFF7FEFF 		bl	xQueueGenericSend
 1754 0240 0346     		mov	r3, r0
 1755 0242 002B     		cmp	r3, #0
 1756 0244 66D0     		beq	.L44
 597:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 598:App/STM32F4-Discovery/tcpCLI.c **** 					
 599:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay)== pdPASS)
 1757              		.loc 1 599 0
 1758 0246 174B     		ldr	r3, .L52+20
 1759 0248 1A68     		ldr	r2, [r3]
 1760 024a 1A4B     		ldr	r3, .L52+36
 1761 024c 1B68     		ldr	r3, [r3]
 1762 024e 1046     		mov	r0, r2
 1763 0250 1949     		ldr	r1, .L52+40
 1764 0252 1A46     		mov	r2, r3
 1765 0254 0023     		movs	r3, #0
 1766 0256 FFF7FEFF 		bl	xQueueGenericReceive
 1767 025a 0346     		mov	r3, r0
 1768 025c 012B     		cmp	r3, #1
 1769 025e 48D1     		bne	.L45
 600:App/STM32F4-Discovery/tcpCLI.c **** 			{
 601:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 1770              		.loc 1 601 0
 1771 0260 154B     		ldr	r3, .L52+40
 1772 0262 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1773 0264 062B     		cmp	r3, #6
 1774 0266 35D1     		bne	.L46
 602:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 603:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer ,"Motor succsesfully stopped.\n\n");
 1775              		.loc 1 603 0
 1776 0268 FA68     		ldr	r2, [r7, #12]
 1777 026a 194B     		ldr	r3, .L52+64
 1778 026c 1546     		mov	r5, r2
 1779 026e 1C46     		mov	r4, r3
 1780 0270 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1781 0272 2860     		str	r0, [r5]	@ unaligned
 1782 0274 6960     		str	r1, [r5, #4]	@ unaligned
 1783 0276 AA60     		str	r2, [r5, #8]	@ unaligned
 1784 0278 EB60     		str	r3, [r5, #12]	@ unaligned
 1785 027a 07CC     		ldmia	r4!, {r0, r1, r2}
 1786 027c 2861     		str	r0, [r5, #16]	@ unaligned
 1787 027e 6961     		str	r1, [r5, #20]	@ unaligned
 1788 0280 AA61     		str	r2, [r5, #24]	@ unaligned
 1789 0282 2388     		ldrh	r3, [r4]	@ unaligned
 1790 0284 AB83     		strh	r3, [r5, #28]	@ unaligned
 604:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 29 ; 	
 1791              		.loc 1 604 0
 1792 0286 1D23     		movs	r3, #29
 1793 0288 BB60     		str	r3, [r7, #8]
 605:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 606:App/STM32F4-Discovery/tcpCLI.c **** 
 607:App/STM32F4-Discovery/tcpCLI.c **** 					
 608:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 1794              		.loc 1 608 0
 1795 028a 0123     		movs	r3, #1
 1796 028c CDE0     		b	.L51
 1797              	.L53:
 1798 028e 00BF     		.align	2
 1799              	.L52:
 1800 0290 A4010000 		.word	.LC16
 1801 0294 BC010000 		.word	.LC17
 1802 0298 C4010000 		.word	.LC18
 1803 029c 84020000 		.word	.LC19
 1804 02a0 08000000 		.word	.LC1
 1805 02a4 00000000 		.word	QSpd_handle
 1806 02a8 00000000 		.word	socket_0
 1807 02ac 88020000 		.word	.LC20
 1808 02b0 00000000 		.word	telegramS
 1809 02b4 00000000 		.word	xDelay
 1810 02b8 00000000 		.word	telegramR
 1811 02bc 8C020000 		.word	.LC21
 1812 02c0 C8000000 		.word	.LC7
 1813 02c4 DC000000 		.word	.LC8
 1814 02c8 F8000000 		.word	.LC9
 1815 02cc D4020000 		.word	.LC22
 1816 02d0 DC020000 		.word	.LC23
 1817              	.L46:
 609:App/STM32F4-Discovery/tcpCLI.c **** 
 610:App/STM32F4-Discovery/tcpCLI.c **** 				}
 611:App/STM32F4-Discovery/tcpCLI.c **** 				else
 612:App/STM32F4-Discovery/tcpCLI.c **** 				{
 613:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1818              		.loc 1 613 0
 1819 02d4 FA68     		ldr	r2, [r7, #12]
 1820 02d6 574B     		ldr	r3, .L54
 1821 02d8 1546     		mov	r5, r2
 1822 02da 1C46     		mov	r4, r3
 1823 02dc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1824 02de 2860     		str	r0, [r5]	@ unaligned
 1825 02e0 6960     		str	r1, [r5, #4]	@ unaligned
 1826 02e2 AA60     		str	r2, [r5, #8]	@ unaligned
 1827 02e4 EB60     		str	r3, [r5, #12]	@ unaligned
 1828 02e6 2068     		ldr	r0, [r4]	@ unaligned
 1829 02e8 2861     		str	r0, [r5, #16]	@ unaligned
 614:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 1830              		.loc 1 614 0
 1831 02ea 1323     		movs	r3, #19
 1832 02ec BB60     		str	r3, [r7, #8]
 615:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 616:App/STM32F4-Discovery/tcpCLI.c **** 
 617:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 1833              		.loc 1 617 0
 1834 02ee 0023     		movs	r3, #0
 1835 02f0 9BE0     		b	.L51
 1836              	.L45:
 618:App/STM32F4-Discovery/tcpCLI.c **** 
 619:App/STM32F4-Discovery/tcpCLI.c **** 
 620:App/STM32F4-Discovery/tcpCLI.c **** 				}
 621:App/STM32F4-Discovery/tcpCLI.c **** 			}
 622:App/STM32F4-Discovery/tcpCLI.c **** 			else
 623:App/STM32F4-Discovery/tcpCLI.c **** 			{
 624:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 625:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 626:App/STM32F4-Discovery/tcpCLI.c **** 		
 627:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 1837              		.loc 1 627 0
 1838 02f2 FA68     		ldr	r2, [r7, #12]
 1839 02f4 504B     		ldr	r3, .L54+4
 1840 02f6 1546     		mov	r5, r2
 1841 02f8 1C46     		mov	r4, r3
 1842 02fa 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1843 02fc 2860     		str	r0, [r5]	@ unaligned
 1844 02fe 6960     		str	r1, [r5, #4]	@ unaligned
 1845 0300 AA60     		str	r2, [r5, #8]	@ unaligned
 1846 0302 EB60     		str	r3, [r5, #12]	@ unaligned
 1847 0304 07CC     		ldmia	r4!, {r0, r1, r2}
 1848 0306 2861     		str	r0, [r5, #16]	@ unaligned
 1849 0308 6961     		str	r1, [r5, #20]	@ unaligned
 1850 030a AA61     		str	r2, [r5, #24]	@ unaligned
 628:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 1851              		.loc 1 628 0
 1852 030c 1B23     		movs	r3, #27
 1853 030e BB60     		str	r3, [r7, #8]
 629:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 630:App/STM32F4-Discovery/tcpCLI.c **** 
 631:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 1854              		.loc 1 631 0
 1855 0310 0023     		movs	r3, #0
 1856 0312 8AE0     		b	.L51
 1857              	.L44:
 632:App/STM32F4-Discovery/tcpCLI.c **** 			}
 633:App/STM32F4-Discovery/tcpCLI.c **** 		}
 634:App/STM32F4-Discovery/tcpCLI.c **** 		else
 635:App/STM32F4-Discovery/tcpCLI.c **** 		{
 636:App/STM32F4-Discovery/tcpCLI.c **** 			
 637:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 638:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 639:App/STM32F4-Discovery/tcpCLI.c **** 		
 640:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 1858              		.loc 1 640 0
 1859 0314 FA68     		ldr	r2, [r7, #12]
 1860 0316 494B     		ldr	r3, .L54+8
 1861 0318 1446     		mov	r4, r2
 1862 031a 1D46     		mov	r5, r3
 1863 031c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1864 031e 2060     		str	r0, [r4]	@ unaligned
 1865 0320 6160     		str	r1, [r4, #4]	@ unaligned
 1866 0322 A260     		str	r2, [r4, #8]	@ unaligned
 1867 0324 E360     		str	r3, [r4, #12]	@ unaligned
 1868 0326 2868     		ldr	r0, [r5]	@ unaligned
 1869 0328 2061     		str	r0, [r4, #16]	@ unaligned
 1870 032a AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1871 032c AB79     		ldrb	r3, [r5, #6]
 1872 032e A282     		strh	r2, [r4, #20]	@ unaligned
 1873 0330 A375     		strb	r3, [r4, #22]
 641:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1874              		.loc 1 641 0
 1875 0332 1623     		movs	r3, #22
 1876 0334 BB60     		str	r3, [r7, #8]
 642:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 643:App/STM32F4-Discovery/tcpCLI.c **** 
 644:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1877              		.loc 1 644 0
 1878 0336 0023     		movs	r3, #0
 1879 0338 77E0     		b	.L51
 1880              	.L43:
 645:App/STM32F4-Discovery/tcpCLI.c **** 		}
 646:App/STM32F4-Discovery/tcpCLI.c **** 					
 647:App/STM32F4-Discovery/tcpCLI.c **** 	}
 648:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 649:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND START
 650:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 651:App/STM32F4-Discovery/tcpCLI.c **** 
 652:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "start", 5))
 1881              		.loc 1 652 0
 1882 033a 786A     		ldr	r0, [r7, #36]
 1883 033c 4049     		ldr	r1, .L54+12
 1884 033e 0522     		movs	r2, #5
 1885 0340 FFF7FEFF 		bl	strncmp
 1886 0344 0346     		mov	r3, r0
 1887 0346 002B     		cmp	r3, #0
 1888 0348 69D1     		bne	.L47
 653:App/STM32F4-Discovery/tcpCLI.c **** 	{
 654:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = START; 
 1889              		.loc 1 654 0
 1890 034a 3E4B     		ldr	r3, .L54+16
 1891 034c 0422     		movs	r2, #4
 1892 034e 1A70     		strb	r2, [r3]
 655:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5; 
 1893              		.loc 1 655 0
 1894 0350 3C4B     		ldr	r3, .L54+16
 1895 0352 0522     		movs	r2, #5
 1896 0354 5A60     		str	r2, [r3, #4]
 656:App/STM32F4-Discovery/tcpCLI.c **** 			// send value to setSpeed_task via Queue 
 657:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 1897              		.loc 1 657 0
 1898 0356 3C4B     		ldr	r3, .L54+20
 1899 0358 1A68     		ldr	r2, [r3]
 1900 035a 3C4B     		ldr	r3, .L54+24
 1901 035c 1B68     		ldr	r3, [r3]
 1902 035e 1046     		mov	r0, r2
 1903 0360 3849     		ldr	r1, .L54+16
 1904 0362 1A46     		mov	r2, r3
 1905 0364 0023     		movs	r3, #0
 1906 0366 FFF7FEFF 		bl	xQueueGenericSend
 1907 036a 0346     		mov	r3, r0
 1908 036c 012B     		cmp	r3, #1
 1909 036e 43D1     		bne	.L48
 658:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 659:App/STM32F4-Discovery/tcpCLI.c **** 		//	vTaskDelay(500/portTICK_RATE_MS);		
 660:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay) == pdPASS)
 1910              		.loc 1 660 0
 1911 0370 354B     		ldr	r3, .L54+20
 1912 0372 1A68     		ldr	r2, [r3]
 1913 0374 354B     		ldr	r3, .L54+24
 1914 0376 1B68     		ldr	r3, [r3]
 1915 0378 1046     		mov	r0, r2
 1916 037a 3549     		ldr	r1, .L54+28
 1917 037c 1A46     		mov	r2, r3
 1918 037e 0023     		movs	r3, #0
 1919 0380 FFF7FEFF 		bl	xQueueGenericReceive
 1920 0384 0346     		mov	r3, r0
 1921 0386 012B     		cmp	r3, #1
 1922 0388 25D1     		bne	.L49
 661:App/STM32F4-Discovery/tcpCLI.c **** 			{
 662:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 1923              		.loc 1 662 0
 1924 038a 314B     		ldr	r3, .L54+28
 1925 038c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1926 038e 062B     		cmp	r3, #6
 1927 0390 12D1     		bne	.L50
 663:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 664:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer , "Motor succsesfully started.\n\n");
 1928              		.loc 1 664 0
 1929 0392 FA68     		ldr	r2, [r7, #12]
 1930 0394 2F4B     		ldr	r3, .L54+32
 1931 0396 1546     		mov	r5, r2
 1932 0398 1C46     		mov	r4, r3
 1933 039a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1934 039c 2860     		str	r0, [r5]	@ unaligned
 1935 039e 6960     		str	r1, [r5, #4]	@ unaligned
 1936 03a0 AA60     		str	r2, [r5, #8]	@ unaligned
 1937 03a2 EB60     		str	r3, [r5, #12]	@ unaligned
 1938 03a4 07CC     		ldmia	r4!, {r0, r1, r2}
 1939 03a6 2861     		str	r0, [r5, #16]	@ unaligned
 1940 03a8 6961     		str	r1, [r5, #20]	@ unaligned
 1941 03aa AA61     		str	r2, [r5, #24]	@ unaligned
 1942 03ac 2388     		ldrh	r3, [r4]	@ unaligned
 1943 03ae AB83     		strh	r3, [r5, #28]	@ unaligned
 665:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 29; 	
 1944              		.loc 1 665 0
 1945 03b0 1D23     		movs	r3, #29
 1946 03b2 BB60     		str	r3, [r7, #8]
 666:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 667:App/STM32F4-Discovery/tcpCLI.c **** 
 668:App/STM32F4-Discovery/tcpCLI.c **** 					
 669:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 1947              		.loc 1 669 0
 1948 03b4 0123     		movs	r3, #1
 1949 03b6 38E0     		b	.L51
 1950              	.L50:
 670:App/STM32F4-Discovery/tcpCLI.c **** 
 671:App/STM32F4-Discovery/tcpCLI.c **** 				}
 672:App/STM32F4-Discovery/tcpCLI.c **** 				else
 673:App/STM32F4-Discovery/tcpCLI.c **** 				{
 674:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1951              		.loc 1 674 0
 1952 03b8 FA68     		ldr	r2, [r7, #12]
 1953 03ba 1E4B     		ldr	r3, .L54
 1954 03bc 1546     		mov	r5, r2
 1955 03be 1C46     		mov	r4, r3
 1956 03c0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1957 03c2 2860     		str	r0, [r5]	@ unaligned
 1958 03c4 6960     		str	r1, [r5, #4]	@ unaligned
 1959 03c6 AA60     		str	r2, [r5, #8]	@ unaligned
 1960 03c8 EB60     		str	r3, [r5, #12]	@ unaligned
 1961 03ca 2068     		ldr	r0, [r4]	@ unaligned
 1962 03cc 2861     		str	r0, [r5, #16]	@ unaligned
 675:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 1963              		.loc 1 675 0
 1964 03ce 1323     		movs	r3, #19
 1965 03d0 BB60     		str	r3, [r7, #8]
 676:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 677:App/STM32F4-Discovery/tcpCLI.c **** 
 678:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 1966              		.loc 1 678 0
 1967 03d2 0023     		movs	r3, #0
 1968 03d4 29E0     		b	.L51
 1969              	.L49:
 679:App/STM32F4-Discovery/tcpCLI.c **** 
 680:App/STM32F4-Discovery/tcpCLI.c **** 
 681:App/STM32F4-Discovery/tcpCLI.c **** 				}
 682:App/STM32F4-Discovery/tcpCLI.c **** 			}
 683:App/STM32F4-Discovery/tcpCLI.c **** 			else
 684:App/STM32F4-Discovery/tcpCLI.c **** 			{
 685:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 686:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 687:App/STM32F4-Discovery/tcpCLI.c **** 		
 688:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 1970              		.loc 1 688 0
 1971 03d6 FA68     		ldr	r2, [r7, #12]
 1972 03d8 174B     		ldr	r3, .L54+4
 1973 03da 1546     		mov	r5, r2
 1974 03dc 1C46     		mov	r4, r3
 1975 03de 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1976 03e0 2860     		str	r0, [r5]	@ unaligned
 1977 03e2 6960     		str	r1, [r5, #4]	@ unaligned
 1978 03e4 AA60     		str	r2, [r5, #8]	@ unaligned
 1979 03e6 EB60     		str	r3, [r5, #12]	@ unaligned
 1980 03e8 07CC     		ldmia	r4!, {r0, r1, r2}
 1981 03ea 2861     		str	r0, [r5, #16]	@ unaligned
 1982 03ec 6961     		str	r1, [r5, #20]	@ unaligned
 1983 03ee AA61     		str	r2, [r5, #24]	@ unaligned
 689:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 1984              		.loc 1 689 0
 1985 03f0 1B23     		movs	r3, #27
 1986 03f2 BB60     		str	r3, [r7, #8]
 690:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 691:App/STM32F4-Discovery/tcpCLI.c **** 
 692:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 1987              		.loc 1 692 0
 1988 03f4 0023     		movs	r3, #0
 1989 03f6 18E0     		b	.L51
 1990              	.L48:
 693:App/STM32F4-Discovery/tcpCLI.c **** 			}
 694:App/STM32F4-Discovery/tcpCLI.c **** 		}
 695:App/STM32F4-Discovery/tcpCLI.c **** 		else
 696:App/STM32F4-Discovery/tcpCLI.c **** 		{
 697:App/STM32F4-Discovery/tcpCLI.c **** 			
 698:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 699:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 700:App/STM32F4-Discovery/tcpCLI.c **** 		
 701:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer,"Error sending Queue!\n\n");
 1991              		.loc 1 701 0
 1992 03f8 FA68     		ldr	r2, [r7, #12]
 1993 03fa 104B     		ldr	r3, .L54+8
 1994 03fc 1446     		mov	r4, r2
 1995 03fe 1D46     		mov	r5, r3
 1996 0400 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1997 0402 2060     		str	r0, [r4]	@ unaligned
 1998 0404 6160     		str	r1, [r4, #4]	@ unaligned
 1999 0406 A260     		str	r2, [r4, #8]	@ unaligned
 2000 0408 E360     		str	r3, [r4, #12]	@ unaligned
 2001 040a 2868     		ldr	r0, [r5]	@ unaligned
 2002 040c 2061     		str	r0, [r4, #16]	@ unaligned
 2003 040e AA88     		ldrh	r2, [r5, #4]	@ unaligned
 2004 0410 AB79     		ldrb	r3, [r5, #6]
 2005 0412 A282     		strh	r2, [r4, #20]	@ unaligned
 2006 0414 A375     		strb	r3, [r4, #22]
 702:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 2007              		.loc 1 702 0
 2008 0416 1623     		movs	r3, #22
 2009 0418 BB60     		str	r3, [r7, #8]
 703:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket_0, buf, len, 0);
 704:App/STM32F4-Discovery/tcpCLI.c **** 
 705:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 2010              		.loc 1 705 0
 2011 041a 0023     		movs	r3, #0
 2012 041c 05E0     		b	.L51
 2013              	.L47:
 706:App/STM32F4-Discovery/tcpCLI.c **** 		}
 707:App/STM32F4-Discovery/tcpCLI.c **** 
 708:App/STM32F4-Discovery/tcpCLI.c **** 
 709:App/STM32F4-Discovery/tcpCLI.c **** 	}
 710:App/STM32F4-Discovery/tcpCLI.c **** 
 711:App/STM32F4-Discovery/tcpCLI.c **** 
 712:App/STM32F4-Discovery/tcpCLI.c **** 	strcpy(pcWriteBuffer, xMotorCommand.pcHelpString);
 2014              		.loc 1 712 0
 2015 041e 0E4B     		ldr	r3, .L54+36
 2016 0420 F868     		ldr	r0, [r7, #12]
 2017 0422 1946     		mov	r1, r3
 2018 0424 FFF7FEFF 		bl	strcpy
 713:App/STM32F4-Discovery/tcpCLI.c **** 		
 714:App/STM32F4-Discovery/tcpCLI.c **** 	return pdFALSE;
 2019              		.loc 1 714 0
 2020 0428 0023     		movs	r3, #0
 2021              	.L51:
 715:App/STM32F4-Discovery/tcpCLI.c **** 
 716:App/STM32F4-Discovery/tcpCLI.c **** 
 717:App/STM32F4-Discovery/tcpCLI.c **** }
 2022              		.loc 1 717 0
 2023 042a 1846     		mov	r0, r3
 2024 042c 2837     		adds	r7, r7, #40
 2025 042e BD46     		mov	sp, r7
 2026              		@ sp needed
 2027 0430 B0BD     		pop	{r4, r5, r7, pc}
 2028              	.L55:
 2029 0432 00BF     		.align	2
 2030              	.L54:
 2031 0434 C8000000 		.word	.LC7
 2032 0438 DC000000 		.word	.LC8
 2033 043c F8000000 		.word	.LC9
 2034 0440 FC020000 		.word	.LC24
 2035 0444 00000000 		.word	telegramS
 2036 0448 00000000 		.word	QSpd_handle
 2037 044c 00000000 		.word	xDelay
 2038 0450 00000000 		.word	telegramR
 2039 0454 04030000 		.word	.LC25
 2040 0458 08000000 		.word	.LC1
 2041              		.cfi_endproc
 2042              	.LFE112:
 2044              		.section	.rodata
 2045 0322 0000     		.align	2
 2046              	.LC26:
 2047 0324 6B696C6C 		.ascii	"kill\000"
 2047      00
 2048 0329 000000   		.align	2
 2049              	.LC27:
 2050 032c 5461736B 		.ascii	"Task: motorHB succsessfully killed\012\000\000"
 2050      3A206D6F 
 2050      746F7248 
 2050      42207375 
 2050      63637365 
 2051 0351 000000   		.align	2
 2052              	.LC28:
 2053 0354 6D6F746F 		.ascii	"motorHB\000"
 2053      72484200 
 2054              		.align	2
 2055              	.LC29:
 2056 035c 5461736B 		.ascii	"Task: motorHB succsessfully started\012\000\000"
 2056      3A206D6F 
 2056      746F7248 
 2056      42207375 
 2056      63637365 
 2057 0382 0000     		.section	.text.prvTaskStatsCommand,"ax",%progbits
 2058              		.align	2
 2059              		.global	prvTaskStatsCommand
 2060              		.thumb
 2061              		.thumb_func
 2063              	prvTaskStatsCommand:
 2064              	.LFB113:
 718:App/STM32F4-Discovery/tcpCLI.c **** 
 719:App/STM32F4-Discovery/tcpCLI.c **** portBASE_TYPE prvTaskStatsCommand ( 	int8_t *pcWriteBuffer, 
 720:App/STM32F4-Discovery/tcpCLI.c **** 						size_t xWriteBufferLen, 
 721:App/STM32F4-Discovery/tcpCLI.c **** 						const int8_t *pcCommandString)
 722:App/STM32F4-Discovery/tcpCLI.c **** {
 2065              		.loc 1 722 0
 2066              		.cfi_startproc
 2067              		@ args = 0, pretend = 0, frame = 24
 2068              		@ frame_needed = 1, uses_anonymous_args = 0
 2069 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2070              	.LCFI9:
 2071              		.cfi_def_cfa_offset 24
 2072              		.cfi_offset 4, -24
 2073              		.cfi_offset 5, -20
 2074              		.cfi_offset 6, -16
 2075              		.cfi_offset 7, -12
 2076              		.cfi_offset 8, -8
 2077              		.cfi_offset 14, -4
 2078 0004 8AB0     		sub	sp, sp, #40
 2079              	.LCFI10:
 2080              		.cfi_def_cfa_offset 64
 2081 0006 04AF     		add	r7, sp, #16
 2082              	.LCFI11:
 2083              		.cfi_def_cfa 7, 48
 2084 0008 F860     		str	r0, [r7, #12]
 2085 000a B960     		str	r1, [r7, #8]
 2086 000c 7A60     		str	r2, [r7, #4]
 723:App/STM32F4-Discovery/tcpCLI.c **** 
 724:App/STM32F4-Discovery/tcpCLI.c **** 	int8_t *Option, *Param, *Value;
 725:App/STM32F4-Discovery/tcpCLI.c **** 	int xOptionLength, xParamLength, xValueLength; 
 726:App/STM32F4-Discovery/tcpCLI.c **** 	//QueueTelegram telegram; 
 727:App/STM32F4-Discovery/tcpCLI.c **** 	
 728:App/STM32F4-Discovery/tcpCLI.c **** 	// get option from command line 
 729:App/STM32F4-Discovery/tcpCLI.c **** 
 730:App/STM32F4-Discovery/tcpCLI.c **** 	Option = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 2087              		.loc 1 730 0
 2088 000e 07F11003 		add	r3, r7, #16
 2089 0012 7868     		ldr	r0, [r7, #4]
 2090 0014 0121     		movs	r1, #1
 2091 0016 1A46     		mov	r2, r3
 2092 0018 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 2093 001c 7861     		str	r0, [r7, #20]
 731:App/STM32F4-Discovery/tcpCLI.c **** 					  1,  		   // first parameter
 732:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xOptionLength // parameter string length
 733:App/STM32F4-Discovery/tcpCLI.c **** 					  
 734:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 735:App/STM32F4-Discovery/tcpCLI.c ****     	( void ) xWriteBufferLen;
 736:App/STM32F4-Discovery/tcpCLI.c **** 	if ( Option == NULL)
 2094              		.loc 1 736 0
 2095 001e 7B69     		ldr	r3, [r7, #20]
 2096 0020 002B     		cmp	r3, #0
 2097 0022 02D1     		bne	.L57
 737:App/STM32F4-Discovery/tcpCLI.c **** 	{
 738:App/STM32F4-Discovery/tcpCLI.c **** 		 vTaskList( pcWriteBuffer);
 2098              		.loc 1 738 0
 2099 0024 F868     		ldr	r0, [r7, #12]
 2100 0026 FFF7FEFF 		bl	vTaskList
 2101              	.L57:
 739:App/STM32F4-Discovery/tcpCLI.c **** 	}	
 740:App/STM32F4-Discovery/tcpCLI.c ****     /* For simplicity, this function assumes the output buffer is large enough
 741:App/STM32F4-Discovery/tcpCLI.c ****     to hold all the text generated by executing the vTaskList() API function,
 742:App/STM32F4-Discovery/tcpCLI.c ****     so the xWriteBufferLen parameter is not used. */
 743:App/STM32F4-Discovery/tcpCLI.c **** 
 744:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "kill", 7))
 2102              		.loc 1 744 0
 2103 002a 7869     		ldr	r0, [r7, #20]
 2104 002c 2D49     		ldr	r1, .L64
 2105 002e 0722     		movs	r2, #7
 2106 0030 FFF7FEFF 		bl	strncmp
 2107 0034 0346     		mov	r3, r0
 2108 0036 002B     		cmp	r3, #0
 2109 0038 1CD1     		bne	.L58
 745:App/STM32F4-Discovery/tcpCLI.c **** 	{
 746:App/STM32F4-Discovery/tcpCLI.c **** 	
 747:App/STM32F4-Discovery/tcpCLI.c **** 		vTaskDelete(motorHeartBeatHandle);
 2110              		.loc 1 747 0
 2111 003a 2B4B     		ldr	r3, .L64+4
 2112 003c 1B68     		ldr	r3, [r3]
 2113 003e 1846     		mov	r0, r3
 2114 0040 FFF7FEFF 		bl	vTaskDelete
 748:App/STM32F4-Discovery/tcpCLI.c **** 		strcpy ( pcWriteBuffer, "Task: motorHB succsessfully killed\n\0");
 2115              		.loc 1 748 0
 2116 0044 FB68     		ldr	r3, [r7, #12]
 2117 0046 294A     		ldr	r2, .L64+8
 2118 0048 1446     		mov	r4, r2
 2119 004a 1D46     		mov	r5, r3
 2120 004c 04F12008 		add	r8, r4, #32
 2121              	.L59:
 2122 0050 2E46     		mov	r6, r5
 2123 0052 A446     		mov	ip, r4
 2124 0054 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 2125 0058 3060     		str	r0, [r6]	@ unaligned
 2126 005a 7160     		str	r1, [r6, #4]	@ unaligned
 2127 005c B260     		str	r2, [r6, #8]	@ unaligned
 2128 005e F360     		str	r3, [r6, #12]	@ unaligned
 2129 0060 1034     		adds	r4, r4, #16
 2130 0062 1035     		adds	r5, r5, #16
 2131 0064 4445     		cmp	r4, r8
 2132 0066 F3D1     		bne	.L59
 2133 0068 2B46     		mov	r3, r5
 2134 006a 2246     		mov	r2, r4
 2135 006c 1068     		ldr	r0, [r2]	@ unaligned
 2136 006e 1860     		str	r0, [r3]	@ unaligned
 749:App/STM32F4-Discovery/tcpCLI.c **** 		return pdPASS;
 2137              		.loc 1 749 0
 2138 0070 0123     		movs	r3, #1
 2139 0072 31E0     		b	.L63
 2140              	.L58:
 750:App/STM32F4-Discovery/tcpCLI.c **** 	}
 751:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "start", 5))
 2141              		.loc 1 751 0
 2142 0074 7869     		ldr	r0, [r7, #20]
 2143 0076 1E49     		ldr	r1, .L64+12
 2144 0078 0522     		movs	r2, #5
 2145 007a FFF7FEFF 		bl	strncmp
 2146 007e 0346     		mov	r3, r0
 2147 0080 002B     		cmp	r3, #0
 2148 0082 28D1     		bne	.L61
 752:App/STM32F4-Discovery/tcpCLI.c **** 	{
 753:App/STM32F4-Discovery/tcpCLI.c **** 		// set motor task 
 754:App/STM32F4-Discovery/tcpCLI.c **** 		xTaskCreate(motorHeartBeat_task, "motorHB", configMINIMAL_STACK_SIZE * 8,		       				
 2149              		.loc 1 754 0
 2150 0084 0123     		movs	r3, #1
 2151 0086 0093     		str	r3, [sp]
 2152 0088 174B     		ldr	r3, .L64+4
 2153 008a 0193     		str	r3, [sp, #4]
 2154 008c 0023     		movs	r3, #0
 2155 008e 0293     		str	r3, [sp, #8]
 2156 0090 0023     		movs	r3, #0
 2157 0092 0393     		str	r3, [sp, #12]
 2158 0094 1748     		ldr	r0, .L64+16
 2159 0096 1849     		ldr	r1, .L64+20
 2160 0098 4FF40062 		mov	r2, #2048
 2161 009c 0023     		movs	r3, #0
 2162 009e FFF7FEFF 		bl	xTaskGenericCreate
 755:App/STM32F4-Discovery/tcpCLI.c **** 			NULL, 0x1/*mainFLASH_TASK_PRIORITY*/ , &motorHeartBeatHandle);
 756:App/STM32F4-Discovery/tcpCLI.c **** 
 757:App/STM32F4-Discovery/tcpCLI.c **** 		strcpy ( pcWriteBuffer, "Task: motorHB succsessfully started\n\0");
 2163              		.loc 1 757 0
 2164 00a2 FB68     		ldr	r3, [r7, #12]
 2165 00a4 154A     		ldr	r2, .L64+24
 2166 00a6 1446     		mov	r4, r2
 2167 00a8 1D46     		mov	r5, r3
 2168 00aa 04F12008 		add	r8, r4, #32
 2169              	.L62:
 2170 00ae 2E46     		mov	r6, r5
 2171 00b0 A446     		mov	ip, r4
 2172 00b2 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 2173 00b6 3060     		str	r0, [r6]	@ unaligned
 2174 00b8 7160     		str	r1, [r6, #4]	@ unaligned
 2175 00ba B260     		str	r2, [r6, #8]	@ unaligned
 2176 00bc F360     		str	r3, [r6, #12]	@ unaligned
 2177 00be 1034     		adds	r4, r4, #16
 2178 00c0 1035     		adds	r5, r5, #16
 2179 00c2 4445     		cmp	r4, r8
 2180 00c4 F3D1     		bne	.L62
 2181 00c6 2B46     		mov	r3, r5
 2182 00c8 2246     		mov	r2, r4
 2183 00ca 1068     		ldr	r0, [r2]	@ unaligned
 2184 00cc 1860     		str	r0, [r3]	@ unaligned
 2185 00ce 1279     		ldrb	r2, [r2, #4]
 2186 00d0 1A71     		strb	r2, [r3, #4]
 758:App/STM32F4-Discovery/tcpCLI.c **** 
 759:App/STM32F4-Discovery/tcpCLI.c **** 	
 760:App/STM32F4-Discovery/tcpCLI.c **** 		return pdPASS;	
 2187              		.loc 1 760 0
 2188 00d2 0123     		movs	r3, #1
 2189 00d4 00E0     		b	.L63
 2190              	.L61:
 761:App/STM32F4-Discovery/tcpCLI.c **** 	}
 762:App/STM32F4-Discovery/tcpCLI.c **** 
 763:App/STM32F4-Discovery/tcpCLI.c **** 
 764:App/STM32F4-Discovery/tcpCLI.c ****  
 765:App/STM32F4-Discovery/tcpCLI.c **** 
 766:App/STM32F4-Discovery/tcpCLI.c ****     /* The entire table was written directly to the output buffer.  Execution
 767:App/STM32F4-Discovery/tcpCLI.c ****     of this command is complete, so return pdFALSE. */
 768:App/STM32F4-Discovery/tcpCLI.c ****     return pdFALSE;
 2191              		.loc 1 768 0
 2192 00d6 0023     		movs	r3, #0
 2193              	.L63:
 769:App/STM32F4-Discovery/tcpCLI.c **** }
 2194              		.loc 1 769 0
 2195 00d8 1846     		mov	r0, r3
 2196 00da 1837     		adds	r7, r7, #24
 2197 00dc BD46     		mov	sp, r7
 2198              		@ sp needed
 2199 00de BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2200              	.L65:
 2201 00e2 00BF     		.align	2
 2202              	.L64:
 2203 00e4 24030000 		.word	.LC26
 2204 00e8 00000000 		.word	motorHeartBeatHandle
 2205 00ec 2C030000 		.word	.LC27
 2206 00f0 FC020000 		.word	.LC24
 2207 00f4 00000000 		.word	motorHeartBeat_task
 2208 00f8 54030000 		.word	.LC28
 2209 00fc 5C030000 		.word	.LC29
 2210              		.cfi_endproc
 2211              	.LFE113:
 2213              		.text
 2214              	.Letext0:
 2215              		.file 2 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/lib/gcc/arm-none-eabi/4.8.4/include/std
 2216              		.file 3 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/machine/_default_
 2217              		.file 4 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/stdint.h"
 2218              		.file 5 "Source/portable/GCC/ARM_CM4F/portmacro.h"
 2219              		.file 6 "Source/include/task.h"
 2220              		.file 7 "Source/include/queue.h"
 2221              		.file 8 "Source/include/semphr.h"
 2222              		.file 9 "App/STM32F4-Discovery/main.h"
 2223              		.file 10 "Source/FreeRTOS-Plus-CLI/FreeRTOS_CLI.h"
 2224              		.file 11 "App/STM32F4-Discovery/modbus_mk.h"
 2225              		.file 12 "App/STM32F4-Discovery/tcpCLI.h"
 2226              		.file 13 "App/STM32F4-Discovery/Libraries/CMSIS/Include/core_cm4.h"
 2227              		.file 14 "App/STM32F4-Discovery/spi.h"
 2228              		.file 15 "App/STM32F4-Discovery/W5200.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 tcpCLI.c
                            *COM*:0000000000000004 xSemaphoreDMASPI
                            *COM*:0000000000000004 xSmphrUSART
                            *COM*:0000000000000004 xSemaphoreREADLEN
                            *COM*:0000000000000004 motorHeartBeatHandle
                            *COM*:0000000000000004 motorHBHandle
                            *COM*:0000000000000004 QSpd_handle
                            *COM*:0000000000000004 QTCP_handle
                            *COM*:0000000000000004 socket_0
                            *COM*:00000000000007d0 bufferTX
                            *COM*:00000000000007d0 bufferRX
                            *COM*:0000000000000004 bufferRXidx
                            *COM*:0000000000000004 bufferTXidx
                            *COM*:0000000000000004 dat_lengthRX
                            *COM*:0000000000000004 dat_lengthTX
                            *COM*:0000000000000004 set_macTaskHandle
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfNvuUD.s:35     .rodata.table_crc_hi:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfNvuUD.s:38     .rodata.table_crc_hi:0000000000000000 table_crc_hi
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfNvuUD.s:296    .rodata.table_crc_lo:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfNvuUD.s:299    .rodata.table_crc_lo:0000000000000000 table_crc_lo
                            *COM*:0000000000000004 fd
                            *COM*:0000000000000201 received_string
                            *COM*:0000000000000004 rx_length
                            *COM*:0000000000000014 input_Register
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfNvuUD.s:561    .rodata:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfNvuUD.s:569    .rodata.xMotorCommand:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfNvuUD.s:572    .rodata.xMotorCommand:0000000000000000 xMotorCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfNvuUD.s:1407   .text.prvMotorCommand:0000000000000000 prvMotorCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfNvuUD.s:586    .rodata.xTaskStatsCommand:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfNvuUD.s:589    .rodata.xTaskStatsCommand:0000000000000000 xTaskStatsCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfNvuUD.s:2063   .text.prvTaskStatsCommand:0000000000000000 prvTaskStatsCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfNvuUD.s:596    .data.xDelay:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfNvuUD.s:599    .data.xDelay:0000000000000000 xDelay
                            *COM*:000000000000001c telegramS
                            *COM*:000000000000001c telegramR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfNvuUD.s:637    .text.handleVariable_set:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfNvuUD.s:642    .text.handleVariable_set:0000000000000000 handleVariable_set
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfNvuUD.s:1041   .text.handleVariable_set:000000000000027c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfNvuUD.s:1066   .text.handleVariable_get:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfNvuUD.s:1071   .text.handleVariable_get:0000000000000000 handleVariable_get
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfNvuUD.s:1349   .text.handleVariable_get:00000000000001c0 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfNvuUD.s:1402   .text.prvMotorCommand:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfNvuUD.s:1800   .text.prvMotorCommand:0000000000000290 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfNvuUD.s:1819   .text.prvMotorCommand:00000000000002d4 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfNvuUD.s:2031   .text.prvMotorCommand:0000000000000434 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfNvuUD.s:2058   .text.prvTaskStatsCommand:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccfNvuUD.s:2203   .text.prvTaskStatsCommand:00000000000000e4 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
strncmp
atoi
sprintf
xQueueGenericSend
xQueueGenericReceive
FreeRTOS_CLIGetParameter
memcpy
strcpy
vTaskList
vTaskDelete
xTaskGenericCreate
motorHeartBeat_task
