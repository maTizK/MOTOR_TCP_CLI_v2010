   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"tcpCLI.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	xSemaphoreDMASPI,4,4
  20              		.section	.bss.xHigherPriorityTaskWoken,"aw",%nobits
  21              		.align	2
  24              	xHigherPriorityTaskWoken:
  25 0000 00000000 		.space	4
  26              		.comm	xSmphrUSART,4,4
  27              		.comm	motorHeartBeatHandle,4,4
  28              		.comm	motorHBHandle,4,4
  29              		.comm	QSpd_handle,4,4
  30              		.comm	QStatus_handle,4,4
  31              		.comm	socket_0,4,4
  32              		.comm	bufferTX,2000,4
  33              		.comm	bufferRX,2000,4
  34              		.comm	bufferRXidx,4,4
  35              		.comm	bufferTXidx,4,4
  36              		.comm	dat_lengthRX,4,4
  37              		.comm	dat_lengthTX,4,4
  38              		.comm	set_macTaskHandle,4,4
  39              		.section	.rodata
  40              		.align	2
  41              	.LC0:
  42 0000 6D6F746F 		.ascii	"motor\000"
  42      7200
  43 0006 0000     		.align	2
  44              	.LC1:
  45 0008 6D6F746F 		.ascii	"motor  [options]\302\240[parameters]\302\240- Type "
  45      7220205B 
  45      6F707469 
  45      6F6E735D 
  45      C2A05B70 
  46 002f 6D6F746F 		.ascii	"motor help for more help\015\012\012\000\000"
  46      72206865 
  46      6C702066 
  46      6F72206D 
  46      6F726520 
  47              		.section	.rodata.xMotorCommand,"a",%progbits
  48              		.align	2
  51              	xMotorCommand:
  52 0000 00000000 		.word	.LC0
  53 0004 08000000 		.word	.LC1
  54 0008 00000000 		.word	prvMotorCommand
  55 000c FF       		.byte	-1
  56 000d 000000   		.space	3
  57              		.section	.rodata
  58              		.align	2
  59              	.LC2:
  60 004c 7461736B 		.ascii	"task\000"
  60      00
  61 0051 000000   		.align	2
  62              	.LC3:
  63 0054 7461736B 		.ascii	"task - return tasks list\015\012\012\000\000"
  63      202D2072 
  63      65747572 
  63      6E207461 
  63      736B7320 
  64              		.section	.rodata.xTaskStatsCommand,"a",%progbits
  65              		.align	2
  68              	xTaskStatsCommand:
  69 0000 4C000000 		.word	.LC2
  70 0004 54000000 		.word	.LC3
  71 0008 00000000 		.word	prvTaskStatsCommand
  72 000c 00       		.byte	0
  73 000d 000000   		.space	3
  74              		.section	.data.xDelay,"aw",%progbits
  75              		.align	2
  78              	xDelay:
  79 0000 FFFFFFFF 		.word	-1
  80              		.comm	telegram,28,4
  81              		.section	.rodata
  82 0071 000000   		.align	2
  83              	.LC4:
  84 0074 73706565 		.ascii	"speed\000"
  84      6400
  85 007a 0000     		.align	2
  86              	.LC5:
  87 007c 4572726F 		.ascii	"Error: speed is out of range [1,100]p : %d\012\012\000"
  87      723A2073 
  87      70656564 
  87      20697320 
  87      6F757420 
  88 00a9 00       		.ascii	"\000"
  89 00aa 0000     		.align	2
  90              	.LC6:
  91 00ac 53706565 		.ascii	"Speed succsesfully set.\012\012\000"
  91      64207375 
  91      63637365 
  91      7366756C 
  91      6C792073 
  92 00c6 0000     		.align	2
  93              	.LC7:
  94 00c8 4D4F4442 		.ascii	"MODBUS ERROR !!!.\012\012\000"
  94      55532045 
  94      52524F52 
  94      20212121 
  94      2E0A0A00 
  95              		.align	2
  96              	.LC8:
  97 00dc 4572726F 		.ascii	"Error recieving response!\012\012\000"
  97      72207265 
  97      63696576 
  97      696E6720 
  97      72657370 
  98              		.align	2
  99              	.LC9:
 100 00f8 4572726F 		.ascii	"Error sending Queue!\012\012\000"
 100      72207365 
 100      6E64696E 
 100      67205175 
 100      65756521 
 101 010f 00       		.align	2
 102              	.LC10:
 103 0110 75707261 		.ascii	"upramp\000"
 103      6D7000
 104 0117 00       		.align	2
 105              	.LC11:
 106 0118 4572726F 		.ascii	"Error: speed is out of range [15,300]p : %d\012\012"
 106      723A2073 
 106      70656564 
 106      20697320 
 106      6F757420 
 107 0145 0000     		.ascii	"\000\000"
 108 0147 00       		.align	2
 109              	.LC12:
 110 0148 55702072 		.ascii	"Up ramp succsesfully set.\012\012\000"
 110      616D7020 
 110      73756363 
 110      73657366 
 110      756C6C79 
 111              		.align	2
 112              	.LC13:
 113 0164 646F776E 		.ascii	"downramp\000"
 113      72616D70 
 113      00
 114 016d 000000   		.align	2
 115              	.LC14:
 116 0170 45727272 		.ascii	"Errror : %d\012\012\000"
 116      6F72203A 
 116      2025640A 
 116      0A00
 117 017e 0000     		.align	2
 118              	.LC15:
 119 0180 0000     		.ascii	"\000\000"
 120              		.section	.text.handleVariable_set,"ax",%progbits
 121              		.align	2
 122              		.global	handleVariable_set
 123              		.thumb
 124              		.thumb_func
 126              	handleVariable_set:
 127              	.LFB110:
 128              		.file 1 "App/STM32F4-Discovery/tcpCLI.c"
   1:App/STM32F4-Discovery/tcpCLI.c **** #include "tcpCLI.h"
   2:App/STM32F4-Discovery/tcpCLI.c **** 
   3:App/STM32F4-Discovery/tcpCLI.c **** 
   4:App/STM32F4-Discovery/tcpCLI.c **** static 	portTickType xDelay = portMAX_DELAY;//3000 / portTICK_RATE_MS;
   5:App/STM32F4-Discovery/tcpCLI.c **** 
   6:App/STM32F4-Discovery/tcpCLI.c **** QueueTelegram telegram; 
   7:App/STM32F4-Discovery/tcpCLI.c **** 
   8:App/STM32F4-Discovery/tcpCLI.c **** /* default telegram */
   9:App/STM32F4-Discovery/tcpCLI.c **** /*
  10:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[0] = 1000;
  11:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[1] = 0;	
  12:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[2] = 2250;
  13:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[3] = 10;	
  14:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[4] = 10;	
  15:App/STM32F4-Discovery/tcpCLI.c **** telegram.size = 5;
  16:App/STM32F4-Discovery/tcpCLI.c **** telegram.Qcmd = SETDATA;		
  17:App/STM32F4-Discovery/tcpCLI.c **** */
  18:App/STM32F4-Discovery/tcpCLI.c **** 
  19:App/STM32F4-Discovery/tcpCLI.c **** 
  20:App/STM32F4-Discovery/tcpCLI.c **** 
  21:App/STM32F4-Discovery/tcpCLI.c **** int handleVariable_set (	
  22:App/STM32F4-Discovery/tcpCLI.c **** 				int8_t *pcWriteBuffer, 
  23:App/STM32F4-Discovery/tcpCLI.c **** 				size_t xWriteBufferLen,
  24:App/STM32F4-Discovery/tcpCLI.c **** 				uint8_t * Param, 
  25:App/STM32F4-Discovery/tcpCLI.c **** 				int xParamLength,
  26:App/STM32F4-Discovery/tcpCLI.c **** 				xQueueHandle Qhandle,
  27:App/STM32F4-Discovery/tcpCLI.c **** 				uint8_t * Value,
  28:App/STM32F4-Discovery/tcpCLI.c **** 				int xValueLength,
  29:App/STM32F4-Discovery/tcpCLI.c **** 				int socket )
  30:App/STM32F4-Discovery/tcpCLI.c **** {
 129              		.loc 1 30 0
 130              		.cfi_startproc
 131              		@ args = 16, pretend = 0, frame = 32
 132              		@ frame_needed = 1, uses_anonymous_args = 0
 133 0000 B0B5     		push	{r4, r5, r7, lr}
 134              	.LCFI0:
 135              		.cfi_def_cfa_offset 16
 136              		.cfi_offset 4, -16
 137              		.cfi_offset 5, -12
 138              		.cfi_offset 7, -8
 139              		.cfi_offset 14, -4
 140 0002 88B0     		sub	sp, sp, #32
 141              	.LCFI1:
 142              		.cfi_def_cfa_offset 48
 143 0004 00AF     		add	r7, sp, #0
 144              	.LCFI2:
 145              		.cfi_def_cfa_register 7
 146 0006 F860     		str	r0, [r7, #12]
 147 0008 B960     		str	r1, [r7, #8]
 148 000a 7A60     		str	r2, [r7, #4]
 149 000c 3B60     		str	r3, [r7]
  31:App/STM32F4-Discovery/tcpCLI.c **** 
  32:App/STM32F4-Discovery/tcpCLI.c **** 
  33:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
  34:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER speed [value]
  35:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
  36:App/STM32F4-Discovery/tcpCLI.c **** 
  37:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "speed", 5))
 150              		.loc 1 37 0
 151 000e 7868     		ldr	r0, [r7, #4]
 152 0010 9349     		ldr	r1, .L19
 153 0012 0522     		movs	r2, #5
 154 0014 FFF7FEFF 		bl	strncmp
 155 0018 0346     		mov	r3, r0
 156 001a 002B     		cmp	r3, #0
 157 001c 40F0A280 		bne	.L2
 158              	.LBB2:
  38:App/STM32F4-Discovery/tcpCLI.c **** 	{	
  39:App/STM32F4-Discovery/tcpCLI.c **** 	
  40:App/STM32F4-Discovery/tcpCLI.c **** 	
  41:App/STM32F4-Discovery/tcpCLI.c **** 		
  42:App/STM32F4-Discovery/tcpCLI.c **** 		// now convert parameter to proper value and check if it is in range 
  43:App/STM32F4-Discovery/tcpCLI.c ****         	Value[xValueLength] = '\0'; 	
 159              		.loc 1 43 0
 160 0020 BB6B     		ldr	r3, [r7, #56]
 161 0022 7A6B     		ldr	r2, [r7, #52]
 162 0024 1344     		add	r3, r3, r2
 163 0026 0022     		movs	r2, #0
 164 0028 1A70     		strb	r2, [r3]
  44:App/STM32F4-Discovery/tcpCLI.c **** 		uint16_t s1 = atoi ( Value ); 
 165              		.loc 1 44 0
 166 002a 786B     		ldr	r0, [r7, #52]
 167 002c FFF7FEFF 		bl	atoi
 168 0030 0346     		mov	r3, r0
 169 0032 FB83     		strh	r3, [r7, #30]	@ movhi
  45:App/STM32F4-Discovery/tcpCLI.c **** 		// if speed is in range
  46:App/STM32F4-Discovery/tcpCLI.c **** 		if(s1 < 1 ||  s1 > 100 )
 170              		.loc 1 46 0
 171 0034 FB8B     		ldrh	r3, [r7, #30]
 172 0036 002B     		cmp	r3, #0
 173 0038 02D0     		beq	.L3
 174              		.loc 1 46 0 is_stmt 0 discriminator 1
 175 003a FB8B     		ldrh	r3, [r7, #30]
 176 003c 642B     		cmp	r3, #100
 177 003e 07D9     		bls	.L4
 178              	.L3:
  47:App/STM32F4-Discovery/tcpCLI.c **** 		{
  48:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP
  49:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error: speed is out of range [1,100]p : %d\n\n\0", s1);
 179              		.loc 1 49 0 is_stmt 1
 180 0040 FB8B     		ldrh	r3, [r7, #30]
 181 0042 F868     		ldr	r0, [r7, #12]
 182 0044 8749     		ldr	r1, .L19+4
 183 0046 1A46     		mov	r2, r3
 184 0048 FFF7FEFF 		bl	sprintf
  50:App/STM32F4-Discovery/tcpCLI.c **** 		//	pcWriteBuffer[11+ 3] = "\0"; 
  51:App/STM32F4-Discovery/tcpCLI.c **** 			
  52:App/STM32F4-Discovery/tcpCLI.c **** 			////send( socket_0, buf, 11+3, 0);
  53:App/STM32F4-Discovery/tcpCLI.c **** 
  54:App/STM32F4-Discovery/tcpCLI.c **** 	       		return pdFALSE; 	
 185              		.loc 1 54 0
 186 004c 0023     		movs	r3, #0
 187 004e B8E1     		b	.L5
 188              	.L4:
  55:App/STM32F4-Discovery/tcpCLI.c **** 		}	
  56:App/STM32F4-Discovery/tcpCLI.c **** 	
  57:App/STM32F4-Discovery/tcpCLI.c **** 		// convert to correct value ( * 100 ) 
  58:App/STM32F4-Discovery/tcpCLI.c **** 		s1 *= 100; 
 189              		.loc 1 58 0
 190 0050 FB8B     		ldrh	r3, [r7, #30]	@ movhi
 191 0052 1A46     		mov	r2, r3	@ movhi
 192 0054 9200     		lsls	r2, r2, #2
 193 0056 1344     		add	r3, r3, r2
 194 0058 1A46     		mov	r2, r3	@ movhi
 195 005a 9100     		lsls	r1, r2, #2
 196 005c 1A46     		mov	r2, r3	@ movhi
 197 005e 0B46     		mov	r3, r1	@ movhi
 198 0060 1344     		add	r3, r3, r2
 199 0062 9B00     		lsls	r3, r3, #2
 200 0064 FB83     		strh	r3, [r7, #30]	@ movhi
  59:App/STM32F4-Discovery/tcpCLI.c **** 		
  60:App/STM32F4-Discovery/tcpCLI.c **** 		// test i
  61:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.data[1] = 0;	
 201              		.loc 1 61 0
 202 0066 804B     		ldr	r3, .L19+8
 203 0068 0022     		movs	r2, #0
 204 006a 5A81     		strh	r2, [r3, #10]	@ movhi
  62:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.data[2] = 2250;
 205              		.loc 1 62 0
 206 006c 7E4B     		ldr	r3, .L19+8
 207 006e 40F6CA02 		movw	r2, #2250
 208 0072 9A81     		strh	r2, [r3, #12]	@ movhi
  63:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.data[3] = 10;	
 209              		.loc 1 63 0
 210 0074 7C4B     		ldr	r3, .L19+8
 211 0076 0A22     		movs	r2, #10
 212 0078 DA81     		strh	r2, [r3, #14]	@ movhi
  64:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.data[4] = 10;	
 213              		.loc 1 64 0
 214 007a 7B4B     		ldr	r3, .L19+8
 215 007c 0A22     		movs	r2, #10
 216 007e 1A82     		strh	r2, [r3, #16]	@ movhi
  65:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.size = 5;
 217              		.loc 1 65 0
 218 0080 794B     		ldr	r3, .L19+8
 219 0082 0522     		movs	r2, #5
 220 0084 5A60     		str	r2, [r3, #4]
  66:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.Qcmd = SETDATA;	
 221              		.loc 1 66 0
 222 0086 784B     		ldr	r3, .L19+8
 223 0088 0022     		movs	r2, #0
 224 008a 1A70     		strb	r2, [r3]
  67:App/STM32F4-Discovery/tcpCLI.c **** 		// test /
  68:App/STM32F4-Discovery/tcpCLI.c **** 		// setup telegram 
  69:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.Qcmd = SETDATA;
 225              		.loc 1 69 0
 226 008c 764B     		ldr	r3, .L19+8
 227 008e 0022     		movs	r2, #0
 228 0090 1A70     		strb	r2, [r3]
  70:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.size = 5;
 229              		.loc 1 70 0
 230 0092 754B     		ldr	r3, .L19+8
 231 0094 0522     		movs	r2, #5
 232 0096 5A60     		str	r2, [r3, #4]
  71:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.data[0] = s1;
 233              		.loc 1 71 0
 234 0098 734B     		ldr	r3, .L19+8
 235 009a FA8B     		ldrh	r2, [r7, #30]	@ movhi
 236 009c 1A81     		strh	r2, [r3, #8]	@ movhi
  72:App/STM32F4-Discovery/tcpCLI.c **** 		
  73:App/STM32F4-Discovery/tcpCLI.c **** 	
  74:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
  75:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegram, xDelay ) == pdPASS )
 237              		.loc 1 75 0
 238 009e 734B     		ldr	r3, .L19+12
 239 00a0 1A68     		ldr	r2, [r3]
 240 00a2 734B     		ldr	r3, .L19+16
 241 00a4 1B68     		ldr	r3, [r3]
 242 00a6 1046     		mov	r0, r2
 243 00a8 6F49     		ldr	r1, .L19+8
 244 00aa 1A46     		mov	r2, r3
 245 00ac 0023     		movs	r3, #0
 246 00ae FFF7FEFF 		bl	xQueueGenericSend
 247 00b2 0346     		mov	r3, r0
 248 00b4 012B     		cmp	r3, #1
 249 00b6 42D1     		bne	.L6
  76:App/STM32F4-Discovery/tcpCLI.c **** 		{	
  77:App/STM32F4-Discovery/tcpCLI.c **** 					
  78:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegram, xDelay)== pdPASS)
 250              		.loc 1 78 0
 251 00b8 6C4B     		ldr	r3, .L19+12
 252 00ba 1A68     		ldr	r2, [r3]
 253 00bc 6C4B     		ldr	r3, .L19+16
 254 00be 1B68     		ldr	r3, [r3]
 255 00c0 1046     		mov	r0, r2
 256 00c2 6949     		ldr	r1, .L19+8
 257 00c4 1A46     		mov	r2, r3
 258 00c6 0023     		movs	r3, #0
 259 00c8 FFF7FEFF 		bl	xQueueGenericReceive
 260 00cc 0346     		mov	r3, r0
 261 00ce 012B     		cmp	r3, #1
 262 00d0 24D1     		bne	.L7
  79:App/STM32F4-Discovery/tcpCLI.c **** 			{
  80:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegram.Qcmd == SUCCSESS) 
 263              		.loc 1 80 0
 264 00d2 654B     		ldr	r3, .L19+8
 265 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 266 00d6 062B     		cmp	r3, #6
 267 00d8 11D1     		bne	.L8
  81:App/STM32F4-Discovery/tcpCLI.c **** 				{	
  82:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed succsesfully set.\n\n");
 268              		.loc 1 82 0
 269 00da FA68     		ldr	r2, [r7, #12]
 270 00dc 654B     		ldr	r3, .L19+20
 271 00de 1546     		mov	r5, r2
 272 00e0 1C46     		mov	r4, r3
 273 00e2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 274 00e4 2860     		str	r0, [r5]	@ unaligned
 275 00e6 6960     		str	r1, [r5, #4]	@ unaligned
 276 00e8 AA60     		str	r2, [r5, #8]	@ unaligned
 277 00ea EB60     		str	r3, [r5, #12]	@ unaligned
 278 00ec 03CC     		ldmia	r4!, {r0, r1}
 279 00ee 2861     		str	r0, [r5, #16]	@ unaligned
 280 00f0 6961     		str	r1, [r5, #20]	@ unaligned
 281 00f2 2388     		ldrh	r3, [r4]	@ unaligned
 282 00f4 2B83     		strh	r3, [r5, #24]	@ unaligned
  83:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 25; 	
 283              		.loc 1 83 0
 284 00f6 1923     		movs	r3, #25
 285 00f8 BB61     		str	r3, [r7, #24]
  84:App/STM32F4-Discovery/tcpCLI.c **** 				//	//send( socket, buf, len, 0);
  85:App/STM32F4-Discovery/tcpCLI.c **** 
  86:App/STM32F4-Discovery/tcpCLI.c **** 
  87:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 286              		.loc 1 87 0
 287 00fa 0123     		movs	r3, #1
 288 00fc 61E1     		b	.L5
 289              	.L8:
  88:App/STM32F4-Discovery/tcpCLI.c **** 
  89:App/STM32F4-Discovery/tcpCLI.c **** 				}
  90:App/STM32F4-Discovery/tcpCLI.c **** 				else
  91:App/STM32F4-Discovery/tcpCLI.c **** 				{
  92:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 290              		.loc 1 92 0
 291 00fe FA68     		ldr	r2, [r7, #12]
 292 0100 5D4B     		ldr	r3, .L19+24
 293 0102 1546     		mov	r5, r2
 294 0104 1C46     		mov	r4, r3
 295 0106 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 296 0108 2860     		str	r0, [r5]	@ unaligned
 297 010a 6960     		str	r1, [r5, #4]	@ unaligned
 298 010c AA60     		str	r2, [r5, #8]	@ unaligned
 299 010e EB60     		str	r3, [r5, #12]	@ unaligned
 300 0110 2068     		ldr	r0, [r4]	@ unaligned
 301 0112 2861     		str	r0, [r5, #16]	@ unaligned
  93:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 302              		.loc 1 93 0
 303 0114 1323     		movs	r3, #19
 304 0116 BB61     		str	r3, [r7, #24]
  94:App/STM32F4-Discovery/tcpCLI.c **** //					//send( socket, buf, len, 0);
  95:App/STM32F4-Discovery/tcpCLI.c **** 
  96:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 305              		.loc 1 96 0
 306 0118 0023     		movs	r3, #0
 307 011a 52E1     		b	.L5
 308              	.L7:
  97:App/STM32F4-Discovery/tcpCLI.c **** 
  98:App/STM32F4-Discovery/tcpCLI.c **** 
  99:App/STM32F4-Discovery/tcpCLI.c **** 				}
 100:App/STM32F4-Discovery/tcpCLI.c **** 						
 101:App/STM32F4-Discovery/tcpCLI.c **** 			}
 102:App/STM32F4-Discovery/tcpCLI.c **** 			else
 103:App/STM32F4-Discovery/tcpCLI.c **** 			{
 104:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 105:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 106:App/STM32F4-Discovery/tcpCLI.c **** 		
 107:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 309              		.loc 1 107 0
 310 011c FA68     		ldr	r2, [r7, #12]
 311 011e 574B     		ldr	r3, .L19+28
 312 0120 1546     		mov	r5, r2
 313 0122 1C46     		mov	r4, r3
 314 0124 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 315 0126 2860     		str	r0, [r5]	@ unaligned
 316 0128 6960     		str	r1, [r5, #4]	@ unaligned
 317 012a AA60     		str	r2, [r5, #8]	@ unaligned
 318 012c EB60     		str	r3, [r5, #12]	@ unaligned
 319 012e 07CC     		ldmia	r4!, {r0, r1, r2}
 320 0130 2861     		str	r0, [r5, #16]	@ unaligned
 321 0132 6961     		str	r1, [r5, #20]	@ unaligned
 322 0134 AA61     		str	r2, [r5, #24]	@ unaligned
 108:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 323              		.loc 1 108 0
 324 0136 1B23     		movs	r3, #27
 325 0138 BB61     		str	r3, [r7, #24]
 109:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 110:App/STM32F4-Discovery/tcpCLI.c **** 
 111:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 326              		.loc 1 111 0
 327 013a 0023     		movs	r3, #0
 328 013c 41E1     		b	.L5
 329              	.L6:
 112:App/STM32F4-Discovery/tcpCLI.c **** 			}
 113:App/STM32F4-Discovery/tcpCLI.c **** 
 114:App/STM32F4-Discovery/tcpCLI.c **** 
 115:App/STM32F4-Discovery/tcpCLI.c **** 		}
 116:App/STM32F4-Discovery/tcpCLI.c **** 		else
 117:App/STM32F4-Discovery/tcpCLI.c **** 		{
 118:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 119:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 120:App/STM32F4-Discovery/tcpCLI.c **** 		
 121:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 330              		.loc 1 121 0
 331 013e FA68     		ldr	r2, [r7, #12]
 332 0140 4F4B     		ldr	r3, .L19+32
 333 0142 1446     		mov	r4, r2
 334 0144 1D46     		mov	r5, r3
 335 0146 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 336 0148 2060     		str	r0, [r4]	@ unaligned
 337 014a 6160     		str	r1, [r4, #4]	@ unaligned
 338 014c A260     		str	r2, [r4, #8]	@ unaligned
 339 014e E360     		str	r3, [r4, #12]	@ unaligned
 340 0150 2868     		ldr	r0, [r5]	@ unaligned
 341 0152 2061     		str	r0, [r4, #16]	@ unaligned
 342 0154 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 343 0156 AB79     		ldrb	r3, [r5, #6]
 344 0158 A282     		strh	r2, [r4, #20]	@ unaligned
 345 015a A375     		strb	r3, [r4, #22]
 122:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 346              		.loc 1 122 0
 347 015c 1623     		movs	r3, #22
 348 015e BB61     		str	r3, [r7, #24]
 123:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 124:App/STM32F4-Discovery/tcpCLI.c **** 
 125:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 349              		.loc 1 125 0
 350 0160 0023     		movs	r3, #0
 351 0162 2EE1     		b	.L5
 352              	.L2:
 353              	.LBE2:
 126:App/STM32F4-Discovery/tcpCLI.c **** 		}
 127:App/STM32F4-Discovery/tcpCLI.c **** 	}
 128:App/STM32F4-Discovery/tcpCLI.c **** 	
 129:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 130:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER upramp [value]
 131:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 132:App/STM32F4-Discovery/tcpCLI.c **** 
 133:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "upramp", 6))
 354              		.loc 1 133 0
 355 0164 7868     		ldr	r0, [r7, #4]
 356 0166 4749     		ldr	r1, .L19+36
 357 0168 0622     		movs	r2, #6
 358 016a FFF7FEFF 		bl	strncmp
 359 016e 0346     		mov	r3, r0
 360 0170 002B     		cmp	r3, #0
 361 0172 40F08D80 		bne	.L9
 362              	.LBB3:
 134:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 135:App/STM32F4-Discovery/tcpCLI.c **** 	
 136:App/STM32F4-Discovery/tcpCLI.c **** 	
 137:App/STM32F4-Discovery/tcpCLI.c **** 		
 138:App/STM32F4-Discovery/tcpCLI.c **** 		// now convert parameter to proper value and check if it is in range 
 139:App/STM32F4-Discovery/tcpCLI.c ****         	Value[xValueLength] = '\0'; 	
 363              		.loc 1 139 0
 364 0176 BB6B     		ldr	r3, [r7, #56]
 365 0178 7A6B     		ldr	r2, [r7, #52]
 366 017a 1344     		add	r3, r3, r2
 367 017c 0022     		movs	r2, #0
 368 017e 1A70     		strb	r2, [r3]
 140:App/STM32F4-Discovery/tcpCLI.c **** 		uint16_t s1 = atoi ( Value ); 
 369              		.loc 1 140 0
 370 0180 786B     		ldr	r0, [r7, #52]
 371 0182 FFF7FEFF 		bl	atoi
 372 0186 0346     		mov	r3, r0
 373 0188 FB82     		strh	r3, [r7, #22]	@ movhi
 141:App/STM32F4-Discovery/tcpCLI.c **** 		// if speed is in range
 142:App/STM32F4-Discovery/tcpCLI.c **** 		if(s1 < 15 ||  s1 > 300 )
 374              		.loc 1 142 0
 375 018a FB8A     		ldrh	r3, [r7, #22]
 376 018c 0E2B     		cmp	r3, #14
 377 018e 03D9     		bls	.L10
 378              		.loc 1 142 0 is_stmt 0 discriminator 1
 379 0190 FB8A     		ldrh	r3, [r7, #22]
 380 0192 B3F5967F 		cmp	r3, #300
 381 0196 09D9     		bls	.L11
 382              	.L10:
 143:App/STM32F4-Discovery/tcpCLI.c **** 		{
 144:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP
 145:App/STM32F4-Discovery/tcpCLI.c **** 			//
 146:App/STM32F4-Discovery/tcpCLI.c **** 			xWriteBufferLen = 100; 
 383              		.loc 1 146 0 is_stmt 1
 384 0198 6423     		movs	r3, #100
 385 019a BB61     		str	r3, [r7, #24]
 147:App/STM32F4-Discovery/tcpCLI.c **** 		//	uint8_t buf [len]; //= "Error: speed is out of range!\n\n");
 148:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error: speed is out of range [15,300]p : %d\n\n\0", s1);
 386              		.loc 1 148 0
 387 019c FB8A     		ldrh	r3, [r7, #22]
 388 019e F868     		ldr	r0, [r7, #12]
 389 01a0 3949     		ldr	r1, .L19+40
 390 01a2 1A46     		mov	r2, r3
 391 01a4 FFF7FEFF 		bl	sprintf
 149:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket_0, buf, len, 0);
 150:App/STM32F4-Discovery/tcpCLI.c **** 
 151:App/STM32F4-Discovery/tcpCLI.c **** 	       		return pdFALSE; 	
 392              		.loc 1 151 0
 393 01a8 0023     		movs	r3, #0
 394 01aa 0AE1     		b	.L5
 395              	.L11:
 152:App/STM32F4-Discovery/tcpCLI.c **** 		}	
 153:App/STM32F4-Discovery/tcpCLI.c **** 	
 154:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.data[3] = s1; 
 396              		.loc 1 154 0
 397 01ac 2E4B     		ldr	r3, .L19+8
 398 01ae FA8A     		ldrh	r2, [r7, #22]	@ movhi
 399 01b0 DA81     		strh	r2, [r3, #14]	@ movhi
 155:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.size = 5; 
 400              		.loc 1 155 0
 401 01b2 2D4B     		ldr	r3, .L19+8
 402 01b4 0522     		movs	r2, #5
 403 01b6 5A60     		str	r2, [r3, #4]
 156:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.Qcmd = SETDATA;
 404              		.loc 1 156 0
 405 01b8 2B4B     		ldr	r3, .L19+8
 406 01ba 0022     		movs	r2, #0
 407 01bc 1A70     		strb	r2, [r3]
 157:App/STM32F4-Discovery/tcpCLI.c **** 		
 158:App/STM32F4-Discovery/tcpCLI.c **** 	
 159:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 160:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegram, xDelay ) == pdPASS )
 408              		.loc 1 160 0
 409 01be 2B4B     		ldr	r3, .L19+12
 410 01c0 1A68     		ldr	r2, [r3]
 411 01c2 2B4B     		ldr	r3, .L19+16
 412 01c4 1B68     		ldr	r3, [r3]
 413 01c6 1046     		mov	r0, r2
 414 01c8 2749     		ldr	r1, .L19+8
 415 01ca 1A46     		mov	r2, r3
 416 01cc 0023     		movs	r3, #0
 417 01ce FFF7FEFF 		bl	xQueueGenericSend
 418 01d2 0346     		mov	r3, r0
 419 01d4 012B     		cmp	r3, #1
 420 01d6 30D1     		bne	.L12
 161:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 162:App/STM32F4-Discovery/tcpCLI.c **** 					
 163:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegram, xDelay))
 421              		.loc 1 163 0
 422 01d8 244B     		ldr	r3, .L19+12
 423 01da 1A68     		ldr	r2, [r3]
 424 01dc 244B     		ldr	r3, .L19+16
 425 01de 1B68     		ldr	r3, [r3]
 426 01e0 1046     		mov	r0, r2
 427 01e2 2149     		ldr	r1, .L19+8
 428 01e4 1A46     		mov	r2, r3
 429 01e6 0023     		movs	r3, #0
 430 01e8 FFF7FEFF 		bl	xQueueGenericReceive
 431 01ec 0346     		mov	r3, r0
 432 01ee 002B     		cmp	r3, #0
 433 01f0 4ED0     		beq	.L9
 164:App/STM32F4-Discovery/tcpCLI.c **** 			{
 165:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegram.Qcmd == SUCCSESS) 
 434              		.loc 1 165 0
 435 01f2 1D4B     		ldr	r3, .L19+8
 436 01f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 437 01f6 062B     		cmp	r3, #6
 438 01f8 10D1     		bne	.L13
 166:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 167:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Up ramp succsesfully set.\n\n");
 439              		.loc 1 167 0
 440 01fa FA68     		ldr	r2, [r7, #12]
 441 01fc 234B     		ldr	r3, .L19+44
 442 01fe 1546     		mov	r5, r2
 443 0200 1C46     		mov	r4, r3
 444 0202 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 445 0204 2860     		str	r0, [r5]	@ unaligned
 446 0206 6960     		str	r1, [r5, #4]	@ unaligned
 447 0208 AA60     		str	r2, [r5, #8]	@ unaligned
 448 020a EB60     		str	r3, [r5, #12]	@ unaligned
 449 020c 07CC     		ldmia	r4!, {r0, r1, r2}
 450 020e 2861     		str	r0, [r5, #16]	@ unaligned
 451 0210 6961     		str	r1, [r5, #20]	@ unaligned
 452 0212 AA61     		str	r2, [r5, #24]	@ unaligned
 168:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 27; 	
 453              		.loc 1 168 0
 454 0214 1B23     		movs	r3, #27
 455 0216 BB61     		str	r3, [r7, #24]
 169:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 170:App/STM32F4-Discovery/tcpCLI.c **** 
 171:App/STM32F4-Discovery/tcpCLI.c **** 
 172:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 456              		.loc 1 172 0
 457 0218 0123     		movs	r3, #1
 458 021a D2E0     		b	.L5
 459              	.L13:
 173:App/STM32F4-Discovery/tcpCLI.c **** 
 174:App/STM32F4-Discovery/tcpCLI.c **** 				}
 175:App/STM32F4-Discovery/tcpCLI.c **** 				else
 176:App/STM32F4-Discovery/tcpCLI.c **** 				{
 177:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 460              		.loc 1 177 0
 461 021c FA68     		ldr	r2, [r7, #12]
 462 021e 164B     		ldr	r3, .L19+24
 463 0220 1546     		mov	r5, r2
 464 0222 1C46     		mov	r4, r3
 465 0224 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 466 0226 2860     		str	r0, [r5]	@ unaligned
 467 0228 6960     		str	r1, [r5, #4]	@ unaligned
 468 022a AA60     		str	r2, [r5, #8]	@ unaligned
 469 022c EB60     		str	r3, [r5, #12]	@ unaligned
 470 022e 2068     		ldr	r0, [r4]	@ unaligned
 471 0230 2861     		str	r0, [r5, #16]	@ unaligned
 178:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 472              		.loc 1 178 0
 473 0232 1323     		movs	r3, #19
 474 0234 BB61     		str	r3, [r7, #24]
 179:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 180:App/STM32F4-Discovery/tcpCLI.c **** 
 181:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 475              		.loc 1 181 0
 476 0236 0023     		movs	r3, #0
 477 0238 C3E0     		b	.L5
 478              	.L12:
 182:App/STM32F4-Discovery/tcpCLI.c **** 
 183:App/STM32F4-Discovery/tcpCLI.c **** 
 184:App/STM32F4-Discovery/tcpCLI.c **** 				}
 185:App/STM32F4-Discovery/tcpCLI.c **** 						
 186:App/STM32F4-Discovery/tcpCLI.c **** 			}
 187:App/STM32F4-Discovery/tcpCLI.c **** 
 188:App/STM32F4-Discovery/tcpCLI.c **** 		}
 189:App/STM32F4-Discovery/tcpCLI.c **** 		else
 190:App/STM32F4-Discovery/tcpCLI.c **** 		{
 191:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 192:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 193:App/STM32F4-Discovery/tcpCLI.c **** 		
 194:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 479              		.loc 1 194 0
 480 023a FA68     		ldr	r2, [r7, #12]
 481 023c 104B     		ldr	r3, .L19+32
 482 023e 1446     		mov	r4, r2
 483 0240 1D46     		mov	r5, r3
 484 0242 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 485 0244 2060     		str	r0, [r4]	@ unaligned
 486 0246 6160     		str	r1, [r4, #4]	@ unaligned
 487 0248 A260     		str	r2, [r4, #8]	@ unaligned
 488 024a E360     		str	r3, [r4, #12]	@ unaligned
 489 024c 2868     		ldr	r0, [r5]	@ unaligned
 490 024e 2061     		str	r0, [r4, #16]	@ unaligned
 491 0250 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 492 0252 AB79     		ldrb	r3, [r5, #6]
 493 0254 A282     		strh	r2, [r4, #20]	@ unaligned
 494 0256 A375     		strb	r3, [r4, #22]
 195:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 495              		.loc 1 195 0
 496 0258 1623     		movs	r3, #22
 497 025a BB61     		str	r3, [r7, #24]
 196:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 197:App/STM32F4-Discovery/tcpCLI.c **** 
 198:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 498              		.loc 1 198 0
 499 025c 0023     		movs	r3, #0
 500 025e B0E0     		b	.L5
 501              	.L20:
 502              		.align	2
 503              	.L19:
 504 0260 74000000 		.word	.LC4
 505 0264 7C000000 		.word	.LC5
 506 0268 00000000 		.word	telegram
 507 026c 00000000 		.word	QSpd_handle
 508 0270 00000000 		.word	xDelay
 509 0274 AC000000 		.word	.LC6
 510 0278 C8000000 		.word	.LC7
 511 027c DC000000 		.word	.LC8
 512 0280 F8000000 		.word	.LC9
 513 0284 10010000 		.word	.LC10
 514 0288 18010000 		.word	.LC11
 515 028c 48010000 		.word	.LC12
 516              	.L9:
 517              	.LBE3:
 199:App/STM32F4-Discovery/tcpCLI.c **** 		}
 200:App/STM32F4-Discovery/tcpCLI.c **** 	}
 201:App/STM32F4-Discovery/tcpCLI.c **** 
 202:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 203:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER downramp [value]
 204:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 205:App/STM32F4-Discovery/tcpCLI.c **** 
 206:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "downramp", 8))
 518              		.loc 1 206 0
 519 0290 7868     		ldr	r0, [r7, #4]
 520 0292 4E49     		ldr	r1, .L21
 521 0294 0822     		movs	r2, #8
 522 0296 FFF7FEFF 		bl	strncmp
 523 029a 0346     		mov	r3, r0
 524 029c 002B     		cmp	r3, #0
 525 029e 40F08A80 		bne	.L14
 526              	.LBB4:
 207:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 208:App/STM32F4-Discovery/tcpCLI.c **** 	
 209:App/STM32F4-Discovery/tcpCLI.c **** 	
 210:App/STM32F4-Discovery/tcpCLI.c **** 		
 211:App/STM32F4-Discovery/tcpCLI.c **** 		// now convert parameter to proper value and check if it is in range 
 212:App/STM32F4-Discovery/tcpCLI.c ****         	Value[xValueLength-2] = '\0'; 	
 527              		.loc 1 212 0
 528 02a2 BB6B     		ldr	r3, [r7, #56]
 529 02a4 023B     		subs	r3, r3, #2
 530 02a6 7A6B     		ldr	r2, [r7, #52]
 531 02a8 1344     		add	r3, r3, r2
 532 02aa 0022     		movs	r2, #0
 533 02ac 1A70     		strb	r2, [r3]
 213:App/STM32F4-Discovery/tcpCLI.c **** 		uint16_t s1 = atoi ( Value ); 
 534              		.loc 1 213 0
 535 02ae 786B     		ldr	r0, [r7, #52]
 536 02b0 FFF7FEFF 		bl	atoi
 537 02b4 0346     		mov	r3, r0
 538 02b6 BB82     		strh	r3, [r7, #20]	@ movhi
 214:App/STM32F4-Discovery/tcpCLI.c **** 		// if speed is in range
 215:App/STM32F4-Discovery/tcpCLI.c **** 		if(s1 < 10 ||  s1 > 100 )
 539              		.loc 1 215 0
 540 02b8 BB8A     		ldrh	r3, [r7, #20]
 541 02ba 092B     		cmp	r3, #9
 542 02bc 02D9     		bls	.L15
 543              		.loc 1 215 0 is_stmt 0 discriminator 1
 544 02be BB8A     		ldrh	r3, [r7, #20]
 545 02c0 642B     		cmp	r3, #100
 546 02c2 12D9     		bls	.L16
 547              	.L15:
 216:App/STM32F4-Discovery/tcpCLI.c **** 		{
 217:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP
 218:App/STM32F4-Discovery/tcpCLI.c **** 			//
 219:App/STM32F4-Discovery/tcpCLI.c **** 			xWriteBufferLen = strlen ( Value ) + 11 ; 
 548              		.loc 1 219 0 is_stmt 1
 549 02c4 786B     		ldr	r0, [r7, #52]
 550 02c6 FFF7FEFF 		bl	strlen
 551 02ca 0346     		mov	r3, r0
 552 02cc 0B33     		adds	r3, r3, #11
 553 02ce BB61     		str	r3, [r7, #24]
 220:App/STM32F4-Discovery/tcpCLI.c **** 			//uint8_t buf [len]; //= "Error: speed is out of range!\n\n");
 221:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Errror : %d\n\n", s1);
 554              		.loc 1 221 0
 555 02d0 BB8A     		ldrh	r3, [r7, #20]
 556 02d2 F868     		ldr	r0, [r7, #12]
 557 02d4 3E49     		ldr	r1, .L21+4
 558 02d6 1A46     		mov	r2, r3
 559 02d8 FFF7FEFF 		bl	sprintf
 222:App/STM32F4-Discovery/tcpCLI.c **** 			pcWriteBuffer[11+ 3] = "\0"; 
 560              		.loc 1 222 0
 561 02dc FB68     		ldr	r3, [r7, #12]
 562 02de 0E33     		adds	r3, r3, #14
 563 02e0 3C4A     		ldr	r2, .L21+8
 564 02e2 D2B2     		uxtb	r2, r2
 565 02e4 1A70     		strb	r2, [r3]
 223:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket_0, buf, len, 0);
 224:App/STM32F4-Discovery/tcpCLI.c **** 
 225:App/STM32F4-Discovery/tcpCLI.c **** 	       		return pdFALSE; 	
 566              		.loc 1 225 0
 567 02e6 0023     		movs	r3, #0
 568 02e8 6BE0     		b	.L5
 569              	.L16:
 226:App/STM32F4-Discovery/tcpCLI.c **** 		}	
 227:App/STM32F4-Discovery/tcpCLI.c **** 	
 228:App/STM32F4-Discovery/tcpCLI.c **** 		// convert to correct value ( * 100 ) 
 229:App/STM32F4-Discovery/tcpCLI.c **** 		s1 *= 100; 
 570              		.loc 1 229 0
 571 02ea BB8A     		ldrh	r3, [r7, #20]	@ movhi
 572 02ec 1A46     		mov	r2, r3	@ movhi
 573 02ee 9200     		lsls	r2, r2, #2
 574 02f0 1344     		add	r3, r3, r2
 575 02f2 1A46     		mov	r2, r3	@ movhi
 576 02f4 9100     		lsls	r1, r2, #2
 577 02f6 1A46     		mov	r2, r3	@ movhi
 578 02f8 0B46     		mov	r3, r1	@ movhi
 579 02fa 1344     		add	r3, r3, r2
 580 02fc 9B00     		lsls	r3, r3, #2
 581 02fe BB82     		strh	r3, [r7, #20]	@ movhi
 230:App/STM32F4-Discovery/tcpCLI.c **** 		
 231:App/STM32F4-Discovery/tcpCLI.c **** 		
 232:App/STM32F4-Discovery/tcpCLI.c **** 		// setup telegram 
 233:App/STM32F4-Discovery/tcpCLI.c **** 		
 234:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.data[0] = s1; 
 582              		.loc 1 234 0
 583 0300 354B     		ldr	r3, .L21+12
 584 0302 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 585 0304 1A81     		strh	r2, [r3, #8]	@ movhi
 235:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.size = 1; 
 586              		.loc 1 235 0
 587 0306 344B     		ldr	r3, .L21+12
 588 0308 0122     		movs	r2, #1
 589 030a 5A60     		str	r2, [r3, #4]
 236:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.Qcmd = SETDATA;
 590              		.loc 1 236 0
 591 030c 324B     		ldr	r3, .L21+12
 592 030e 0022     		movs	r2, #0
 593 0310 1A70     		strb	r2, [r3]
 237:App/STM32F4-Discovery/tcpCLI.c **** 		
 238:App/STM32F4-Discovery/tcpCLI.c **** 	
 239:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 240:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegram, xDelay ) == pdPASS )
 594              		.loc 1 240 0
 595 0312 324B     		ldr	r3, .L21+16
 596 0314 1A68     		ldr	r2, [r3]
 597 0316 324B     		ldr	r3, .L21+20
 598 0318 1B68     		ldr	r3, [r3]
 599 031a 1046     		mov	r0, r2
 600 031c 2E49     		ldr	r1, .L21+12
 601 031e 1A46     		mov	r2, r3
 602 0320 0023     		movs	r3, #0
 603 0322 FFF7FEFF 		bl	xQueueGenericSend
 604 0326 0346     		mov	r3, r0
 605 0328 012B     		cmp	r3, #1
 606 032a 31D1     		bne	.L17
 241:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 242:App/STM32F4-Discovery/tcpCLI.c **** 					
 243:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegram, xDelay))
 607              		.loc 1 243 0
 608 032c 2B4B     		ldr	r3, .L21+16
 609 032e 1A68     		ldr	r2, [r3]
 610 0330 2B4B     		ldr	r3, .L21+20
 611 0332 1B68     		ldr	r3, [r3]
 612 0334 1046     		mov	r0, r2
 613 0336 2849     		ldr	r1, .L21+12
 614 0338 1A46     		mov	r2, r3
 615 033a 0023     		movs	r3, #0
 616 033c FFF7FEFF 		bl	xQueueGenericReceive
 617 0340 0346     		mov	r3, r0
 618 0342 002B     		cmp	r3, #0
 619 0344 37D0     		beq	.L14
 244:App/STM32F4-Discovery/tcpCLI.c **** 			{
 245:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegram.Qcmd == SUCCSESS) 
 620              		.loc 1 245 0
 621 0346 244B     		ldr	r3, .L21+12
 622 0348 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 623 034a 062B     		cmp	r3, #6
 624 034c 11D1     		bne	.L18
 246:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 247:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed succsesfully set.\n\n");
 625              		.loc 1 247 0
 626 034e FA68     		ldr	r2, [r7, #12]
 627 0350 244B     		ldr	r3, .L21+24
 628 0352 1546     		mov	r5, r2
 629 0354 1C46     		mov	r4, r3
 630 0356 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 631 0358 2860     		str	r0, [r5]	@ unaligned
 632 035a 6960     		str	r1, [r5, #4]	@ unaligned
 633 035c AA60     		str	r2, [r5, #8]	@ unaligned
 634 035e EB60     		str	r3, [r5, #12]	@ unaligned
 635 0360 03CC     		ldmia	r4!, {r0, r1}
 636 0362 2861     		str	r0, [r5, #16]	@ unaligned
 637 0364 6961     		str	r1, [r5, #20]	@ unaligned
 638 0366 2388     		ldrh	r3, [r4]	@ unaligned
 639 0368 2B83     		strh	r3, [r5, #24]	@ unaligned
 248:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 25; 	
 640              		.loc 1 248 0
 641 036a 1923     		movs	r3, #25
 642 036c BB61     		str	r3, [r7, #24]
 249:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 250:App/STM32F4-Discovery/tcpCLI.c **** 
 251:App/STM32F4-Discovery/tcpCLI.c **** 
 252:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 643              		.loc 1 252 0
 644 036e 0123     		movs	r3, #1
 645 0370 27E0     		b	.L5
 646              	.L18:
 253:App/STM32F4-Discovery/tcpCLI.c **** 
 254:App/STM32F4-Discovery/tcpCLI.c **** 				}
 255:App/STM32F4-Discovery/tcpCLI.c **** 				else
 256:App/STM32F4-Discovery/tcpCLI.c **** 				{
 257:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 647              		.loc 1 257 0
 648 0372 FA68     		ldr	r2, [r7, #12]
 649 0374 1C4B     		ldr	r3, .L21+28
 650 0376 1546     		mov	r5, r2
 651 0378 1C46     		mov	r4, r3
 652 037a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 653 037c 2860     		str	r0, [r5]	@ unaligned
 654 037e 6960     		str	r1, [r5, #4]	@ unaligned
 655 0380 AA60     		str	r2, [r5, #8]	@ unaligned
 656 0382 EB60     		str	r3, [r5, #12]	@ unaligned
 657 0384 2068     		ldr	r0, [r4]	@ unaligned
 658 0386 2861     		str	r0, [r5, #16]	@ unaligned
 258:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 659              		.loc 1 258 0
 660 0388 1323     		movs	r3, #19
 661 038a BB61     		str	r3, [r7, #24]
 259:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 260:App/STM32F4-Discovery/tcpCLI.c **** 
 261:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 662              		.loc 1 261 0
 663 038c 0023     		movs	r3, #0
 664 038e 18E0     		b	.L5
 665              	.L17:
 262:App/STM32F4-Discovery/tcpCLI.c **** 
 263:App/STM32F4-Discovery/tcpCLI.c **** 
 264:App/STM32F4-Discovery/tcpCLI.c **** 				}
 265:App/STM32F4-Discovery/tcpCLI.c **** 						
 266:App/STM32F4-Discovery/tcpCLI.c **** 			}
 267:App/STM32F4-Discovery/tcpCLI.c **** 
 268:App/STM32F4-Discovery/tcpCLI.c **** 		}
 269:App/STM32F4-Discovery/tcpCLI.c **** 		else
 270:App/STM32F4-Discovery/tcpCLI.c **** 		{
 271:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 272:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 273:App/STM32F4-Discovery/tcpCLI.c **** 		
 274:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 666              		.loc 1 274 0
 667 0390 FA68     		ldr	r2, [r7, #12]
 668 0392 164B     		ldr	r3, .L21+32
 669 0394 1446     		mov	r4, r2
 670 0396 1D46     		mov	r5, r3
 671 0398 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 672 039a 2060     		str	r0, [r4]	@ unaligned
 673 039c 6160     		str	r1, [r4, #4]	@ unaligned
 674 039e A260     		str	r2, [r4, #8]	@ unaligned
 675 03a0 E360     		str	r3, [r4, #12]	@ unaligned
 676 03a2 2868     		ldr	r0, [r5]	@ unaligned
 677 03a4 2061     		str	r0, [r4, #16]	@ unaligned
 678 03a6 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 679 03a8 AB79     		ldrb	r3, [r5, #6]
 680 03aa A282     		strh	r2, [r4, #20]	@ unaligned
 681 03ac A375     		strb	r3, [r4, #22]
 275:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 682              		.loc 1 275 0
 683 03ae 1623     		movs	r3, #22
 684 03b0 BB61     		str	r3, [r7, #24]
 276:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 277:App/STM32F4-Discovery/tcpCLI.c **** 
 278:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 685              		.loc 1 278 0
 686 03b2 0023     		movs	r3, #0
 687 03b4 05E0     		b	.L5
 688              	.L14:
 689              	.LBE4:
 279:App/STM32F4-Discovery/tcpCLI.c **** 		}
 280:App/STM32F4-Discovery/tcpCLI.c **** 	}
 281:App/STM32F4-Discovery/tcpCLI.c **** 
 282:App/STM32F4-Discovery/tcpCLI.c **** 	strcpy(pcWriteBuffer, xMotorCommand.pcHelpString);
 690              		.loc 1 282 0
 691 03b6 0E4B     		ldr	r3, .L21+36
 692 03b8 F868     		ldr	r0, [r7, #12]
 693 03ba 1946     		mov	r1, r3
 694 03bc FFF7FEFF 		bl	strcpy
 283:App/STM32F4-Discovery/tcpCLI.c **** 
 284:App/STM32F4-Discovery/tcpCLI.c **** 			return 0; 
 695              		.loc 1 284 0
 696 03c0 0023     		movs	r3, #0
 697              	.L5:
 285:App/STM32F4-Discovery/tcpCLI.c **** 
 286:App/STM32F4-Discovery/tcpCLI.c **** }
 698              		.loc 1 286 0
 699 03c2 1846     		mov	r0, r3
 700 03c4 2037     		adds	r7, r7, #32
 701 03c6 BD46     		mov	sp, r7
 702              		@ sp needed
 703 03c8 B0BD     		pop	{r4, r5, r7, pc}
 704              	.L22:
 705 03ca 00BF     		.align	2
 706              	.L21:
 707 03cc 64010000 		.word	.LC13
 708 03d0 70010000 		.word	.LC14
 709 03d4 80010000 		.word	.LC15
 710 03d8 00000000 		.word	telegram
 711 03dc 00000000 		.word	QSpd_handle
 712 03e0 00000000 		.word	xDelay
 713 03e4 AC000000 		.word	.LC6
 714 03e8 C8000000 		.word	.LC7
 715 03ec F8000000 		.word	.LC9
 716 03f0 08000000 		.word	.LC1
 717              		.cfi_endproc
 718              	.LFE110:
 720              		.section	.rodata
 721 0182 0000     		.align	2
 722              	.LC16:
 723 0184 53706565 		.ascii	"Speed is  %2d.%2dp \012\012\000\000"
 723      64206973 
 723      20202532 
 723      642E2532 
 723      6470200A 
 724 019b 00       		.align	2
 725              	.LC17:
 726 019c 55702072 		.ascii	"Up ramp is %d seconds\012\012\000\000"
 726      616D7020 
 726      69732025 
 726      64207365 
 726      636F6E64 
 727              		.section	.text.handleVariable_get,"ax",%progbits
 728              		.align	2
 729              		.global	handleVariable_get
 730              		.thumb
 731              		.thumb_func
 733              	handleVariable_get:
 734              	.LFB111:
 287:App/STM32F4-Discovery/tcpCLI.c **** 			
 288:App/STM32F4-Discovery/tcpCLI.c **** 
 289:App/STM32F4-Discovery/tcpCLI.c **** 
 290:App/STM32F4-Discovery/tcpCLI.c **** int handleVariable_get (	
 291:App/STM32F4-Discovery/tcpCLI.c **** 				int8_t *pcWriteBuffer, 
 292:App/STM32F4-Discovery/tcpCLI.c **** 				size_t xWriteBufferLen,
 293:App/STM32F4-Discovery/tcpCLI.c **** 				uint8_t * Param, 
 294:App/STM32F4-Discovery/tcpCLI.c **** 				int xParamLength,
 295:App/STM32F4-Discovery/tcpCLI.c **** 				xQueueHandle Qhandle,
 296:App/STM32F4-Discovery/tcpCLI.c **** 				int socket )
 297:App/STM32F4-Discovery/tcpCLI.c **** {
 735              		.loc 1 297 0
 736              		.cfi_startproc
 737              		@ args = 8, pretend = 0, frame = 24
 738              		@ frame_needed = 1, uses_anonymous_args = 0
 739 0000 B0B5     		push	{r4, r5, r7, lr}
 740              	.LCFI3:
 741              		.cfi_def_cfa_offset 16
 742              		.cfi_offset 4, -16
 743              		.cfi_offset 5, -12
 744              		.cfi_offset 7, -8
 745              		.cfi_offset 14, -4
 746 0002 86B0     		sub	sp, sp, #24
 747              	.LCFI4:
 748              		.cfi_def_cfa_offset 40
 749 0004 00AF     		add	r7, sp, #0
 750              	.LCFI5:
 751              		.cfi_def_cfa_register 7
 752 0006 F860     		str	r0, [r7, #12]
 753 0008 B960     		str	r1, [r7, #8]
 754 000a 7A60     		str	r2, [r7, #4]
 755 000c 3B60     		str	r3, [r7]
 298:App/STM32F4-Discovery/tcpCLI.c **** 
 299:App/STM32F4-Discovery/tcpCLI.c **** 
 300:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 301:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER speed [value]
 302:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 303:App/STM32F4-Discovery/tcpCLI.c **** 
 304:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "speed", 5))
 756              		.loc 1 304 0
 757 000e 7868     		ldr	r0, [r7, #4]
 758 0010 9649     		ldr	r1, .L35
 759 0012 0522     		movs	r2, #5
 760 0014 FFF7FEFF 		bl	strncmp
 761 0018 0346     		mov	r3, r0
 762 001a 002B     		cmp	r3, #0
 763 001c 6CD1     		bne	.L24
 305:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 306:App/STM32F4-Discovery/tcpCLI.c **** 	
 307:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.Qcmd = GETDATA; 
 764              		.loc 1 307 0
 765 001e 944B     		ldr	r3, .L35+4
 766 0020 0122     		movs	r2, #1
 767 0022 1A70     		strb	r2, [r3]
 308:App/STM32F4-Discovery/tcpCLI.c **** 		
 309:App/STM32F4-Discovery/tcpCLI.c **** 	
 310:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 311:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegram, xDelay ) == pdPASS )
 768              		.loc 1 311 0
 769 0024 934B     		ldr	r3, .L35+8
 770 0026 1A68     		ldr	r2, [r3]
 771 0028 934B     		ldr	r3, .L35+12
 772 002a 1B68     		ldr	r3, [r3]
 773 002c 1046     		mov	r0, r2
 774 002e 9049     		ldr	r1, .L35+4
 775 0030 1A46     		mov	r2, r3
 776 0032 0023     		movs	r3, #0
 777 0034 FFF7FEFF 		bl	xQueueGenericSend
 778 0038 0346     		mov	r3, r0
 779 003a 012B     		cmp	r3, #1
 780 003c 49D1     		bne	.L25
 312:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 313:App/STM32F4-Discovery/tcpCLI.c **** 					
 314:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegram, xDelay)== pdPASS)
 781              		.loc 1 314 0
 782 003e 8D4B     		ldr	r3, .L35+8
 783 0040 1A68     		ldr	r2, [r3]
 784 0042 8D4B     		ldr	r3, .L35+12
 785 0044 1B68     		ldr	r3, [r3]
 786 0046 1046     		mov	r0, r2
 787 0048 8949     		ldr	r1, .L35+4
 788 004a 1A46     		mov	r2, r3
 789 004c 0023     		movs	r3, #0
 790 004e FFF7FEFF 		bl	xQueueGenericReceive
 791 0052 0346     		mov	r3, r0
 792 0054 012B     		cmp	r3, #1
 793 0056 2BD1     		bne	.L26
 315:App/STM32F4-Discovery/tcpCLI.c **** 			{
 316:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegram.Qcmd == SUCCSESS) 
 794              		.loc 1 316 0
 795 0058 854B     		ldr	r3, .L35+4
 796 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 797 005c 062B     		cmp	r3, #6
 798 005e 18D1     		bne	.L27
 317:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 318:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 319:App/STM32F4-Discovery/tcpCLI.c **** 					telegram.data[3]/100,
 799              		.loc 1 319 0
 800 0060 834B     		ldr	r3, .L35+4
 801 0062 DA89     		ldrh	r2, [r3, #14]
 318:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 802              		.loc 1 318 0
 803 0064 854B     		ldr	r3, .L35+16
 804 0066 A3FB0203 		umull	r0, r3, r3, r2
 805 006a 5B09     		lsrs	r3, r3, #5
 806 006c 9BB2     		uxth	r3, r3
 807 006e 1A46     		mov	r2, r3
 320:App/STM32F4-Discovery/tcpCLI.c **** 					telegram.data[3] % 100);
 808              		.loc 1 320 0
 809 0070 7F4B     		ldr	r3, .L35+4
 810 0072 DB89     		ldrh	r3, [r3, #14]
 318:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 811              		.loc 1 318 0
 812 0074 8149     		ldr	r1, .L35+16
 813 0076 A1FB0301 		umull	r0, r1, r1, r3
 814 007a 4909     		lsrs	r1, r1, #5
 815 007c 6420     		movs	r0, #100
 816 007e 00FB01F1 		mul	r1, r0, r1
 817 0082 5B1A     		subs	r3, r3, r1
 818 0084 9BB2     		uxth	r3, r3
 819 0086 F868     		ldr	r0, [r7, #12]
 820 0088 7D49     		ldr	r1, .L35+20
 821 008a FFF7FEFF 		bl	sprintf
 321:App/STM32F4-Discovery/tcpCLI.c **** 				
 322:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 323:App/STM32F4-Discovery/tcpCLI.c **** 
 324:App/STM32F4-Discovery/tcpCLI.c **** 
 325:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 822              		.loc 1 325 0
 823 008e 0123     		movs	r3, #1
 824 0090 E8E0     		b	.L28
 825              	.L27:
 326:App/STM32F4-Discovery/tcpCLI.c **** 
 327:App/STM32F4-Discovery/tcpCLI.c **** 				}
 328:App/STM32F4-Discovery/tcpCLI.c **** 				else
 329:App/STM32F4-Discovery/tcpCLI.c **** 				{
 330:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 826              		.loc 1 330 0
 827 0092 FA68     		ldr	r2, [r7, #12]
 828 0094 7B4B     		ldr	r3, .L35+24
 829 0096 1546     		mov	r5, r2
 830 0098 1C46     		mov	r4, r3
 831 009a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 832 009c 2860     		str	r0, [r5]	@ unaligned
 833 009e 6960     		str	r1, [r5, #4]	@ unaligned
 834 00a0 AA60     		str	r2, [r5, #8]	@ unaligned
 835 00a2 EB60     		str	r3, [r5, #12]	@ unaligned
 836 00a4 2068     		ldr	r0, [r4]	@ unaligned
 837 00a6 2861     		str	r0, [r5, #16]	@ unaligned
 331:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 838              		.loc 1 331 0
 839 00a8 1323     		movs	r3, #19
 840 00aa 7B61     		str	r3, [r7, #20]
 332:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 333:App/STM32F4-Discovery/tcpCLI.c **** 
 334:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 841              		.loc 1 334 0
 842 00ac 0023     		movs	r3, #0
 843 00ae D9E0     		b	.L28
 844              	.L26:
 335:App/STM32F4-Discovery/tcpCLI.c **** 
 336:App/STM32F4-Discovery/tcpCLI.c **** 
 337:App/STM32F4-Discovery/tcpCLI.c **** 				}
 338:App/STM32F4-Discovery/tcpCLI.c **** 						
 339:App/STM32F4-Discovery/tcpCLI.c **** 			}
 340:App/STM32F4-Discovery/tcpCLI.c **** 			else
 341:App/STM32F4-Discovery/tcpCLI.c **** 			{
 342:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 343:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 344:App/STM32F4-Discovery/tcpCLI.c **** 		
 345:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 845              		.loc 1 345 0
 846 00b0 FA68     		ldr	r2, [r7, #12]
 847 00b2 754B     		ldr	r3, .L35+28
 848 00b4 1546     		mov	r5, r2
 849 00b6 1C46     		mov	r4, r3
 850 00b8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 851 00ba 2860     		str	r0, [r5]	@ unaligned
 852 00bc 6960     		str	r1, [r5, #4]	@ unaligned
 853 00be AA60     		str	r2, [r5, #8]	@ unaligned
 854 00c0 EB60     		str	r3, [r5, #12]	@ unaligned
 855 00c2 07CC     		ldmia	r4!, {r0, r1, r2}
 856 00c4 2861     		str	r0, [r5, #16]	@ unaligned
 857 00c6 6961     		str	r1, [r5, #20]	@ unaligned
 858 00c8 AA61     		str	r2, [r5, #24]	@ unaligned
 346:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 859              		.loc 1 346 0
 860 00ca 1B23     		movs	r3, #27
 861 00cc 7B61     		str	r3, [r7, #20]
 347:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 348:App/STM32F4-Discovery/tcpCLI.c **** 
 349:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 862              		.loc 1 349 0
 863 00ce 0023     		movs	r3, #0
 864 00d0 C8E0     		b	.L28
 865              	.L25:
 350:App/STM32F4-Discovery/tcpCLI.c **** 			}
 351:App/STM32F4-Discovery/tcpCLI.c **** 
 352:App/STM32F4-Discovery/tcpCLI.c **** 
 353:App/STM32F4-Discovery/tcpCLI.c **** 		}
 354:App/STM32F4-Discovery/tcpCLI.c **** 		else
 355:App/STM32F4-Discovery/tcpCLI.c **** 		{
 356:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 357:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 358:App/STM32F4-Discovery/tcpCLI.c **** 		
 359:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 866              		.loc 1 359 0
 867 00d2 FA68     		ldr	r2, [r7, #12]
 868 00d4 6D4B     		ldr	r3, .L35+32
 869 00d6 1446     		mov	r4, r2
 870 00d8 1D46     		mov	r5, r3
 871 00da 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 872 00dc 2060     		str	r0, [r4]	@ unaligned
 873 00de 6160     		str	r1, [r4, #4]	@ unaligned
 874 00e0 A260     		str	r2, [r4, #8]	@ unaligned
 875 00e2 E360     		str	r3, [r4, #12]	@ unaligned
 876 00e4 2868     		ldr	r0, [r5]	@ unaligned
 877 00e6 2061     		str	r0, [r4, #16]	@ unaligned
 878 00e8 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 879 00ea AB79     		ldrb	r3, [r5, #6]
 880 00ec A282     		strh	r2, [r4, #20]	@ unaligned
 881 00ee A375     		strb	r3, [r4, #22]
 360:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 882              		.loc 1 360 0
 883 00f0 1623     		movs	r3, #22
 884 00f2 7B61     		str	r3, [r7, #20]
 361:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 362:App/STM32F4-Discovery/tcpCLI.c **** 
 363:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 885              		.loc 1 363 0
 886 00f4 0023     		movs	r3, #0
 887 00f6 B5E0     		b	.L28
 888              	.L24:
 364:App/STM32F4-Discovery/tcpCLI.c **** 		}
 365:App/STM32F4-Discovery/tcpCLI.c **** 	}
 366:App/STM32F4-Discovery/tcpCLI.c **** 	
 367:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 368:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER upramp [value]
 369:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 370:App/STM32F4-Discovery/tcpCLI.c **** 
 371:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "upramp", 6))
 889              		.loc 1 371 0
 890 00f8 7868     		ldr	r0, [r7, #4]
 891 00fa 6549     		ldr	r1, .L35+36
 892 00fc 0622     		movs	r2, #6
 893 00fe FFF7FEFF 		bl	strncmp
 894 0102 0346     		mov	r3, r0
 895 0104 002B     		cmp	r3, #0
 896 0106 4DD1     		bne	.L29
 372:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 373:App/STM32F4-Discovery/tcpCLI.c **** 	
 374:App/STM32F4-Discovery/tcpCLI.c **** 	
 375:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.Qcmd = GETDATA;
 897              		.loc 1 375 0
 898 0108 594B     		ldr	r3, .L35+4
 899 010a 0122     		movs	r2, #1
 900 010c 1A70     		strb	r2, [r3]
 376:App/STM32F4-Discovery/tcpCLI.c **** 			
 377:App/STM32F4-Discovery/tcpCLI.c **** 	
 378:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 379:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegram, xDelay ) == pdPASS )
 901              		.loc 1 379 0
 902 010e 594B     		ldr	r3, .L35+8
 903 0110 1A68     		ldr	r2, [r3]
 904 0112 594B     		ldr	r3, .L35+12
 905 0114 1B68     		ldr	r3, [r3]
 906 0116 1046     		mov	r0, r2
 907 0118 5549     		ldr	r1, .L35+4
 908 011a 1A46     		mov	r2, r3
 909 011c 0023     		movs	r3, #0
 910 011e FFF7FEFF 		bl	xQueueGenericSend
 911 0122 0346     		mov	r3, r0
 912 0124 012B     		cmp	r3, #1
 913 0126 2AD1     		bne	.L30
 380:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 381:App/STM32F4-Discovery/tcpCLI.c **** 					
 382:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegram, xDelay))
 914              		.loc 1 382 0
 915 0128 524B     		ldr	r3, .L35+8
 916 012a 1A68     		ldr	r2, [r3]
 917 012c 524B     		ldr	r3, .L35+12
 918 012e 1B68     		ldr	r3, [r3]
 919 0130 1046     		mov	r0, r2
 920 0132 4F49     		ldr	r1, .L35+4
 921 0134 1A46     		mov	r2, r3
 922 0136 0023     		movs	r3, #0
 923 0138 FFF7FEFF 		bl	xQueueGenericReceive
 924 013c 0346     		mov	r3, r0
 925 013e 002B     		cmp	r3, #0
 926 0140 30D0     		beq	.L29
 383:App/STM32F4-Discovery/tcpCLI.c **** 			{
 384:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegram.Qcmd == SUCCSESS) 
 927              		.loc 1 384 0
 928 0142 4B4B     		ldr	r3, .L35+4
 929 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 930 0146 062B     		cmp	r3, #6
 931 0148 0AD1     		bne	.L31
 385:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 386:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Up ramp is %d seconds\n\n\0", 
 387:App/STM32F4-Discovery/tcpCLI.c **** 							telegram.data[3]);
 932              		.loc 1 387 0
 933 014a 494B     		ldr	r3, .L35+4
 934 014c DB89     		ldrh	r3, [r3, #14]
 386:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Up ramp is %d seconds\n\n\0", 
 935              		.loc 1 386 0
 936 014e F868     		ldr	r0, [r7, #12]
 937 0150 5049     		ldr	r1, .L35+40
 938 0152 1A46     		mov	r2, r3
 939 0154 FFF7FEFF 		bl	sprintf
 388:App/STM32F4-Discovery/tcpCLI.c **** 					
 389:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 25; 	
 940              		.loc 1 389 0
 941 0158 1923     		movs	r3, #25
 942 015a 7B61     		str	r3, [r7, #20]
 390:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 391:App/STM32F4-Discovery/tcpCLI.c **** 
 392:App/STM32F4-Discovery/tcpCLI.c **** 
 393:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 943              		.loc 1 393 0
 944 015c 0123     		movs	r3, #1
 945 015e 81E0     		b	.L28
 946              	.L31:
 394:App/STM32F4-Discovery/tcpCLI.c **** 
 395:App/STM32F4-Discovery/tcpCLI.c **** 				}
 396:App/STM32F4-Discovery/tcpCLI.c **** 				else
 397:App/STM32F4-Discovery/tcpCLI.c **** 				{
 398:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 947              		.loc 1 398 0
 948 0160 FA68     		ldr	r2, [r7, #12]
 949 0162 484B     		ldr	r3, .L35+24
 950 0164 1546     		mov	r5, r2
 951 0166 1C46     		mov	r4, r3
 952 0168 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 953 016a 2860     		str	r0, [r5]	@ unaligned
 954 016c 6960     		str	r1, [r5, #4]	@ unaligned
 955 016e AA60     		str	r2, [r5, #8]	@ unaligned
 956 0170 EB60     		str	r3, [r5, #12]	@ unaligned
 957 0172 2068     		ldr	r0, [r4]	@ unaligned
 958 0174 2861     		str	r0, [r5, #16]	@ unaligned
 399:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 959              		.loc 1 399 0
 960 0176 1323     		movs	r3, #19
 961 0178 7B61     		str	r3, [r7, #20]
 400:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 401:App/STM32F4-Discovery/tcpCLI.c **** 
 402:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 962              		.loc 1 402 0
 963 017a 0023     		movs	r3, #0
 964 017c 72E0     		b	.L28
 965              	.L30:
 403:App/STM32F4-Discovery/tcpCLI.c **** 
 404:App/STM32F4-Discovery/tcpCLI.c **** 
 405:App/STM32F4-Discovery/tcpCLI.c **** 				}
 406:App/STM32F4-Discovery/tcpCLI.c **** 						
 407:App/STM32F4-Discovery/tcpCLI.c **** 			}
 408:App/STM32F4-Discovery/tcpCLI.c **** 
 409:App/STM32F4-Discovery/tcpCLI.c **** 		}
 410:App/STM32F4-Discovery/tcpCLI.c **** 		else
 411:App/STM32F4-Discovery/tcpCLI.c **** 		{
 412:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 413:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 414:App/STM32F4-Discovery/tcpCLI.c **** 		
 415:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 966              		.loc 1 415 0
 967 017e FA68     		ldr	r2, [r7, #12]
 968 0180 424B     		ldr	r3, .L35+32
 969 0182 1446     		mov	r4, r2
 970 0184 1D46     		mov	r5, r3
 971 0186 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 972 0188 2060     		str	r0, [r4]	@ unaligned
 973 018a 6160     		str	r1, [r4, #4]	@ unaligned
 974 018c A260     		str	r2, [r4, #8]	@ unaligned
 975 018e E360     		str	r3, [r4, #12]	@ unaligned
 976 0190 2868     		ldr	r0, [r5]	@ unaligned
 977 0192 2061     		str	r0, [r4, #16]	@ unaligned
 978 0194 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 979 0196 AB79     		ldrb	r3, [r5, #6]
 980 0198 A282     		strh	r2, [r4, #20]	@ unaligned
 981 019a A375     		strb	r3, [r4, #22]
 416:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 982              		.loc 1 416 0
 983 019c 1623     		movs	r3, #22
 984 019e 7B61     		str	r3, [r7, #20]
 417:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 418:App/STM32F4-Discovery/tcpCLI.c **** 
 419:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 985              		.loc 1 419 0
 986 01a0 0023     		movs	r3, #0
 987 01a2 5FE0     		b	.L28
 988              	.L29:
 420:App/STM32F4-Discovery/tcpCLI.c **** 		}
 421:App/STM32F4-Discovery/tcpCLI.c **** 	}
 422:App/STM32F4-Discovery/tcpCLI.c **** 
 423:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 424:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER downramp [value]
 425:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 426:App/STM32F4-Discovery/tcpCLI.c **** 
 427:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "downramp", 8))
 989              		.loc 1 427 0
 990 01a4 7868     		ldr	r0, [r7, #4]
 991 01a6 3C49     		ldr	r1, .L35+44
 992 01a8 0822     		movs	r2, #8
 993 01aa FFF7FEFF 		bl	strncmp
 994 01ae 0346     		mov	r3, r0
 995 01b0 002B     		cmp	r3, #0
 996 01b2 51D1     		bne	.L32
 428:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 429:App/STM32F4-Discovery/tcpCLI.c **** 	
 430:App/STM32F4-Discovery/tcpCLI.c **** 	
 431:App/STM32F4-Discovery/tcpCLI.c **** 				
 432:App/STM32F4-Discovery/tcpCLI.c **** 	
 433:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 434:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegram, xDelay ) == pdPASS )
 997              		.loc 1 434 0
 998 01b4 2F4B     		ldr	r3, .L35+8
 999 01b6 1A68     		ldr	r2, [r3]
 1000 01b8 2F4B     		ldr	r3, .L35+12
 1001 01ba 1B68     		ldr	r3, [r3]
 1002 01bc 1046     		mov	r0, r2
 1003 01be 2C49     		ldr	r1, .L35+4
 1004 01c0 1A46     		mov	r2, r3
 1005 01c2 0023     		movs	r3, #0
 1006 01c4 FFF7FEFF 		bl	xQueueGenericSend
 1007 01c8 0346     		mov	r3, r0
 1008 01ca 012B     		cmp	r3, #1
 1009 01cc 31D1     		bne	.L33
 435:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 436:App/STM32F4-Discovery/tcpCLI.c **** 					
 437:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegram, xDelay))
 1010              		.loc 1 437 0
 1011 01ce 294B     		ldr	r3, .L35+8
 1012 01d0 1A68     		ldr	r2, [r3]
 1013 01d2 294B     		ldr	r3, .L35+12
 1014 01d4 1B68     		ldr	r3, [r3]
 1015 01d6 1046     		mov	r0, r2
 1016 01d8 2549     		ldr	r1, .L35+4
 1017 01da 1A46     		mov	r2, r3
 1018 01dc 0023     		movs	r3, #0
 1019 01de FFF7FEFF 		bl	xQueueGenericReceive
 1020 01e2 0346     		mov	r3, r0
 1021 01e4 002B     		cmp	r3, #0
 1022 01e6 37D0     		beq	.L32
 438:App/STM32F4-Discovery/tcpCLI.c **** 			{
 439:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegram.Qcmd == SUCCSESS) 
 1023              		.loc 1 439 0
 1024 01e8 214B     		ldr	r3, .L35+4
 1025 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1026 01ec 062B     		cmp	r3, #6
 1027 01ee 11D1     		bne	.L34
 440:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 441:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed succsesfully set.\n\n");
 1028              		.loc 1 441 0
 1029 01f0 FA68     		ldr	r2, [r7, #12]
 1030 01f2 2A4B     		ldr	r3, .L35+48
 1031 01f4 1546     		mov	r5, r2
 1032 01f6 1C46     		mov	r4, r3
 1033 01f8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1034 01fa 2860     		str	r0, [r5]	@ unaligned
 1035 01fc 6960     		str	r1, [r5, #4]	@ unaligned
 1036 01fe AA60     		str	r2, [r5, #8]	@ unaligned
 1037 0200 EB60     		str	r3, [r5, #12]	@ unaligned
 1038 0202 03CC     		ldmia	r4!, {r0, r1}
 1039 0204 2861     		str	r0, [r5, #16]	@ unaligned
 1040 0206 6961     		str	r1, [r5, #20]	@ unaligned
 1041 0208 2388     		ldrh	r3, [r4]	@ unaligned
 1042 020a 2B83     		strh	r3, [r5, #24]	@ unaligned
 442:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 25; 	
 1043              		.loc 1 442 0
 1044 020c 1923     		movs	r3, #25
 1045 020e 7B61     		str	r3, [r7, #20]
 443:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 444:App/STM32F4-Discovery/tcpCLI.c **** 
 445:App/STM32F4-Discovery/tcpCLI.c **** 
 446:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 1046              		.loc 1 446 0
 1047 0210 0123     		movs	r3, #1
 1048 0212 27E0     		b	.L28
 1049              	.L34:
 447:App/STM32F4-Discovery/tcpCLI.c **** 
 448:App/STM32F4-Discovery/tcpCLI.c **** 				}
 449:App/STM32F4-Discovery/tcpCLI.c **** 				else
 450:App/STM32F4-Discovery/tcpCLI.c **** 				{
 451:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1050              		.loc 1 451 0
 1051 0214 FA68     		ldr	r2, [r7, #12]
 1052 0216 1B4B     		ldr	r3, .L35+24
 1053 0218 1546     		mov	r5, r2
 1054 021a 1C46     		mov	r4, r3
 1055 021c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1056 021e 2860     		str	r0, [r5]	@ unaligned
 1057 0220 6960     		str	r1, [r5, #4]	@ unaligned
 1058 0222 AA60     		str	r2, [r5, #8]	@ unaligned
 1059 0224 EB60     		str	r3, [r5, #12]	@ unaligned
 1060 0226 2068     		ldr	r0, [r4]	@ unaligned
 1061 0228 2861     		str	r0, [r5, #16]	@ unaligned
 452:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 1062              		.loc 1 452 0
 1063 022a 1323     		movs	r3, #19
 1064 022c 7B61     		str	r3, [r7, #20]
 453:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 454:App/STM32F4-Discovery/tcpCLI.c **** 
 455:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 1065              		.loc 1 455 0
 1066 022e 0023     		movs	r3, #0
 1067 0230 18E0     		b	.L28
 1068              	.L33:
 456:App/STM32F4-Discovery/tcpCLI.c **** 
 457:App/STM32F4-Discovery/tcpCLI.c **** 
 458:App/STM32F4-Discovery/tcpCLI.c **** 				}
 459:App/STM32F4-Discovery/tcpCLI.c **** 						
 460:App/STM32F4-Discovery/tcpCLI.c **** 			}
 461:App/STM32F4-Discovery/tcpCLI.c **** 
 462:App/STM32F4-Discovery/tcpCLI.c **** 		}
 463:App/STM32F4-Discovery/tcpCLI.c **** 		else
 464:App/STM32F4-Discovery/tcpCLI.c **** 		{
 465:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 466:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 467:App/STM32F4-Discovery/tcpCLI.c **** 		
 468:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 1069              		.loc 1 468 0
 1070 0232 FA68     		ldr	r2, [r7, #12]
 1071 0234 154B     		ldr	r3, .L35+32
 1072 0236 1446     		mov	r4, r2
 1073 0238 1D46     		mov	r5, r3
 1074 023a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1075 023c 2060     		str	r0, [r4]	@ unaligned
 1076 023e 6160     		str	r1, [r4, #4]	@ unaligned
 1077 0240 A260     		str	r2, [r4, #8]	@ unaligned
 1078 0242 E360     		str	r3, [r4, #12]	@ unaligned
 1079 0244 2868     		ldr	r0, [r5]	@ unaligned
 1080 0246 2061     		str	r0, [r4, #16]	@ unaligned
 1081 0248 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1082 024a AB79     		ldrb	r3, [r5, #6]
 1083 024c A282     		strh	r2, [r4, #20]	@ unaligned
 1084 024e A375     		strb	r3, [r4, #22]
 469:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1085              		.loc 1 469 0
 1086 0250 1623     		movs	r3, #22
 1087 0252 7B61     		str	r3, [r7, #20]
 470:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 471:App/STM32F4-Discovery/tcpCLI.c **** 
 472:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1088              		.loc 1 472 0
 1089 0254 0023     		movs	r3, #0
 1090 0256 05E0     		b	.L28
 1091              	.L32:
 473:App/STM32F4-Discovery/tcpCLI.c **** 		}
 474:App/STM32F4-Discovery/tcpCLI.c **** 	}
 475:App/STM32F4-Discovery/tcpCLI.c **** 
 476:App/STM32F4-Discovery/tcpCLI.c **** 
 477:App/STM32F4-Discovery/tcpCLI.c **** 	strcpy(pcWriteBuffer, xMotorCommand.pcHelpString);
 1092              		.loc 1 477 0
 1093 0258 114B     		ldr	r3, .L35+52
 1094 025a F868     		ldr	r0, [r7, #12]
 1095 025c 1946     		mov	r1, r3
 1096 025e FFF7FEFF 		bl	strcpy
 478:App/STM32F4-Discovery/tcpCLI.c **** 
 479:App/STM32F4-Discovery/tcpCLI.c **** 
 480:App/STM32F4-Discovery/tcpCLI.c **** 			return 0; 
 1097              		.loc 1 480 0
 1098 0262 0023     		movs	r3, #0
 1099              	.L28:
 481:App/STM32F4-Discovery/tcpCLI.c **** 
 482:App/STM32F4-Discovery/tcpCLI.c **** }
 1100              		.loc 1 482 0
 1101 0264 1846     		mov	r0, r3
 1102 0266 1837     		adds	r7, r7, #24
 1103 0268 BD46     		mov	sp, r7
 1104              		@ sp needed
 1105 026a B0BD     		pop	{r4, r5, r7, pc}
 1106              	.L36:
 1107              		.align	2
 1108              	.L35:
 1109 026c 74000000 		.word	.LC4
 1110 0270 00000000 		.word	telegram
 1111 0274 00000000 		.word	QSpd_handle
 1112 0278 00000000 		.word	xDelay
 1113 027c 1F85EB51 		.word	1374389535
 1114 0280 84010000 		.word	.LC16
 1115 0284 C8000000 		.word	.LC7
 1116 0288 DC000000 		.word	.LC8
 1117 028c F8000000 		.word	.LC9
 1118 0290 10010000 		.word	.LC10
 1119 0294 9C010000 		.word	.LC17
 1120 0298 64010000 		.word	.LC13
 1121 029c AC000000 		.word	.LC6
 1122 02a0 08000000 		.word	.LC1
 1123              		.cfi_endproc
 1124              	.LFE111:
 1126              		.section	.rodata
 1127 01b5 000000   		.align	2
 1128              	.LC18:
 1129 01b8 546F2066 		.ascii	"To few arguments. \012\012\000\000"
 1129      65772061 
 1129      7267756D 
 1129      656E7473 
 1129      2E200A0A 
 1130 01ce 0000     		.align	2
 1131              	.LC19:
 1132 01d0 68656C70 		.ascii	"help\000"
 1132      00
 1133 01d5 000000   		.align	2
 1134              	.LC20:
 1135 01d8 55736167 		.ascii	"Usage and parameters\012options:\012\011get - get m"
 1135      6520616E 
 1135      64207061 
 1135      72616D65 
 1135      74657273 
 1136 0202 6F746F72 		.ascii	"otor parameter value\012\011set - set motor paramet"
 1136      20706172 
 1136      616D6574 
 1136      65722076 
 1136      616C7565 
 1137 022f 65722076 		.ascii	"er value\012\011start - starts motor\012\011stop - "
 1137      616C7565 
 1137      0A097374 
 1137      61727420 
 1137      2D207374 
 1138 0256 73746F70 		.ascii	"stops motor\012parametrs:\012\011speed - sets speed"
 1138      73206D6F 
 1138      746F720A 
 1138      70617261 
 1138      6D657472 
 1139 0280 0A097570 		.ascii	"\012\011upramp\012\011downramp\012\000\000"
 1139      72616D70 
 1139      0A09646F 
 1139      776E7261 
 1139      6D700A00 
 1140 0295 000000   		.align	2
 1141              	.LC21:
 1142 0298 73657400 		.ascii	"set\000"
 1143              		.align	2
 1144              	.LC22:
 1145 029c 67657400 		.ascii	"get\000"
 1146              		.align	2
 1147              	.LC23:
 1148 02a0 73746F70 		.ascii	"stop\000"
 1148      00
 1149 02a5 000000   		.align	2
 1150              	.LC24:
 1151 02a8 4D6F746F 		.ascii	"Motor succsesfully stopped.\012\012\000"
 1151      72207375 
 1151      63637365 
 1151      7366756C 
 1151      6C792073 
 1152 02c6 0000     		.align	2
 1153              	.LC25:
 1154 02c8 73746172 		.ascii	"start\000"
 1154      7400
 1155 02ce 0000     		.align	2
 1156              	.LC26:
 1157 02d0 4D6F746F 		.ascii	"Motor succsesfully started.\012\012\000"
 1157      72207375 
 1157      63637365 
 1157      7366756C 
 1157      6C792073 
 1158 02ee 0000     		.section	.text.prvMotorCommand,"ax",%progbits
 1159              		.align	2
 1160              		.global	prvMotorCommand
 1161              		.thumb
 1162              		.thumb_func
 1164              	prvMotorCommand:
 1165              	.LFB112:
 483:App/STM32F4-Discovery/tcpCLI.c **** 
 484:App/STM32F4-Discovery/tcpCLI.c **** 
 485:App/STM32F4-Discovery/tcpCLI.c **** 
 486:App/STM32F4-Discovery/tcpCLI.c **** 
 487:App/STM32F4-Discovery/tcpCLI.c **** 
 488:App/STM32F4-Discovery/tcpCLI.c **** 
 489:App/STM32F4-Discovery/tcpCLI.c **** 
 490:App/STM32F4-Discovery/tcpCLI.c **** 
 491:App/STM32F4-Discovery/tcpCLI.c **** 
 492:App/STM32F4-Discovery/tcpCLI.c **** 
 493:App/STM32F4-Discovery/tcpCLI.c **** 
 494:App/STM32F4-Discovery/tcpCLI.c **** /* ================================================================================================
 495:App/STM32F4-Discovery/tcpCLI.c ****  * ================================================================================================
 496:App/STM32F4-Discovery/tcpCLI.c ****  * 		prvMotorCommand 
 497:App/STM32F4-Discovery/tcpCLI.c ****  * ================================================================================================
 498:App/STM32F4-Discovery/tcpCLI.c ****  * ==============================================================================================*/
 499:App/STM32F4-Discovery/tcpCLI.c **** 
 500:App/STM32F4-Discovery/tcpCLI.c **** portBASE_TYPE prvMotorCommand ( 	int8_t *pcWriteBuffer, 
 501:App/STM32F4-Discovery/tcpCLI.c **** 						size_t xWriteBufferLen, 
 502:App/STM32F4-Discovery/tcpCLI.c **** 						const int8_t *pcCommandString)
 503:App/STM32F4-Discovery/tcpCLI.c **** {
 1166              		.loc 1 503 0
 1167              		.cfi_startproc
 1168              		@ args = 0, pretend = 0, frame = 40
 1169              		@ frame_needed = 1, uses_anonymous_args = 0
 1170 0000 B0B5     		push	{r4, r5, r7, lr}
 1171              	.LCFI6:
 1172              		.cfi_def_cfa_offset 16
 1173              		.cfi_offset 4, -16
 1174              		.cfi_offset 5, -12
 1175              		.cfi_offset 7, -8
 1176              		.cfi_offset 14, -4
 1177 0002 8EB0     		sub	sp, sp, #56
 1178              	.LCFI7:
 1179              		.cfi_def_cfa_offset 72
 1180 0004 04AF     		add	r7, sp, #16
 1181              	.LCFI8:
 1182              		.cfi_def_cfa 7, 56
 1183 0006 F860     		str	r0, [r7, #12]
 1184 0008 B960     		str	r1, [r7, #8]
 1185 000a 7A60     		str	r2, [r7, #4]
 504:App/STM32F4-Discovery/tcpCLI.c **** 	/* globals: 
 505:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	socket 
 506:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	setSpeedHandle
 507:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	QSpd_Handle
 508:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	QStatus_handle
 509:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	
 510:App/STM32F4-Discovery/tcpCLI.c **** 	 **/
 511:App/STM32F4-Discovery/tcpCLI.c **** 
 512:App/STM32F4-Discovery/tcpCLI.c **** 	int8_t *Option, *Param, *Value;
 513:App/STM32F4-Discovery/tcpCLI.c **** 	int xOptionLength, xParamLength, xValueLength; 
 514:App/STM32F4-Discovery/tcpCLI.c **** 	//QueueTelegram telegram; 
 515:App/STM32F4-Discovery/tcpCLI.c **** 	
 516:App/STM32F4-Discovery/tcpCLI.c **** 	// get option from command line 
 517:App/STM32F4-Discovery/tcpCLI.c **** 
 518:App/STM32F4-Discovery/tcpCLI.c **** 	Option = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1186              		.loc 1 518 0
 1187 000c 07F11803 		add	r3, r7, #24
 1188 0010 7868     		ldr	r0, [r7, #4]
 1189 0012 0121     		movs	r1, #1
 1190 0014 1A46     		mov	r2, r3
 1191 0016 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1192 001a 7862     		str	r0, [r7, #36]
 519:App/STM32F4-Discovery/tcpCLI.c **** 					  1,  		   // first parameter
 520:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xOptionLength // parameter string length
 521:App/STM32F4-Discovery/tcpCLI.c **** 					  
 522:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 523:App/STM32F4-Discovery/tcpCLI.c **** 
 524:App/STM32F4-Discovery/tcpCLI.c **** 	if ( Option == NULL)
 1193              		.loc 1 524 0
 1194 001c 7B6A     		ldr	r3, [r7, #36]
 1195 001e 002B     		cmp	r3, #0
 1196 0020 0ED1     		bne	.L38
 525:App/STM32F4-Discovery/tcpCLI.c **** 	{
 526:App/STM32F4-Discovery/tcpCLI.c **** 		sprintf(pcWriteBuffer, "To few arguments. \n\n\0");
 1197              		.loc 1 526 0
 1198 0022 FA68     		ldr	r2, [r7, #12]
 1199 0024 9F4B     		ldr	r3, .L58
 1200 0026 1546     		mov	r5, r2
 1201 0028 1C46     		mov	r4, r3
 1202 002a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1203 002c 2860     		str	r0, [r5]	@ unaligned
 1204 002e 6960     		str	r1, [r5, #4]	@ unaligned
 1205 0030 AA60     		str	r2, [r5, #8]	@ unaligned
 1206 0032 EB60     		str	r3, [r5, #12]	@ unaligned
 1207 0034 2068     		ldr	r0, [r4]	@ unaligned
 1208 0036 2861     		str	r0, [r5, #16]	@ unaligned
 1209 0038 2379     		ldrb	r3, [r4, #4]
 1210 003a 2B75     		strb	r3, [r5, #20]
 527:App/STM32F4-Discovery/tcpCLI.c **** 		return pdFALSE;
 1211              		.loc 1 527 0
 1212 003c 0023     		movs	r3, #0
 1213 003e 8CE1     		b	.L57
 1214              	.L38:
 528:App/STM32F4-Discovery/tcpCLI.c **** 	}
 529:App/STM32F4-Discovery/tcpCLI.c **** 
 530:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp(Option, "help", 4))
 1215              		.loc 1 530 0
 1216 0040 786A     		ldr	r0, [r7, #36]
 1217 0042 9949     		ldr	r1, .L58+4
 1218 0044 0422     		movs	r2, #4
 1219 0046 FFF7FEFF 		bl	strncmp
 1220 004a 0346     		mov	r3, r0
 1221 004c 002B     		cmp	r3, #0
 1222 004e 0BD1     		bne	.L40
 531:App/STM32F4-Discovery/tcpCLI.c **** 	{
 532:App/STM32F4-Discovery/tcpCLI.c **** 		strcpy(pcWriteBuffer, 
 1223              		.loc 1 532 0
 1224 0050 FA68     		ldr	r2, [r7, #12]
 1225 0052 964B     		ldr	r3, .L58+8
 1226 0054 1146     		mov	r1, r2
 1227 0056 1A46     		mov	r2, r3
 1228 0058 BC23     		movs	r3, #188
 1229 005a 0846     		mov	r0, r1
 1230 005c 1146     		mov	r1, r2
 1231 005e 1A46     		mov	r2, r3
 1232 0060 FFF7FEFF 		bl	memcpy
 533:App/STM32F4-Discovery/tcpCLI.c **** 			"Usage and parameters\n"
 534:App/STM32F4-Discovery/tcpCLI.c **** 			"options:\n"
 535:App/STM32F4-Discovery/tcpCLI.c **** 			"\tget - get motor parameter value\n"
 536:App/STM32F4-Discovery/tcpCLI.c **** 			"\tset - set motor parameter value\n"
 537:App/STM32F4-Discovery/tcpCLI.c **** 			"\tstart - starts motor\n"
 538:App/STM32F4-Discovery/tcpCLI.c **** 			"\tstop - stops motor\n"
 539:App/STM32F4-Discovery/tcpCLI.c **** 			"parametrs:\n"
 540:App/STM32F4-Discovery/tcpCLI.c **** 			"\tspeed - sets speed\n"
 541:App/STM32F4-Discovery/tcpCLI.c **** 			"\tupramp\n"
 542:App/STM32F4-Discovery/tcpCLI.c **** 			"\tdownramp\n"
 543:App/STM32F4-Discovery/tcpCLI.c **** 
 544:App/STM32F4-Discovery/tcpCLI.c **** 			
 545:App/STM32F4-Discovery/tcpCLI.c **** 			"\0"
 546:App/STM32F4-Discovery/tcpCLI.c **** 
 547:App/STM32F4-Discovery/tcpCLI.c **** 		      );
 548:App/STM32F4-Discovery/tcpCLI.c **** 
 549:App/STM32F4-Discovery/tcpCLI.c **** 		return pdPASS;
 1233              		.loc 1 549 0
 1234 0064 0123     		movs	r3, #1
 1235 0066 78E1     		b	.L57
 1236              	.L40:
 550:App/STM32F4-Discovery/tcpCLI.c **** 	}
 551:App/STM32F4-Discovery/tcpCLI.c **** 
 552:App/STM32F4-Discovery/tcpCLI.c **** 
 553:App/STM32F4-Discovery/tcpCLI.c ****     //	vTaskResume(motorHBHandle);
 554:App/STM32F4-Discovery/tcpCLI.c **** 
 555:App/STM32F4-Discovery/tcpCLI.c **** 
 556:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 557:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND SET [parameter name] [value]
 558:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 559:App/STM32F4-Discovery/tcpCLI.c **** 
 560:App/STM32F4-Discovery/tcpCLI.c **** 	if( !strncmp( Option, "set", 3) ) 
 1237              		.loc 1 560 0
 1238 0068 786A     		ldr	r0, [r7, #36]
 1239 006a 9149     		ldr	r1, .L58+12
 1240 006c 0322     		movs	r2, #3
 1241 006e FFF7FEFF 		bl	strncmp
 1242 0072 0346     		mov	r3, r0
 1243 0074 002B     		cmp	r3, #0
 1244 0076 33D1     		bne	.L41
 561:App/STM32F4-Discovery/tcpCLI.c **** 	{
 562:App/STM32F4-Discovery/tcpCLI.c **** 
 563:App/STM32F4-Discovery/tcpCLI.c **** 		// get parameter from command line 
 564:App/STM32F4-Discovery/tcpCLI.c **** 	
 565:App/STM32F4-Discovery/tcpCLI.c **** 		Param = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1245              		.loc 1 565 0
 1246 0078 07F11403 		add	r3, r7, #20
 1247 007c 7868     		ldr	r0, [r7, #4]
 1248 007e 0221     		movs	r1, #2
 1249 0080 1A46     		mov	r2, r3
 1250 0082 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1251 0086 3862     		str	r0, [r7, #32]
 566:App/STM32F4-Discovery/tcpCLI.c **** 					  2,  		   // 2nd parameter
 567:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xParamLength // parameter string length
 568:App/STM32F4-Discovery/tcpCLI.c **** 					  
 569:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 570:App/STM32F4-Discovery/tcpCLI.c **** 		Value = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1252              		.loc 1 570 0
 1253 0088 07F11003 		add	r3, r7, #16
 1254 008c 7868     		ldr	r0, [r7, #4]
 1255 008e 0321     		movs	r1, #3
 1256 0090 1A46     		mov	r2, r3
 1257 0092 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1258 0096 F861     		str	r0, [r7, #28]
 571:App/STM32F4-Discovery/tcpCLI.c **** 					  3,  		   // 2nd parameter
 572:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xValueLength // parameter string length
 573:App/STM32F4-Discovery/tcpCLI.c **** 					  
 574:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 575:App/STM32F4-Discovery/tcpCLI.c **** 		
 576:App/STM32F4-Discovery/tcpCLI.c **** 		// return pdFALSE if there is no 3rd parameter 
 577:App/STM32F4-Discovery/tcpCLI.c **** 
 578:App/STM32F4-Discovery/tcpCLI.c **** 		if (Value==NULL||Param==NULL)
 1259              		.loc 1 578 0
 1260 0098 FB69     		ldr	r3, [r7, #28]
 1261 009a 002B     		cmp	r3, #0
 1262 009c 02D0     		beq	.L42
 1263              		.loc 1 578 0 is_stmt 0 discriminator 1
 1264 009e 3B6A     		ldr	r3, [r7, #32]
 1265 00a0 002B     		cmp	r3, #0
 1266 00a2 06D1     		bne	.L43
 1267              	.L42:
 579:App/STM32F4-Discovery/tcpCLI.c **** 		{
 580:App/STM32F4-Discovery/tcpCLI.c **** 			strcpy(pcWriteBuffer, xMotorCommand.pcHelpString);
 1268              		.loc 1 580 0 is_stmt 1
 1269 00a4 834B     		ldr	r3, .L58+16
 1270 00a6 F868     		ldr	r0, [r7, #12]
 1271 00a8 1946     		mov	r1, r3
 1272 00aa FFF7FEFF 		bl	strcpy
 581:App/STM32F4-Discovery/tcpCLI.c **** 
 582:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 
 1273              		.loc 1 582 0
 1274 00ae 0023     		movs	r3, #0
 1275 00b0 53E1     		b	.L57
 1276              	.L43:
 583:App/STM32F4-Discovery/tcpCLI.c **** 
 584:App/STM32F4-Discovery/tcpCLI.c **** 		}
 585:App/STM32F4-Discovery/tcpCLI.c **** 
 586:App/STM32F4-Discovery/tcpCLI.c **** 		
 587:App/STM32F4-Discovery/tcpCLI.c **** 		if ( handleVariable_set ( 
 1277              		.loc 1 587 0
 1278 00b2 7B69     		ldr	r3, [r7, #20]
 1279 00b4 804A     		ldr	r2, .L58+20
 1280 00b6 1068     		ldr	r0, [r2]
 1281 00b8 3969     		ldr	r1, [r7, #16]
 1282 00ba 804A     		ldr	r2, .L58+24
 1283 00bc 1268     		ldr	r2, [r2]
 1284 00be 0090     		str	r0, [sp]
 1285 00c0 F869     		ldr	r0, [r7, #28]
 1286 00c2 0190     		str	r0, [sp, #4]
 1287 00c4 0291     		str	r1, [sp, #8]
 1288 00c6 0392     		str	r2, [sp, #12]
 1289 00c8 F868     		ldr	r0, [r7, #12]
 1290 00ca B968     		ldr	r1, [r7, #8]
 1291 00cc 3A6A     		ldr	r2, [r7, #32]
 1292 00ce FFF7FEFF 		bl	handleVariable_set
 1293 00d2 0346     		mov	r3, r0
 1294 00d4 002B     		cmp	r3, #0
 1295 00d6 01D0     		beq	.L44
 588:App/STM32F4-Discovery/tcpCLI.c **** 				           pcWriteBuffer, 
 589:App/STM32F4-Discovery/tcpCLI.c **** 					   xWriteBufferLen,
 590:App/STM32F4-Discovery/tcpCLI.c **** 					   Param, 
 591:App/STM32F4-Discovery/tcpCLI.c **** 					   xParamLength, 
 592:App/STM32F4-Discovery/tcpCLI.c **** 					   QSpd_handle, 
 593:App/STM32F4-Discovery/tcpCLI.c **** 					   Value,
 594:App/STM32F4-Discovery/tcpCLI.c **** 					   xValueLength,  
 595:App/STM32F4-Discovery/tcpCLI.c **** 					   socket_0)) return pdPASS;
 1296              		.loc 1 595 0
 1297 00d8 0123     		movs	r3, #1
 1298 00da 3EE1     		b	.L57
 1299              	.L44:
 596:App/STM32F4-Discovery/tcpCLI.c **** 
 597:App/STM32F4-Discovery/tcpCLI.c **** 		
 598:App/STM32F4-Discovery/tcpCLI.c **** 			
 599:App/STM32F4-Discovery/tcpCLI.c **** 		return pdFALSE;
 1300              		.loc 1 599 0
 1301 00dc 0023     		movs	r3, #0
 1302 00de 3CE1     		b	.L57
 1303              	.L41:
 600:App/STM32F4-Discovery/tcpCLI.c **** 
 601:App/STM32F4-Discovery/tcpCLI.c **** 	}
 602:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 603:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND GET [parameter name] [value]
 604:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 605:App/STM32F4-Discovery/tcpCLI.c **** 
 606:App/STM32F4-Discovery/tcpCLI.c **** 
 607:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "get", 3))
 1304              		.loc 1 607 0
 1305 00e0 786A     		ldr	r0, [r7, #36]
 1306 00e2 7749     		ldr	r1, .L58+28
 1307 00e4 0322     		movs	r2, #3
 1308 00e6 FFF7FEFF 		bl	strncmp
 1309 00ea 0346     		mov	r3, r0
 1310 00ec 002B     		cmp	r3, #0
 1311 00ee 27D1     		bne	.L45
 608:App/STM32F4-Discovery/tcpCLI.c **** 	{
 609:App/STM32F4-Discovery/tcpCLI.c **** 		// get parameter from command line 
 610:App/STM32F4-Discovery/tcpCLI.c **** 	
 611:App/STM32F4-Discovery/tcpCLI.c **** 		Param = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1312              		.loc 1 611 0
 1313 00f0 07F11403 		add	r3, r7, #20
 1314 00f4 7868     		ldr	r0, [r7, #4]
 1315 00f6 0221     		movs	r1, #2
 1316 00f8 1A46     		mov	r2, r3
 1317 00fa FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1318 00fe 3862     		str	r0, [r7, #32]
 612:App/STM32F4-Discovery/tcpCLI.c **** 					  2,  		   // 2nd parameter
 613:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xParamLength // parameter string length
 614:App/STM32F4-Discovery/tcpCLI.c **** 					  
 615:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 616:App/STM32F4-Discovery/tcpCLI.c **** 			
 617:App/STM32F4-Discovery/tcpCLI.c **** 		// return pdFALSE if there is no 3rd parameter 
 618:App/STM32F4-Discovery/tcpCLI.c **** 
 619:App/STM32F4-Discovery/tcpCLI.c **** 		if(Value==NULL||Param==NULL)
 1319              		.loc 1 619 0
 1320 0100 FB69     		ldr	r3, [r7, #28]
 1321 0102 002B     		cmp	r3, #0
 1322 0104 02D0     		beq	.L46
 1323              		.loc 1 619 0 is_stmt 0 discriminator 1
 1324 0106 3B6A     		ldr	r3, [r7, #32]
 1325 0108 002B     		cmp	r3, #0
 1326 010a 06D1     		bne	.L47
 1327              	.L46:
 620:App/STM32F4-Discovery/tcpCLI.c **** 		{
 621:App/STM32F4-Discovery/tcpCLI.c **** 			strcpy(pcWriteBuffer, xMotorCommand.pcHelpString);
 1328              		.loc 1 621 0 is_stmt 1
 1329 010c 694B     		ldr	r3, .L58+16
 1330 010e F868     		ldr	r0, [r7, #12]
 1331 0110 1946     		mov	r1, r3
 1332 0112 FFF7FEFF 		bl	strcpy
 622:App/STM32F4-Discovery/tcpCLI.c **** 
 623:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 
 1333              		.loc 1 623 0
 1334 0116 0023     		movs	r3, #0
 1335 0118 1FE1     		b	.L57
 1336              	.L47:
 624:App/STM32F4-Discovery/tcpCLI.c **** 
 625:App/STM32F4-Discovery/tcpCLI.c **** 		}
 626:App/STM32F4-Discovery/tcpCLI.c **** 
 627:App/STM32F4-Discovery/tcpCLI.c **** 		
 628:App/STM32F4-Discovery/tcpCLI.c **** 		if ( handleVariable_get ( 
 1337              		.loc 1 628 0
 1338 011a 7B69     		ldr	r3, [r7, #20]
 1339 011c 664A     		ldr	r2, .L58+20
 1340 011e 1168     		ldr	r1, [r2]
 1341 0120 664A     		ldr	r2, .L58+24
 1342 0122 1268     		ldr	r2, [r2]
 1343 0124 0091     		str	r1, [sp]
 1344 0126 0192     		str	r2, [sp, #4]
 1345 0128 F868     		ldr	r0, [r7, #12]
 1346 012a B968     		ldr	r1, [r7, #8]
 1347 012c 3A6A     		ldr	r2, [r7, #32]
 1348 012e FFF7FEFF 		bl	handleVariable_get
 1349 0132 0346     		mov	r3, r0
 1350 0134 002B     		cmp	r3, #0
 1351 0136 01D0     		beq	.L48
 629:App/STM32F4-Discovery/tcpCLI.c **** 				        pcWriteBuffer, 
 630:App/STM32F4-Discovery/tcpCLI.c **** 					   xWriteBufferLen,
 631:App/STM32F4-Discovery/tcpCLI.c **** 	
 632:App/STM32F4-Discovery/tcpCLI.c **** 				           Param, 
 633:App/STM32F4-Discovery/tcpCLI.c **** 					   xParamLength, 
 634:App/STM32F4-Discovery/tcpCLI.c **** 					   QSpd_handle, 
 635:App/STM32F4-Discovery/tcpCLI.c **** 					   socket_0)) return pdPASS;
 1352              		.loc 1 635 0
 1353 0138 0123     		movs	r3, #1
 1354 013a 0EE1     		b	.L57
 1355              	.L48:
 636:App/STM32F4-Discovery/tcpCLI.c **** 		return pdFALSE;
 1356              		.loc 1 636 0
 1357 013c 0023     		movs	r3, #0
 1358 013e 0CE1     		b	.L57
 1359              	.L45:
 637:App/STM32F4-Discovery/tcpCLI.c **** 
 638:App/STM32F4-Discovery/tcpCLI.c **** 
 639:App/STM32F4-Discovery/tcpCLI.c **** 	}
 640:App/STM32F4-Discovery/tcpCLI.c **** 		
 641:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 642:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND STOP 
 643:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 644:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "stop", 4))
 1360              		.loc 1 644 0
 1361 0140 786A     		ldr	r0, [r7, #36]
 1362 0142 6049     		ldr	r1, .L58+32
 1363 0144 0422     		movs	r2, #4
 1364 0146 FFF7FEFF 		bl	strncmp
 1365 014a 0346     		mov	r3, r0
 1366 014c 002B     		cmp	r3, #0
 1367 014e 69D1     		bne	.L49
 645:App/STM32F4-Discovery/tcpCLI.c **** 	{
 646:App/STM32F4-Discovery/tcpCLI.c **** 
 647:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.Qcmd = STOP; 
 1368              		.loc 1 647 0
 1369 0150 5D4B     		ldr	r3, .L58+36
 1370 0152 0522     		movs	r2, #5
 1371 0154 1A70     		strb	r2, [r3]
 648:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.size = 0; 
 1372              		.loc 1 648 0
 1373 0156 5C4B     		ldr	r3, .L58+36
 1374 0158 0022     		movs	r2, #0
 1375 015a 5A60     		str	r2, [r3, #4]
 649:App/STM32F4-Discovery/tcpCLI.c **** 			// send value to setSpeed_task via Queue 
 650:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegram, xDelay ) )
 1376              		.loc 1 650 0
 1377 015c 564B     		ldr	r3, .L58+20
 1378 015e 1A68     		ldr	r2, [r3]
 1379 0160 5A4B     		ldr	r3, .L58+40
 1380 0162 1B68     		ldr	r3, [r3]
 1381 0164 1046     		mov	r0, r2
 1382 0166 5849     		ldr	r1, .L58+36
 1383 0168 1A46     		mov	r2, r3
 1384 016a 0023     		movs	r3, #0
 1385 016c FFF7FEFF 		bl	xQueueGenericSend
 1386 0170 0346     		mov	r3, r0
 1387 0172 002B     		cmp	r3, #0
 1388 0174 43D0     		beq	.L50
 651:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 652:App/STM32F4-Discovery/tcpCLI.c **** 					
 653:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegram, xDelay)== pdPASS)
 1389              		.loc 1 653 0
 1390 0176 504B     		ldr	r3, .L58+20
 1391 0178 1A68     		ldr	r2, [r3]
 1392 017a 544B     		ldr	r3, .L58+40
 1393 017c 1B68     		ldr	r3, [r3]
 1394 017e 1046     		mov	r0, r2
 1395 0180 5149     		ldr	r1, .L58+36
 1396 0182 1A46     		mov	r2, r3
 1397 0184 0023     		movs	r3, #0
 1398 0186 FFF7FEFF 		bl	xQueueGenericReceive
 1399 018a 0346     		mov	r3, r0
 1400 018c 012B     		cmp	r3, #1
 1401 018e 25D1     		bne	.L51
 654:App/STM32F4-Discovery/tcpCLI.c **** 			{
 655:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegram.Qcmd == SUCCSESS) 
 1402              		.loc 1 655 0
 1403 0190 4D4B     		ldr	r3, .L58+36
 1404 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1405 0194 062B     		cmp	r3, #6
 1406 0196 12D1     		bne	.L52
 656:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 657:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer ,"Motor succsesfully stopped.\n\n");
 1407              		.loc 1 657 0
 1408 0198 FA68     		ldr	r2, [r7, #12]
 1409 019a 4D4B     		ldr	r3, .L58+44
 1410 019c 1546     		mov	r5, r2
 1411 019e 1C46     		mov	r4, r3
 1412 01a0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1413 01a2 2860     		str	r0, [r5]	@ unaligned
 1414 01a4 6960     		str	r1, [r5, #4]	@ unaligned
 1415 01a6 AA60     		str	r2, [r5, #8]	@ unaligned
 1416 01a8 EB60     		str	r3, [r5, #12]	@ unaligned
 1417 01aa 07CC     		ldmia	r4!, {r0, r1, r2}
 1418 01ac 2861     		str	r0, [r5, #16]	@ unaligned
 1419 01ae 6961     		str	r1, [r5, #20]	@ unaligned
 1420 01b0 AA61     		str	r2, [r5, #24]	@ unaligned
 1421 01b2 2388     		ldrh	r3, [r4]	@ unaligned
 1422 01b4 AB83     		strh	r3, [r5, #28]	@ unaligned
 658:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 29 ; 	
 1423              		.loc 1 658 0
 1424 01b6 1D23     		movs	r3, #29
 1425 01b8 BB60     		str	r3, [r7, #8]
 659:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 660:App/STM32F4-Discovery/tcpCLI.c **** 
 661:App/STM32F4-Discovery/tcpCLI.c **** 					
 662:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 1426              		.loc 1 662 0
 1427 01ba 0123     		movs	r3, #1
 1428 01bc CDE0     		b	.L57
 1429              	.L52:
 663:App/STM32F4-Discovery/tcpCLI.c **** 
 664:App/STM32F4-Discovery/tcpCLI.c **** 				}
 665:App/STM32F4-Discovery/tcpCLI.c **** 				else
 666:App/STM32F4-Discovery/tcpCLI.c **** 				{
 667:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1430              		.loc 1 667 0
 1431 01be FA68     		ldr	r2, [r7, #12]
 1432 01c0 444B     		ldr	r3, .L58+48
 1433 01c2 1546     		mov	r5, r2
 1434 01c4 1C46     		mov	r4, r3
 1435 01c6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1436 01c8 2860     		str	r0, [r5]	@ unaligned
 1437 01ca 6960     		str	r1, [r5, #4]	@ unaligned
 1438 01cc AA60     		str	r2, [r5, #8]	@ unaligned
 1439 01ce EB60     		str	r3, [r5, #12]	@ unaligned
 1440 01d0 2068     		ldr	r0, [r4]	@ unaligned
 1441 01d2 2861     		str	r0, [r5, #16]	@ unaligned
 668:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 1442              		.loc 1 668 0
 1443 01d4 1323     		movs	r3, #19
 1444 01d6 BB60     		str	r3, [r7, #8]
 669:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 670:App/STM32F4-Discovery/tcpCLI.c **** 
 671:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 1445              		.loc 1 671 0
 1446 01d8 0023     		movs	r3, #0
 1447 01da BEE0     		b	.L57
 1448              	.L51:
 672:App/STM32F4-Discovery/tcpCLI.c **** 
 673:App/STM32F4-Discovery/tcpCLI.c **** 
 674:App/STM32F4-Discovery/tcpCLI.c **** 				}
 675:App/STM32F4-Discovery/tcpCLI.c **** 			}
 676:App/STM32F4-Discovery/tcpCLI.c **** 			else
 677:App/STM32F4-Discovery/tcpCLI.c **** 			{
 678:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 679:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 680:App/STM32F4-Discovery/tcpCLI.c **** 		
 681:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 1449              		.loc 1 681 0
 1450 01dc FA68     		ldr	r2, [r7, #12]
 1451 01de 3E4B     		ldr	r3, .L58+52
 1452 01e0 1546     		mov	r5, r2
 1453 01e2 1C46     		mov	r4, r3
 1454 01e4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1455 01e6 2860     		str	r0, [r5]	@ unaligned
 1456 01e8 6960     		str	r1, [r5, #4]	@ unaligned
 1457 01ea AA60     		str	r2, [r5, #8]	@ unaligned
 1458 01ec EB60     		str	r3, [r5, #12]	@ unaligned
 1459 01ee 07CC     		ldmia	r4!, {r0, r1, r2}
 1460 01f0 2861     		str	r0, [r5, #16]	@ unaligned
 1461 01f2 6961     		str	r1, [r5, #20]	@ unaligned
 1462 01f4 AA61     		str	r2, [r5, #24]	@ unaligned
 682:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 1463              		.loc 1 682 0
 1464 01f6 1B23     		movs	r3, #27
 1465 01f8 BB60     		str	r3, [r7, #8]
 683:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 684:App/STM32F4-Discovery/tcpCLI.c **** 
 685:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 1466              		.loc 1 685 0
 1467 01fa 0023     		movs	r3, #0
 1468 01fc ADE0     		b	.L57
 1469              	.L50:
 686:App/STM32F4-Discovery/tcpCLI.c **** 			}
 687:App/STM32F4-Discovery/tcpCLI.c **** 		}
 688:App/STM32F4-Discovery/tcpCLI.c **** 		else
 689:App/STM32F4-Discovery/tcpCLI.c **** 		{
 690:App/STM32F4-Discovery/tcpCLI.c **** 			
 691:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 692:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 693:App/STM32F4-Discovery/tcpCLI.c **** 		
 694:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 1470              		.loc 1 694 0
 1471 01fe FA68     		ldr	r2, [r7, #12]
 1472 0200 364B     		ldr	r3, .L58+56
 1473 0202 1446     		mov	r4, r2
 1474 0204 1D46     		mov	r5, r3
 1475 0206 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1476 0208 2060     		str	r0, [r4]	@ unaligned
 1477 020a 6160     		str	r1, [r4, #4]	@ unaligned
 1478 020c A260     		str	r2, [r4, #8]	@ unaligned
 1479 020e E360     		str	r3, [r4, #12]	@ unaligned
 1480 0210 2868     		ldr	r0, [r5]	@ unaligned
 1481 0212 2061     		str	r0, [r4, #16]	@ unaligned
 1482 0214 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1483 0216 AB79     		ldrb	r3, [r5, #6]
 1484 0218 A282     		strh	r2, [r4, #20]	@ unaligned
 1485 021a A375     		strb	r3, [r4, #22]
 695:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1486              		.loc 1 695 0
 1487 021c 1623     		movs	r3, #22
 1488 021e BB60     		str	r3, [r7, #8]
 696:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 697:App/STM32F4-Discovery/tcpCLI.c **** 
 698:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1489              		.loc 1 698 0
 1490 0220 0023     		movs	r3, #0
 1491 0222 9AE0     		b	.L57
 1492              	.L49:
 699:App/STM32F4-Discovery/tcpCLI.c **** 		}
 700:App/STM32F4-Discovery/tcpCLI.c **** 					
 701:App/STM32F4-Discovery/tcpCLI.c **** 	}
 702:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 703:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND START
 704:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 705:App/STM32F4-Discovery/tcpCLI.c **** 
 706:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "start", 5))
 1493              		.loc 1 706 0
 1494 0224 786A     		ldr	r0, [r7, #36]
 1495 0226 2E49     		ldr	r1, .L58+60
 1496 0228 0522     		movs	r2, #5
 1497 022a FFF7FEFF 		bl	strncmp
 1498 022e 0346     		mov	r3, r0
 1499 0230 002B     		cmp	r3, #0
 1500 0232 40F08C80 		bne	.L53
 707:App/STM32F4-Discovery/tcpCLI.c **** 	{
 708:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.Qcmd = START; 
 1501              		.loc 1 708 0
 1502 0236 244B     		ldr	r3, .L58+36
 1503 0238 0422     		movs	r2, #4
 1504 023a 1A70     		strb	r2, [r3]
 709:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.size = 0; 
 1505              		.loc 1 709 0
 1506 023c 224B     		ldr	r3, .L58+36
 1507 023e 0022     		movs	r2, #0
 1508 0240 5A60     		str	r2, [r3, #4]
 710:App/STM32F4-Discovery/tcpCLI.c **** 			// send value to setSpeed_task via Queue 
 711:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegram, xDelay ) == pdPASS )
 1509              		.loc 1 711 0
 1510 0242 1D4B     		ldr	r3, .L58+20
 1511 0244 1A68     		ldr	r2, [r3]
 1512 0246 214B     		ldr	r3, .L58+40
 1513 0248 1B68     		ldr	r3, [r3]
 1514 024a 1046     		mov	r0, r2
 1515 024c 1E49     		ldr	r1, .L58+36
 1516 024e 1A46     		mov	r2, r3
 1517 0250 0023     		movs	r3, #0
 1518 0252 FFF7FEFF 		bl	xQueueGenericSend
 1519 0256 0346     		mov	r3, r0
 1520 0258 012B     		cmp	r3, #1
 1521 025a 65D1     		bne	.L54
 712:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 713:App/STM32F4-Discovery/tcpCLI.c **** 		//	vTaskDelay(500/portTICK_RATE_MS);		
 714:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegram, xDelay) == pdPASS)
 1522              		.loc 1 714 0
 1523 025c 164B     		ldr	r3, .L58+20
 1524 025e 1A68     		ldr	r2, [r3]
 1525 0260 1A4B     		ldr	r3, .L58+40
 1526 0262 1B68     		ldr	r3, [r3]
 1527 0264 1046     		mov	r0, r2
 1528 0266 1849     		ldr	r1, .L58+36
 1529 0268 1A46     		mov	r2, r3
 1530 026a 0023     		movs	r3, #0
 1531 026c FFF7FEFF 		bl	xQueueGenericReceive
 1532 0270 0346     		mov	r3, r0
 1533 0272 012B     		cmp	r3, #1
 1534 0274 47D1     		bne	.L55
 715:App/STM32F4-Discovery/tcpCLI.c **** 			{
 716:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegram.Qcmd == SUCCSESS) 
 1535              		.loc 1 716 0
 1536 0276 144B     		ldr	r3, .L58+36
 1537 0278 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1538 027a 062B     		cmp	r3, #6
 1539 027c 34D1     		bne	.L56
 717:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 718:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer , "Motor succsesfully started.\n\n");
 1540              		.loc 1 718 0
 1541 027e FA68     		ldr	r2, [r7, #12]
 1542 0280 184B     		ldr	r3, .L58+64
 1543 0282 1546     		mov	r5, r2
 1544 0284 1C46     		mov	r4, r3
 1545 0286 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1546 0288 2860     		str	r0, [r5]	@ unaligned
 1547 028a 6960     		str	r1, [r5, #4]	@ unaligned
 1548 028c AA60     		str	r2, [r5, #8]	@ unaligned
 1549 028e EB60     		str	r3, [r5, #12]	@ unaligned
 1550 0290 07CC     		ldmia	r4!, {r0, r1, r2}
 1551 0292 2861     		str	r0, [r5, #16]	@ unaligned
 1552 0294 6961     		str	r1, [r5, #20]	@ unaligned
 1553 0296 AA61     		str	r2, [r5, #24]	@ unaligned
 1554 0298 2388     		ldrh	r3, [r4]	@ unaligned
 1555 029a AB83     		strh	r3, [r5, #28]	@ unaligned
 719:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 29; 	
 1556              		.loc 1 719 0
 1557 029c 1D23     		movs	r3, #29
 1558 029e BB60     		str	r3, [r7, #8]
 720:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 721:App/STM32F4-Discovery/tcpCLI.c **** 
 722:App/STM32F4-Discovery/tcpCLI.c **** 					
 723:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 1559              		.loc 1 723 0
 1560 02a0 0123     		movs	r3, #1
 1561 02a2 5AE0     		b	.L57
 1562              	.L59:
 1563              		.align	2
 1564              	.L58:
 1565 02a4 B8010000 		.word	.LC18
 1566 02a8 D0010000 		.word	.LC19
 1567 02ac D8010000 		.word	.LC20
 1568 02b0 98020000 		.word	.LC21
 1569 02b4 08000000 		.word	.LC1
 1570 02b8 00000000 		.word	QSpd_handle
 1571 02bc 00000000 		.word	socket_0
 1572 02c0 9C020000 		.word	.LC22
 1573 02c4 A0020000 		.word	.LC23
 1574 02c8 00000000 		.word	telegram
 1575 02cc 00000000 		.word	xDelay
 1576 02d0 A8020000 		.word	.LC24
 1577 02d4 C8000000 		.word	.LC7
 1578 02d8 DC000000 		.word	.LC8
 1579 02dc F8000000 		.word	.LC9
 1580 02e0 C8020000 		.word	.LC25
 1581 02e4 D0020000 		.word	.LC26
 1582              	.L56:
 724:App/STM32F4-Discovery/tcpCLI.c **** 
 725:App/STM32F4-Discovery/tcpCLI.c **** 				}
 726:App/STM32F4-Discovery/tcpCLI.c **** 				else
 727:App/STM32F4-Discovery/tcpCLI.c **** 				{
 728:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1583              		.loc 1 728 0
 1584 02e8 FA68     		ldr	r2, [r7, #12]
 1585 02ea 1E4B     		ldr	r3, .L60
 1586 02ec 1546     		mov	r5, r2
 1587 02ee 1C46     		mov	r4, r3
 1588 02f0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1589 02f2 2860     		str	r0, [r5]	@ unaligned
 1590 02f4 6960     		str	r1, [r5, #4]	@ unaligned
 1591 02f6 AA60     		str	r2, [r5, #8]	@ unaligned
 1592 02f8 EB60     		str	r3, [r5, #12]	@ unaligned
 1593 02fa 2068     		ldr	r0, [r4]	@ unaligned
 1594 02fc 2861     		str	r0, [r5, #16]	@ unaligned
 729:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 1595              		.loc 1 729 0
 1596 02fe 1323     		movs	r3, #19
 1597 0300 BB60     		str	r3, [r7, #8]
 730:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 731:App/STM32F4-Discovery/tcpCLI.c **** 
 732:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 1598              		.loc 1 732 0
 1599 0302 0023     		movs	r3, #0
 1600 0304 29E0     		b	.L57
 1601              	.L55:
 733:App/STM32F4-Discovery/tcpCLI.c **** 
 734:App/STM32F4-Discovery/tcpCLI.c **** 
 735:App/STM32F4-Discovery/tcpCLI.c **** 				}
 736:App/STM32F4-Discovery/tcpCLI.c **** 			}
 737:App/STM32F4-Discovery/tcpCLI.c **** 			else
 738:App/STM32F4-Discovery/tcpCLI.c **** 			{
 739:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 740:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 741:App/STM32F4-Discovery/tcpCLI.c **** 		
 742:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 1602              		.loc 1 742 0
 1603 0306 FA68     		ldr	r2, [r7, #12]
 1604 0308 174B     		ldr	r3, .L60+4
 1605 030a 1546     		mov	r5, r2
 1606 030c 1C46     		mov	r4, r3
 1607 030e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1608 0310 2860     		str	r0, [r5]	@ unaligned
 1609 0312 6960     		str	r1, [r5, #4]	@ unaligned
 1610 0314 AA60     		str	r2, [r5, #8]	@ unaligned
 1611 0316 EB60     		str	r3, [r5, #12]	@ unaligned
 1612 0318 07CC     		ldmia	r4!, {r0, r1, r2}
 1613 031a 2861     		str	r0, [r5, #16]	@ unaligned
 1614 031c 6961     		str	r1, [r5, #20]	@ unaligned
 1615 031e AA61     		str	r2, [r5, #24]	@ unaligned
 743:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 1616              		.loc 1 743 0
 1617 0320 1B23     		movs	r3, #27
 1618 0322 BB60     		str	r3, [r7, #8]
 744:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 745:App/STM32F4-Discovery/tcpCLI.c **** 
 746:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 1619              		.loc 1 746 0
 1620 0324 0023     		movs	r3, #0
 1621 0326 18E0     		b	.L57
 1622              	.L54:
 747:App/STM32F4-Discovery/tcpCLI.c **** 			}
 748:App/STM32F4-Discovery/tcpCLI.c **** 		}
 749:App/STM32F4-Discovery/tcpCLI.c **** 		else
 750:App/STM32F4-Discovery/tcpCLI.c **** 		{
 751:App/STM32F4-Discovery/tcpCLI.c **** 			
 752:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 753:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 754:App/STM32F4-Discovery/tcpCLI.c **** 		
 755:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer,"Error sending Queue!\n\n");
 1623              		.loc 1 755 0
 1624 0328 FA68     		ldr	r2, [r7, #12]
 1625 032a 104B     		ldr	r3, .L60+8
 1626 032c 1446     		mov	r4, r2
 1627 032e 1D46     		mov	r5, r3
 1628 0330 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1629 0332 2060     		str	r0, [r4]	@ unaligned
 1630 0334 6160     		str	r1, [r4, #4]	@ unaligned
 1631 0336 A260     		str	r2, [r4, #8]	@ unaligned
 1632 0338 E360     		str	r3, [r4, #12]	@ unaligned
 1633 033a 2868     		ldr	r0, [r5]	@ unaligned
 1634 033c 2061     		str	r0, [r4, #16]	@ unaligned
 1635 033e AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1636 0340 AB79     		ldrb	r3, [r5, #6]
 1637 0342 A282     		strh	r2, [r4, #20]	@ unaligned
 1638 0344 A375     		strb	r3, [r4, #22]
 756:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1639              		.loc 1 756 0
 1640 0346 1623     		movs	r3, #22
 1641 0348 BB60     		str	r3, [r7, #8]
 757:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket_0, buf, len, 0);
 758:App/STM32F4-Discovery/tcpCLI.c **** 
 759:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1642              		.loc 1 759 0
 1643 034a 0023     		movs	r3, #0
 1644 034c 05E0     		b	.L57
 1645              	.L53:
 760:App/STM32F4-Discovery/tcpCLI.c **** 		}
 761:App/STM32F4-Discovery/tcpCLI.c **** 
 762:App/STM32F4-Discovery/tcpCLI.c **** 
 763:App/STM32F4-Discovery/tcpCLI.c **** 	}
 764:App/STM32F4-Discovery/tcpCLI.c **** 
 765:App/STM32F4-Discovery/tcpCLI.c **** 
 766:App/STM32F4-Discovery/tcpCLI.c **** 	strcpy(pcWriteBuffer, xMotorCommand.pcHelpString);
 1646              		.loc 1 766 0
 1647 034e 084B     		ldr	r3, .L60+12
 1648 0350 F868     		ldr	r0, [r7, #12]
 1649 0352 1946     		mov	r1, r3
 1650 0354 FFF7FEFF 		bl	strcpy
 767:App/STM32F4-Discovery/tcpCLI.c **** 		
 768:App/STM32F4-Discovery/tcpCLI.c **** 	return pdFALSE;
 1651              		.loc 1 768 0
 1652 0358 0023     		movs	r3, #0
 1653              	.L57:
 769:App/STM32F4-Discovery/tcpCLI.c **** 
 770:App/STM32F4-Discovery/tcpCLI.c **** 
 771:App/STM32F4-Discovery/tcpCLI.c **** }
 1654              		.loc 1 771 0
 1655 035a 1846     		mov	r0, r3
 1656 035c 2837     		adds	r7, r7, #40
 1657 035e BD46     		mov	sp, r7
 1658              		@ sp needed
 1659 0360 B0BD     		pop	{r4, r5, r7, pc}
 1660              	.L61:
 1661 0362 00BF     		.align	2
 1662              	.L60:
 1663 0364 C8000000 		.word	.LC7
 1664 0368 DC000000 		.word	.LC8
 1665 036c F8000000 		.word	.LC9
 1666 0370 08000000 		.word	.LC1
 1667              		.cfi_endproc
 1668              	.LFE112:
 1670              		.section	.text.prvTaskStatsCommand,"ax",%progbits
 1671              		.align	2
 1672              		.global	prvTaskStatsCommand
 1673              		.thumb
 1674              		.thumb_func
 1676              	prvTaskStatsCommand:
 1677              	.LFB113:
 772:App/STM32F4-Discovery/tcpCLI.c **** 
 773:App/STM32F4-Discovery/tcpCLI.c **** portBASE_TYPE prvTaskStatsCommand ( 	int8_t *pcWriteBuffer, 
 774:App/STM32F4-Discovery/tcpCLI.c **** 						size_t xWriteBufferLen, 
 775:App/STM32F4-Discovery/tcpCLI.c **** 						const int8_t *pcCommandString)
 776:App/STM32F4-Discovery/tcpCLI.c **** {
 1678              		.loc 1 776 0
 1679              		.cfi_startproc
 1680              		@ args = 0, pretend = 0, frame = 16
 1681              		@ frame_needed = 1, uses_anonymous_args = 0
 1682 0000 80B5     		push	{r7, lr}
 1683              	.LCFI9:
 1684              		.cfi_def_cfa_offset 8
 1685              		.cfi_offset 7, -8
 1686              		.cfi_offset 14, -4
 1687 0002 84B0     		sub	sp, sp, #16
 1688              	.LCFI10:
 1689              		.cfi_def_cfa_offset 24
 1690 0004 00AF     		add	r7, sp, #0
 1691              	.LCFI11:
 1692              		.cfi_def_cfa_register 7
 1693 0006 F860     		str	r0, [r7, #12]
 1694 0008 B960     		str	r1, [r7, #8]
 1695 000a 7A60     		str	r2, [r7, #4]
 777:App/STM32F4-Discovery/tcpCLI.c ****     /* For simplicity, this function assumes the output buffer is large enough
 778:App/STM32F4-Discovery/tcpCLI.c ****     to hold all the text generated by executing the vTaskList() API function,
 779:App/STM32F4-Discovery/tcpCLI.c ****     so the xWriteBufferLen parameter is not used. */
 780:App/STM32F4-Discovery/tcpCLI.c ****     ( void ) xWriteBufferLen;
 781:App/STM32F4-Discovery/tcpCLI.c **** 
 782:App/STM32F4-Discovery/tcpCLI.c ****     /* pcWriteBuffer is used directly as the vTaskList() parameter, so the table
 783:App/STM32F4-Discovery/tcpCLI.c ****     generated by executing vTaskList() is written directly into the output
 784:App/STM32F4-Discovery/tcpCLI.c ****     buffer. */
 785:App/STM32F4-Discovery/tcpCLI.c ****     vTaskList( pcWriteBuffer );
 1696              		.loc 1 785 0
 1697 000c F868     		ldr	r0, [r7, #12]
 1698 000e FFF7FEFF 		bl	vTaskList
 786:App/STM32F4-Discovery/tcpCLI.c **** 
 787:App/STM32F4-Discovery/tcpCLI.c ****     /* The entire table was written directly to the output buffer.  Execution
 788:App/STM32F4-Discovery/tcpCLI.c ****     of this command is complete, so return pdFALSE. */
 789:App/STM32F4-Discovery/tcpCLI.c ****     return pdFALSE;
 1699              		.loc 1 789 0
 1700 0012 0023     		movs	r3, #0
 790:App/STM32F4-Discovery/tcpCLI.c **** }
 1701              		.loc 1 790 0
 1702 0014 1846     		mov	r0, r3
 1703 0016 1037     		adds	r7, r7, #16
 1704 0018 BD46     		mov	sp, r7
 1705              		@ sp needed
 1706 001a 80BD     		pop	{r7, pc}
 1707              		.cfi_endproc
 1708              	.LFE113:
 1710              		.text
 1711              	.Letext0:
 1712              		.file 2 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/lib/gcc/arm-none-eabi/4.8.4/include/std
 1713              		.file 3 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/machine/_default_
 1714              		.file 4 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/stdint.h"
 1715              		.file 5 "Source/portable/GCC/ARM_CM4F/portmacro.h"
 1716              		.file 6 "Source/include/task.h"
 1717              		.file 7 "Source/include/queue.h"
 1718              		.file 8 "Source/include/semphr.h"
 1719              		.file 9 "Source/FreeRTOS-Plus-CLI/FreeRTOS_CLI.h"
 1720              		.file 10 "App/STM32F4-Discovery/tcpCLI.h"
 1721              		.file 11 "App/STM32F4-Discovery/main.h"
 1722              		.file 12 "App/STM32F4-Discovery/Libraries/CMSIS/Include/core_cm4.h"
 1723              		.file 13 "App/STM32F4-Discovery/spi.h"
 1724              		.file 14 "App/STM32F4-Discovery/W5200.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 tcpCLI.c
                            *COM*:0000000000000004 xSemaphoreDMASPI
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccYEjUAz.s:21     .bss.xHigherPriorityTaskWoken:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccYEjUAz.s:24     .bss.xHigherPriorityTaskWoken:0000000000000000 xHigherPriorityTaskWoken
                            *COM*:0000000000000004 xSmphrUSART
                            *COM*:0000000000000004 motorHeartBeatHandle
                            *COM*:0000000000000004 motorHBHandle
                            *COM*:0000000000000004 QSpd_handle
                            *COM*:0000000000000004 QStatus_handle
                            *COM*:0000000000000004 socket_0
                            *COM*:00000000000007d0 bufferTX
                            *COM*:00000000000007d0 bufferRX
                            *COM*:0000000000000004 bufferRXidx
                            *COM*:0000000000000004 bufferTXidx
                            *COM*:0000000000000004 dat_lengthRX
                            *COM*:0000000000000004 dat_lengthTX
                            *COM*:0000000000000004 set_macTaskHandle
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccYEjUAz.s:40     .rodata:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccYEjUAz.s:48     .rodata.xMotorCommand:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccYEjUAz.s:51     .rodata.xMotorCommand:0000000000000000 xMotorCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccYEjUAz.s:1164   .text.prvMotorCommand:0000000000000000 prvMotorCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccYEjUAz.s:65     .rodata.xTaskStatsCommand:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccYEjUAz.s:68     .rodata.xTaskStatsCommand:0000000000000000 xTaskStatsCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccYEjUAz.s:1676   .text.prvTaskStatsCommand:0000000000000000 prvTaskStatsCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccYEjUAz.s:75     .data.xDelay:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccYEjUAz.s:78     .data.xDelay:0000000000000000 xDelay
                            *COM*:000000000000001c telegram
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccYEjUAz.s:121    .text.handleVariable_set:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccYEjUAz.s:126    .text.handleVariable_set:0000000000000000 handleVariable_set
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccYEjUAz.s:504    .text.handleVariable_set:0000000000000260 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccYEjUAz.s:519    .text.handleVariable_set:0000000000000290 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccYEjUAz.s:707    .text.handleVariable_set:00000000000003cc $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccYEjUAz.s:728    .text.handleVariable_get:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccYEjUAz.s:733    .text.handleVariable_get:0000000000000000 handleVariable_get
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccYEjUAz.s:1109   .text.handleVariable_get:000000000000026c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccYEjUAz.s:1159   .text.prvMotorCommand:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccYEjUAz.s:1565   .text.prvMotorCommand:00000000000002a4 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccYEjUAz.s:1584   .text.prvMotorCommand:00000000000002e8 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccYEjUAz.s:1663   .text.prvMotorCommand:0000000000000364 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccYEjUAz.s:1671   .text.prvTaskStatsCommand:0000000000000000 $t
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
strncmp
atoi
sprintf
xQueueGenericSend
xQueueGenericReceive
strlen
strcpy
FreeRTOS_CLIGetParameter
memcpy
vTaskList
