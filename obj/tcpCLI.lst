   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"tcpCLI.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	xSemaphoreDMASPI,4,4
  20              		.comm	xSmphrUSART,4,4
  21              		.comm	motorHeartBeatHandle,4,4
  22              		.comm	motorHBHandle,4,4
  23              		.comm	QSpd_handle,4,4
  24              		.comm	QTCP_handle,4,4
  25              		.comm	socket_0,4,4
  26              		.comm	bufferTX,2000,4
  27              		.comm	bufferRX,2000,4
  28              		.comm	bufferRXidx,4,4
  29              		.comm	bufferTXidx,4,4
  30              		.comm	dat_lengthRX,4,4
  31              		.comm	dat_lengthTX,4,4
  32              		.comm	set_macTaskHandle,4,4
  33              		.section	.rodata.table_crc_hi,"a",%progbits
  34              		.align	2
  37              	table_crc_hi:
  38 0000 00       		.byte	0
  39 0001 C1       		.byte	-63
  40 0002 81       		.byte	-127
  41 0003 40       		.byte	64
  42 0004 01       		.byte	1
  43 0005 C0       		.byte	-64
  44 0006 80       		.byte	-128
  45 0007 41       		.byte	65
  46 0008 01       		.byte	1
  47 0009 C0       		.byte	-64
  48 000a 80       		.byte	-128
  49 000b 41       		.byte	65
  50 000c 00       		.byte	0
  51 000d C1       		.byte	-63
  52 000e 81       		.byte	-127
  53 000f 40       		.byte	64
  54 0010 01       		.byte	1
  55 0011 C0       		.byte	-64
  56 0012 80       		.byte	-128
  57 0013 41       		.byte	65
  58 0014 00       		.byte	0
  59 0015 C1       		.byte	-63
  60 0016 81       		.byte	-127
  61 0017 40       		.byte	64
  62 0018 00       		.byte	0
  63 0019 C1       		.byte	-63
  64 001a 81       		.byte	-127
  65 001b 40       		.byte	64
  66 001c 01       		.byte	1
  67 001d C0       		.byte	-64
  68 001e 80       		.byte	-128
  69 001f 41       		.byte	65
  70 0020 01       		.byte	1
  71 0021 C0       		.byte	-64
  72 0022 80       		.byte	-128
  73 0023 41       		.byte	65
  74 0024 00       		.byte	0
  75 0025 C1       		.byte	-63
  76 0026 81       		.byte	-127
  77 0027 40       		.byte	64
  78 0028 00       		.byte	0
  79 0029 C1       		.byte	-63
  80 002a 81       		.byte	-127
  81 002b 40       		.byte	64
  82 002c 01       		.byte	1
  83 002d C0       		.byte	-64
  84 002e 80       		.byte	-128
  85 002f 41       		.byte	65
  86 0030 00       		.byte	0
  87 0031 C1       		.byte	-63
  88 0032 81       		.byte	-127
  89 0033 40       		.byte	64
  90 0034 01       		.byte	1
  91 0035 C0       		.byte	-64
  92 0036 80       		.byte	-128
  93 0037 41       		.byte	65
  94 0038 01       		.byte	1
  95 0039 C0       		.byte	-64
  96 003a 80       		.byte	-128
  97 003b 41       		.byte	65
  98 003c 00       		.byte	0
  99 003d C1       		.byte	-63
 100 003e 81       		.byte	-127
 101 003f 40       		.byte	64
 102 0040 01       		.byte	1
 103 0041 C0       		.byte	-64
 104 0042 80       		.byte	-128
 105 0043 41       		.byte	65
 106 0044 00       		.byte	0
 107 0045 C1       		.byte	-63
 108 0046 81       		.byte	-127
 109 0047 40       		.byte	64
 110 0048 00       		.byte	0
 111 0049 C1       		.byte	-63
 112 004a 81       		.byte	-127
 113 004b 40       		.byte	64
 114 004c 01       		.byte	1
 115 004d C0       		.byte	-64
 116 004e 80       		.byte	-128
 117 004f 41       		.byte	65
 118 0050 00       		.byte	0
 119 0051 C1       		.byte	-63
 120 0052 81       		.byte	-127
 121 0053 40       		.byte	64
 122 0054 01       		.byte	1
 123 0055 C0       		.byte	-64
 124 0056 80       		.byte	-128
 125 0057 41       		.byte	65
 126 0058 01       		.byte	1
 127 0059 C0       		.byte	-64
 128 005a 80       		.byte	-128
 129 005b 41       		.byte	65
 130 005c 00       		.byte	0
 131 005d C1       		.byte	-63
 132 005e 81       		.byte	-127
 133 005f 40       		.byte	64
 134 0060 00       		.byte	0
 135 0061 C1       		.byte	-63
 136 0062 81       		.byte	-127
 137 0063 40       		.byte	64
 138 0064 01       		.byte	1
 139 0065 C0       		.byte	-64
 140 0066 80       		.byte	-128
 141 0067 41       		.byte	65
 142 0068 01       		.byte	1
 143 0069 C0       		.byte	-64
 144 006a 80       		.byte	-128
 145 006b 41       		.byte	65
 146 006c 00       		.byte	0
 147 006d C1       		.byte	-63
 148 006e 81       		.byte	-127
 149 006f 40       		.byte	64
 150 0070 01       		.byte	1
 151 0071 C0       		.byte	-64
 152 0072 80       		.byte	-128
 153 0073 41       		.byte	65
 154 0074 00       		.byte	0
 155 0075 C1       		.byte	-63
 156 0076 81       		.byte	-127
 157 0077 40       		.byte	64
 158 0078 00       		.byte	0
 159 0079 C1       		.byte	-63
 160 007a 81       		.byte	-127
 161 007b 40       		.byte	64
 162 007c 01       		.byte	1
 163 007d C0       		.byte	-64
 164 007e 80       		.byte	-128
 165 007f 41       		.byte	65
 166 0080 01       		.byte	1
 167 0081 C0       		.byte	-64
 168 0082 80       		.byte	-128
 169 0083 41       		.byte	65
 170 0084 00       		.byte	0
 171 0085 C1       		.byte	-63
 172 0086 81       		.byte	-127
 173 0087 40       		.byte	64
 174 0088 00       		.byte	0
 175 0089 C1       		.byte	-63
 176 008a 81       		.byte	-127
 177 008b 40       		.byte	64
 178 008c 01       		.byte	1
 179 008d C0       		.byte	-64
 180 008e 80       		.byte	-128
 181 008f 41       		.byte	65
 182 0090 00       		.byte	0
 183 0091 C1       		.byte	-63
 184 0092 81       		.byte	-127
 185 0093 40       		.byte	64
 186 0094 01       		.byte	1
 187 0095 C0       		.byte	-64
 188 0096 80       		.byte	-128
 189 0097 41       		.byte	65
 190 0098 01       		.byte	1
 191 0099 C0       		.byte	-64
 192 009a 80       		.byte	-128
 193 009b 41       		.byte	65
 194 009c 00       		.byte	0
 195 009d C1       		.byte	-63
 196 009e 81       		.byte	-127
 197 009f 40       		.byte	64
 198 00a0 00       		.byte	0
 199 00a1 C1       		.byte	-63
 200 00a2 81       		.byte	-127
 201 00a3 40       		.byte	64
 202 00a4 01       		.byte	1
 203 00a5 C0       		.byte	-64
 204 00a6 80       		.byte	-128
 205 00a7 41       		.byte	65
 206 00a8 01       		.byte	1
 207 00a9 C0       		.byte	-64
 208 00aa 80       		.byte	-128
 209 00ab 41       		.byte	65
 210 00ac 00       		.byte	0
 211 00ad C1       		.byte	-63
 212 00ae 81       		.byte	-127
 213 00af 40       		.byte	64
 214 00b0 01       		.byte	1
 215 00b1 C0       		.byte	-64
 216 00b2 80       		.byte	-128
 217 00b3 41       		.byte	65
 218 00b4 00       		.byte	0
 219 00b5 C1       		.byte	-63
 220 00b6 81       		.byte	-127
 221 00b7 40       		.byte	64
 222 00b8 00       		.byte	0
 223 00b9 C1       		.byte	-63
 224 00ba 81       		.byte	-127
 225 00bb 40       		.byte	64
 226 00bc 01       		.byte	1
 227 00bd C0       		.byte	-64
 228 00be 80       		.byte	-128
 229 00bf 41       		.byte	65
 230 00c0 00       		.byte	0
 231 00c1 C1       		.byte	-63
 232 00c2 81       		.byte	-127
 233 00c3 40       		.byte	64
 234 00c4 01       		.byte	1
 235 00c5 C0       		.byte	-64
 236 00c6 80       		.byte	-128
 237 00c7 41       		.byte	65
 238 00c8 01       		.byte	1
 239 00c9 C0       		.byte	-64
 240 00ca 80       		.byte	-128
 241 00cb 41       		.byte	65
 242 00cc 00       		.byte	0
 243 00cd C1       		.byte	-63
 244 00ce 81       		.byte	-127
 245 00cf 40       		.byte	64
 246 00d0 01       		.byte	1
 247 00d1 C0       		.byte	-64
 248 00d2 80       		.byte	-128
 249 00d3 41       		.byte	65
 250 00d4 00       		.byte	0
 251 00d5 C1       		.byte	-63
 252 00d6 81       		.byte	-127
 253 00d7 40       		.byte	64
 254 00d8 00       		.byte	0
 255 00d9 C1       		.byte	-63
 256 00da 81       		.byte	-127
 257 00db 40       		.byte	64
 258 00dc 01       		.byte	1
 259 00dd C0       		.byte	-64
 260 00de 80       		.byte	-128
 261 00df 41       		.byte	65
 262 00e0 01       		.byte	1
 263 00e1 C0       		.byte	-64
 264 00e2 80       		.byte	-128
 265 00e3 41       		.byte	65
 266 00e4 00       		.byte	0
 267 00e5 C1       		.byte	-63
 268 00e6 81       		.byte	-127
 269 00e7 40       		.byte	64
 270 00e8 00       		.byte	0
 271 00e9 C1       		.byte	-63
 272 00ea 81       		.byte	-127
 273 00eb 40       		.byte	64
 274 00ec 01       		.byte	1
 275 00ed C0       		.byte	-64
 276 00ee 80       		.byte	-128
 277 00ef 41       		.byte	65
 278 00f0 00       		.byte	0
 279 00f1 C1       		.byte	-63
 280 00f2 81       		.byte	-127
 281 00f3 40       		.byte	64
 282 00f4 01       		.byte	1
 283 00f5 C0       		.byte	-64
 284 00f6 80       		.byte	-128
 285 00f7 41       		.byte	65
 286 00f8 01       		.byte	1
 287 00f9 C0       		.byte	-64
 288 00fa 80       		.byte	-128
 289 00fb 41       		.byte	65
 290 00fc 00       		.byte	0
 291 00fd C1       		.byte	-63
 292 00fe 81       		.byte	-127
 293 00ff 40       		.byte	64
 294              		.section	.rodata.table_crc_lo,"a",%progbits
 295              		.align	2
 298              	table_crc_lo:
 299 0000 00       		.byte	0
 300 0001 C0       		.byte	-64
 301 0002 C1       		.byte	-63
 302 0003 01       		.byte	1
 303 0004 C3       		.byte	-61
 304 0005 03       		.byte	3
 305 0006 02       		.byte	2
 306 0007 C2       		.byte	-62
 307 0008 C6       		.byte	-58
 308 0009 06       		.byte	6
 309 000a 07       		.byte	7
 310 000b C7       		.byte	-57
 311 000c 05       		.byte	5
 312 000d C5       		.byte	-59
 313 000e C4       		.byte	-60
 314 000f 04       		.byte	4
 315 0010 CC       		.byte	-52
 316 0011 0C       		.byte	12
 317 0012 0D       		.byte	13
 318 0013 CD       		.byte	-51
 319 0014 0F       		.byte	15
 320 0015 CF       		.byte	-49
 321 0016 CE       		.byte	-50
 322 0017 0E       		.byte	14
 323 0018 0A       		.byte	10
 324 0019 CA       		.byte	-54
 325 001a CB       		.byte	-53
 326 001b 0B       		.byte	11
 327 001c C9       		.byte	-55
 328 001d 09       		.byte	9
 329 001e 08       		.byte	8
 330 001f C8       		.byte	-56
 331 0020 D8       		.byte	-40
 332 0021 18       		.byte	24
 333 0022 19       		.byte	25
 334 0023 D9       		.byte	-39
 335 0024 1B       		.byte	27
 336 0025 DB       		.byte	-37
 337 0026 DA       		.byte	-38
 338 0027 1A       		.byte	26
 339 0028 1E       		.byte	30
 340 0029 DE       		.byte	-34
 341 002a DF       		.byte	-33
 342 002b 1F       		.byte	31
 343 002c DD       		.byte	-35
 344 002d 1D       		.byte	29
 345 002e 1C       		.byte	28
 346 002f DC       		.byte	-36
 347 0030 14       		.byte	20
 348 0031 D4       		.byte	-44
 349 0032 D5       		.byte	-43
 350 0033 15       		.byte	21
 351 0034 D7       		.byte	-41
 352 0035 17       		.byte	23
 353 0036 16       		.byte	22
 354 0037 D6       		.byte	-42
 355 0038 D2       		.byte	-46
 356 0039 12       		.byte	18
 357 003a 13       		.byte	19
 358 003b D3       		.byte	-45
 359 003c 11       		.byte	17
 360 003d D1       		.byte	-47
 361 003e D0       		.byte	-48
 362 003f 10       		.byte	16
 363 0040 F0       		.byte	-16
 364 0041 30       		.byte	48
 365 0042 31       		.byte	49
 366 0043 F1       		.byte	-15
 367 0044 33       		.byte	51
 368 0045 F3       		.byte	-13
 369 0046 F2       		.byte	-14
 370 0047 32       		.byte	50
 371 0048 36       		.byte	54
 372 0049 F6       		.byte	-10
 373 004a F7       		.byte	-9
 374 004b 37       		.byte	55
 375 004c F5       		.byte	-11
 376 004d 35       		.byte	53
 377 004e 34       		.byte	52
 378 004f F4       		.byte	-12
 379 0050 3C       		.byte	60
 380 0051 FC       		.byte	-4
 381 0052 FD       		.byte	-3
 382 0053 3D       		.byte	61
 383 0054 FF       		.byte	-1
 384 0055 3F       		.byte	63
 385 0056 3E       		.byte	62
 386 0057 FE       		.byte	-2
 387 0058 FA       		.byte	-6
 388 0059 3A       		.byte	58
 389 005a 3B       		.byte	59
 390 005b FB       		.byte	-5
 391 005c 39       		.byte	57
 392 005d F9       		.byte	-7
 393 005e F8       		.byte	-8
 394 005f 38       		.byte	56
 395 0060 28       		.byte	40
 396 0061 E8       		.byte	-24
 397 0062 E9       		.byte	-23
 398 0063 29       		.byte	41
 399 0064 EB       		.byte	-21
 400 0065 2B       		.byte	43
 401 0066 2A       		.byte	42
 402 0067 EA       		.byte	-22
 403 0068 EE       		.byte	-18
 404 0069 2E       		.byte	46
 405 006a 2F       		.byte	47
 406 006b EF       		.byte	-17
 407 006c 2D       		.byte	45
 408 006d ED       		.byte	-19
 409 006e EC       		.byte	-20
 410 006f 2C       		.byte	44
 411 0070 E4       		.byte	-28
 412 0071 24       		.byte	36
 413 0072 25       		.byte	37
 414 0073 E5       		.byte	-27
 415 0074 27       		.byte	39
 416 0075 E7       		.byte	-25
 417 0076 E6       		.byte	-26
 418 0077 26       		.byte	38
 419 0078 22       		.byte	34
 420 0079 E2       		.byte	-30
 421 007a E3       		.byte	-29
 422 007b 23       		.byte	35
 423 007c E1       		.byte	-31
 424 007d 21       		.byte	33
 425 007e 20       		.byte	32
 426 007f E0       		.byte	-32
 427 0080 A0       		.byte	-96
 428 0081 60       		.byte	96
 429 0082 61       		.byte	97
 430 0083 A1       		.byte	-95
 431 0084 63       		.byte	99
 432 0085 A3       		.byte	-93
 433 0086 A2       		.byte	-94
 434 0087 62       		.byte	98
 435 0088 66       		.byte	102
 436 0089 A6       		.byte	-90
 437 008a A7       		.byte	-89
 438 008b 67       		.byte	103
 439 008c A5       		.byte	-91
 440 008d 65       		.byte	101
 441 008e 64       		.byte	100
 442 008f A4       		.byte	-92
 443 0090 6C       		.byte	108
 444 0091 AC       		.byte	-84
 445 0092 AD       		.byte	-83
 446 0093 6D       		.byte	109
 447 0094 AF       		.byte	-81
 448 0095 6F       		.byte	111
 449 0096 6E       		.byte	110
 450 0097 AE       		.byte	-82
 451 0098 AA       		.byte	-86
 452 0099 6A       		.byte	106
 453 009a 6B       		.byte	107
 454 009b AB       		.byte	-85
 455 009c 69       		.byte	105
 456 009d A9       		.byte	-87
 457 009e A8       		.byte	-88
 458 009f 68       		.byte	104
 459 00a0 78       		.byte	120
 460 00a1 B8       		.byte	-72
 461 00a2 B9       		.byte	-71
 462 00a3 79       		.byte	121
 463 00a4 BB       		.byte	-69
 464 00a5 7B       		.byte	123
 465 00a6 7A       		.byte	122
 466 00a7 BA       		.byte	-70
 467 00a8 BE       		.byte	-66
 468 00a9 7E       		.byte	126
 469 00aa 7F       		.byte	127
 470 00ab BF       		.byte	-65
 471 00ac 7D       		.byte	125
 472 00ad BD       		.byte	-67
 473 00ae BC       		.byte	-68
 474 00af 7C       		.byte	124
 475 00b0 B4       		.byte	-76
 476 00b1 74       		.byte	116
 477 00b2 75       		.byte	117
 478 00b3 B5       		.byte	-75
 479 00b4 77       		.byte	119
 480 00b5 B7       		.byte	-73
 481 00b6 B6       		.byte	-74
 482 00b7 76       		.byte	118
 483 00b8 72       		.byte	114
 484 00b9 B2       		.byte	-78
 485 00ba B3       		.byte	-77
 486 00bb 73       		.byte	115
 487 00bc B1       		.byte	-79
 488 00bd 71       		.byte	113
 489 00be 70       		.byte	112
 490 00bf B0       		.byte	-80
 491 00c0 50       		.byte	80
 492 00c1 90       		.byte	-112
 493 00c2 91       		.byte	-111
 494 00c3 51       		.byte	81
 495 00c4 93       		.byte	-109
 496 00c5 53       		.byte	83
 497 00c6 52       		.byte	82
 498 00c7 92       		.byte	-110
 499 00c8 96       		.byte	-106
 500 00c9 56       		.byte	86
 501 00ca 57       		.byte	87
 502 00cb 97       		.byte	-105
 503 00cc 55       		.byte	85
 504 00cd 95       		.byte	-107
 505 00ce 94       		.byte	-108
 506 00cf 54       		.byte	84
 507 00d0 9C       		.byte	-100
 508 00d1 5C       		.byte	92
 509 00d2 5D       		.byte	93
 510 00d3 9D       		.byte	-99
 511 00d4 5F       		.byte	95
 512 00d5 9F       		.byte	-97
 513 00d6 9E       		.byte	-98
 514 00d7 5E       		.byte	94
 515 00d8 5A       		.byte	90
 516 00d9 9A       		.byte	-102
 517 00da 9B       		.byte	-101
 518 00db 5B       		.byte	91
 519 00dc 99       		.byte	-103
 520 00dd 59       		.byte	89
 521 00de 58       		.byte	88
 522 00df 98       		.byte	-104
 523 00e0 88       		.byte	-120
 524 00e1 48       		.byte	72
 525 00e2 49       		.byte	73
 526 00e3 89       		.byte	-119
 527 00e4 4B       		.byte	75
 528 00e5 8B       		.byte	-117
 529 00e6 8A       		.byte	-118
 530 00e7 4A       		.byte	74
 531 00e8 4E       		.byte	78
 532 00e9 8E       		.byte	-114
 533 00ea 8F       		.byte	-113
 534 00eb 4F       		.byte	79
 535 00ec 8D       		.byte	-115
 536 00ed 4D       		.byte	77
 537 00ee 4C       		.byte	76
 538 00ef 8C       		.byte	-116
 539 00f0 44       		.byte	68
 540 00f1 84       		.byte	-124
 541 00f2 85       		.byte	-123
 542 00f3 45       		.byte	69
 543 00f4 87       		.byte	-121
 544 00f5 47       		.byte	71
 545 00f6 46       		.byte	70
 546 00f7 86       		.byte	-122
 547 00f8 82       		.byte	-126
 548 00f9 42       		.byte	66
 549 00fa 43       		.byte	67
 550 00fb 83       		.byte	-125
 551 00fc 41       		.byte	65
 552 00fd 81       		.byte	-127
 553 00fe 80       		.byte	-128
 554 00ff 40       		.byte	64
 555              		.comm	fd,4,4
 556              		.comm	received_string,513,4
 557              		.comm	rx_length,4,4
 558              		.comm	input_Register,20,4
 559              		.section	.rodata
 560              		.align	2
 561              	.LC0:
 562 0000 6D6F746F 		.ascii	"motor\000"
 562      7200
 563 0006 0000     		.align	2
 564              	.LC1:
 565 0008 6D6F746F 		.ascii	"motor  [options]\302\240[parameters]\302\240- Type "
 565      7220205B 
 565      6F707469 
 565      6F6E735D 
 565      C2A05B70 
 566 002f 6D6F746F 		.ascii	"motor help for more help\015\012\012\000\000"
 566      72206865 
 566      6C702066 
 566      6F72206D 
 566      6F726520 
 567              		.section	.rodata.xMotorCommand,"a",%progbits
 568              		.align	2
 571              	xMotorCommand:
 572 0000 00000000 		.word	.LC0
 573 0004 08000000 		.word	.LC1
 574 0008 00000000 		.word	prvMotorCommand
 575 000c FF       		.byte	-1
 576 000d 000000   		.space	3
 577              		.section	.rodata
 578              		.align	2
 579              	.LC2:
 580 004c 7461736B 		.ascii	"task\000"
 580      00
 581 0051 000000   		.align	2
 582              	.LC3:
 583 0054 7461736B 		.ascii	"task - return tasks list\015\012\012\000\000"
 583      202D2072 
 583      65747572 
 583      6E207461 
 583      736B7320 
 584              		.section	.rodata.xTaskStatsCommand,"a",%progbits
 585              		.align	2
 588              	xTaskStatsCommand:
 589 0000 4C000000 		.word	.LC2
 590 0004 54000000 		.word	.LC3
 591 0008 00000000 		.word	prvTaskStatsCommand
 592 000c FF       		.byte	-1
 593 000d 000000   		.space	3
 594              		.section	.data.xDelay,"aw",%progbits
 595              		.align	2
 598              	xDelay:
 599 0000 FFFFFFFF 		.word	-1
 600              		.comm	telegramS,28,4
 601              		.comm	telegramR,28,4
 602              		.section	.rodata
 603 0071 000000   		.align	2
 604              	.LC4:
 605 0074 73706565 		.ascii	"speed\000"
 605      6400
 606 007a 0000     		.align	2
 607              	.LC5:
 608 007c 4572726F 		.ascii	"Error: speed is out of range [1,100]p : %d\012\012\000"
 608      723A2073 
 608      70656564 
 608      20697320 
 608      6F757420 
 609 00a9 00       		.ascii	"\000"
 610 00aa 0000     		.align	2
 611              	.LC6:
 612 00ac 53706565 		.ascii	"Speed succsesfully set.\012\012\000"
 612      64207375 
 612      63637365 
 612      7366756C 
 612      6C792073 
 613 00c6 0000     		.align	2
 614              	.LC7:
 615 00c8 4D4F4442 		.ascii	"MODBUS ERROR !!!.\012\012\000"
 615      55532045 
 615      52524F52 
 615      20212121 
 615      2E0A0A00 
 616              		.align	2
 617              	.LC8:
 618 00dc 4572726F 		.ascii	"Error recieving response!\012\012\000"
 618      72207265 
 618      63696576 
 618      696E6720 
 618      72657370 
 619              		.align	2
 620              	.LC9:
 621 00f8 4572726F 		.ascii	"Error sending Queue!\012\012\000"
 621      72207365 
 621      6E64696E 
 621      67205175 
 621      65756521 
 622 010f 00       		.align	2
 623              	.LC10:
 624 0110 75707261 		.ascii	"upramp\000"
 624      6D7000
 625 0117 00       		.align	2
 626              	.LC11:
 627 0118 4572726F 		.ascii	"Error: Ramp time is out of range [15,300]s : %d\012"
 627      723A2052 
 627      616D7020 
 627      74696D65 
 627      20697320 
 628 0148 0A0000   		.ascii	"\012\000\000"
 629 014b 00       		.align	2
 630              	.LC12:
 631 014c 55702072 		.ascii	"Up ramp succsesfully set.\012\012\000"
 631      616D7020 
 631      73756363 
 631      73657366 
 631      756C6C79 
 632              		.align	2
 633              	.LC13:
 634 0168 646F776E 		.ascii	"downramp\000"
 634      72616D70 
 634      00
 635 0171 000000   		.align	2
 636              	.LC14:
 637 0174 446F776E 		.ascii	"Down ramp succsesfully set.\012\012\000"
 637      2072616D 
 637      70207375 
 637      63637365 
 637      7366756C 
 638              		.section	.text.handleVariable_set,"ax",%progbits
 639              		.align	2
 640              		.global	handleVariable_set
 641              		.thumb
 642              		.thumb_func
 644              	handleVariable_set:
 645              	.LFB110:
 646              		.file 1 "App/STM32F4-Discovery/tcpCLI.c"
   1:App/STM32F4-Discovery/tcpCLI.c **** #include "tcpCLI.h"
   2:App/STM32F4-Discovery/tcpCLI.c **** 
   3:App/STM32F4-Discovery/tcpCLI.c **** 
   4:App/STM32F4-Discovery/tcpCLI.c **** static 	portTickType xDelay = portMAX_DELAY;//3000 / portTICK_RATE_MS;
   5:App/STM32F4-Discovery/tcpCLI.c **** 
   6:App/STM32F4-Discovery/tcpCLI.c **** QueueTelegram telegramS, telegramR; 
   7:App/STM32F4-Discovery/tcpCLI.c **** 
   8:App/STM32F4-Discovery/tcpCLI.c **** /* default telegram */
   9:App/STM32F4-Discovery/tcpCLI.c **** /*
  10:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[0] = 1000;
  11:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[1] = 0;	
  12:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[2] = 2250;
  13:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[3] = 10;	
  14:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[4] = 10;	
  15:App/STM32F4-Discovery/tcpCLI.c **** telegram.size = 5;
  16:App/STM32F4-Discovery/tcpCLI.c **** telegram.Qcmd = SETDATA;		
  17:App/STM32F4-Discovery/tcpCLI.c **** */
  18:App/STM32F4-Discovery/tcpCLI.c **** 
  19:App/STM32F4-Discovery/tcpCLI.c **** 
  20:App/STM32F4-Discovery/tcpCLI.c **** 
  21:App/STM32F4-Discovery/tcpCLI.c **** int handleVariable_set (	
  22:App/STM32F4-Discovery/tcpCLI.c **** 				int8_t *pcWriteBuffer, 
  23:App/STM32F4-Discovery/tcpCLI.c **** 				size_t xWriteBufferLen,
  24:App/STM32F4-Discovery/tcpCLI.c **** 				uint8_t * Param, 
  25:App/STM32F4-Discovery/tcpCLI.c **** 				int xParamLength,
  26:App/STM32F4-Discovery/tcpCLI.c **** 				xQueueHandle Qhandle,
  27:App/STM32F4-Discovery/tcpCLI.c **** 				uint8_t * Value,
  28:App/STM32F4-Discovery/tcpCLI.c **** 				int xValueLength,
  29:App/STM32F4-Discovery/tcpCLI.c **** 				int socket )
  30:App/STM32F4-Discovery/tcpCLI.c **** {
 647              		.loc 1 30 0
 648              		.cfi_startproc
 649              		@ args = 16, pretend = 0, frame = 32
 650              		@ frame_needed = 1, uses_anonymous_args = 0
 651 0000 B0B5     		push	{r4, r5, r7, lr}
 652              	.LCFI0:
 653              		.cfi_def_cfa_offset 16
 654              		.cfi_offset 4, -16
 655              		.cfi_offset 5, -12
 656              		.cfi_offset 7, -8
 657              		.cfi_offset 14, -4
 658 0002 88B0     		sub	sp, sp, #32
 659              	.LCFI1:
 660              		.cfi_def_cfa_offset 48
 661 0004 00AF     		add	r7, sp, #0
 662              	.LCFI2:
 663              		.cfi_def_cfa_register 7
 664 0006 F860     		str	r0, [r7, #12]
 665 0008 B960     		str	r1, [r7, #8]
 666 000a 7A60     		str	r2, [r7, #4]
 667 000c 3B60     		str	r3, [r7]
  31:App/STM32F4-Discovery/tcpCLI.c **** 
  32:App/STM32F4-Discovery/tcpCLI.c **** 
  33:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
  34:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER speed [value]
  35:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
  36:App/STM32F4-Discovery/tcpCLI.c **** 
  37:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "speed", 5))
 668              		.loc 1 37 0
 669 000e 7868     		ldr	r0, [r7, #4]
 670 0010 A549     		ldr	r1, .L19
 671 0012 0522     		movs	r2, #5
 672 0014 FFF7FEFF 		bl	strncmp
 673 0018 0346     		mov	r3, r0
 674 001a 002B     		cmp	r3, #0
 675 001c 40F0A280 		bne	.L2
 676              	.LBB2:
  38:App/STM32F4-Discovery/tcpCLI.c **** 	{	
  39:App/STM32F4-Discovery/tcpCLI.c **** 	
  40:App/STM32F4-Discovery/tcpCLI.c **** 	
  41:App/STM32F4-Discovery/tcpCLI.c **** 		
  42:App/STM32F4-Discovery/tcpCLI.c **** 		// now convert parameter to proper value and check if it is in range 
  43:App/STM32F4-Discovery/tcpCLI.c ****         	Value[xValueLength] = '\0'; 	
 677              		.loc 1 43 0
 678 0020 BB6B     		ldr	r3, [r7, #56]
 679 0022 7A6B     		ldr	r2, [r7, #52]
 680 0024 1344     		add	r3, r3, r2
 681 0026 0022     		movs	r2, #0
 682 0028 1A70     		strb	r2, [r3]
  44:App/STM32F4-Discovery/tcpCLI.c **** 		uint16_t s1 = atoi ( Value ); 
 683              		.loc 1 44 0
 684 002a 786B     		ldr	r0, [r7, #52]
 685 002c FFF7FEFF 		bl	atoi
 686 0030 0346     		mov	r3, r0
 687 0032 FB83     		strh	r3, [r7, #30]	@ movhi
  45:App/STM32F4-Discovery/tcpCLI.c **** 		// if speed is in range
  46:App/STM32F4-Discovery/tcpCLI.c **** 		if(s1 < 1 ||  s1 > 100 )
 688              		.loc 1 46 0
 689 0034 FB8B     		ldrh	r3, [r7, #30]
 690 0036 002B     		cmp	r3, #0
 691 0038 02D0     		beq	.L3
 692              		.loc 1 46 0 is_stmt 0 discriminator 1
 693 003a FB8B     		ldrh	r3, [r7, #30]
 694 003c 642B     		cmp	r3, #100
 695 003e 07D9     		bls	.L4
 696              	.L3:
  47:App/STM32F4-Discovery/tcpCLI.c **** 		{
  48:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP
  49:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error: speed is out of range [1,100]p : %d\n\n\0", s1);
 697              		.loc 1 49 0 is_stmt 1
 698 0040 FB8B     		ldrh	r3, [r7, #30]
 699 0042 F868     		ldr	r0, [r7, #12]
 700 0044 9949     		ldr	r1, .L19+4
 701 0046 1A46     		mov	r2, r3
 702 0048 FFF7FEFF 		bl	sprintf
  50:App/STM32F4-Discovery/tcpCLI.c **** 		//	pcWriteBuffer[11+ 3] = "\0"; 
  51:App/STM32F4-Discovery/tcpCLI.c **** 			
  52:App/STM32F4-Discovery/tcpCLI.c **** 			////send( socket_0, buf, 11+3, 0);
  53:App/STM32F4-Discovery/tcpCLI.c **** 
  54:App/STM32F4-Discovery/tcpCLI.c **** 	       		return pdFALSE; 	
 703              		.loc 1 54 0
 704 004c 0023     		movs	r3, #0
 705 004e A3E1     		b	.L1
 706              	.L4:
  55:App/STM32F4-Discovery/tcpCLI.c **** 		}	
  56:App/STM32F4-Discovery/tcpCLI.c **** 	
  57:App/STM32F4-Discovery/tcpCLI.c **** 		// convert to correct value ( * 100 ) 
  58:App/STM32F4-Discovery/tcpCLI.c **** 		s1 *= 100; 
 707              		.loc 1 58 0
 708 0050 FB8B     		ldrh	r3, [r7, #30]	@ movhi
 709 0052 1A46     		mov	r2, r3	@ movhi
 710 0054 9200     		lsls	r2, r2, #2
 711 0056 1344     		add	r3, r3, r2
 712 0058 1A46     		mov	r2, r3	@ movhi
 713 005a 9100     		lsls	r1, r2, #2
 714 005c 1A46     		mov	r2, r3	@ movhi
 715 005e 0B46     		mov	r3, r1	@ movhi
 716 0060 1344     		add	r3, r3, r2
 717 0062 9B00     		lsls	r3, r3, #2
 718 0064 FB83     		strh	r3, [r7, #30]	@ movhi
  59:App/STM32F4-Discovery/tcpCLI.c **** 		
  60:App/STM32F4-Discovery/tcpCLI.c **** 		// test i
  61:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[1] = 0;	
 719              		.loc 1 61 0
 720 0066 924B     		ldr	r3, .L19+8
 721 0068 0022     		movs	r2, #0
 722 006a 5A81     		strh	r2, [r3, #10]	@ movhi
  62:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[2] = 2250;
 723              		.loc 1 62 0
 724 006c 904B     		ldr	r3, .L19+8
 725 006e 40F6CA02 		movw	r2, #2250
 726 0072 9A81     		strh	r2, [r3, #12]	@ movhi
  63:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[3] = 10;	
 727              		.loc 1 63 0
 728 0074 8E4B     		ldr	r3, .L19+8
 729 0076 0A22     		movs	r2, #10
 730 0078 DA81     		strh	r2, [r3, #14]	@ movhi
  64:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[4] = 10;	
 731              		.loc 1 64 0
 732 007a 8D4B     		ldr	r3, .L19+8
 733 007c 0A22     		movs	r2, #10
 734 007e 1A82     		strh	r2, [r3, #16]	@ movhi
  65:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5;
 735              		.loc 1 65 0
 736 0080 8B4B     		ldr	r3, .L19+8
 737 0082 0522     		movs	r2, #5
 738 0084 5A60     		str	r2, [r3, #4]
  66:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = SETDATA;	
 739              		.loc 1 66 0
 740 0086 8A4B     		ldr	r3, .L19+8
 741 0088 0022     		movs	r2, #0
 742 008a 1A70     		strb	r2, [r3]
  67:App/STM32F4-Discovery/tcpCLI.c **** 		// test /
  68:App/STM32F4-Discovery/tcpCLI.c **** 		// setup telegram 
  69:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = SETDATA;
 743              		.loc 1 69 0
 744 008c 884B     		ldr	r3, .L19+8
 745 008e 0022     		movs	r2, #0
 746 0090 1A70     		strb	r2, [r3]
  70:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5;
 747              		.loc 1 70 0
 748 0092 874B     		ldr	r3, .L19+8
 749 0094 0522     		movs	r2, #5
 750 0096 5A60     		str	r2, [r3, #4]
  71:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[0] = s1;
 751              		.loc 1 71 0
 752 0098 854B     		ldr	r3, .L19+8
 753 009a FA8B     		ldrh	r2, [r7, #30]	@ movhi
 754 009c 1A81     		strh	r2, [r3, #8]	@ movhi
  72:App/STM32F4-Discovery/tcpCLI.c **** 		
  73:App/STM32F4-Discovery/tcpCLI.c **** 	
  74:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
  75:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 755              		.loc 1 75 0
 756 009e 854B     		ldr	r3, .L19+12
 757 00a0 1A68     		ldr	r2, [r3]
 758 00a2 854B     		ldr	r3, .L19+16
 759 00a4 1B68     		ldr	r3, [r3]
 760 00a6 1046     		mov	r0, r2
 761 00a8 8149     		ldr	r1, .L19+8
 762 00aa 1A46     		mov	r2, r3
 763 00ac 0023     		movs	r3, #0
 764 00ae FFF7FEFF 		bl	xQueueGenericSend
 765 00b2 0346     		mov	r3, r0
 766 00b4 012B     		cmp	r3, #1
 767 00b6 42D1     		bne	.L6
  76:App/STM32F4-Discovery/tcpCLI.c **** 		{	
  77:App/STM32F4-Discovery/tcpCLI.c **** 					
  78:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay)== pdPASS)
 768              		.loc 1 78 0
 769 00b8 7E4B     		ldr	r3, .L19+12
 770 00ba 1A68     		ldr	r2, [r3]
 771 00bc 7E4B     		ldr	r3, .L19+16
 772 00be 1B68     		ldr	r3, [r3]
 773 00c0 1046     		mov	r0, r2
 774 00c2 7E49     		ldr	r1, .L19+20
 775 00c4 1A46     		mov	r2, r3
 776 00c6 0023     		movs	r3, #0
 777 00c8 FFF7FEFF 		bl	xQueueGenericReceive
 778 00cc 0346     		mov	r3, r0
 779 00ce 012B     		cmp	r3, #1
 780 00d0 24D1     		bne	.L7
  79:App/STM32F4-Discovery/tcpCLI.c **** 			{
  80:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 781              		.loc 1 80 0
 782 00d2 7A4B     		ldr	r3, .L19+20
 783 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 784 00d6 062B     		cmp	r3, #6
 785 00d8 11D1     		bne	.L8
  81:App/STM32F4-Discovery/tcpCLI.c **** 				{	
  82:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed succsesfully set.\n\n");
 786              		.loc 1 82 0
 787 00da FA68     		ldr	r2, [r7, #12]
 788 00dc 784B     		ldr	r3, .L19+24
 789 00de 1546     		mov	r5, r2
 790 00e0 1C46     		mov	r4, r3
 791 00e2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 792 00e4 2860     		str	r0, [r5]	@ unaligned
 793 00e6 6960     		str	r1, [r5, #4]	@ unaligned
 794 00e8 AA60     		str	r2, [r5, #8]	@ unaligned
 795 00ea EB60     		str	r3, [r5, #12]	@ unaligned
 796 00ec 03CC     		ldmia	r4!, {r0, r1}
 797 00ee 2861     		str	r0, [r5, #16]	@ unaligned
 798 00f0 6961     		str	r1, [r5, #20]	@ unaligned
 799 00f2 2388     		ldrh	r3, [r4]	@ unaligned
 800 00f4 2B83     		strh	r3, [r5, #24]	@ unaligned
  83:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 25; 	
 801              		.loc 1 83 0
 802 00f6 1923     		movs	r3, #25
 803 00f8 BB61     		str	r3, [r7, #24]
  84:App/STM32F4-Discovery/tcpCLI.c **** 				//	//send( socket, buf, len, 0);
  85:App/STM32F4-Discovery/tcpCLI.c **** 
  86:App/STM32F4-Discovery/tcpCLI.c **** 
  87:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 804              		.loc 1 87 0
 805 00fa 0123     		movs	r3, #1
 806 00fc 4CE1     		b	.L1
 807              	.L8:
  88:App/STM32F4-Discovery/tcpCLI.c **** 
  89:App/STM32F4-Discovery/tcpCLI.c **** 				}
  90:App/STM32F4-Discovery/tcpCLI.c **** 				else
  91:App/STM32F4-Discovery/tcpCLI.c **** 				{
  92:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 808              		.loc 1 92 0
 809 00fe FA68     		ldr	r2, [r7, #12]
 810 0100 704B     		ldr	r3, .L19+28
 811 0102 1546     		mov	r5, r2
 812 0104 1C46     		mov	r4, r3
 813 0106 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 814 0108 2860     		str	r0, [r5]	@ unaligned
 815 010a 6960     		str	r1, [r5, #4]	@ unaligned
 816 010c AA60     		str	r2, [r5, #8]	@ unaligned
 817 010e EB60     		str	r3, [r5, #12]	@ unaligned
 818 0110 2068     		ldr	r0, [r4]	@ unaligned
 819 0112 2861     		str	r0, [r5, #16]	@ unaligned
  93:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 820              		.loc 1 93 0
 821 0114 1323     		movs	r3, #19
 822 0116 BB61     		str	r3, [r7, #24]
  94:App/STM32F4-Discovery/tcpCLI.c **** //					//send( socket, buf, len, 0);
  95:App/STM32F4-Discovery/tcpCLI.c **** 
  96:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 823              		.loc 1 96 0
 824 0118 0023     		movs	r3, #0
 825 011a 3DE1     		b	.L1
 826              	.L7:
  97:App/STM32F4-Discovery/tcpCLI.c **** 
  98:App/STM32F4-Discovery/tcpCLI.c **** 
  99:App/STM32F4-Discovery/tcpCLI.c **** 				}
 100:App/STM32F4-Discovery/tcpCLI.c **** 						
 101:App/STM32F4-Discovery/tcpCLI.c **** 			}
 102:App/STM32F4-Discovery/tcpCLI.c **** 			else
 103:App/STM32F4-Discovery/tcpCLI.c **** 			{
 104:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 105:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 106:App/STM32F4-Discovery/tcpCLI.c **** 		
 107:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 827              		.loc 1 107 0
 828 011c FA68     		ldr	r2, [r7, #12]
 829 011e 6A4B     		ldr	r3, .L19+32
 830 0120 1546     		mov	r5, r2
 831 0122 1C46     		mov	r4, r3
 832 0124 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 833 0126 2860     		str	r0, [r5]	@ unaligned
 834 0128 6960     		str	r1, [r5, #4]	@ unaligned
 835 012a AA60     		str	r2, [r5, #8]	@ unaligned
 836 012c EB60     		str	r3, [r5, #12]	@ unaligned
 837 012e 07CC     		ldmia	r4!, {r0, r1, r2}
 838 0130 2861     		str	r0, [r5, #16]	@ unaligned
 839 0132 6961     		str	r1, [r5, #20]	@ unaligned
 840 0134 AA61     		str	r2, [r5, #24]	@ unaligned
 108:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 841              		.loc 1 108 0
 842 0136 1B23     		movs	r3, #27
 843 0138 BB61     		str	r3, [r7, #24]
 109:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 110:App/STM32F4-Discovery/tcpCLI.c **** 
 111:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 844              		.loc 1 111 0
 845 013a 0023     		movs	r3, #0
 846 013c 2CE1     		b	.L1
 847              	.L6:
 112:App/STM32F4-Discovery/tcpCLI.c **** 			}
 113:App/STM32F4-Discovery/tcpCLI.c **** 
 114:App/STM32F4-Discovery/tcpCLI.c **** 
 115:App/STM32F4-Discovery/tcpCLI.c **** 		}
 116:App/STM32F4-Discovery/tcpCLI.c **** 		else
 117:App/STM32F4-Discovery/tcpCLI.c **** 		{
 118:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 119:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 120:App/STM32F4-Discovery/tcpCLI.c **** 		
 121:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 848              		.loc 1 121 0
 849 013e FA68     		ldr	r2, [r7, #12]
 850 0140 624B     		ldr	r3, .L19+36
 851 0142 1446     		mov	r4, r2
 852 0144 1D46     		mov	r5, r3
 853 0146 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 854 0148 2060     		str	r0, [r4]	@ unaligned
 855 014a 6160     		str	r1, [r4, #4]	@ unaligned
 856 014c A260     		str	r2, [r4, #8]	@ unaligned
 857 014e E360     		str	r3, [r4, #12]	@ unaligned
 858 0150 2868     		ldr	r0, [r5]	@ unaligned
 859 0152 2061     		str	r0, [r4, #16]	@ unaligned
 860 0154 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 861 0156 AB79     		ldrb	r3, [r5, #6]
 862 0158 A282     		strh	r2, [r4, #20]	@ unaligned
 863 015a A375     		strb	r3, [r4, #22]
 122:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 864              		.loc 1 122 0
 865 015c 1623     		movs	r3, #22
 866 015e BB61     		str	r3, [r7, #24]
 123:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 124:App/STM32F4-Discovery/tcpCLI.c **** 
 125:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 867              		.loc 1 125 0
 868 0160 0023     		movs	r3, #0
 869 0162 19E1     		b	.L1
 870              	.L2:
 871              	.LBE2:
 126:App/STM32F4-Discovery/tcpCLI.c **** 		}
 127:App/STM32F4-Discovery/tcpCLI.c **** 	}
 128:App/STM32F4-Discovery/tcpCLI.c **** 	
 129:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 130:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER upramp [value]
 131:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 132:App/STM32F4-Discovery/tcpCLI.c **** 
 133:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "upramp", 6))
 872              		.loc 1 133 0
 873 0164 7868     		ldr	r0, [r7, #4]
 874 0166 5A49     		ldr	r1, .L19+40
 875 0168 0622     		movs	r2, #6
 876 016a FFF7FEFF 		bl	strncmp
 877 016e 0346     		mov	r3, r0
 878 0170 002B     		cmp	r3, #0
 879 0172 74D1     		bne	.L9
 880              	.LBB3:
 134:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 135:App/STM32F4-Discovery/tcpCLI.c **** 	
 136:App/STM32F4-Discovery/tcpCLI.c **** 	
 137:App/STM32F4-Discovery/tcpCLI.c **** 		
 138:App/STM32F4-Discovery/tcpCLI.c **** 		// now convert parameter to proper value and check if it is in range 
 139:App/STM32F4-Discovery/tcpCLI.c ****         	Value[xValueLength] = '\0'; 	
 881              		.loc 1 139 0
 882 0174 BB6B     		ldr	r3, [r7, #56]
 883 0176 7A6B     		ldr	r2, [r7, #52]
 884 0178 1344     		add	r3, r3, r2
 885 017a 0022     		movs	r2, #0
 886 017c 1A70     		strb	r2, [r3]
 140:App/STM32F4-Discovery/tcpCLI.c **** 		uint16_t s1 = atoi ( Value ); 
 887              		.loc 1 140 0
 888 017e 786B     		ldr	r0, [r7, #52]
 889 0180 FFF7FEFF 		bl	atoi
 890 0184 0346     		mov	r3, r0
 891 0186 FB82     		strh	r3, [r7, #22]	@ movhi
 141:App/STM32F4-Discovery/tcpCLI.c **** 		// if speed is in range
 142:App/STM32F4-Discovery/tcpCLI.c **** 		if(s1 < 15 ||  s1 > 300 )
 892              		.loc 1 142 0
 893 0188 FB8A     		ldrh	r3, [r7, #22]
 894 018a 0E2B     		cmp	r3, #14
 895 018c 03D9     		bls	.L10
 896              		.loc 1 142 0 is_stmt 0 discriminator 1
 897 018e FB8A     		ldrh	r3, [r7, #22]
 898 0190 B3F5967F 		cmp	r3, #300
 899 0194 09D9     		bls	.L11
 900              	.L10:
 143:App/STM32F4-Discovery/tcpCLI.c **** 		{
 144:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP
 145:App/STM32F4-Discovery/tcpCLI.c **** 			
 146:App/STM32F4-Discovery/tcpCLI.c **** 			xWriteBufferLen = 100; 
 901              		.loc 1 146 0 is_stmt 1
 902 0196 6423     		movs	r3, #100
 903 0198 BB61     		str	r3, [r7, #24]
 147:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error: Ramp time is out of range [15,300]s : %d\n\n\0", s1);
 904              		.loc 1 147 0
 905 019a FB8A     		ldrh	r3, [r7, #22]
 906 019c F868     		ldr	r0, [r7, #12]
 907 019e 4D49     		ldr	r1, .L19+44
 908 01a0 1A46     		mov	r2, r3
 909 01a2 FFF7FEFF 		bl	sprintf
 148:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket_0, buf, len, 0);
 149:App/STM32F4-Discovery/tcpCLI.c **** 
 150:App/STM32F4-Discovery/tcpCLI.c **** 	       		return pdFALSE; 	
 910              		.loc 1 150 0
 911 01a6 0023     		movs	r3, #0
 912 01a8 F6E0     		b	.L1
 913              	.L11:
 151:App/STM32F4-Discovery/tcpCLI.c **** 		}	
 152:App/STM32F4-Discovery/tcpCLI.c **** 	
 153:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[3] = s1; 
 914              		.loc 1 153 0
 915 01aa 414B     		ldr	r3, .L19+8
 916 01ac FA8A     		ldrh	r2, [r7, #22]	@ movhi
 917 01ae DA81     		strh	r2, [r3, #14]	@ movhi
 154:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5; 
 918              		.loc 1 154 0
 919 01b0 3F4B     		ldr	r3, .L19+8
 920 01b2 0522     		movs	r2, #5
 921 01b4 5A60     		str	r2, [r3, #4]
 155:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = SETDATA;
 922              		.loc 1 155 0
 923 01b6 3E4B     		ldr	r3, .L19+8
 924 01b8 0022     		movs	r2, #0
 925 01ba 1A70     		strb	r2, [r3]
 156:App/STM32F4-Discovery/tcpCLI.c **** 		
 157:App/STM32F4-Discovery/tcpCLI.c **** 	
 158:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 159:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 926              		.loc 1 159 0
 927 01bc 3D4B     		ldr	r3, .L19+12
 928 01be 1A68     		ldr	r2, [r3]
 929 01c0 3D4B     		ldr	r3, .L19+16
 930 01c2 1B68     		ldr	r3, [r3]
 931 01c4 1046     		mov	r0, r2
 932 01c6 3A49     		ldr	r1, .L19+8
 933 01c8 1A46     		mov	r2, r3
 934 01ca 0023     		movs	r3, #0
 935 01cc FFF7FEFF 		bl	xQueueGenericSend
 936 01d0 0346     		mov	r3, r0
 937 01d2 012B     		cmp	r3, #1
 938 01d4 30D1     		bne	.L12
 160:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 161:App/STM32F4-Discovery/tcpCLI.c **** 					
 162:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay))
 939              		.loc 1 162 0
 940 01d6 374B     		ldr	r3, .L19+12
 941 01d8 1A68     		ldr	r2, [r3]
 942 01da 374B     		ldr	r3, .L19+16
 943 01dc 1B68     		ldr	r3, [r3]
 944 01de 1046     		mov	r0, r2
 945 01e0 3649     		ldr	r1, .L19+20
 946 01e2 1A46     		mov	r2, r3
 947 01e4 0023     		movs	r3, #0
 948 01e6 FFF7FEFF 		bl	xQueueGenericReceive
 949 01ea 0346     		mov	r3, r0
 950 01ec 002B     		cmp	r3, #0
 951 01ee 36D0     		beq	.L9
 163:App/STM32F4-Discovery/tcpCLI.c **** 			{
 164:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 952              		.loc 1 164 0
 953 01f0 324B     		ldr	r3, .L19+20
 954 01f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 955 01f4 062B     		cmp	r3, #6
 956 01f6 10D1     		bne	.L13
 165:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 166:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Up ramp succsesfully set.\n\n");
 957              		.loc 1 166 0
 958 01f8 FA68     		ldr	r2, [r7, #12]
 959 01fa 374B     		ldr	r3, .L19+48
 960 01fc 1546     		mov	r5, r2
 961 01fe 1C46     		mov	r4, r3
 962 0200 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 963 0202 2860     		str	r0, [r5]	@ unaligned
 964 0204 6960     		str	r1, [r5, #4]	@ unaligned
 965 0206 AA60     		str	r2, [r5, #8]	@ unaligned
 966 0208 EB60     		str	r3, [r5, #12]	@ unaligned
 967 020a 07CC     		ldmia	r4!, {r0, r1, r2}
 968 020c 2861     		str	r0, [r5, #16]	@ unaligned
 969 020e 6961     		str	r1, [r5, #20]	@ unaligned
 970 0210 AA61     		str	r2, [r5, #24]	@ unaligned
 167:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 27; 	
 971              		.loc 1 167 0
 972 0212 1B23     		movs	r3, #27
 973 0214 BB61     		str	r3, [r7, #24]
 168:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 169:App/STM32F4-Discovery/tcpCLI.c **** 
 170:App/STM32F4-Discovery/tcpCLI.c **** 
 171:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 974              		.loc 1 171 0
 975 0216 0123     		movs	r3, #1
 976 0218 BEE0     		b	.L1
 977              	.L13:
 172:App/STM32F4-Discovery/tcpCLI.c **** 
 173:App/STM32F4-Discovery/tcpCLI.c **** 				}
 174:App/STM32F4-Discovery/tcpCLI.c **** 				else
 175:App/STM32F4-Discovery/tcpCLI.c **** 				{
 176:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 978              		.loc 1 176 0
 979 021a FA68     		ldr	r2, [r7, #12]
 980 021c 294B     		ldr	r3, .L19+28
 981 021e 1546     		mov	r5, r2
 982 0220 1C46     		mov	r4, r3
 983 0222 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 984 0224 2860     		str	r0, [r5]	@ unaligned
 985 0226 6960     		str	r1, [r5, #4]	@ unaligned
 986 0228 AA60     		str	r2, [r5, #8]	@ unaligned
 987 022a EB60     		str	r3, [r5, #12]	@ unaligned
 988 022c 2068     		ldr	r0, [r4]	@ unaligned
 989 022e 2861     		str	r0, [r5, #16]	@ unaligned
 177:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 990              		.loc 1 177 0
 991 0230 1323     		movs	r3, #19
 992 0232 BB61     		str	r3, [r7, #24]
 178:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 179:App/STM32F4-Discovery/tcpCLI.c **** 
 180:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 993              		.loc 1 180 0
 994 0234 0023     		movs	r3, #0
 995 0236 AFE0     		b	.L1
 996              	.L12:
 181:App/STM32F4-Discovery/tcpCLI.c **** 
 182:App/STM32F4-Discovery/tcpCLI.c **** 
 183:App/STM32F4-Discovery/tcpCLI.c **** 				}
 184:App/STM32F4-Discovery/tcpCLI.c **** 						
 185:App/STM32F4-Discovery/tcpCLI.c **** 			}
 186:App/STM32F4-Discovery/tcpCLI.c **** 
 187:App/STM32F4-Discovery/tcpCLI.c **** 		}
 188:App/STM32F4-Discovery/tcpCLI.c **** 		else
 189:App/STM32F4-Discovery/tcpCLI.c **** 		{
 190:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 191:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 192:App/STM32F4-Discovery/tcpCLI.c **** 		
 193:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 997              		.loc 1 193 0
 998 0238 FA68     		ldr	r2, [r7, #12]
 999 023a 244B     		ldr	r3, .L19+36
 1000 023c 1446     		mov	r4, r2
 1001 023e 1D46     		mov	r5, r3
 1002 0240 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1003 0242 2060     		str	r0, [r4]	@ unaligned
 1004 0244 6160     		str	r1, [r4, #4]	@ unaligned
 1005 0246 A260     		str	r2, [r4, #8]	@ unaligned
 1006 0248 E360     		str	r3, [r4, #12]	@ unaligned
 1007 024a 2868     		ldr	r0, [r5]	@ unaligned
 1008 024c 2061     		str	r0, [r4, #16]	@ unaligned
 1009 024e AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1010 0250 AB79     		ldrb	r3, [r5, #6]
 1011 0252 A282     		strh	r2, [r4, #20]	@ unaligned
 1012 0254 A375     		strb	r3, [r4, #22]
 194:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1013              		.loc 1 194 0
 1014 0256 1623     		movs	r3, #22
 1015 0258 BB61     		str	r3, [r7, #24]
 195:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 196:App/STM32F4-Discovery/tcpCLI.c **** 
 197:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1016              		.loc 1 197 0
 1017 025a 0023     		movs	r3, #0
 1018 025c 9CE0     		b	.L1
 1019              	.L9:
 1020              	.LBE3:
 198:App/STM32F4-Discovery/tcpCLI.c **** 		}
 199:App/STM32F4-Discovery/tcpCLI.c **** 	}
 200:App/STM32F4-Discovery/tcpCLI.c **** 
 201:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 202:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER downramp [value]
 203:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 204:App/STM32F4-Discovery/tcpCLI.c **** 
 205:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "downramp", 8))
 1021              		.loc 1 205 0
 1022 025e 7868     		ldr	r0, [r7, #4]
 1023 0260 1E49     		ldr	r1, .L19+52
 1024 0262 0822     		movs	r2, #8
 1025 0264 FFF7FEFF 		bl	strncmp
 1026 0268 0346     		mov	r3, r0
 1027 026a 002B     		cmp	r3, #0
 1028 026c 40F09480 		bne	.L14
 1029              	.LBB4:
 206:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 207:App/STM32F4-Discovery/tcpCLI.c **** 	
 208:App/STM32F4-Discovery/tcpCLI.c **** 		// now convert parameter to proper value and check if it is in range 
 209:App/STM32F4-Discovery/tcpCLI.c ****         	Value[xValueLength] = '\0'; 	
 1030              		.loc 1 209 0
 1031 0270 BB6B     		ldr	r3, [r7, #56]
 1032 0272 7A6B     		ldr	r2, [r7, #52]
 1033 0274 1344     		add	r3, r3, r2
 1034 0276 0022     		movs	r2, #0
 1035 0278 1A70     		strb	r2, [r3]
 210:App/STM32F4-Discovery/tcpCLI.c **** 		uint16_t s1 = atoi ( Value ); 
 1036              		.loc 1 210 0
 1037 027a 786B     		ldr	r0, [r7, #52]
 1038 027c FFF7FEFF 		bl	atoi
 1039 0280 0346     		mov	r3, r0
 1040 0282 BB82     		strh	r3, [r7, #20]	@ movhi
 211:App/STM32F4-Discovery/tcpCLI.c **** 		// if speed is in range
 212:App/STM32F4-Discovery/tcpCLI.c **** 		if(s1 < 15 ||  s1 > 300 )
 1041              		.loc 1 212 0
 1042 0284 BB8A     		ldrh	r3, [r7, #20]
 1043 0286 0E2B     		cmp	r3, #14
 1044 0288 03D9     		bls	.L15
 1045              		.loc 1 212 0 is_stmt 0 discriminator 1
 1046 028a BB8A     		ldrh	r3, [r7, #20]
 1047 028c B3F5967F 		cmp	r3, #300
 1048 0290 26D9     		bls	.L16
 1049              	.L15:
 213:App/STM32F4-Discovery/tcpCLI.c **** 		{
 214:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP
 215:App/STM32F4-Discovery/tcpCLI.c **** 			
 216:App/STM32F4-Discovery/tcpCLI.c **** 			xWriteBufferLen = 100; 
 1050              		.loc 1 216 0 is_stmt 1
 1051 0292 6423     		movs	r3, #100
 1052 0294 BB61     		str	r3, [r7, #24]
 217:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error: Ramp time is out of range [15,300]s : %d\n\n\0", s1);
 1053              		.loc 1 217 0
 1054 0296 BB8A     		ldrh	r3, [r7, #20]
 1055 0298 F868     		ldr	r0, [r7, #12]
 1056 029a 0E49     		ldr	r1, .L19+44
 1057 029c 1A46     		mov	r2, r3
 1058 029e FFF7FEFF 		bl	sprintf
 218:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket_0, buf, len, 0);
 219:App/STM32F4-Discovery/tcpCLI.c **** 
 220:App/STM32F4-Discovery/tcpCLI.c **** 	       		return pdFALSE; 	
 1059              		.loc 1 220 0
 1060 02a2 0023     		movs	r3, #0
 1061 02a4 78E0     		b	.L1
 1062              	.L20:
 1063 02a6 00BF     		.align	2
 1064              	.L19:
 1065 02a8 74000000 		.word	.LC4
 1066 02ac 7C000000 		.word	.LC5
 1067 02b0 00000000 		.word	telegramS
 1068 02b4 00000000 		.word	QSpd_handle
 1069 02b8 00000000 		.word	xDelay
 1070 02bc 00000000 		.word	telegramR
 1071 02c0 AC000000 		.word	.LC6
 1072 02c4 C8000000 		.word	.LC7
 1073 02c8 DC000000 		.word	.LC8
 1074 02cc F8000000 		.word	.LC9
 1075 02d0 10010000 		.word	.LC10
 1076 02d4 18010000 		.word	.LC11
 1077 02d8 4C010000 		.word	.LC12
 1078 02dc 68010000 		.word	.LC13
 1079              	.L16:
 221:App/STM32F4-Discovery/tcpCLI.c **** 		}	
 222:App/STM32F4-Discovery/tcpCLI.c **** 	
 223:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[3] = s1; 
 1080              		.loc 1 223 0
 1081 02e0 2F4B     		ldr	r3, .L21
 1082 02e2 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 1083 02e4 DA81     		strh	r2, [r3, #14]	@ movhi
 224:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5; 
 1084              		.loc 1 224 0
 1085 02e6 2E4B     		ldr	r3, .L21
 1086 02e8 0522     		movs	r2, #5
 1087 02ea 5A60     		str	r2, [r3, #4]
 225:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = SETDATA;
 1088              		.loc 1 225 0
 1089 02ec 2C4B     		ldr	r3, .L21
 1090 02ee 0022     		movs	r2, #0
 1091 02f0 1A70     		strb	r2, [r3]
 226:App/STM32F4-Discovery/tcpCLI.c **** 		
 227:App/STM32F4-Discovery/tcpCLI.c **** 	
 228:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 229:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 1092              		.loc 1 229 0
 1093 02f2 2C4B     		ldr	r3, .L21+4
 1094 02f4 1A68     		ldr	r2, [r3]
 1095 02f6 2C4B     		ldr	r3, .L21+8
 1096 02f8 1B68     		ldr	r3, [r3]
 1097 02fa 1046     		mov	r0, r2
 1098 02fc 2849     		ldr	r1, .L21
 1099 02fe 1A46     		mov	r2, r3
 1100 0300 0023     		movs	r3, #0
 1101 0302 FFF7FEFF 		bl	xQueueGenericSend
 1102 0306 0346     		mov	r3, r0
 1103 0308 012B     		cmp	r3, #1
 1104 030a 32D1     		bne	.L17
 230:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 231:App/STM32F4-Discovery/tcpCLI.c **** 					
 232:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay))
 1105              		.loc 1 232 0
 1106 030c 254B     		ldr	r3, .L21+4
 1107 030e 1A68     		ldr	r2, [r3]
 1108 0310 254B     		ldr	r3, .L21+8
 1109 0312 1B68     		ldr	r3, [r3]
 1110 0314 1046     		mov	r0, r2
 1111 0316 2549     		ldr	r1, .L21+12
 1112 0318 1A46     		mov	r2, r3
 1113 031a 0023     		movs	r3, #0
 1114 031c FFF7FEFF 		bl	xQueueGenericReceive
 1115 0320 0346     		mov	r3, r0
 1116 0322 002B     		cmp	r3, #0
 1117 0324 38D0     		beq	.L14
 233:App/STM32F4-Discovery/tcpCLI.c **** 			{
 234:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 1118              		.loc 1 234 0
 1119 0326 214B     		ldr	r3, .L21+12
 1120 0328 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1121 032a 062B     		cmp	r3, #6
 1122 032c 12D1     		bne	.L18
 235:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 236:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Down ramp succsesfully set.\n\n");
 1123              		.loc 1 236 0
 1124 032e FA68     		ldr	r2, [r7, #12]
 1125 0330 1F4B     		ldr	r3, .L21+16
 1126 0332 1546     		mov	r5, r2
 1127 0334 1C46     		mov	r4, r3
 1128 0336 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1129 0338 2860     		str	r0, [r5]	@ unaligned
 1130 033a 6960     		str	r1, [r5, #4]	@ unaligned
 1131 033c AA60     		str	r2, [r5, #8]	@ unaligned
 1132 033e EB60     		str	r3, [r5, #12]	@ unaligned
 1133 0340 07CC     		ldmia	r4!, {r0, r1, r2}
 1134 0342 2861     		str	r0, [r5, #16]	@ unaligned
 1135 0344 6961     		str	r1, [r5, #20]	@ unaligned
 1136 0346 AA61     		str	r2, [r5, #24]	@ unaligned
 1137 0348 2388     		ldrh	r3, [r4]	@ unaligned
 1138 034a AB83     		strh	r3, [r5, #28]	@ unaligned
 237:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 29; 	
 1139              		.loc 1 237 0
 1140 034c 1D23     		movs	r3, #29
 1141 034e BB61     		str	r3, [r7, #24]
 238:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 239:App/STM32F4-Discovery/tcpCLI.c **** 
 240:App/STM32F4-Discovery/tcpCLI.c **** 
 241:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 1142              		.loc 1 241 0
 1143 0350 0123     		movs	r3, #1
 1144 0352 21E0     		b	.L1
 1145              	.L18:
 242:App/STM32F4-Discovery/tcpCLI.c **** 
 243:App/STM32F4-Discovery/tcpCLI.c **** 				}
 244:App/STM32F4-Discovery/tcpCLI.c **** 				else
 245:App/STM32F4-Discovery/tcpCLI.c **** 				{
 246:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1146              		.loc 1 246 0
 1147 0354 FA68     		ldr	r2, [r7, #12]
 1148 0356 174B     		ldr	r3, .L21+20
 1149 0358 1546     		mov	r5, r2
 1150 035a 1C46     		mov	r4, r3
 1151 035c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1152 035e 2860     		str	r0, [r5]	@ unaligned
 1153 0360 6960     		str	r1, [r5, #4]	@ unaligned
 1154 0362 AA60     		str	r2, [r5, #8]	@ unaligned
 1155 0364 EB60     		str	r3, [r5, #12]	@ unaligned
 1156 0366 2068     		ldr	r0, [r4]	@ unaligned
 1157 0368 2861     		str	r0, [r5, #16]	@ unaligned
 247:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 1158              		.loc 1 247 0
 1159 036a 1323     		movs	r3, #19
 1160 036c BB61     		str	r3, [r7, #24]
 248:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 249:App/STM32F4-Discovery/tcpCLI.c **** 
 250:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 1161              		.loc 1 250 0
 1162 036e 0023     		movs	r3, #0
 1163 0370 12E0     		b	.L1
 1164              	.L17:
 251:App/STM32F4-Discovery/tcpCLI.c **** 
 252:App/STM32F4-Discovery/tcpCLI.c **** 
 253:App/STM32F4-Discovery/tcpCLI.c **** 				}
 254:App/STM32F4-Discovery/tcpCLI.c **** 						
 255:App/STM32F4-Discovery/tcpCLI.c **** 			}
 256:App/STM32F4-Discovery/tcpCLI.c **** 
 257:App/STM32F4-Discovery/tcpCLI.c **** 		}
 258:App/STM32F4-Discovery/tcpCLI.c **** 		else
 259:App/STM32F4-Discovery/tcpCLI.c **** 		{
 260:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 261:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 262:App/STM32F4-Discovery/tcpCLI.c **** 		
 263:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 1165              		.loc 1 263 0
 1166 0372 FA68     		ldr	r2, [r7, #12]
 1167 0374 104B     		ldr	r3, .L21+24
 1168 0376 1446     		mov	r4, r2
 1169 0378 1D46     		mov	r5, r3
 1170 037a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1171 037c 2060     		str	r0, [r4]	@ unaligned
 1172 037e 6160     		str	r1, [r4, #4]	@ unaligned
 1173 0380 A260     		str	r2, [r4, #8]	@ unaligned
 1174 0382 E360     		str	r3, [r4, #12]	@ unaligned
 1175 0384 2868     		ldr	r0, [r5]	@ unaligned
 1176 0386 2061     		str	r0, [r4, #16]	@ unaligned
 1177 0388 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1178 038a AB79     		ldrb	r3, [r5, #6]
 1179 038c A282     		strh	r2, [r4, #20]	@ unaligned
 1180 038e A375     		strb	r3, [r4, #22]
 264:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1181              		.loc 1 264 0
 1182 0390 1623     		movs	r3, #22
 1183 0392 BB61     		str	r3, [r7, #24]
 265:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 266:App/STM32F4-Discovery/tcpCLI.c **** 
 267:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1184              		.loc 1 267 0
 1185 0394 0023     		movs	r3, #0
 1186 0396 FFE7     		b	.L1
 1187              	.L14:
 1188              	.L1:
 1189              	.LBE4:
 268:App/STM32F4-Discovery/tcpCLI.c **** 		}
 269:App/STM32F4-Discovery/tcpCLI.c **** 	
 270:App/STM32F4-Discovery/tcpCLI.c **** 		
 271:App/STM32F4-Discovery/tcpCLI.c **** 		
 272:App/STM32F4-Discovery/tcpCLI.c **** 
 273:App/STM32F4-Discovery/tcpCLI.c **** 	}
 274:App/STM32F4-Discovery/tcpCLI.c **** 			
 275:App/STM32F4-Discovery/tcpCLI.c **** }
 1190              		.loc 1 275 0
 1191 0398 1846     		mov	r0, r3
 1192 039a 2037     		adds	r7, r7, #32
 1193 039c BD46     		mov	sp, r7
 1194              		@ sp needed
 1195 039e B0BD     		pop	{r4, r5, r7, pc}
 1196              	.L22:
 1197              		.align	2
 1198              	.L21:
 1199 03a0 00000000 		.word	telegramS
 1200 03a4 00000000 		.word	QSpd_handle
 1201 03a8 00000000 		.word	xDelay
 1202 03ac 00000000 		.word	telegramR
 1203 03b0 74010000 		.word	.LC14
 1204 03b4 C8000000 		.word	.LC7
 1205 03b8 F8000000 		.word	.LC9
 1206              		.cfi_endproc
 1207              	.LFE110:
 1209              		.section	.rodata
 1210 0192 0000     		.align	2
 1211              	.LC15:
 1212 0194 53706565 		.ascii	"Speed is  %2d.%2dp \012\012\000\000"
 1212      64206973 
 1212      20202532 
 1212      642E2532 
 1212      6470200A 
 1213              		.section	.text.handleVariable_get,"ax",%progbits
 1214              		.align	2
 1215              		.global	handleVariable_get
 1216              		.thumb
 1217              		.thumb_func
 1219              	handleVariable_get:
 1220              	.LFB111:
 276:App/STM32F4-Discovery/tcpCLI.c **** //=======================================================================================//
 277:App/STM32F4-Discovery/tcpCLI.c **** //=======================================================================================//
 278:App/STM32F4-Discovery/tcpCLI.c **** //		GET PARAMETETERS 
 279:App/STM32F4-Discovery/tcpCLI.c **** //=======================================================================================//
 280:App/STM32F4-Discovery/tcpCLI.c **** //=======================================================================================//
 281:App/STM32F4-Discovery/tcpCLI.c **** int handleVariable_get (	
 282:App/STM32F4-Discovery/tcpCLI.c **** 				int8_t *pcWriteBuffer, 
 283:App/STM32F4-Discovery/tcpCLI.c **** 				size_t xWriteBufferLen,
 284:App/STM32F4-Discovery/tcpCLI.c **** 				uint8_t * Param, 
 285:App/STM32F4-Discovery/tcpCLI.c **** 				int xParamLength,
 286:App/STM32F4-Discovery/tcpCLI.c **** 				xQueueHandle Qhandle,
 287:App/STM32F4-Discovery/tcpCLI.c **** 				int socket )
 288:App/STM32F4-Discovery/tcpCLI.c **** {
 1221              		.loc 1 288 0
 1222              		.cfi_startproc
 1223              		@ args = 8, pretend = 0, frame = 24
 1224              		@ frame_needed = 1, uses_anonymous_args = 0
 1225 0000 B0B5     		push	{r4, r5, r7, lr}
 1226              	.LCFI3:
 1227              		.cfi_def_cfa_offset 16
 1228              		.cfi_offset 4, -16
 1229              		.cfi_offset 5, -12
 1230              		.cfi_offset 7, -8
 1231              		.cfi_offset 14, -4
 1232 0002 86B0     		sub	sp, sp, #24
 1233              	.LCFI4:
 1234              		.cfi_def_cfa_offset 40
 1235 0004 00AF     		add	r7, sp, #0
 1236              	.LCFI5:
 1237              		.cfi_def_cfa_register 7
 1238 0006 F860     		str	r0, [r7, #12]
 1239 0008 B960     		str	r1, [r7, #8]
 1240 000a 7A60     		str	r2, [r7, #4]
 1241 000c 3B60     		str	r3, [r7]
 289:App/STM32F4-Discovery/tcpCLI.c **** 
 290:App/STM32F4-Discovery/tcpCLI.c **** 
 291:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 292:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER speed [value]
 293:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 294:App/STM32F4-Discovery/tcpCLI.c **** 
 295:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "speed", 5))
 1242              		.loc 1 295 0
 1243 000e 7868     		ldr	r0, [r7, #4]
 1244 0010 3B49     		ldr	r1, .L29
 1245 0012 0522     		movs	r2, #5
 1246 0014 FFF7FEFF 		bl	strncmp
 1247 0018 0346     		mov	r3, r0
 1248 001a 002B     		cmp	r3, #0
 1249 001c 6CD1     		bne	.L24
 296:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 297:App/STM32F4-Discovery/tcpCLI.c **** 	
 298:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = GETDATA; 
 1250              		.loc 1 298 0
 1251 001e 394B     		ldr	r3, .L29+4
 1252 0020 0122     		movs	r2, #1
 1253 0022 1A70     		strb	r2, [r3]
 299:App/STM32F4-Discovery/tcpCLI.c **** 		
 300:App/STM32F4-Discovery/tcpCLI.c **** 	
 301:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 302:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 1254              		.loc 1 302 0
 1255 0024 384B     		ldr	r3, .L29+8
 1256 0026 1A68     		ldr	r2, [r3]
 1257 0028 384B     		ldr	r3, .L29+12
 1258 002a 1B68     		ldr	r3, [r3]
 1259 002c 1046     		mov	r0, r2
 1260 002e 3549     		ldr	r1, .L29+4
 1261 0030 1A46     		mov	r2, r3
 1262 0032 0023     		movs	r3, #0
 1263 0034 FFF7FEFF 		bl	xQueueGenericSend
 1264 0038 0346     		mov	r3, r0
 1265 003a 012B     		cmp	r3, #1
 1266 003c 49D1     		bne	.L25
 303:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 304:App/STM32F4-Discovery/tcpCLI.c **** 					
 305:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay)== pdPASS)
 1267              		.loc 1 305 0
 1268 003e 324B     		ldr	r3, .L29+8
 1269 0040 1A68     		ldr	r2, [r3]
 1270 0042 324B     		ldr	r3, .L29+12
 1271 0044 1B68     		ldr	r3, [r3]
 1272 0046 1046     		mov	r0, r2
 1273 0048 3149     		ldr	r1, .L29+16
 1274 004a 1A46     		mov	r2, r3
 1275 004c 0023     		movs	r3, #0
 1276 004e FFF7FEFF 		bl	xQueueGenericReceive
 1277 0052 0346     		mov	r3, r0
 1278 0054 012B     		cmp	r3, #1
 1279 0056 2BD1     		bne	.L26
 306:App/STM32F4-Discovery/tcpCLI.c **** 			{
 307:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 1280              		.loc 1 307 0
 1281 0058 2D4B     		ldr	r3, .L29+16
 1282 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1283 005c 062B     		cmp	r3, #6
 1284 005e 18D1     		bne	.L27
 308:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 309:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 310:App/STM32F4-Discovery/tcpCLI.c **** 					telegramR.data[3]/100,
 1285              		.loc 1 310 0
 1286 0060 2B4B     		ldr	r3, .L29+16
 1287 0062 DA89     		ldrh	r2, [r3, #14]
 309:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 1288              		.loc 1 309 0
 1289 0064 2B4B     		ldr	r3, .L29+20
 1290 0066 A3FB0203 		umull	r0, r3, r3, r2
 1291 006a 5B09     		lsrs	r3, r3, #5
 1292 006c 9BB2     		uxth	r3, r3
 1293 006e 1A46     		mov	r2, r3
 311:App/STM32F4-Discovery/tcpCLI.c **** 					telegramR.data[3] % 100);
 1294              		.loc 1 311 0
 1295 0070 274B     		ldr	r3, .L29+16
 1296 0072 DB89     		ldrh	r3, [r3, #14]
 309:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 1297              		.loc 1 309 0
 1298 0074 2749     		ldr	r1, .L29+20
 1299 0076 A1FB0301 		umull	r0, r1, r1, r3
 1300 007a 4909     		lsrs	r1, r1, #5
 1301 007c 6420     		movs	r0, #100
 1302 007e 00FB01F1 		mul	r1, r0, r1
 1303 0082 5B1A     		subs	r3, r3, r1
 1304 0084 9BB2     		uxth	r3, r3
 1305 0086 F868     		ldr	r0, [r7, #12]
 1306 0088 2349     		ldr	r1, .L29+24
 1307 008a FFF7FEFF 		bl	sprintf
 312:App/STM32F4-Discovery/tcpCLI.c **** 				
 313:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 314:App/STM32F4-Discovery/tcpCLI.c **** 
 315:App/STM32F4-Discovery/tcpCLI.c **** 
 316:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 1308              		.loc 1 316 0
 1309 008e 0123     		movs	r3, #1
 1310 0090 32E0     		b	.L23
 1311              	.L27:
 317:App/STM32F4-Discovery/tcpCLI.c **** 
 318:App/STM32F4-Discovery/tcpCLI.c **** 				}
 319:App/STM32F4-Discovery/tcpCLI.c **** 				else
 320:App/STM32F4-Discovery/tcpCLI.c **** 				{
 321:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1312              		.loc 1 321 0
 1313 0092 FA68     		ldr	r2, [r7, #12]
 1314 0094 214B     		ldr	r3, .L29+28
 1315 0096 1546     		mov	r5, r2
 1316 0098 1C46     		mov	r4, r3
 1317 009a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1318 009c 2860     		str	r0, [r5]	@ unaligned
 1319 009e 6960     		str	r1, [r5, #4]	@ unaligned
 1320 00a0 AA60     		str	r2, [r5, #8]	@ unaligned
 1321 00a2 EB60     		str	r3, [r5, #12]	@ unaligned
 1322 00a4 2068     		ldr	r0, [r4]	@ unaligned
 1323 00a6 2861     		str	r0, [r5, #16]	@ unaligned
 322:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 1324              		.loc 1 322 0
 1325 00a8 1323     		movs	r3, #19
 1326 00aa 7B61     		str	r3, [r7, #20]
 323:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 324:App/STM32F4-Discovery/tcpCLI.c **** 
 325:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 1327              		.loc 1 325 0
 1328 00ac 0023     		movs	r3, #0
 1329 00ae 23E0     		b	.L23
 1330              	.L26:
 326:App/STM32F4-Discovery/tcpCLI.c **** 
 327:App/STM32F4-Discovery/tcpCLI.c **** 
 328:App/STM32F4-Discovery/tcpCLI.c **** 				}
 329:App/STM32F4-Discovery/tcpCLI.c **** 						
 330:App/STM32F4-Discovery/tcpCLI.c **** 			}
 331:App/STM32F4-Discovery/tcpCLI.c **** 			else
 332:App/STM32F4-Discovery/tcpCLI.c **** 			{
 333:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 334:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 335:App/STM32F4-Discovery/tcpCLI.c **** 		
 336:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 1331              		.loc 1 336 0
 1332 00b0 FA68     		ldr	r2, [r7, #12]
 1333 00b2 1B4B     		ldr	r3, .L29+32
 1334 00b4 1546     		mov	r5, r2
 1335 00b6 1C46     		mov	r4, r3
 1336 00b8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1337 00ba 2860     		str	r0, [r5]	@ unaligned
 1338 00bc 6960     		str	r1, [r5, #4]	@ unaligned
 1339 00be AA60     		str	r2, [r5, #8]	@ unaligned
 1340 00c0 EB60     		str	r3, [r5, #12]	@ unaligned
 1341 00c2 07CC     		ldmia	r4!, {r0, r1, r2}
 1342 00c4 2861     		str	r0, [r5, #16]	@ unaligned
 1343 00c6 6961     		str	r1, [r5, #20]	@ unaligned
 1344 00c8 AA61     		str	r2, [r5, #24]	@ unaligned
 337:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 1345              		.loc 1 337 0
 1346 00ca 1B23     		movs	r3, #27
 1347 00cc 7B61     		str	r3, [r7, #20]
 338:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 339:App/STM32F4-Discovery/tcpCLI.c **** 
 340:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 1348              		.loc 1 340 0
 1349 00ce 0023     		movs	r3, #0
 1350 00d0 12E0     		b	.L23
 1351              	.L25:
 341:App/STM32F4-Discovery/tcpCLI.c **** 			}
 342:App/STM32F4-Discovery/tcpCLI.c **** 
 343:App/STM32F4-Discovery/tcpCLI.c **** 
 344:App/STM32F4-Discovery/tcpCLI.c **** 		}
 345:App/STM32F4-Discovery/tcpCLI.c **** 		else
 346:App/STM32F4-Discovery/tcpCLI.c **** 		{
 347:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 348:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 349:App/STM32F4-Discovery/tcpCLI.c **** 		
 350:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 1352              		.loc 1 350 0
 1353 00d2 FA68     		ldr	r2, [r7, #12]
 1354 00d4 134B     		ldr	r3, .L29+36
 1355 00d6 1446     		mov	r4, r2
 1356 00d8 1D46     		mov	r5, r3
 1357 00da 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1358 00dc 2060     		str	r0, [r4]	@ unaligned
 1359 00de 6160     		str	r1, [r4, #4]	@ unaligned
 1360 00e0 A260     		str	r2, [r4, #8]	@ unaligned
 1361 00e2 E360     		str	r3, [r4, #12]	@ unaligned
 1362 00e4 2868     		ldr	r0, [r5]	@ unaligned
 1363 00e6 2061     		str	r0, [r4, #16]	@ unaligned
 1364 00e8 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1365 00ea AB79     		ldrb	r3, [r5, #6]
 1366 00ec A282     		strh	r2, [r4, #20]	@ unaligned
 1367 00ee A375     		strb	r3, [r4, #22]
 351:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1368              		.loc 1 351 0
 1369 00f0 1623     		movs	r3, #22
 1370 00f2 7B61     		str	r3, [r7, #20]
 352:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 353:App/STM32F4-Discovery/tcpCLI.c **** 
 354:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1371              		.loc 1 354 0
 1372 00f4 0023     		movs	r3, #0
 1373 00f6 FFE7     		b	.L23
 1374              	.L24:
 1375              	.L23:
 355:App/STM32F4-Discovery/tcpCLI.c **** 		}
 356:App/STM32F4-Discovery/tcpCLI.c **** 	}
 357:App/STM32F4-Discovery/tcpCLI.c **** 	
 358:App/STM32F4-Discovery/tcpCLI.c **** 
 359:App/STM32F4-Discovery/tcpCLI.c **** 
 360:App/STM32F4-Discovery/tcpCLI.c **** }
 1376              		.loc 1 360 0
 1377 00f8 1846     		mov	r0, r3
 1378 00fa 1837     		adds	r7, r7, #24
 1379 00fc BD46     		mov	sp, r7
 1380              		@ sp needed
 1381 00fe B0BD     		pop	{r4, r5, r7, pc}
 1382              	.L30:
 1383              		.align	2
 1384              	.L29:
 1385 0100 74000000 		.word	.LC4
 1386 0104 00000000 		.word	telegramS
 1387 0108 00000000 		.word	QSpd_handle
 1388 010c 00000000 		.word	xDelay
 1389 0110 00000000 		.word	telegramR
 1390 0114 1F85EB51 		.word	1374389535
 1391 0118 94010000 		.word	.LC15
 1392 011c C8000000 		.word	.LC7
 1393 0120 DC000000 		.word	.LC8
 1394 0124 F8000000 		.word	.LC9
 1395              		.cfi_endproc
 1396              	.LFE111:
 1398              		.section	.rodata
 1399 01ab 00       		.align	2
 1400              	.LC16:
 1401 01ac 546F2066 		.ascii	"To few arguments. \012\012\000\000"
 1401      65772061 
 1401      7267756D 
 1401      656E7473 
 1401      2E200A0A 
 1402 01c2 0000     		.align	2
 1403              	.LC17:
 1404 01c4 68656C70 		.ascii	"help\000"
 1404      00
 1405 01c9 000000   		.align	2
 1406              	.LC18:
 1407 01cc 55736167 		.ascii	"Usage and parameters\012options:\012\011get - get m"
 1407      6520616E 
 1407      64207061 
 1407      72616D65 
 1407      74657273 
 1408 01f6 6F746F72 		.ascii	"otor parameter value\012\011set - set motor paramet"
 1408      20706172 
 1408      616D6574 
 1408      65722076 
 1408      616C7565 
 1409 0223 65722076 		.ascii	"er value\012\011start - starts motor\012\011stop - "
 1409      616C7565 
 1409      0A097374 
 1409      61727420 
 1409      2D207374 
 1410 024a 73746F70 		.ascii	"stops motor\012parametrs:\012\011speed - sets speed"
 1410      73206D6F 
 1410      746F720A 
 1410      70617261 
 1410      6D657472 
 1411 0274 0A097570 		.ascii	"\012\011upramp\012\011downramp\012\000\000"
 1411      72616D70 
 1411      0A09646F 
 1411      776E7261 
 1411      6D700A00 
 1412 0289 000000   		.align	2
 1413              	.LC19:
 1414 028c 73657400 		.ascii	"set\000"
 1415              		.align	2
 1416              	.LC20:
 1417 0290 67657400 		.ascii	"get\000"
 1418              		.align	2
 1419              	.LC21:
 1420 0294 506F7765 		.ascii	"Power In=%d, Iout=%d, Vin=%d, PrcOut=%d.%d, RPMOut="
 1420      7220496E 
 1420      3D25642C 
 1420      20496F75 
 1420      743D2564 
 1421 02c7 25642C20 		.ascii	"%d, InternalTemp=%d.%d\012\000"
 1421      496E7465 
 1421      726E616C 
 1421      54656D70 
 1421      3D25642E 
 1422 02df 00       		.align	2
 1423              	.LC22:
 1424 02e0 73746F70 		.ascii	"stop\000"
 1424      00
 1425 02e5 000000   		.align	2
 1426              	.LC23:
 1427 02e8 4D6F746F 		.ascii	"Motor succsesfully stopped.\012\012\000"
 1427      72207375 
 1427      63637365 
 1427      7366756C 
 1427      6C792073 
 1428 0306 0000     		.align	2
 1429              	.LC24:
 1430 0308 73746172 		.ascii	"start\000"
 1430      7400
 1431 030e 0000     		.align	2
 1432              	.LC25:
 1433 0310 4D6F746F 		.ascii	"Motor succsesfully started.\012\012\000"
 1433      72207375 
 1433      63637365 
 1433      7366756C 
 1433      6C792073 
 1434              		.section	.text.prvMotorCommand,"ax",%progbits
 1435              		.align	2
 1436              		.global	prvMotorCommand
 1437              		.thumb
 1438              		.thumb_func
 1440              	prvMotorCommand:
 1441              	.LFB112:
 361:App/STM32F4-Discovery/tcpCLI.c **** 
 362:App/STM32F4-Discovery/tcpCLI.c **** 
 363:App/STM32F4-Discovery/tcpCLI.c **** 
 364:App/STM32F4-Discovery/tcpCLI.c **** 
 365:App/STM32F4-Discovery/tcpCLI.c **** 
 366:App/STM32F4-Discovery/tcpCLI.c **** 
 367:App/STM32F4-Discovery/tcpCLI.c **** /* ================================================================================================
 368:App/STM32F4-Discovery/tcpCLI.c ****  * ================================================================================================
 369:App/STM32F4-Discovery/tcpCLI.c ****  * 		prvMotorCommand 
 370:App/STM32F4-Discovery/tcpCLI.c ****  * ================================================================================================
 371:App/STM32F4-Discovery/tcpCLI.c ****  * ==============================================================================================*/
 372:App/STM32F4-Discovery/tcpCLI.c **** 
 373:App/STM32F4-Discovery/tcpCLI.c **** portBASE_TYPE prvMotorCommand ( 	int8_t *pcWriteBuffer, 
 374:App/STM32F4-Discovery/tcpCLI.c **** 						size_t xWriteBufferLen, 
 375:App/STM32F4-Discovery/tcpCLI.c **** 						const int8_t *pcCommandString)
 376:App/STM32F4-Discovery/tcpCLI.c **** {
 1442              		.loc 1 376 0
 1443              		.cfi_startproc
 1444              		@ args = 0, pretend = 0, frame = 40
 1445              		@ frame_needed = 1, uses_anonymous_args = 0
 1446 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1447              	.LCFI6:
 1448              		.cfi_def_cfa_offset 24
 1449              		.cfi_offset 4, -24
 1450              		.cfi_offset 5, -20
 1451              		.cfi_offset 6, -16
 1452              		.cfi_offset 7, -12
 1453              		.cfi_offset 8, -8
 1454              		.cfi_offset 14, -4
 1455 0004 90B0     		sub	sp, sp, #64
 1456              	.LCFI7:
 1457              		.cfi_def_cfa_offset 88
 1458 0006 06AF     		add	r7, sp, #24
 1459              	.LCFI8:
 1460              		.cfi_def_cfa 7, 64
 1461 0008 F860     		str	r0, [r7, #12]
 1462 000a B960     		str	r1, [r7, #8]
 1463 000c 7A60     		str	r2, [r7, #4]
 377:App/STM32F4-Discovery/tcpCLI.c **** 	/* globals: 
 378:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	socket 
 379:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	setSpeedHandle
 380:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	QSpd_Handle
 381:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	QStatus_handle
 382:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	
 383:App/STM32F4-Discovery/tcpCLI.c **** 	 **/
 384:App/STM32F4-Discovery/tcpCLI.c **** 
 385:App/STM32F4-Discovery/tcpCLI.c **** 	int8_t *Option, *Param, *Value;
 386:App/STM32F4-Discovery/tcpCLI.c **** 	int xOptionLength, xParamLength, xValueLength; 
 387:App/STM32F4-Discovery/tcpCLI.c **** 	//QueueTelegram telegram; 
 388:App/STM32F4-Discovery/tcpCLI.c **** 	
 389:App/STM32F4-Discovery/tcpCLI.c **** 	// get option from command line 
 390:App/STM32F4-Discovery/tcpCLI.c **** 
 391:App/STM32F4-Discovery/tcpCLI.c **** 	Option = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1464              		.loc 1 391 0
 1465 000e 07F11803 		add	r3, r7, #24
 1466 0012 7868     		ldr	r0, [r7, #4]
 1467 0014 0121     		movs	r1, #1
 1468 0016 1A46     		mov	r2, r3
 1469 0018 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1470 001c 7862     		str	r0, [r7, #36]
 392:App/STM32F4-Discovery/tcpCLI.c **** 					  1,  		   // first parameter
 393:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xOptionLength // parameter string length
 394:App/STM32F4-Discovery/tcpCLI.c **** 					  
 395:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 396:App/STM32F4-Discovery/tcpCLI.c **** 
 397:App/STM32F4-Discovery/tcpCLI.c **** 	if ( Option == NULL)
 1471              		.loc 1 397 0
 1472 001e 7B6A     		ldr	r3, [r7, #36]
 1473 0020 002B     		cmp	r3, #0
 1474 0022 0ED1     		bne	.L32
 398:App/STM32F4-Discovery/tcpCLI.c **** 	{
 399:App/STM32F4-Discovery/tcpCLI.c **** 		sprintf(pcWriteBuffer, "To few arguments. \n\n\0");
 1475              		.loc 1 399 0
 1476 0024 FA68     		ldr	r2, [r7, #12]
 1477 0026 9C4B     		ldr	r3, .L54
 1478 0028 1546     		mov	r5, r2
 1479 002a 1C46     		mov	r4, r3
 1480 002c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1481 002e 2860     		str	r0, [r5]	@ unaligned
 1482 0030 6960     		str	r1, [r5, #4]	@ unaligned
 1483 0032 AA60     		str	r2, [r5, #8]	@ unaligned
 1484 0034 EB60     		str	r3, [r5, #12]	@ unaligned
 1485 0036 2068     		ldr	r0, [r4]	@ unaligned
 1486 0038 2861     		str	r0, [r5, #16]	@ unaligned
 1487 003a 2379     		ldrb	r3, [r4, #4]
 1488 003c 2B75     		strb	r3, [r5, #20]
 400:App/STM32F4-Discovery/tcpCLI.c **** 		return pdFALSE;
 1489              		.loc 1 400 0
 1490 003e 0023     		movs	r3, #0
 1491 0040 36E2     		b	.L53
 1492              	.L32:
 401:App/STM32F4-Discovery/tcpCLI.c **** 	}
 402:App/STM32F4-Discovery/tcpCLI.c **** 
 403:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp(Option, "help", 4))
 1493              		.loc 1 403 0
 1494 0042 786A     		ldr	r0, [r7, #36]
 1495 0044 9549     		ldr	r1, .L54+4
 1496 0046 0422     		movs	r2, #4
 1497 0048 FFF7FEFF 		bl	strncmp
 1498 004c 0346     		mov	r3, r0
 1499 004e 002B     		cmp	r3, #0
 1500 0050 0BD1     		bne	.L34
 404:App/STM32F4-Discovery/tcpCLI.c **** 	{
 405:App/STM32F4-Discovery/tcpCLI.c **** 		strcpy(pcWriteBuffer, 
 1501              		.loc 1 405 0
 1502 0052 FA68     		ldr	r2, [r7, #12]
 1503 0054 924B     		ldr	r3, .L54+8
 1504 0056 1146     		mov	r1, r2
 1505 0058 1A46     		mov	r2, r3
 1506 005a BC23     		movs	r3, #188
 1507 005c 0846     		mov	r0, r1
 1508 005e 1146     		mov	r1, r2
 1509 0060 1A46     		mov	r2, r3
 1510 0062 FFF7FEFF 		bl	memcpy
 406:App/STM32F4-Discovery/tcpCLI.c **** 			"Usage and parameters\n"
 407:App/STM32F4-Discovery/tcpCLI.c **** 			"options:\n"
 408:App/STM32F4-Discovery/tcpCLI.c **** 			"\tget - get motor parameter value\n"
 409:App/STM32F4-Discovery/tcpCLI.c **** 			"\tset - set motor parameter value\n"
 410:App/STM32F4-Discovery/tcpCLI.c **** 			"\tstart - starts motor\n"
 411:App/STM32F4-Discovery/tcpCLI.c **** 			"\tstop - stops motor\n"
 412:App/STM32F4-Discovery/tcpCLI.c **** 			"parametrs:\n"
 413:App/STM32F4-Discovery/tcpCLI.c **** 			"\tspeed - sets speed\n"
 414:App/STM32F4-Discovery/tcpCLI.c **** 			"\tupramp\n"
 415:App/STM32F4-Discovery/tcpCLI.c **** 			"\tdownramp\n"
 416:App/STM32F4-Discovery/tcpCLI.c **** 
 417:App/STM32F4-Discovery/tcpCLI.c **** 			
 418:App/STM32F4-Discovery/tcpCLI.c **** 			"\0"
 419:App/STM32F4-Discovery/tcpCLI.c **** 
 420:App/STM32F4-Discovery/tcpCLI.c **** 		      );
 421:App/STM32F4-Discovery/tcpCLI.c **** 
 422:App/STM32F4-Discovery/tcpCLI.c **** 		return pdPASS;
 1511              		.loc 1 422 0
 1512 0066 0123     		movs	r3, #1
 1513 0068 22E2     		b	.L53
 1514              	.L34:
 423:App/STM32F4-Discovery/tcpCLI.c **** 	}
 424:App/STM32F4-Discovery/tcpCLI.c **** 
 425:App/STM32F4-Discovery/tcpCLI.c **** 
 426:App/STM32F4-Discovery/tcpCLI.c ****     //	vTaskResume(motorHBHandle);
 427:App/STM32F4-Discovery/tcpCLI.c **** 
 428:App/STM32F4-Discovery/tcpCLI.c **** 
 429:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 430:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND SET [parameter name] [value]
 431:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 432:App/STM32F4-Discovery/tcpCLI.c **** 
 433:App/STM32F4-Discovery/tcpCLI.c **** 	if( !strncmp( Option, "set", 3) ) 
 1515              		.loc 1 433 0
 1516 006a 786A     		ldr	r0, [r7, #36]
 1517 006c 8D49     		ldr	r1, .L54+12
 1518 006e 0322     		movs	r2, #3
 1519 0070 FFF7FEFF 		bl	strncmp
 1520 0074 0346     		mov	r3, r0
 1521 0076 002B     		cmp	r3, #0
 1522 0078 33D1     		bne	.L35
 434:App/STM32F4-Discovery/tcpCLI.c **** 	{
 435:App/STM32F4-Discovery/tcpCLI.c **** 
 436:App/STM32F4-Discovery/tcpCLI.c **** 		// get parameter from command line 
 437:App/STM32F4-Discovery/tcpCLI.c **** 	
 438:App/STM32F4-Discovery/tcpCLI.c **** 		Param = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1523              		.loc 1 438 0
 1524 007a 07F11403 		add	r3, r7, #20
 1525 007e 7868     		ldr	r0, [r7, #4]
 1526 0080 0221     		movs	r1, #2
 1527 0082 1A46     		mov	r2, r3
 1528 0084 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1529 0088 3862     		str	r0, [r7, #32]
 439:App/STM32F4-Discovery/tcpCLI.c **** 					  2,  		   // 2nd parameter
 440:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xParamLength // parameter string length
 441:App/STM32F4-Discovery/tcpCLI.c **** 					  
 442:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 443:App/STM32F4-Discovery/tcpCLI.c **** 		Value = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1530              		.loc 1 443 0
 1531 008a 07F11003 		add	r3, r7, #16
 1532 008e 7868     		ldr	r0, [r7, #4]
 1533 0090 0321     		movs	r1, #3
 1534 0092 1A46     		mov	r2, r3
 1535 0094 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1536 0098 F861     		str	r0, [r7, #28]
 444:App/STM32F4-Discovery/tcpCLI.c **** 					  3,  		   // 2nd parameter
 445:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xValueLength // parameter string length
 446:App/STM32F4-Discovery/tcpCLI.c **** 					  
 447:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 448:App/STM32F4-Discovery/tcpCLI.c **** 		
 449:App/STM32F4-Discovery/tcpCLI.c **** 		// return pdFALSE if there is no 3rd parameter 
 450:App/STM32F4-Discovery/tcpCLI.c **** 
 451:App/STM32F4-Discovery/tcpCLI.c **** 		if (Value==NULL||Param==NULL)
 1537              		.loc 1 451 0
 1538 009a FB69     		ldr	r3, [r7, #28]
 1539 009c 002B     		cmp	r3, #0
 1540 009e 02D0     		beq	.L36
 1541              		.loc 1 451 0 is_stmt 0 discriminator 1
 1542 00a0 3B6A     		ldr	r3, [r7, #32]
 1543 00a2 002B     		cmp	r3, #0
 1544 00a4 06D1     		bne	.L37
 1545              	.L36:
 452:App/STM32F4-Discovery/tcpCLI.c **** 		{
 453:App/STM32F4-Discovery/tcpCLI.c **** 			strcpy(pcWriteBuffer, xMotorCommand.pcHelpString);
 1546              		.loc 1 453 0 is_stmt 1
 1547 00a6 804B     		ldr	r3, .L54+16
 1548 00a8 F868     		ldr	r0, [r7, #12]
 1549 00aa 1946     		mov	r1, r3
 1550 00ac FFF7FEFF 		bl	strcpy
 454:App/STM32F4-Discovery/tcpCLI.c **** 
 455:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 
 1551              		.loc 1 455 0
 1552 00b0 0023     		movs	r3, #0
 1553 00b2 FDE1     		b	.L53
 1554              	.L37:
 456:App/STM32F4-Discovery/tcpCLI.c **** 
 457:App/STM32F4-Discovery/tcpCLI.c **** 		}
 458:App/STM32F4-Discovery/tcpCLI.c **** 
 459:App/STM32F4-Discovery/tcpCLI.c **** 		
 460:App/STM32F4-Discovery/tcpCLI.c **** 		if ( handleVariable_set ( 
 1555              		.loc 1 460 0
 1556 00b4 7B69     		ldr	r3, [r7, #20]
 1557 00b6 7D4A     		ldr	r2, .L54+20
 1558 00b8 1068     		ldr	r0, [r2]
 1559 00ba 3969     		ldr	r1, [r7, #16]
 1560 00bc 7C4A     		ldr	r2, .L54+24
 1561 00be 1268     		ldr	r2, [r2]
 1562 00c0 0090     		str	r0, [sp]
 1563 00c2 F869     		ldr	r0, [r7, #28]
 1564 00c4 0190     		str	r0, [sp, #4]
 1565 00c6 0291     		str	r1, [sp, #8]
 1566 00c8 0392     		str	r2, [sp, #12]
 1567 00ca F868     		ldr	r0, [r7, #12]
 1568 00cc B968     		ldr	r1, [r7, #8]
 1569 00ce 3A6A     		ldr	r2, [r7, #32]
 1570 00d0 FFF7FEFF 		bl	handleVariable_set
 1571 00d4 0346     		mov	r3, r0
 1572 00d6 002B     		cmp	r3, #0
 1573 00d8 01D0     		beq	.L38
 461:App/STM32F4-Discovery/tcpCLI.c **** 				           pcWriteBuffer, 
 462:App/STM32F4-Discovery/tcpCLI.c **** 					   xWriteBufferLen,
 463:App/STM32F4-Discovery/tcpCLI.c **** 					   Param, 
 464:App/STM32F4-Discovery/tcpCLI.c **** 					   xParamLength, 
 465:App/STM32F4-Discovery/tcpCLI.c **** 					   QSpd_handle, 
 466:App/STM32F4-Discovery/tcpCLI.c **** 					   Value,
 467:App/STM32F4-Discovery/tcpCLI.c **** 					   xValueLength,  
 468:App/STM32F4-Discovery/tcpCLI.c **** 					   socket_0)) return pdPASS;
 1574              		.loc 1 468 0
 1575 00da 0123     		movs	r3, #1
 1576 00dc E8E1     		b	.L53
 1577              	.L38:
 469:App/STM32F4-Discovery/tcpCLI.c **** 
 470:App/STM32F4-Discovery/tcpCLI.c **** 		
 471:App/STM32F4-Discovery/tcpCLI.c **** 			
 472:App/STM32F4-Discovery/tcpCLI.c **** 		return pdFALSE;
 1578              		.loc 1 472 0
 1579 00de 0023     		movs	r3, #0
 1580 00e0 E6E1     		b	.L53
 1581              	.L35:
 473:App/STM32F4-Discovery/tcpCLI.c **** 
 474:App/STM32F4-Discovery/tcpCLI.c **** 	}
 475:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 476:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND GET [parameter name] [value]
 477:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 478:App/STM32F4-Discovery/tcpCLI.c **** 
 479:App/STM32F4-Discovery/tcpCLI.c **** 
 480:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "get", 3))
 1582              		.loc 1 480 0
 1583 00e2 786A     		ldr	r0, [r7, #36]
 1584 00e4 7349     		ldr	r1, .L54+28
 1585 00e6 0322     		movs	r2, #3
 1586 00e8 FFF7FEFF 		bl	strncmp
 1587 00ec 0346     		mov	r3, r0
 1588 00ee 002B     		cmp	r3, #0
 1589 00f0 40F0F480 		bne	.L39
 481:App/STM32F4-Discovery/tcpCLI.c **** 	{
 482:App/STM32F4-Discovery/tcpCLI.c **** 		// get parameter from command line 
 483:App/STM32F4-Discovery/tcpCLI.c **** 	
 484:App/STM32F4-Discovery/tcpCLI.c **** 		Param = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1590              		.loc 1 484 0
 1591 00f4 07F11403 		add	r3, r7, #20
 1592 00f8 7868     		ldr	r0, [r7, #4]
 1593 00fa 0221     		movs	r1, #2
 1594 00fc 1A46     		mov	r2, r3
 1595 00fe FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1596 0102 3862     		str	r0, [r7, #32]
 485:App/STM32F4-Discovery/tcpCLI.c **** 					  2,  		   // 2nd parameter
 486:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xParamLength // parameter string length
 487:App/STM32F4-Discovery/tcpCLI.c **** 					  
 488:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 489:App/STM32F4-Discovery/tcpCLI.c **** 			
 490:App/STM32F4-Discovery/tcpCLI.c **** 		// return pdFALSE if there is no 3rd parameter 
 491:App/STM32F4-Discovery/tcpCLI.c **** 
 492:App/STM32F4-Discovery/tcpCLI.c **** 		if(Param==NULL)
 1597              		.loc 1 492 0
 1598 0104 3B6A     		ldr	r3, [r7, #32]
 1599 0106 002B     		cmp	r3, #0
 1600 0108 40F0B380 		bne	.L40
 493:App/STM32F4-Discovery/tcpCLI.c **** 		{
 494:App/STM32F4-Discovery/tcpCLI.c **** 			telegramS.Qcmd = GETDATA;
 1601              		.loc 1 494 0
 1602 010c 6A4B     		ldr	r3, .L54+32
 1603 010e 0122     		movs	r2, #1
 1604 0110 1A70     		strb	r2, [r3]
 495:App/STM32F4-Discovery/tcpCLI.c **** 		
 496:App/STM32F4-Discovery/tcpCLI.c **** 			if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) )
 1605              		.loc 1 496 0
 1606 0112 664B     		ldr	r3, .L54+20
 1607 0114 1A68     		ldr	r2, [r3]
 1608 0116 694B     		ldr	r3, .L54+36
 1609 0118 1B68     		ldr	r3, [r3]
 1610 011a 1046     		mov	r0, r2
 1611 011c 6649     		ldr	r1, .L54+32
 1612 011e 1A46     		mov	r2, r3
 1613 0120 0023     		movs	r3, #0
 1614 0122 FFF7FEFF 		bl	xQueueGenericSend
 1615 0126 0346     		mov	r3, r0
 1616 0128 002B     		cmp	r3, #0
 1617 012a 00F08F80 		beq	.L41
 497:App/STM32F4-Discovery/tcpCLI.c **** 			{	
 498:App/STM32F4-Discovery/tcpCLI.c **** 					
 499:App/STM32F4-Discovery/tcpCLI.c **** 				if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay)== pdPASS)
 1618              		.loc 1 499 0
 1619 012e 5F4B     		ldr	r3, .L54+20
 1620 0130 1A68     		ldr	r2, [r3]
 1621 0132 624B     		ldr	r3, .L54+36
 1622 0134 1B68     		ldr	r3, [r3]
 1623 0136 1046     		mov	r0, r2
 1624 0138 6149     		ldr	r1, .L54+40
 1625 013a 1A46     		mov	r2, r3
 1626 013c 0023     		movs	r3, #0
 1627 013e FFF7FEFF 		bl	xQueueGenericReceive
 1628 0142 0346     		mov	r3, r0
 1629 0144 012B     		cmp	r3, #1
 1630 0146 70D1     		bne	.L42
 500:App/STM32F4-Discovery/tcpCLI.c **** 				{
 501:App/STM32F4-Discovery/tcpCLI.c **** 					if ( telegramR.Qcmd == SUCCSESS) 
 1631              		.loc 1 501 0
 1632 0148 5D4B     		ldr	r3, .L54+40
 1633 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1634 014c 062B     		cmp	r3, #6
 1635 014e 5DD1     		bne	.L43
 502:App/STM32F4-Discovery/tcpCLI.c **** 					{
 503:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 504:App/STM32F4-Discovery/tcpCLI.c **** 					telegramR.data[3]/100,
 1636              		.loc 1 504 0
 1637 0150 5B4B     		ldr	r3, .L54+40
 1638 0152 DA89     		ldrh	r2, [r3, #14]
 503:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 1639              		.loc 1 503 0
 1640 0154 5B4B     		ldr	r3, .L54+44
 1641 0156 A3FB0203 		umull	r0, r3, r3, r2
 1642 015a 5B09     		lsrs	r3, r3, #5
 1643 015c 9BB2     		uxth	r3, r3
 1644 015e 1A46     		mov	r2, r3
 505:App/STM32F4-Discovery/tcpCLI.c **** 					telegramR.data[3] % 100);
 1645              		.loc 1 505 0
 1646 0160 574B     		ldr	r3, .L54+40
 1647 0162 DB89     		ldrh	r3, [r3, #14]
 503:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 1648              		.loc 1 503 0
 1649 0164 5749     		ldr	r1, .L54+44
 1650 0166 A1FB0381 		umull	r8, r1, r1, r3
 1651 016a 4909     		lsrs	r1, r1, #5
 1652 016c 6420     		movs	r0, #100
 1653 016e 00FB01F1 		mul	r1, r0, r1
 1654 0172 5B1A     		subs	r3, r3, r1
 1655 0174 9BB2     		uxth	r3, r3
 1656 0176 F868     		ldr	r0, [r7, #12]
 1657 0178 5349     		ldr	r1, .L54+48
 1658 017a FFF7FEFF 		bl	sprintf
 506:App/STM32F4-Discovery/tcpCLI.c **** 
 507:App/STM32F4-Discovery/tcpCLI.c **** 
 508:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 509:App/STM32F4-Discovery/tcpCLI.c **** 							"Power In=%d, Iout=%d, Vin=%d, "
 510:App/STM32F4-Discovery/tcpCLI.c **** 							"PrcOut=%d.%d, RPMOut=%d, "
 511:App/STM32F4-Discovery/tcpCLI.c **** 							"InternalTemp=%d.%d\n",
 512:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[8],
 1659              		.loc 1 512 0
 1660 017e 504B     		ldr	r3, .L54+40
 1661 0180 1B8B     		ldrh	r3, [r3, #24]
 508:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1662              		.loc 1 508 0
 1663 0182 1A46     		mov	r2, r3
 513:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[7],
 1664              		.loc 1 513 0
 1665 0184 4E4B     		ldr	r3, .L54+40
 1666 0186 DB8A     		ldrh	r3, [r3, #22]
 508:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1667              		.loc 1 508 0
 1668 0188 1C46     		mov	r4, r3
 514:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[6],
 1669              		.loc 1 514 0
 1670 018a 4D4B     		ldr	r3, .L54+40
 1671 018c 9B8A     		ldrh	r3, [r3, #20]
 508:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1672              		.loc 1 508 0
 1673 018e 9E46     		mov	lr, r3
 515:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[3]/100,
 1674              		.loc 1 515 0
 1675 0190 4B4B     		ldr	r3, .L54+40
 1676 0192 D989     		ldrh	r1, [r3, #14]
 508:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1677              		.loc 1 508 0
 1678 0194 4B4B     		ldr	r3, .L54+44
 1679 0196 A3FB01C3 		umull	ip, r3, r3, r1
 1680 019a 5B09     		lsrs	r3, r3, #5
 1681 019c 9BB2     		uxth	r3, r3
 1682 019e 1E46     		mov	r6, r3
 516:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[3] % 100, 
 1683              		.loc 1 516 0
 1684 01a0 474B     		ldr	r3, .L54+40
 1685 01a2 DB89     		ldrh	r3, [r3, #14]
 508:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1686              		.loc 1 508 0
 1687 01a4 4749     		ldr	r1, .L54+44
 1688 01a6 A1FB0301 		umull	r0, r1, r1, r3
 1689 01aa 4909     		lsrs	r1, r1, #5
 1690 01ac 6420     		movs	r0, #100
 1691 01ae 00FB01F1 		mul	r1, r0, r1
 1692 01b2 5B1A     		subs	r3, r3, r1
 1693 01b4 9BB2     		uxth	r3, r3
 1694 01b6 1D46     		mov	r5, r3
 517:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[4],
 1695              		.loc 1 517 0
 1696 01b8 414B     		ldr	r3, .L54+40
 1697 01ba 1B8A     		ldrh	r3, [r3, #16]
 508:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1698              		.loc 1 508 0
 1699 01bc 1846     		mov	r0, r3
 518:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[5]/100,
 1700              		.loc 1 518 0
 1701 01be 404B     		ldr	r3, .L54+40
 1702 01c0 598A     		ldrh	r1, [r3, #18]
 508:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1703              		.loc 1 508 0
 1704 01c2 404B     		ldr	r3, .L54+44
 1705 01c4 A3FB0183 		umull	r8, r3, r3, r1
 1706 01c8 5B09     		lsrs	r3, r3, #5
 1707 01ca 9BB2     		uxth	r3, r3
 1708 01cc 1946     		mov	r1, r3
 519:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[5] % 100);
 1709              		.loc 1 519 0
 1710 01ce 3C4B     		ldr	r3, .L54+40
 1711 01d0 5B8A     		ldrh	r3, [r3, #18]
 508:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1712              		.loc 1 508 0
 1713 01d2 DFF8F0C0 		ldr	ip, .L54+44
 1714 01d6 ACFB038C 		umull	r8, ip, ip, r3
 1715 01da 4FEA5C1C 		lsr	ip, ip, #5
 1716 01de 4FF06408 		mov	r8, #100
 1717 01e2 08FB0CFC 		mul	ip, r8, ip
 1718 01e6 CCEB0303 		rsb	r3, ip, r3
 1719 01ea 9BB2     		uxth	r3, r3
 1720 01ec CDF800E0 		str	lr, [sp]
 1721 01f0 0196     		str	r6, [sp, #4]
 1722 01f2 0295     		str	r5, [sp, #8]
 1723 01f4 0390     		str	r0, [sp, #12]
 1724 01f6 0491     		str	r1, [sp, #16]
 1725 01f8 0593     		str	r3, [sp, #20]
 1726 01fa F868     		ldr	r0, [r7, #12]
 1727 01fc 3349     		ldr	r1, .L54+52
 1728 01fe 2346     		mov	r3, r4
 1729 0200 FFF7FEFF 		bl	sprintf
 520:App/STM32F4-Discovery/tcpCLI.c **** 						xWriteBufferLen = 50 ; 	
 1730              		.loc 1 520 0
 1731 0204 3223     		movs	r3, #50
 1732 0206 BB60     		str	r3, [r7, #8]
 521:App/STM32F4-Discovery/tcpCLI.c **** 						//send( socket_0, buf, len, 0);
 522:App/STM32F4-Discovery/tcpCLI.c **** 
 523:App/STM32F4-Discovery/tcpCLI.c **** 					
 524:App/STM32F4-Discovery/tcpCLI.c **** 						return pdPASS;
 1733              		.loc 1 524 0
 1734 0208 0123     		movs	r3, #1
 1735 020a 51E1     		b	.L53
 1736              	.L43:
 525:App/STM32F4-Discovery/tcpCLI.c **** 
 526:App/STM32F4-Discovery/tcpCLI.c **** 					}
 527:App/STM32F4-Discovery/tcpCLI.c **** 					else
 528:App/STM32F4-Discovery/tcpCLI.c **** 					{
 529:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1737              		.loc 1 529 0
 1738 020c FA68     		ldr	r2, [r7, #12]
 1739 020e 304B     		ldr	r3, .L54+56
 1740 0210 1546     		mov	r5, r2
 1741 0212 1C46     		mov	r4, r3
 1742 0214 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1743 0216 2860     		str	r0, [r5]	@ unaligned
 1744 0218 6960     		str	r1, [r5, #4]	@ unaligned
 1745 021a AA60     		str	r2, [r5, #8]	@ unaligned
 1746 021c EB60     		str	r3, [r5, #12]	@ unaligned
 1747 021e 2068     		ldr	r0, [r4]	@ unaligned
 1748 0220 2861     		str	r0, [r5, #16]	@ unaligned
 530:App/STM32F4-Discovery/tcpCLI.c **** 			       			xWriteBufferLen = 19; 	
 1749              		.loc 1 530 0
 1750 0222 1323     		movs	r3, #19
 1751 0224 BB60     		str	r3, [r7, #8]
 531:App/STM32F4-Discovery/tcpCLI.c **** 						//send( socket_0, buf, len, 0);
 532:App/STM32F4-Discovery/tcpCLI.c **** 
 533:App/STM32F4-Discovery/tcpCLI.c **** 						return pdFALSE;
 1752              		.loc 1 533 0
 1753 0226 0023     		movs	r3, #0
 1754 0228 42E1     		b	.L53
 1755              	.L42:
 534:App/STM32F4-Discovery/tcpCLI.c **** 
 535:App/STM32F4-Discovery/tcpCLI.c **** 
 536:App/STM32F4-Discovery/tcpCLI.c **** 					}
 537:App/STM32F4-Discovery/tcpCLI.c **** 				}
 538:App/STM32F4-Discovery/tcpCLI.c **** 				else
 539:App/STM32F4-Discovery/tcpCLI.c **** 				{
 540:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 541:App/STM32F4-Discovery/tcpCLI.c **** 					// send error via TCP 
 542:App/STM32F4-Discovery/tcpCLI.c **** 		
 543:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 1756              		.loc 1 543 0
 1757 022a FA68     		ldr	r2, [r7, #12]
 1758 022c 294B     		ldr	r3, .L54+60
 1759 022e 1546     		mov	r5, r2
 1760 0230 1C46     		mov	r4, r3
 1761 0232 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1762 0234 2860     		str	r0, [r5]	@ unaligned
 1763 0236 6960     		str	r1, [r5, #4]	@ unaligned
 1764 0238 AA60     		str	r2, [r5, #8]	@ unaligned
 1765 023a EB60     		str	r3, [r5, #12]	@ unaligned
 1766 023c 07CC     		ldmia	r4!, {r0, r1, r2}
 1767 023e 2861     		str	r0, [r5, #16]	@ unaligned
 1768 0240 6961     		str	r1, [r5, #20]	@ unaligned
 1769 0242 AA61     		str	r2, [r5, #24]	@ unaligned
 544:App/STM32F4-Discovery/tcpCLI.c **** 	 				xWriteBufferLen = 27; 	
 1770              		.loc 1 544 0
 1771 0244 1B23     		movs	r3, #27
 1772 0246 BB60     		str	r3, [r7, #8]
 545:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 546:App/STM32F4-Discovery/tcpCLI.c **** 
 547:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE; 	
 1773              		.loc 1 547 0
 1774 0248 0023     		movs	r3, #0
 1775 024a 31E1     		b	.L53
 1776              	.L41:
 548:App/STM32F4-Discovery/tcpCLI.c **** 				}	
 549:App/STM32F4-Discovery/tcpCLI.c **** 			}
 550:App/STM32F4-Discovery/tcpCLI.c **** 			else
 551:App/STM32F4-Discovery/tcpCLI.c **** 			{
 552:App/STM32F4-Discovery/tcpCLI.c **** 			
 553:App/STM32F4-Discovery/tcpCLI.c **** 				// send to Queue was unsuccsessful
 554:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 555:App/STM32F4-Discovery/tcpCLI.c **** 		
 556:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 1777              		.loc 1 556 0
 1778 024c FA68     		ldr	r2, [r7, #12]
 1779 024e 224B     		ldr	r3, .L54+64
 1780 0250 1446     		mov	r4, r2
 1781 0252 1D46     		mov	r5, r3
 1782 0254 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1783 0256 2060     		str	r0, [r4]	@ unaligned
 1784 0258 6160     		str	r1, [r4, #4]	@ unaligned
 1785 025a A260     		str	r2, [r4, #8]	@ unaligned
 1786 025c E360     		str	r3, [r4, #12]	@ unaligned
 1787 025e 2868     		ldr	r0, [r5]	@ unaligned
 1788 0260 2061     		str	r0, [r4, #16]	@ unaligned
 1789 0262 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1790 0264 AB79     		ldrb	r3, [r5, #6]
 1791 0266 A282     		strh	r2, [r4, #20]	@ unaligned
 1792 0268 A375     		strb	r3, [r4, #22]
 557:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 22; 	
 1793              		.loc 1 557 0
 1794 026a 1623     		movs	r3, #22
 1795 026c BB60     		str	r3, [r7, #8]
 558:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket, buf, len, 0);
 559:App/STM32F4-Discovery/tcpCLI.c **** 
 560:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 1796              		.loc 1 560 0
 1797 026e 0023     		movs	r3, #0
 1798 0270 1EE1     		b	.L53
 1799              	.L40:
 561:App/STM32F4-Discovery/tcpCLI.c **** 			}
 562:App/STM32F4-Discovery/tcpCLI.c **** 		
 563:App/STM32F4-Discovery/tcpCLI.c **** 		
 564:App/STM32F4-Discovery/tcpCLI.c **** 		}
 565:App/STM32F4-Discovery/tcpCLI.c **** 
 566:App/STM32F4-Discovery/tcpCLI.c **** 		
 567:App/STM32F4-Discovery/tcpCLI.c **** 		if ( handleVariable_get ( 
 1800              		.loc 1 567 0
 1801 0272 7B69     		ldr	r3, [r7, #20]
 1802 0274 0D4A     		ldr	r2, .L54+20
 1803 0276 1168     		ldr	r1, [r2]
 1804 0278 0D4A     		ldr	r2, .L54+24
 1805 027a 1268     		ldr	r2, [r2]
 1806 027c 0091     		str	r1, [sp]
 1807 027e 0192     		str	r2, [sp, #4]
 1808 0280 F868     		ldr	r0, [r7, #12]
 1809 0282 B968     		ldr	r1, [r7, #8]
 1810 0284 3A6A     		ldr	r2, [r7, #32]
 1811 0286 FFF7FEFF 		bl	handleVariable_get
 1812 028a 0346     		mov	r3, r0
 1813 028c 002B     		cmp	r3, #0
 1814 028e 01D0     		beq	.L44
 568:App/STM32F4-Discovery/tcpCLI.c **** 				        pcWriteBuffer, 
 569:App/STM32F4-Discovery/tcpCLI.c **** 					   xWriteBufferLen,
 570:App/STM32F4-Discovery/tcpCLI.c **** 	
 571:App/STM32F4-Discovery/tcpCLI.c **** 				           Param, 
 572:App/STM32F4-Discovery/tcpCLI.c **** 					   xParamLength, 
 573:App/STM32F4-Discovery/tcpCLI.c **** 					   QSpd_handle, 
 574:App/STM32F4-Discovery/tcpCLI.c **** 					   socket_0)) return pdPASS;
 1815              		.loc 1 574 0
 1816 0290 0123     		movs	r3, #1
 1817 0292 0DE1     		b	.L53
 1818              	.L44:
 575:App/STM32F4-Discovery/tcpCLI.c **** 		return pdFALSE;
 1819              		.loc 1 575 0
 1820 0294 0023     		movs	r3, #0
 1821 0296 0BE1     		b	.L53
 1822              	.L55:
 1823              		.align	2
 1824              	.L54:
 1825 0298 AC010000 		.word	.LC16
 1826 029c C4010000 		.word	.LC17
 1827 02a0 CC010000 		.word	.LC18
 1828 02a4 8C020000 		.word	.LC19
 1829 02a8 08000000 		.word	.LC1
 1830 02ac 00000000 		.word	QSpd_handle
 1831 02b0 00000000 		.word	socket_0
 1832 02b4 90020000 		.word	.LC20
 1833 02b8 00000000 		.word	telegramS
 1834 02bc 00000000 		.word	xDelay
 1835 02c0 00000000 		.word	telegramR
 1836 02c4 1F85EB51 		.word	1374389535
 1837 02c8 94010000 		.word	.LC15
 1838 02cc 94020000 		.word	.LC21
 1839 02d0 C8000000 		.word	.LC7
 1840 02d4 DC000000 		.word	.LC8
 1841 02d8 F8000000 		.word	.LC9
 1842              	.L39:
 576:App/STM32F4-Discovery/tcpCLI.c **** 
 577:App/STM32F4-Discovery/tcpCLI.c **** 
 578:App/STM32F4-Discovery/tcpCLI.c **** 	}
 579:App/STM32F4-Discovery/tcpCLI.c **** 		
 580:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 581:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND STOP 
 582:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 583:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "stop", 4))
 1843              		.loc 1 583 0
 1844 02dc 786A     		ldr	r0, [r7, #36]
 1845 02de 7749     		ldr	r1, .L56
 1846 02e0 0422     		movs	r2, #4
 1847 02e2 FFF7FEFF 		bl	strncmp
 1848 02e6 0346     		mov	r3, r0
 1849 02e8 002B     		cmp	r3, #0
 1850 02ea 69D1     		bne	.L45
 584:App/STM32F4-Discovery/tcpCLI.c **** 	{
 585:App/STM32F4-Discovery/tcpCLI.c **** 
 586:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = STOP; 
 1851              		.loc 1 586 0
 1852 02ec 744B     		ldr	r3, .L56+4
 1853 02ee 0522     		movs	r2, #5
 1854 02f0 1A70     		strb	r2, [r3]
 587:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5; 
 1855              		.loc 1 587 0
 1856 02f2 734B     		ldr	r3, .L56+4
 1857 02f4 0522     		movs	r2, #5
 1858 02f6 5A60     		str	r2, [r3, #4]
 588:App/STM32F4-Discovery/tcpCLI.c **** 			// send value to setSpeed_task via Queue 
 589:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) )
 1859              		.loc 1 589 0
 1860 02f8 724B     		ldr	r3, .L56+8
 1861 02fa 1A68     		ldr	r2, [r3]
 1862 02fc 724B     		ldr	r3, .L56+12
 1863 02fe 1B68     		ldr	r3, [r3]
 1864 0300 1046     		mov	r0, r2
 1865 0302 6F49     		ldr	r1, .L56+4
 1866 0304 1A46     		mov	r2, r3
 1867 0306 0023     		movs	r3, #0
 1868 0308 FFF7FEFF 		bl	xQueueGenericSend
 1869 030c 0346     		mov	r3, r0
 1870 030e 002B     		cmp	r3, #0
 1871 0310 43D0     		beq	.L46
 590:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 591:App/STM32F4-Discovery/tcpCLI.c **** 					
 592:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay)== pdPASS)
 1872              		.loc 1 592 0
 1873 0312 6C4B     		ldr	r3, .L56+8
 1874 0314 1A68     		ldr	r2, [r3]
 1875 0316 6C4B     		ldr	r3, .L56+12
 1876 0318 1B68     		ldr	r3, [r3]
 1877 031a 1046     		mov	r0, r2
 1878 031c 6B49     		ldr	r1, .L56+16
 1879 031e 1A46     		mov	r2, r3
 1880 0320 0023     		movs	r3, #0
 1881 0322 FFF7FEFF 		bl	xQueueGenericReceive
 1882 0326 0346     		mov	r3, r0
 1883 0328 012B     		cmp	r3, #1
 1884 032a 25D1     		bne	.L47
 593:App/STM32F4-Discovery/tcpCLI.c **** 			{
 594:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 1885              		.loc 1 594 0
 1886 032c 674B     		ldr	r3, .L56+16
 1887 032e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1888 0330 062B     		cmp	r3, #6
 1889 0332 12D1     		bne	.L48
 595:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 596:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer ,"Motor succsesfully stopped.\n\n");
 1890              		.loc 1 596 0
 1891 0334 FA68     		ldr	r2, [r7, #12]
 1892 0336 664B     		ldr	r3, .L56+20
 1893 0338 1546     		mov	r5, r2
 1894 033a 1C46     		mov	r4, r3
 1895 033c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1896 033e 2860     		str	r0, [r5]	@ unaligned
 1897 0340 6960     		str	r1, [r5, #4]	@ unaligned
 1898 0342 AA60     		str	r2, [r5, #8]	@ unaligned
 1899 0344 EB60     		str	r3, [r5, #12]	@ unaligned
 1900 0346 07CC     		ldmia	r4!, {r0, r1, r2}
 1901 0348 2861     		str	r0, [r5, #16]	@ unaligned
 1902 034a 6961     		str	r1, [r5, #20]	@ unaligned
 1903 034c AA61     		str	r2, [r5, #24]	@ unaligned
 1904 034e 2388     		ldrh	r3, [r4]	@ unaligned
 1905 0350 AB83     		strh	r3, [r5, #28]	@ unaligned
 597:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 29 ; 	
 1906              		.loc 1 597 0
 1907 0352 1D23     		movs	r3, #29
 1908 0354 BB60     		str	r3, [r7, #8]
 598:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 599:App/STM32F4-Discovery/tcpCLI.c **** 
 600:App/STM32F4-Discovery/tcpCLI.c **** 					
 601:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 1909              		.loc 1 601 0
 1910 0356 0123     		movs	r3, #1
 1911 0358 AAE0     		b	.L53
 1912              	.L48:
 602:App/STM32F4-Discovery/tcpCLI.c **** 
 603:App/STM32F4-Discovery/tcpCLI.c **** 				}
 604:App/STM32F4-Discovery/tcpCLI.c **** 				else
 605:App/STM32F4-Discovery/tcpCLI.c **** 				{
 606:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1913              		.loc 1 606 0
 1914 035a FA68     		ldr	r2, [r7, #12]
 1915 035c 5D4B     		ldr	r3, .L56+24
 1916 035e 1546     		mov	r5, r2
 1917 0360 1C46     		mov	r4, r3
 1918 0362 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1919 0364 2860     		str	r0, [r5]	@ unaligned
 1920 0366 6960     		str	r1, [r5, #4]	@ unaligned
 1921 0368 AA60     		str	r2, [r5, #8]	@ unaligned
 1922 036a EB60     		str	r3, [r5, #12]	@ unaligned
 1923 036c 2068     		ldr	r0, [r4]	@ unaligned
 1924 036e 2861     		str	r0, [r5, #16]	@ unaligned
 607:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 1925              		.loc 1 607 0
 1926 0370 1323     		movs	r3, #19
 1927 0372 BB60     		str	r3, [r7, #8]
 608:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 609:App/STM32F4-Discovery/tcpCLI.c **** 
 610:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 1928              		.loc 1 610 0
 1929 0374 0023     		movs	r3, #0
 1930 0376 9BE0     		b	.L53
 1931              	.L47:
 611:App/STM32F4-Discovery/tcpCLI.c **** 
 612:App/STM32F4-Discovery/tcpCLI.c **** 
 613:App/STM32F4-Discovery/tcpCLI.c **** 				}
 614:App/STM32F4-Discovery/tcpCLI.c **** 			}
 615:App/STM32F4-Discovery/tcpCLI.c **** 			else
 616:App/STM32F4-Discovery/tcpCLI.c **** 			{
 617:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 618:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 619:App/STM32F4-Discovery/tcpCLI.c **** 		
 620:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 1932              		.loc 1 620 0
 1933 0378 FA68     		ldr	r2, [r7, #12]
 1934 037a 574B     		ldr	r3, .L56+28
 1935 037c 1546     		mov	r5, r2
 1936 037e 1C46     		mov	r4, r3
 1937 0380 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1938 0382 2860     		str	r0, [r5]	@ unaligned
 1939 0384 6960     		str	r1, [r5, #4]	@ unaligned
 1940 0386 AA60     		str	r2, [r5, #8]	@ unaligned
 1941 0388 EB60     		str	r3, [r5, #12]	@ unaligned
 1942 038a 07CC     		ldmia	r4!, {r0, r1, r2}
 1943 038c 2861     		str	r0, [r5, #16]	@ unaligned
 1944 038e 6961     		str	r1, [r5, #20]	@ unaligned
 1945 0390 AA61     		str	r2, [r5, #24]	@ unaligned
 621:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 1946              		.loc 1 621 0
 1947 0392 1B23     		movs	r3, #27
 1948 0394 BB60     		str	r3, [r7, #8]
 622:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 623:App/STM32F4-Discovery/tcpCLI.c **** 
 624:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 1949              		.loc 1 624 0
 1950 0396 0023     		movs	r3, #0
 1951 0398 8AE0     		b	.L53
 1952              	.L46:
 625:App/STM32F4-Discovery/tcpCLI.c **** 			}
 626:App/STM32F4-Discovery/tcpCLI.c **** 		}
 627:App/STM32F4-Discovery/tcpCLI.c **** 		else
 628:App/STM32F4-Discovery/tcpCLI.c **** 		{
 629:App/STM32F4-Discovery/tcpCLI.c **** 			
 630:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 631:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 632:App/STM32F4-Discovery/tcpCLI.c **** 		
 633:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 1953              		.loc 1 633 0
 1954 039a FA68     		ldr	r2, [r7, #12]
 1955 039c 4F4B     		ldr	r3, .L56+32
 1956 039e 1446     		mov	r4, r2
 1957 03a0 1D46     		mov	r5, r3
 1958 03a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1959 03a4 2060     		str	r0, [r4]	@ unaligned
 1960 03a6 6160     		str	r1, [r4, #4]	@ unaligned
 1961 03a8 A260     		str	r2, [r4, #8]	@ unaligned
 1962 03aa E360     		str	r3, [r4, #12]	@ unaligned
 1963 03ac 2868     		ldr	r0, [r5]	@ unaligned
 1964 03ae 2061     		str	r0, [r4, #16]	@ unaligned
 1965 03b0 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1966 03b2 AB79     		ldrb	r3, [r5, #6]
 1967 03b4 A282     		strh	r2, [r4, #20]	@ unaligned
 1968 03b6 A375     		strb	r3, [r4, #22]
 634:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1969              		.loc 1 634 0
 1970 03b8 1623     		movs	r3, #22
 1971 03ba BB60     		str	r3, [r7, #8]
 635:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 636:App/STM32F4-Discovery/tcpCLI.c **** 
 637:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1972              		.loc 1 637 0
 1973 03bc 0023     		movs	r3, #0
 1974 03be 77E0     		b	.L53
 1975              	.L45:
 638:App/STM32F4-Discovery/tcpCLI.c **** 		}
 639:App/STM32F4-Discovery/tcpCLI.c **** 					
 640:App/STM32F4-Discovery/tcpCLI.c **** 	}
 641:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 642:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND START
 643:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 644:App/STM32F4-Discovery/tcpCLI.c **** 
 645:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "start", 5))
 1976              		.loc 1 645 0
 1977 03c0 786A     		ldr	r0, [r7, #36]
 1978 03c2 4749     		ldr	r1, .L56+36
 1979 03c4 0522     		movs	r2, #5
 1980 03c6 FFF7FEFF 		bl	strncmp
 1981 03ca 0346     		mov	r3, r0
 1982 03cc 002B     		cmp	r3, #0
 1983 03ce 69D1     		bne	.L49
 646:App/STM32F4-Discovery/tcpCLI.c **** 	{
 647:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = START; 
 1984              		.loc 1 647 0
 1985 03d0 3B4B     		ldr	r3, .L56+4
 1986 03d2 0422     		movs	r2, #4
 1987 03d4 1A70     		strb	r2, [r3]
 648:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5; 
 1988              		.loc 1 648 0
 1989 03d6 3A4B     		ldr	r3, .L56+4
 1990 03d8 0522     		movs	r2, #5
 1991 03da 5A60     		str	r2, [r3, #4]
 649:App/STM32F4-Discovery/tcpCLI.c **** 			// send value to setSpeed_task via Queue 
 650:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 1992              		.loc 1 650 0
 1993 03dc 394B     		ldr	r3, .L56+8
 1994 03de 1A68     		ldr	r2, [r3]
 1995 03e0 394B     		ldr	r3, .L56+12
 1996 03e2 1B68     		ldr	r3, [r3]
 1997 03e4 1046     		mov	r0, r2
 1998 03e6 3649     		ldr	r1, .L56+4
 1999 03e8 1A46     		mov	r2, r3
 2000 03ea 0023     		movs	r3, #0
 2001 03ec FFF7FEFF 		bl	xQueueGenericSend
 2002 03f0 0346     		mov	r3, r0
 2003 03f2 012B     		cmp	r3, #1
 2004 03f4 43D1     		bne	.L50
 651:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 652:App/STM32F4-Discovery/tcpCLI.c **** 		//	vTaskDelay(500/portTICK_RATE_MS);		
 653:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay) == pdPASS)
 2005              		.loc 1 653 0
 2006 03f6 334B     		ldr	r3, .L56+8
 2007 03f8 1A68     		ldr	r2, [r3]
 2008 03fa 334B     		ldr	r3, .L56+12
 2009 03fc 1B68     		ldr	r3, [r3]
 2010 03fe 1046     		mov	r0, r2
 2011 0400 3249     		ldr	r1, .L56+16
 2012 0402 1A46     		mov	r2, r3
 2013 0404 0023     		movs	r3, #0
 2014 0406 FFF7FEFF 		bl	xQueueGenericReceive
 2015 040a 0346     		mov	r3, r0
 2016 040c 012B     		cmp	r3, #1
 2017 040e 25D1     		bne	.L51
 654:App/STM32F4-Discovery/tcpCLI.c **** 			{
 655:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 2018              		.loc 1 655 0
 2019 0410 2E4B     		ldr	r3, .L56+16
 2020 0412 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2021 0414 062B     		cmp	r3, #6
 2022 0416 12D1     		bne	.L52
 656:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 657:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer , "Motor succsesfully started.\n\n");
 2023              		.loc 1 657 0
 2024 0418 FA68     		ldr	r2, [r7, #12]
 2025 041a 324B     		ldr	r3, .L56+40
 2026 041c 1546     		mov	r5, r2
 2027 041e 1C46     		mov	r4, r3
 2028 0420 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2029 0422 2860     		str	r0, [r5]	@ unaligned
 2030 0424 6960     		str	r1, [r5, #4]	@ unaligned
 2031 0426 AA60     		str	r2, [r5, #8]	@ unaligned
 2032 0428 EB60     		str	r3, [r5, #12]	@ unaligned
 2033 042a 07CC     		ldmia	r4!, {r0, r1, r2}
 2034 042c 2861     		str	r0, [r5, #16]	@ unaligned
 2035 042e 6961     		str	r1, [r5, #20]	@ unaligned
 2036 0430 AA61     		str	r2, [r5, #24]	@ unaligned
 2037 0432 2388     		ldrh	r3, [r4]	@ unaligned
 2038 0434 AB83     		strh	r3, [r5, #28]	@ unaligned
 658:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 29; 	
 2039              		.loc 1 658 0
 2040 0436 1D23     		movs	r3, #29
 2041 0438 BB60     		str	r3, [r7, #8]
 659:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 660:App/STM32F4-Discovery/tcpCLI.c **** 
 661:App/STM32F4-Discovery/tcpCLI.c **** 					
 662:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 2042              		.loc 1 662 0
 2043 043a 0123     		movs	r3, #1
 2044 043c 38E0     		b	.L53
 2045              	.L52:
 663:App/STM32F4-Discovery/tcpCLI.c **** 
 664:App/STM32F4-Discovery/tcpCLI.c **** 				}
 665:App/STM32F4-Discovery/tcpCLI.c **** 				else
 666:App/STM32F4-Discovery/tcpCLI.c **** 				{
 667:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 2046              		.loc 1 667 0
 2047 043e FA68     		ldr	r2, [r7, #12]
 2048 0440 244B     		ldr	r3, .L56+24
 2049 0442 1546     		mov	r5, r2
 2050 0444 1C46     		mov	r4, r3
 2051 0446 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2052 0448 2860     		str	r0, [r5]	@ unaligned
 2053 044a 6960     		str	r1, [r5, #4]	@ unaligned
 2054 044c AA60     		str	r2, [r5, #8]	@ unaligned
 2055 044e EB60     		str	r3, [r5, #12]	@ unaligned
 2056 0450 2068     		ldr	r0, [r4]	@ unaligned
 2057 0452 2861     		str	r0, [r5, #16]	@ unaligned
 668:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 2058              		.loc 1 668 0
 2059 0454 1323     		movs	r3, #19
 2060 0456 BB60     		str	r3, [r7, #8]
 669:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 670:App/STM32F4-Discovery/tcpCLI.c **** 
 671:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 2061              		.loc 1 671 0
 2062 0458 0023     		movs	r3, #0
 2063 045a 29E0     		b	.L53
 2064              	.L51:
 672:App/STM32F4-Discovery/tcpCLI.c **** 
 673:App/STM32F4-Discovery/tcpCLI.c **** 
 674:App/STM32F4-Discovery/tcpCLI.c **** 				}
 675:App/STM32F4-Discovery/tcpCLI.c **** 			}
 676:App/STM32F4-Discovery/tcpCLI.c **** 			else
 677:App/STM32F4-Discovery/tcpCLI.c **** 			{
 678:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 679:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 680:App/STM32F4-Discovery/tcpCLI.c **** 		
 681:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 2065              		.loc 1 681 0
 2066 045c FA68     		ldr	r2, [r7, #12]
 2067 045e 1E4B     		ldr	r3, .L56+28
 2068 0460 1546     		mov	r5, r2
 2069 0462 1C46     		mov	r4, r3
 2070 0464 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2071 0466 2860     		str	r0, [r5]	@ unaligned
 2072 0468 6960     		str	r1, [r5, #4]	@ unaligned
 2073 046a AA60     		str	r2, [r5, #8]	@ unaligned
 2074 046c EB60     		str	r3, [r5, #12]	@ unaligned
 2075 046e 07CC     		ldmia	r4!, {r0, r1, r2}
 2076 0470 2861     		str	r0, [r5, #16]	@ unaligned
 2077 0472 6961     		str	r1, [r5, #20]	@ unaligned
 2078 0474 AA61     		str	r2, [r5, #24]	@ unaligned
 682:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 2079              		.loc 1 682 0
 2080 0476 1B23     		movs	r3, #27
 2081 0478 BB60     		str	r3, [r7, #8]
 683:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 684:App/STM32F4-Discovery/tcpCLI.c **** 
 685:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 2082              		.loc 1 685 0
 2083 047a 0023     		movs	r3, #0
 2084 047c 18E0     		b	.L53
 2085              	.L50:
 686:App/STM32F4-Discovery/tcpCLI.c **** 			}
 687:App/STM32F4-Discovery/tcpCLI.c **** 		}
 688:App/STM32F4-Discovery/tcpCLI.c **** 		else
 689:App/STM32F4-Discovery/tcpCLI.c **** 		{
 690:App/STM32F4-Discovery/tcpCLI.c **** 			
 691:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 692:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 693:App/STM32F4-Discovery/tcpCLI.c **** 		
 694:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer,"Error sending Queue!\n\n");
 2086              		.loc 1 694 0
 2087 047e FA68     		ldr	r2, [r7, #12]
 2088 0480 164B     		ldr	r3, .L56+32
 2089 0482 1446     		mov	r4, r2
 2090 0484 1D46     		mov	r5, r3
 2091 0486 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2092 0488 2060     		str	r0, [r4]	@ unaligned
 2093 048a 6160     		str	r1, [r4, #4]	@ unaligned
 2094 048c A260     		str	r2, [r4, #8]	@ unaligned
 2095 048e E360     		str	r3, [r4, #12]	@ unaligned
 2096 0490 2868     		ldr	r0, [r5]	@ unaligned
 2097 0492 2061     		str	r0, [r4, #16]	@ unaligned
 2098 0494 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 2099 0496 AB79     		ldrb	r3, [r5, #6]
 2100 0498 A282     		strh	r2, [r4, #20]	@ unaligned
 2101 049a A375     		strb	r3, [r4, #22]
 695:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 2102              		.loc 1 695 0
 2103 049c 1623     		movs	r3, #22
 2104 049e BB60     		str	r3, [r7, #8]
 696:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket_0, buf, len, 0);
 697:App/STM32F4-Discovery/tcpCLI.c **** 
 698:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 2105              		.loc 1 698 0
 2106 04a0 0023     		movs	r3, #0
 2107 04a2 05E0     		b	.L53
 2108              	.L49:
 699:App/STM32F4-Discovery/tcpCLI.c **** 		}
 700:App/STM32F4-Discovery/tcpCLI.c **** 
 701:App/STM32F4-Discovery/tcpCLI.c **** 
 702:App/STM32F4-Discovery/tcpCLI.c **** 	}
 703:App/STM32F4-Discovery/tcpCLI.c **** 
 704:App/STM32F4-Discovery/tcpCLI.c **** 
 705:App/STM32F4-Discovery/tcpCLI.c **** 	strcpy(pcWriteBuffer, xMotorCommand.pcHelpString);
 2109              		.loc 1 705 0
 2110 04a4 104B     		ldr	r3, .L56+44
 2111 04a6 F868     		ldr	r0, [r7, #12]
 2112 04a8 1946     		mov	r1, r3
 2113 04aa FFF7FEFF 		bl	strcpy
 706:App/STM32F4-Discovery/tcpCLI.c **** 		
 707:App/STM32F4-Discovery/tcpCLI.c **** 	return pdFALSE;
 2114              		.loc 1 707 0
 2115 04ae 0023     		movs	r3, #0
 2116              	.L53:
 708:App/STM32F4-Discovery/tcpCLI.c **** 
 709:App/STM32F4-Discovery/tcpCLI.c **** 
 710:App/STM32F4-Discovery/tcpCLI.c **** }
 2117              		.loc 1 710 0
 2118 04b0 1846     		mov	r0, r3
 2119 04b2 2837     		adds	r7, r7, #40
 2120 04b4 BD46     		mov	sp, r7
 2121              		@ sp needed
 2122 04b6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2123              	.L57:
 2124 04ba 00BF     		.align	2
 2125              	.L56:
 2126 04bc E0020000 		.word	.LC22
 2127 04c0 00000000 		.word	telegramS
 2128 04c4 00000000 		.word	QSpd_handle
 2129 04c8 00000000 		.word	xDelay
 2130 04cc 00000000 		.word	telegramR
 2131 04d0 E8020000 		.word	.LC23
 2132 04d4 C8000000 		.word	.LC7
 2133 04d8 DC000000 		.word	.LC8
 2134 04dc F8000000 		.word	.LC9
 2135 04e0 08030000 		.word	.LC24
 2136 04e4 10030000 		.word	.LC25
 2137 04e8 08000000 		.word	.LC1
 2138              		.cfi_endproc
 2139              	.LFE112:
 2141              		.section	.rodata
 2142 032e 0000     		.align	2
 2143              	.LC26:
 2144 0330 6B696C6C 		.ascii	"kill\000"
 2144      00
 2145 0335 000000   		.align	2
 2146              	.LC27:
 2147 0338 5461736B 		.ascii	"Task: motorHB succsessfully killed\012\000\000"
 2147      3A206D6F 
 2147      746F7248 
 2147      42207375 
 2147      63637365 
 2148 035d 000000   		.align	2
 2149              	.LC28:
 2150 0360 6D6F746F 		.ascii	"motorHB\000"
 2150      72484200 
 2151              		.align	2
 2152              	.LC29:
 2153 0368 5461736B 		.ascii	"Task: motorHB succsessfully started\012\000\000"
 2153      3A206D6F 
 2153      746F7248 
 2153      42207375 
 2153      63637365 
 2154 038e 0000     		.section	.text.prvTaskStatsCommand,"ax",%progbits
 2155              		.align	2
 2156              		.global	prvTaskStatsCommand
 2157              		.thumb
 2158              		.thumb_func
 2160              	prvTaskStatsCommand:
 2161              	.LFB113:
 711:App/STM32F4-Discovery/tcpCLI.c **** 
 712:App/STM32F4-Discovery/tcpCLI.c **** portBASE_TYPE prvTaskStatsCommand ( 	int8_t *pcWriteBuffer, 
 713:App/STM32F4-Discovery/tcpCLI.c **** 						size_t xWriteBufferLen, 
 714:App/STM32F4-Discovery/tcpCLI.c **** 						const int8_t *pcCommandString)
 715:App/STM32F4-Discovery/tcpCLI.c **** {
 2162              		.loc 1 715 0
 2163              		.cfi_startproc
 2164              		@ args = 0, pretend = 0, frame = 24
 2165              		@ frame_needed = 1, uses_anonymous_args = 0
 2166 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2167              	.LCFI9:
 2168              		.cfi_def_cfa_offset 24
 2169              		.cfi_offset 4, -24
 2170              		.cfi_offset 5, -20
 2171              		.cfi_offset 6, -16
 2172              		.cfi_offset 7, -12
 2173              		.cfi_offset 8, -8
 2174              		.cfi_offset 14, -4
 2175 0004 8AB0     		sub	sp, sp, #40
 2176              	.LCFI10:
 2177              		.cfi_def_cfa_offset 64
 2178 0006 04AF     		add	r7, sp, #16
 2179              	.LCFI11:
 2180              		.cfi_def_cfa 7, 48
 2181 0008 F860     		str	r0, [r7, #12]
 2182 000a B960     		str	r1, [r7, #8]
 2183 000c 7A60     		str	r2, [r7, #4]
 716:App/STM32F4-Discovery/tcpCLI.c **** 
 717:App/STM32F4-Discovery/tcpCLI.c **** 	int8_t *Option, *Param, *Value;
 718:App/STM32F4-Discovery/tcpCLI.c **** 	int xOptionLength, xParamLength, xValueLength; 
 719:App/STM32F4-Discovery/tcpCLI.c **** 	//QueueTelegram telegram; 
 720:App/STM32F4-Discovery/tcpCLI.c **** 	
 721:App/STM32F4-Discovery/tcpCLI.c **** 	// get option from command line 
 722:App/STM32F4-Discovery/tcpCLI.c **** 
 723:App/STM32F4-Discovery/tcpCLI.c **** 	Option = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 2184              		.loc 1 723 0
 2185 000e 07F11003 		add	r3, r7, #16
 2186 0012 7868     		ldr	r0, [r7, #4]
 2187 0014 0121     		movs	r1, #1
 2188 0016 1A46     		mov	r2, r3
 2189 0018 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 2190 001c 7861     		str	r0, [r7, #20]
 724:App/STM32F4-Discovery/tcpCLI.c **** 					  1,  		   // first parameter
 725:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xOptionLength // parameter string length
 726:App/STM32F4-Discovery/tcpCLI.c **** 					  
 727:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 728:App/STM32F4-Discovery/tcpCLI.c ****     	( void ) xWriteBufferLen;
 729:App/STM32F4-Discovery/tcpCLI.c **** 	if ( Option == NULL)
 2191              		.loc 1 729 0
 2192 001e 7B69     		ldr	r3, [r7, #20]
 2193 0020 002B     		cmp	r3, #0
 2194 0022 02D1     		bne	.L59
 730:App/STM32F4-Discovery/tcpCLI.c **** 	{
 731:App/STM32F4-Discovery/tcpCLI.c **** 		 vTaskList( pcWriteBuffer);
 2195              		.loc 1 731 0
 2196 0024 F868     		ldr	r0, [r7, #12]
 2197 0026 FFF7FEFF 		bl	vTaskList
 2198              	.L59:
 732:App/STM32F4-Discovery/tcpCLI.c **** 	}	
 733:App/STM32F4-Discovery/tcpCLI.c ****     /* For simplicity, this function assumes the output buffer is large enough
 734:App/STM32F4-Discovery/tcpCLI.c ****     to hold all the text generated by executing the vTaskList() API function,
 735:App/STM32F4-Discovery/tcpCLI.c ****     so the xWriteBufferLen parameter is not used. */
 736:App/STM32F4-Discovery/tcpCLI.c **** 
 737:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "kill", 7))
 2199              		.loc 1 737 0
 2200 002a 7869     		ldr	r0, [r7, #20]
 2201 002c 2D49     		ldr	r1, .L66
 2202 002e 0722     		movs	r2, #7
 2203 0030 FFF7FEFF 		bl	strncmp
 2204 0034 0346     		mov	r3, r0
 2205 0036 002B     		cmp	r3, #0
 2206 0038 1CD1     		bne	.L60
 738:App/STM32F4-Discovery/tcpCLI.c **** 	{
 739:App/STM32F4-Discovery/tcpCLI.c **** 	
 740:App/STM32F4-Discovery/tcpCLI.c **** 		vTaskDelete(motorHeartBeatHandle);
 2207              		.loc 1 740 0
 2208 003a 2B4B     		ldr	r3, .L66+4
 2209 003c 1B68     		ldr	r3, [r3]
 2210 003e 1846     		mov	r0, r3
 2211 0040 FFF7FEFF 		bl	vTaskDelete
 741:App/STM32F4-Discovery/tcpCLI.c **** 		strcpy ( pcWriteBuffer, "Task: motorHB succsessfully killed\n\0");
 2212              		.loc 1 741 0
 2213 0044 FB68     		ldr	r3, [r7, #12]
 2214 0046 294A     		ldr	r2, .L66+8
 2215 0048 1446     		mov	r4, r2
 2216 004a 1D46     		mov	r5, r3
 2217 004c 04F12008 		add	r8, r4, #32
 2218              	.L61:
 2219 0050 2E46     		mov	r6, r5
 2220 0052 A446     		mov	ip, r4
 2221 0054 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 2222 0058 3060     		str	r0, [r6]	@ unaligned
 2223 005a 7160     		str	r1, [r6, #4]	@ unaligned
 2224 005c B260     		str	r2, [r6, #8]	@ unaligned
 2225 005e F360     		str	r3, [r6, #12]	@ unaligned
 2226 0060 1034     		adds	r4, r4, #16
 2227 0062 1035     		adds	r5, r5, #16
 2228 0064 4445     		cmp	r4, r8
 2229 0066 F3D1     		bne	.L61
 2230 0068 2B46     		mov	r3, r5
 2231 006a 2246     		mov	r2, r4
 2232 006c 1068     		ldr	r0, [r2]	@ unaligned
 2233 006e 1860     		str	r0, [r3]	@ unaligned
 742:App/STM32F4-Discovery/tcpCLI.c **** 		return pdPASS;
 2234              		.loc 1 742 0
 2235 0070 0123     		movs	r3, #1
 2236 0072 31E0     		b	.L65
 2237              	.L60:
 743:App/STM32F4-Discovery/tcpCLI.c **** 	}
 744:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "start", 5))
 2238              		.loc 1 744 0
 2239 0074 7869     		ldr	r0, [r7, #20]
 2240 0076 1E49     		ldr	r1, .L66+12
 2241 0078 0522     		movs	r2, #5
 2242 007a FFF7FEFF 		bl	strncmp
 2243 007e 0346     		mov	r3, r0
 2244 0080 002B     		cmp	r3, #0
 2245 0082 28D1     		bne	.L63
 745:App/STM32F4-Discovery/tcpCLI.c **** 	{
 746:App/STM32F4-Discovery/tcpCLI.c **** 		// set motor task 
 747:App/STM32F4-Discovery/tcpCLI.c **** 		xTaskCreate(motorHeartBeat_task, "motorHB", configMINIMAL_STACK_SIZE * 8,		       				
 2246              		.loc 1 747 0
 2247 0084 0123     		movs	r3, #1
 2248 0086 0093     		str	r3, [sp]
 2249 0088 174B     		ldr	r3, .L66+4
 2250 008a 0193     		str	r3, [sp, #4]
 2251 008c 0023     		movs	r3, #0
 2252 008e 0293     		str	r3, [sp, #8]
 2253 0090 0023     		movs	r3, #0
 2254 0092 0393     		str	r3, [sp, #12]
 2255 0094 1748     		ldr	r0, .L66+16
 2256 0096 1849     		ldr	r1, .L66+20
 2257 0098 4FF40062 		mov	r2, #2048
 2258 009c 0023     		movs	r3, #0
 2259 009e FFF7FEFF 		bl	xTaskGenericCreate
 748:App/STM32F4-Discovery/tcpCLI.c **** 			NULL, 0x1/*mainFLASH_TASK_PRIORITY*/ , &motorHeartBeatHandle);
 749:App/STM32F4-Discovery/tcpCLI.c **** 
 750:App/STM32F4-Discovery/tcpCLI.c **** 		strcpy ( pcWriteBuffer, "Task: motorHB succsessfully started\n\0");
 2260              		.loc 1 750 0
 2261 00a2 FB68     		ldr	r3, [r7, #12]
 2262 00a4 154A     		ldr	r2, .L66+24
 2263 00a6 1446     		mov	r4, r2
 2264 00a8 1D46     		mov	r5, r3
 2265 00aa 04F12008 		add	r8, r4, #32
 2266              	.L64:
 2267 00ae 2E46     		mov	r6, r5
 2268 00b0 A446     		mov	ip, r4
 2269 00b2 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 2270 00b6 3060     		str	r0, [r6]	@ unaligned
 2271 00b8 7160     		str	r1, [r6, #4]	@ unaligned
 2272 00ba B260     		str	r2, [r6, #8]	@ unaligned
 2273 00bc F360     		str	r3, [r6, #12]	@ unaligned
 2274 00be 1034     		adds	r4, r4, #16
 2275 00c0 1035     		adds	r5, r5, #16
 2276 00c2 4445     		cmp	r4, r8
 2277 00c4 F3D1     		bne	.L64
 2278 00c6 2B46     		mov	r3, r5
 2279 00c8 2246     		mov	r2, r4
 2280 00ca 1068     		ldr	r0, [r2]	@ unaligned
 2281 00cc 1860     		str	r0, [r3]	@ unaligned
 2282 00ce 1279     		ldrb	r2, [r2, #4]
 2283 00d0 1A71     		strb	r2, [r3, #4]
 751:App/STM32F4-Discovery/tcpCLI.c **** 
 752:App/STM32F4-Discovery/tcpCLI.c **** 	
 753:App/STM32F4-Discovery/tcpCLI.c **** 		return pdPASS;	
 2284              		.loc 1 753 0
 2285 00d2 0123     		movs	r3, #1
 2286 00d4 00E0     		b	.L65
 2287              	.L63:
 754:App/STM32F4-Discovery/tcpCLI.c **** 	}
 755:App/STM32F4-Discovery/tcpCLI.c **** 
 756:App/STM32F4-Discovery/tcpCLI.c **** 
 757:App/STM32F4-Discovery/tcpCLI.c ****  
 758:App/STM32F4-Discovery/tcpCLI.c **** 
 759:App/STM32F4-Discovery/tcpCLI.c ****     /* The entire table was written directly to the output buffer.  Execution
 760:App/STM32F4-Discovery/tcpCLI.c ****     of this command is complete, so return pdFALSE. */
 761:App/STM32F4-Discovery/tcpCLI.c ****     return pdFALSE;
 2288              		.loc 1 761 0
 2289 00d6 0023     		movs	r3, #0
 2290              	.L65:
 762:App/STM32F4-Discovery/tcpCLI.c **** }
 2291              		.loc 1 762 0
 2292 00d8 1846     		mov	r0, r3
 2293 00da 1837     		adds	r7, r7, #24
 2294 00dc BD46     		mov	sp, r7
 2295              		@ sp needed
 2296 00de BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2297              	.L67:
 2298 00e2 00BF     		.align	2
 2299              	.L66:
 2300 00e4 30030000 		.word	.LC26
 2301 00e8 00000000 		.word	motorHeartBeatHandle
 2302 00ec 38030000 		.word	.LC27
 2303 00f0 08030000 		.word	.LC24
 2304 00f4 00000000 		.word	motorHeartBeat_task
 2305 00f8 60030000 		.word	.LC28
 2306 00fc 68030000 		.word	.LC29
 2307              		.cfi_endproc
 2308              	.LFE113:
 2310              		.text
 2311              	.Letext0:
 2312              		.file 2 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/lib/gcc/arm-none-eabi/4.8.4/include/std
 2313              		.file 3 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/machine/_default_
 2314              		.file 4 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/stdint.h"
 2315              		.file 5 "Source/portable/GCC/ARM_CM4F/portmacro.h"
 2316              		.file 6 "Source/include/task.h"
 2317              		.file 7 "Source/include/queue.h"
 2318              		.file 8 "Source/include/semphr.h"
 2319              		.file 9 "App/STM32F4-Discovery/main.h"
 2320              		.file 10 "Source/FreeRTOS-Plus-CLI/FreeRTOS_CLI.h"
 2321              		.file 11 "App/STM32F4-Discovery/modbus_mk.h"
 2322              		.file 12 "App/STM32F4-Discovery/tcpCLI.h"
 2323              		.file 13 "App/STM32F4-Discovery/Libraries/CMSIS/Include/core_cm4.h"
 2324              		.file 14 "App/STM32F4-Discovery/spi.h"
 2325              		.file 15 "App/STM32F4-Discovery/W5200.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 tcpCLI.c
                            *COM*:0000000000000004 xSemaphoreDMASPI
                            *COM*:0000000000000004 xSmphrUSART
                            *COM*:0000000000000004 motorHeartBeatHandle
                            *COM*:0000000000000004 motorHBHandle
                            *COM*:0000000000000004 QSpd_handle
                            *COM*:0000000000000004 QTCP_handle
                            *COM*:0000000000000004 socket_0
                            *COM*:00000000000007d0 bufferTX
                            *COM*:00000000000007d0 bufferRX
                            *COM*:0000000000000004 bufferRXidx
                            *COM*:0000000000000004 bufferTXidx
                            *COM*:0000000000000004 dat_lengthRX
                            *COM*:0000000000000004 dat_lengthTX
                            *COM*:0000000000000004 set_macTaskHandle
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:34     .rodata.table_crc_hi:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:37     .rodata.table_crc_hi:0000000000000000 table_crc_hi
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:295    .rodata.table_crc_lo:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:298    .rodata.table_crc_lo:0000000000000000 table_crc_lo
                            *COM*:0000000000000004 fd
                            *COM*:0000000000000201 received_string
                            *COM*:0000000000000004 rx_length
                            *COM*:0000000000000014 input_Register
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:560    .rodata:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:568    .rodata.xMotorCommand:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:571    .rodata.xMotorCommand:0000000000000000 xMotorCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:1440   .text.prvMotorCommand:0000000000000000 prvMotorCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:585    .rodata.xTaskStatsCommand:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:588    .rodata.xTaskStatsCommand:0000000000000000 xTaskStatsCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:2160   .text.prvTaskStatsCommand:0000000000000000 prvTaskStatsCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:595    .data.xDelay:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:598    .data.xDelay:0000000000000000 xDelay
                            *COM*:000000000000001c telegramS
                            *COM*:000000000000001c telegramR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:639    .text.handleVariable_set:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:644    .text.handleVariable_set:0000000000000000 handleVariable_set
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:1065   .text.handleVariable_set:00000000000002a8 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:1081   .text.handleVariable_set:00000000000002e0 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:1199   .text.handleVariable_set:00000000000003a0 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:1214   .text.handleVariable_get:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:1219   .text.handleVariable_get:0000000000000000 handleVariable_get
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:1385   .text.handleVariable_get:0000000000000100 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:1435   .text.prvMotorCommand:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:1825   .text.prvMotorCommand:0000000000000298 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:1844   .text.prvMotorCommand:00000000000002dc $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:2126   .text.prvMotorCommand:00000000000004bc $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:2155   .text.prvTaskStatsCommand:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//cckocKXF.s:2300   .text.prvTaskStatsCommand:00000000000000e4 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
strncmp
atoi
sprintf
xQueueGenericSend
xQueueGenericReceive
FreeRTOS_CLIGetParameter
memcpy
strcpy
vTaskList
vTaskDelete
xTaskGenericCreate
motorHeartBeat_task
