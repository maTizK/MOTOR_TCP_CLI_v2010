   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"tcpCLI.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	xSemaphoreDMASPI,4,4
  20              		.section	.bss.xHigherPriorityTaskWoken,"aw",%nobits
  21              		.align	2
  24              	xHigherPriorityTaskWoken:
  25 0000 00000000 		.space	4
  26              		.comm	xSmphrUSART,4,4
  27              		.comm	motorHeartBeatHandle,4,4
  28              		.comm	motorHBHandle,4,4
  29              		.comm	QSpd_handle,4,4
  30              		.comm	QStatus_handle,4,4
  31              		.comm	socket_0,4,4
  32              		.comm	bufferTX,2000,4
  33              		.comm	bufferRX,2000,4
  34              		.comm	bufferRXidx,4,4
  35              		.comm	bufferTXidx,4,4
  36              		.comm	dat_lengthRX,4,4
  37              		.comm	dat_lengthTX,4,4
  38              		.comm	set_macTaskHandle,4,4
  39              		.section	.rodata
  40              		.align	2
  41              	.LC0:
  42 0000 6D6F746F 		.ascii	"motor\000"
  42      7200
  43 0006 0000     		.align	2
  44              	.LC1:
  45 0008 6D6F746F 		.ascii	"motor  [options]\302\240[parameters]\302\240- Type "
  45      7220205B 
  45      6F707469 
  45      6F6E735D 
  45      C2A05B70 
  46 002f 6D6F746F 		.ascii	"motor help for more help\015\012\012\000\000"
  46      72206865 
  46      6C702066 
  46      6F72206D 
  46      6F726520 
  47              		.section	.rodata.xMotorCommand,"a",%progbits
  48              		.align	2
  51              	xMotorCommand:
  52 0000 00000000 		.word	.LC0
  53 0004 08000000 		.word	.LC1
  54 0008 00000000 		.word	prvMotorCommand
  55 000c FF       		.byte	-1
  56 000d 000000   		.space	3
  57              		.section	.rodata
  58              		.align	2
  59              	.LC2:
  60 004c 7461736B 		.ascii	"task\000"
  60      00
  61 0051 000000   		.align	2
  62              	.LC3:
  63 0054 7461736B 		.ascii	"task - return tasks list\015\012\012\000\000"
  63      202D2072 
  63      65747572 
  63      6E207461 
  63      736B7320 
  64              		.section	.rodata.xTaskStatsCommand,"a",%progbits
  65              		.align	2
  68              	xTaskStatsCommand:
  69 0000 4C000000 		.word	.LC2
  70 0004 54000000 		.word	.LC3
  71 0008 00000000 		.word	prvTaskStatsCommand
  72 000c 00       		.byte	0
  73 000d 000000   		.space	3
  74              		.section	.data.xDelay,"aw",%progbits
  75              		.align	2
  78              	xDelay:
  79 0000 FFFFFFFF 		.word	-1
  80              		.comm	telegramS,28,4
  81              		.comm	telegramR,28,4
  82              		.section	.rodata
  83 0071 000000   		.align	2
  84              	.LC4:
  85 0074 73706565 		.ascii	"speed\000"
  85      6400
  86 007a 0000     		.align	2
  87              	.LC5:
  88 007c 4572726F 		.ascii	"Error: speed is out of range [1,100]p : %d\012\012\000"
  88      723A2073 
  88      70656564 
  88      20697320 
  88      6F757420 
  89 00a9 00       		.ascii	"\000"
  90 00aa 0000     		.align	2
  91              	.LC6:
  92 00ac 53706565 		.ascii	"Speed succsesfully set.\012\012\000"
  92      64207375 
  92      63637365 
  92      7366756C 
  92      6C792073 
  93 00c6 0000     		.align	2
  94              	.LC7:
  95 00c8 4D4F4442 		.ascii	"MODBUS ERROR !!!.\012\012\000"
  95      55532045 
  95      52524F52 
  95      20212121 
  95      2E0A0A00 
  96              		.align	2
  97              	.LC8:
  98 00dc 4572726F 		.ascii	"Error recieving response!\012\012\000"
  98      72207265 
  98      63696576 
  98      696E6720 
  98      72657370 
  99              		.align	2
 100              	.LC9:
 101 00f8 4572726F 		.ascii	"Error sending Queue!\012\012\000"
 101      72207365 
 101      6E64696E 
 101      67205175 
 101      65756521 
 102 010f 00       		.align	2
 103              	.LC10:
 104 0110 75707261 		.ascii	"upramp\000"
 104      6D7000
 105 0117 00       		.align	2
 106              	.LC11:
 107 0118 4572726F 		.ascii	"Error: speed is out of range [15,300]p : %d\012\012"
 107      723A2073 
 107      70656564 
 107      20697320 
 107      6F757420 
 108 0145 0000     		.ascii	"\000\000"
 109 0147 00       		.align	2
 110              	.LC12:
 111 0148 55702072 		.ascii	"Up ramp succsesfully set.\012\012\000"
 111      616D7020 
 111      73756363 
 111      73657366 
 111      756C6C79 
 112              		.align	2
 113              	.LC13:
 114 0164 646F776E 		.ascii	"downramp\000"
 114      72616D70 
 114      00
 115              		.section	.text.handleVariable_set,"ax",%progbits
 116              		.align	2
 117              		.global	handleVariable_set
 118              		.thumb
 119              		.thumb_func
 121              	handleVariable_set:
 122              	.LFB110:
 123              		.file 1 "App/STM32F4-Discovery/tcpCLI.c"
   1:App/STM32F4-Discovery/tcpCLI.c **** #include "tcpCLI.h"
   2:App/STM32F4-Discovery/tcpCLI.c **** 
   3:App/STM32F4-Discovery/tcpCLI.c **** 
   4:App/STM32F4-Discovery/tcpCLI.c **** static 	portTickType xDelay = portMAX_DELAY;//3000 / portTICK_RATE_MS;
   5:App/STM32F4-Discovery/tcpCLI.c **** 
   6:App/STM32F4-Discovery/tcpCLI.c **** QueueTelegram telegramS, telegramR; 
   7:App/STM32F4-Discovery/tcpCLI.c **** 
   8:App/STM32F4-Discovery/tcpCLI.c **** /* default telegram */
   9:App/STM32F4-Discovery/tcpCLI.c **** /*
  10:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[0] = 1000;
  11:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[1] = 0;	
  12:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[2] = 2250;
  13:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[3] = 10;	
  14:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[4] = 10;	
  15:App/STM32F4-Discovery/tcpCLI.c **** telegram.size = 5;
  16:App/STM32F4-Discovery/tcpCLI.c **** telegram.Qcmd = SETDATA;		
  17:App/STM32F4-Discovery/tcpCLI.c **** */
  18:App/STM32F4-Discovery/tcpCLI.c **** 
  19:App/STM32F4-Discovery/tcpCLI.c **** 
  20:App/STM32F4-Discovery/tcpCLI.c **** 
  21:App/STM32F4-Discovery/tcpCLI.c **** int handleVariable_set (	
  22:App/STM32F4-Discovery/tcpCLI.c **** 				int8_t *pcWriteBuffer, 
  23:App/STM32F4-Discovery/tcpCLI.c **** 				size_t xWriteBufferLen,
  24:App/STM32F4-Discovery/tcpCLI.c **** 				uint8_t * Param, 
  25:App/STM32F4-Discovery/tcpCLI.c **** 				int xParamLength,
  26:App/STM32F4-Discovery/tcpCLI.c **** 				xQueueHandle Qhandle,
  27:App/STM32F4-Discovery/tcpCLI.c **** 				uint8_t * Value,
  28:App/STM32F4-Discovery/tcpCLI.c **** 				int xValueLength,
  29:App/STM32F4-Discovery/tcpCLI.c **** 				int socket )
  30:App/STM32F4-Discovery/tcpCLI.c **** {
 124              		.loc 1 30 0
 125              		.cfi_startproc
 126              		@ args = 16, pretend = 0, frame = 32
 127              		@ frame_needed = 1, uses_anonymous_args = 0
 128 0000 B0B5     		push	{r4, r5, r7, lr}
 129              	.LCFI0:
 130              		.cfi_def_cfa_offset 16
 131              		.cfi_offset 4, -16
 132              		.cfi_offset 5, -12
 133              		.cfi_offset 7, -8
 134              		.cfi_offset 14, -4
 135 0002 88B0     		sub	sp, sp, #32
 136              	.LCFI1:
 137              		.cfi_def_cfa_offset 48
 138 0004 00AF     		add	r7, sp, #0
 139              	.LCFI2:
 140              		.cfi_def_cfa_register 7
 141 0006 F860     		str	r0, [r7, #12]
 142 0008 B960     		str	r1, [r7, #8]
 143 000a 7A60     		str	r2, [r7, #4]
 144 000c 3B60     		str	r3, [r7]
  31:App/STM32F4-Discovery/tcpCLI.c **** 
  32:App/STM32F4-Discovery/tcpCLI.c **** 
  33:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
  34:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER speed [value]
  35:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
  36:App/STM32F4-Discovery/tcpCLI.c **** 
  37:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "speed", 5))
 145              		.loc 1 37 0
 146 000e 7868     		ldr	r0, [r7, #4]
 147 0010 9A49     		ldr	r1, .L15
 148 0012 0522     		movs	r2, #5
 149 0014 FFF7FEFF 		bl	strncmp
 150 0018 0346     		mov	r3, r0
 151 001a 002B     		cmp	r3, #0
 152 001c 40F0A280 		bne	.L2
 153              	.LBB2:
  38:App/STM32F4-Discovery/tcpCLI.c **** 	{	
  39:App/STM32F4-Discovery/tcpCLI.c **** 	
  40:App/STM32F4-Discovery/tcpCLI.c **** 	
  41:App/STM32F4-Discovery/tcpCLI.c **** 		
  42:App/STM32F4-Discovery/tcpCLI.c **** 		// now convert parameter to proper value and check if it is in range 
  43:App/STM32F4-Discovery/tcpCLI.c ****         	Value[xValueLength] = '\0'; 	
 154              		.loc 1 43 0
 155 0020 BB6B     		ldr	r3, [r7, #56]
 156 0022 7A6B     		ldr	r2, [r7, #52]
 157 0024 1344     		add	r3, r3, r2
 158 0026 0022     		movs	r2, #0
 159 0028 1A70     		strb	r2, [r3]
  44:App/STM32F4-Discovery/tcpCLI.c **** 		uint16_t s1 = atoi ( Value ); 
 160              		.loc 1 44 0
 161 002a 786B     		ldr	r0, [r7, #52]
 162 002c FFF7FEFF 		bl	atoi
 163 0030 0346     		mov	r3, r0
 164 0032 FB83     		strh	r3, [r7, #30]	@ movhi
  45:App/STM32F4-Discovery/tcpCLI.c **** 		// if speed is in range
  46:App/STM32F4-Discovery/tcpCLI.c **** 		if(s1 < 1 ||  s1 > 100 )
 165              		.loc 1 46 0
 166 0034 FB8B     		ldrh	r3, [r7, #30]
 167 0036 002B     		cmp	r3, #0
 168 0038 02D0     		beq	.L3
 169              		.loc 1 46 0 is_stmt 0 discriminator 1
 170 003a FB8B     		ldrh	r3, [r7, #30]
 171 003c 642B     		cmp	r3, #100
 172 003e 07D9     		bls	.L4
 173              	.L3:
  47:App/STM32F4-Discovery/tcpCLI.c **** 		{
  48:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP
  49:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error: speed is out of range [1,100]p : %d\n\n\0", s1);
 174              		.loc 1 49 0 is_stmt 1
 175 0040 FB8B     		ldrh	r3, [r7, #30]
 176 0042 F868     		ldr	r0, [r7, #12]
 177 0044 8E49     		ldr	r1, .L15+4
 178 0046 1A46     		mov	r2, r3
 179 0048 FFF7FEFF 		bl	sprintf
  50:App/STM32F4-Discovery/tcpCLI.c **** 		//	pcWriteBuffer[11+ 3] = "\0"; 
  51:App/STM32F4-Discovery/tcpCLI.c **** 			
  52:App/STM32F4-Discovery/tcpCLI.c **** 			////send( socket_0, buf, 11+3, 0);
  53:App/STM32F4-Discovery/tcpCLI.c **** 
  54:App/STM32F4-Discovery/tcpCLI.c **** 	       		return pdFALSE; 	
 180              		.loc 1 54 0
 181 004c 0023     		movs	r3, #0
 182 004e 10E1     		b	.L1
 183              	.L4:
  55:App/STM32F4-Discovery/tcpCLI.c **** 		}	
  56:App/STM32F4-Discovery/tcpCLI.c **** 	
  57:App/STM32F4-Discovery/tcpCLI.c **** 		// convert to correct value ( * 100 ) 
  58:App/STM32F4-Discovery/tcpCLI.c **** 		s1 *= 100; 
 184              		.loc 1 58 0
 185 0050 FB8B     		ldrh	r3, [r7, #30]	@ movhi
 186 0052 1A46     		mov	r2, r3	@ movhi
 187 0054 9200     		lsls	r2, r2, #2
 188 0056 1344     		add	r3, r3, r2
 189 0058 1A46     		mov	r2, r3	@ movhi
 190 005a 9100     		lsls	r1, r2, #2
 191 005c 1A46     		mov	r2, r3	@ movhi
 192 005e 0B46     		mov	r3, r1	@ movhi
 193 0060 1344     		add	r3, r3, r2
 194 0062 9B00     		lsls	r3, r3, #2
 195 0064 FB83     		strh	r3, [r7, #30]	@ movhi
  59:App/STM32F4-Discovery/tcpCLI.c **** 		
  60:App/STM32F4-Discovery/tcpCLI.c **** 		// test i
  61:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[1] = 0;	
 196              		.loc 1 61 0
 197 0066 874B     		ldr	r3, .L15+8
 198 0068 0022     		movs	r2, #0
 199 006a 5A81     		strh	r2, [r3, #10]	@ movhi
  62:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[2] = 2250;
 200              		.loc 1 62 0
 201 006c 854B     		ldr	r3, .L15+8
 202 006e 40F6CA02 		movw	r2, #2250
 203 0072 9A81     		strh	r2, [r3, #12]	@ movhi
  63:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[3] = 10;	
 204              		.loc 1 63 0
 205 0074 834B     		ldr	r3, .L15+8
 206 0076 0A22     		movs	r2, #10
 207 0078 DA81     		strh	r2, [r3, #14]	@ movhi
  64:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[4] = 10;	
 208              		.loc 1 64 0
 209 007a 824B     		ldr	r3, .L15+8
 210 007c 0A22     		movs	r2, #10
 211 007e 1A82     		strh	r2, [r3, #16]	@ movhi
  65:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5;
 212              		.loc 1 65 0
 213 0080 804B     		ldr	r3, .L15+8
 214 0082 0522     		movs	r2, #5
 215 0084 5A60     		str	r2, [r3, #4]
  66:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = SETDATA;	
 216              		.loc 1 66 0
 217 0086 7F4B     		ldr	r3, .L15+8
 218 0088 0022     		movs	r2, #0
 219 008a 1A70     		strb	r2, [r3]
  67:App/STM32F4-Discovery/tcpCLI.c **** 		// test /
  68:App/STM32F4-Discovery/tcpCLI.c **** 		// setup telegram 
  69:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = SETDATA;
 220              		.loc 1 69 0
 221 008c 7D4B     		ldr	r3, .L15+8
 222 008e 0022     		movs	r2, #0
 223 0090 1A70     		strb	r2, [r3]
  70:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5;
 224              		.loc 1 70 0
 225 0092 7C4B     		ldr	r3, .L15+8
 226 0094 0522     		movs	r2, #5
 227 0096 5A60     		str	r2, [r3, #4]
  71:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[0] = s1;
 228              		.loc 1 71 0
 229 0098 7A4B     		ldr	r3, .L15+8
 230 009a FA8B     		ldrh	r2, [r7, #30]	@ movhi
 231 009c 1A81     		strh	r2, [r3, #8]	@ movhi
  72:App/STM32F4-Discovery/tcpCLI.c **** 		
  73:App/STM32F4-Discovery/tcpCLI.c **** 	
  74:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
  75:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 232              		.loc 1 75 0
 233 009e 7A4B     		ldr	r3, .L15+12
 234 00a0 1A68     		ldr	r2, [r3]
 235 00a2 7A4B     		ldr	r3, .L15+16
 236 00a4 1B68     		ldr	r3, [r3]
 237 00a6 1046     		mov	r0, r2
 238 00a8 7649     		ldr	r1, .L15+8
 239 00aa 1A46     		mov	r2, r3
 240 00ac 0023     		movs	r3, #0
 241 00ae FFF7FEFF 		bl	xQueueGenericSend
 242 00b2 0346     		mov	r3, r0
 243 00b4 012B     		cmp	r3, #1
 244 00b6 42D1     		bne	.L6
  76:App/STM32F4-Discovery/tcpCLI.c **** 		{	
  77:App/STM32F4-Discovery/tcpCLI.c **** 					
  78:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay)== pdPASS)
 245              		.loc 1 78 0
 246 00b8 734B     		ldr	r3, .L15+12
 247 00ba 1A68     		ldr	r2, [r3]
 248 00bc 734B     		ldr	r3, .L15+16
 249 00be 1B68     		ldr	r3, [r3]
 250 00c0 1046     		mov	r0, r2
 251 00c2 7349     		ldr	r1, .L15+20
 252 00c4 1A46     		mov	r2, r3
 253 00c6 0023     		movs	r3, #0
 254 00c8 FFF7FEFF 		bl	xQueueGenericReceive
 255 00cc 0346     		mov	r3, r0
 256 00ce 012B     		cmp	r3, #1
 257 00d0 24D1     		bne	.L7
  79:App/STM32F4-Discovery/tcpCLI.c **** 			{
  80:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 258              		.loc 1 80 0
 259 00d2 6F4B     		ldr	r3, .L15+20
 260 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 261 00d6 062B     		cmp	r3, #6
 262 00d8 11D1     		bne	.L8
  81:App/STM32F4-Discovery/tcpCLI.c **** 				{	
  82:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed succsesfully set.\n\n");
 263              		.loc 1 82 0
 264 00da FA68     		ldr	r2, [r7, #12]
 265 00dc 6D4B     		ldr	r3, .L15+24
 266 00de 1546     		mov	r5, r2
 267 00e0 1C46     		mov	r4, r3
 268 00e2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 269 00e4 2860     		str	r0, [r5]	@ unaligned
 270 00e6 6960     		str	r1, [r5, #4]	@ unaligned
 271 00e8 AA60     		str	r2, [r5, #8]	@ unaligned
 272 00ea EB60     		str	r3, [r5, #12]	@ unaligned
 273 00ec 03CC     		ldmia	r4!, {r0, r1}
 274 00ee 2861     		str	r0, [r5, #16]	@ unaligned
 275 00f0 6961     		str	r1, [r5, #20]	@ unaligned
 276 00f2 2388     		ldrh	r3, [r4]	@ unaligned
 277 00f4 2B83     		strh	r3, [r5, #24]	@ unaligned
  83:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 25; 	
 278              		.loc 1 83 0
 279 00f6 1923     		movs	r3, #25
 280 00f8 BB61     		str	r3, [r7, #24]
  84:App/STM32F4-Discovery/tcpCLI.c **** 				//	//send( socket, buf, len, 0);
  85:App/STM32F4-Discovery/tcpCLI.c **** 
  86:App/STM32F4-Discovery/tcpCLI.c **** 
  87:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 281              		.loc 1 87 0
 282 00fa 0123     		movs	r3, #1
 283 00fc B9E0     		b	.L1
 284              	.L8:
  88:App/STM32F4-Discovery/tcpCLI.c **** 
  89:App/STM32F4-Discovery/tcpCLI.c **** 				}
  90:App/STM32F4-Discovery/tcpCLI.c **** 				else
  91:App/STM32F4-Discovery/tcpCLI.c **** 				{
  92:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 285              		.loc 1 92 0
 286 00fe FA68     		ldr	r2, [r7, #12]
 287 0100 654B     		ldr	r3, .L15+28
 288 0102 1546     		mov	r5, r2
 289 0104 1C46     		mov	r4, r3
 290 0106 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 291 0108 2860     		str	r0, [r5]	@ unaligned
 292 010a 6960     		str	r1, [r5, #4]	@ unaligned
 293 010c AA60     		str	r2, [r5, #8]	@ unaligned
 294 010e EB60     		str	r3, [r5, #12]	@ unaligned
 295 0110 2068     		ldr	r0, [r4]	@ unaligned
 296 0112 2861     		str	r0, [r5, #16]	@ unaligned
  93:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 297              		.loc 1 93 0
 298 0114 1323     		movs	r3, #19
 299 0116 BB61     		str	r3, [r7, #24]
  94:App/STM32F4-Discovery/tcpCLI.c **** //					//send( socket, buf, len, 0);
  95:App/STM32F4-Discovery/tcpCLI.c **** 
  96:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 300              		.loc 1 96 0
 301 0118 0023     		movs	r3, #0
 302 011a AAE0     		b	.L1
 303              	.L7:
  97:App/STM32F4-Discovery/tcpCLI.c **** 
  98:App/STM32F4-Discovery/tcpCLI.c **** 
  99:App/STM32F4-Discovery/tcpCLI.c **** 				}
 100:App/STM32F4-Discovery/tcpCLI.c **** 						
 101:App/STM32F4-Discovery/tcpCLI.c **** 			}
 102:App/STM32F4-Discovery/tcpCLI.c **** 			else
 103:App/STM32F4-Discovery/tcpCLI.c **** 			{
 104:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 105:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 106:App/STM32F4-Discovery/tcpCLI.c **** 		
 107:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 304              		.loc 1 107 0
 305 011c FA68     		ldr	r2, [r7, #12]
 306 011e 5F4B     		ldr	r3, .L15+32
 307 0120 1546     		mov	r5, r2
 308 0122 1C46     		mov	r4, r3
 309 0124 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 310 0126 2860     		str	r0, [r5]	@ unaligned
 311 0128 6960     		str	r1, [r5, #4]	@ unaligned
 312 012a AA60     		str	r2, [r5, #8]	@ unaligned
 313 012c EB60     		str	r3, [r5, #12]	@ unaligned
 314 012e 07CC     		ldmia	r4!, {r0, r1, r2}
 315 0130 2861     		str	r0, [r5, #16]	@ unaligned
 316 0132 6961     		str	r1, [r5, #20]	@ unaligned
 317 0134 AA61     		str	r2, [r5, #24]	@ unaligned
 108:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 318              		.loc 1 108 0
 319 0136 1B23     		movs	r3, #27
 320 0138 BB61     		str	r3, [r7, #24]
 109:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 110:App/STM32F4-Discovery/tcpCLI.c **** 
 111:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 321              		.loc 1 111 0
 322 013a 0023     		movs	r3, #0
 323 013c 99E0     		b	.L1
 324              	.L6:
 112:App/STM32F4-Discovery/tcpCLI.c **** 			}
 113:App/STM32F4-Discovery/tcpCLI.c **** 
 114:App/STM32F4-Discovery/tcpCLI.c **** 
 115:App/STM32F4-Discovery/tcpCLI.c **** 		}
 116:App/STM32F4-Discovery/tcpCLI.c **** 		else
 117:App/STM32F4-Discovery/tcpCLI.c **** 		{
 118:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 119:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 120:App/STM32F4-Discovery/tcpCLI.c **** 		
 121:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 325              		.loc 1 121 0
 326 013e FA68     		ldr	r2, [r7, #12]
 327 0140 574B     		ldr	r3, .L15+36
 328 0142 1446     		mov	r4, r2
 329 0144 1D46     		mov	r5, r3
 330 0146 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 331 0148 2060     		str	r0, [r4]	@ unaligned
 332 014a 6160     		str	r1, [r4, #4]	@ unaligned
 333 014c A260     		str	r2, [r4, #8]	@ unaligned
 334 014e E360     		str	r3, [r4, #12]	@ unaligned
 335 0150 2868     		ldr	r0, [r5]	@ unaligned
 336 0152 2061     		str	r0, [r4, #16]	@ unaligned
 337 0154 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 338 0156 AB79     		ldrb	r3, [r5, #6]
 339 0158 A282     		strh	r2, [r4, #20]	@ unaligned
 340 015a A375     		strb	r3, [r4, #22]
 122:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 341              		.loc 1 122 0
 342 015c 1623     		movs	r3, #22
 343 015e BB61     		str	r3, [r7, #24]
 123:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 124:App/STM32F4-Discovery/tcpCLI.c **** 
 125:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 344              		.loc 1 125 0
 345 0160 0023     		movs	r3, #0
 346 0162 86E0     		b	.L1
 347              	.L2:
 348              	.LBE2:
 126:App/STM32F4-Discovery/tcpCLI.c **** 		}
 127:App/STM32F4-Discovery/tcpCLI.c **** 	}
 128:App/STM32F4-Discovery/tcpCLI.c **** 	
 129:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 130:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER upramp [value]
 131:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 132:App/STM32F4-Discovery/tcpCLI.c **** 
 133:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "upramp", 6))
 349              		.loc 1 133 0
 350 0164 7868     		ldr	r0, [r7, #4]
 351 0166 4F49     		ldr	r1, .L15+40
 352 0168 0622     		movs	r2, #6
 353 016a FFF7FEFF 		bl	strncmp
 354 016e 0346     		mov	r3, r0
 355 0170 002B     		cmp	r3, #0
 356 0172 74D1     		bne	.L9
 357              	.LBB3:
 134:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 135:App/STM32F4-Discovery/tcpCLI.c **** 	
 136:App/STM32F4-Discovery/tcpCLI.c **** 	
 137:App/STM32F4-Discovery/tcpCLI.c **** 		
 138:App/STM32F4-Discovery/tcpCLI.c **** 		// now convert parameter to proper value and check if it is in range 
 139:App/STM32F4-Discovery/tcpCLI.c ****         	Value[xValueLength] = '\0'; 	
 358              		.loc 1 139 0
 359 0174 BB6B     		ldr	r3, [r7, #56]
 360 0176 7A6B     		ldr	r2, [r7, #52]
 361 0178 1344     		add	r3, r3, r2
 362 017a 0022     		movs	r2, #0
 363 017c 1A70     		strb	r2, [r3]
 140:App/STM32F4-Discovery/tcpCLI.c **** 		uint16_t s1 = atoi ( Value ); 
 364              		.loc 1 140 0
 365 017e 786B     		ldr	r0, [r7, #52]
 366 0180 FFF7FEFF 		bl	atoi
 367 0184 0346     		mov	r3, r0
 368 0186 FB82     		strh	r3, [r7, #22]	@ movhi
 141:App/STM32F4-Discovery/tcpCLI.c **** 		// if speed is in range
 142:App/STM32F4-Discovery/tcpCLI.c **** 		if(s1 < 15 ||  s1 > 300 )
 369              		.loc 1 142 0
 370 0188 FB8A     		ldrh	r3, [r7, #22]
 371 018a 0E2B     		cmp	r3, #14
 372 018c 03D9     		bls	.L10
 373              		.loc 1 142 0 is_stmt 0 discriminator 1
 374 018e FB8A     		ldrh	r3, [r7, #22]
 375 0190 B3F5967F 		cmp	r3, #300
 376 0194 09D9     		bls	.L11
 377              	.L10:
 143:App/STM32F4-Discovery/tcpCLI.c **** 		{
 144:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP
 145:App/STM32F4-Discovery/tcpCLI.c **** 			//
 146:App/STM32F4-Discovery/tcpCLI.c **** 			xWriteBufferLen = 100; 
 378              		.loc 1 146 0 is_stmt 1
 379 0196 6423     		movs	r3, #100
 380 0198 BB61     		str	r3, [r7, #24]
 147:App/STM32F4-Discovery/tcpCLI.c **** 		//	uint8_t buf [len]; //= "Error: speed is out of range!\n\n");
 148:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error: speed is out of range [15,300]p : %d\n\n\0", s1);
 381              		.loc 1 148 0
 382 019a FB8A     		ldrh	r3, [r7, #22]
 383 019c F868     		ldr	r0, [r7, #12]
 384 019e 4249     		ldr	r1, .L15+44
 385 01a0 1A46     		mov	r2, r3
 386 01a2 FFF7FEFF 		bl	sprintf
 149:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket_0, buf, len, 0);
 150:App/STM32F4-Discovery/tcpCLI.c **** 
 151:App/STM32F4-Discovery/tcpCLI.c **** 	       		return pdFALSE; 	
 387              		.loc 1 151 0
 388 01a6 0023     		movs	r3, #0
 389 01a8 63E0     		b	.L1
 390              	.L11:
 152:App/STM32F4-Discovery/tcpCLI.c **** 		}	
 153:App/STM32F4-Discovery/tcpCLI.c **** 	
 154:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[3] = s1; 
 391              		.loc 1 154 0
 392 01aa 364B     		ldr	r3, .L15+8
 393 01ac FA8A     		ldrh	r2, [r7, #22]	@ movhi
 394 01ae DA81     		strh	r2, [r3, #14]	@ movhi
 155:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5; 
 395              		.loc 1 155 0
 396 01b0 344B     		ldr	r3, .L15+8
 397 01b2 0522     		movs	r2, #5
 398 01b4 5A60     		str	r2, [r3, #4]
 156:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = SETDATA;
 399              		.loc 1 156 0
 400 01b6 334B     		ldr	r3, .L15+8
 401 01b8 0022     		movs	r2, #0
 402 01ba 1A70     		strb	r2, [r3]
 157:App/STM32F4-Discovery/tcpCLI.c **** 		
 158:App/STM32F4-Discovery/tcpCLI.c **** 	
 159:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 160:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 403              		.loc 1 160 0
 404 01bc 324B     		ldr	r3, .L15+12
 405 01be 1A68     		ldr	r2, [r3]
 406 01c0 324B     		ldr	r3, .L15+16
 407 01c2 1B68     		ldr	r3, [r3]
 408 01c4 1046     		mov	r0, r2
 409 01c6 2F49     		ldr	r1, .L15+8
 410 01c8 1A46     		mov	r2, r3
 411 01ca 0023     		movs	r3, #0
 412 01cc FFF7FEFF 		bl	xQueueGenericSend
 413 01d0 0346     		mov	r3, r0
 414 01d2 012B     		cmp	r3, #1
 415 01d4 30D1     		bne	.L12
 161:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 162:App/STM32F4-Discovery/tcpCLI.c **** 					
 163:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay))
 416              		.loc 1 163 0
 417 01d6 2C4B     		ldr	r3, .L15+12
 418 01d8 1A68     		ldr	r2, [r3]
 419 01da 2C4B     		ldr	r3, .L15+16
 420 01dc 1B68     		ldr	r3, [r3]
 421 01de 1046     		mov	r0, r2
 422 01e0 2B49     		ldr	r1, .L15+20
 423 01e2 1A46     		mov	r2, r3
 424 01e4 0023     		movs	r3, #0
 425 01e6 FFF7FEFF 		bl	xQueueGenericReceive
 426 01ea 0346     		mov	r3, r0
 427 01ec 002B     		cmp	r3, #0
 428 01ee 36D0     		beq	.L9
 164:App/STM32F4-Discovery/tcpCLI.c **** 			{
 165:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 429              		.loc 1 165 0
 430 01f0 274B     		ldr	r3, .L15+20
 431 01f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 432 01f4 062B     		cmp	r3, #6
 433 01f6 10D1     		bne	.L13
 166:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 167:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Up ramp succsesfully set.\n\n");
 434              		.loc 1 167 0
 435 01f8 FA68     		ldr	r2, [r7, #12]
 436 01fa 2C4B     		ldr	r3, .L15+48
 437 01fc 1546     		mov	r5, r2
 438 01fe 1C46     		mov	r4, r3
 439 0200 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 440 0202 2860     		str	r0, [r5]	@ unaligned
 441 0204 6960     		str	r1, [r5, #4]	@ unaligned
 442 0206 AA60     		str	r2, [r5, #8]	@ unaligned
 443 0208 EB60     		str	r3, [r5, #12]	@ unaligned
 444 020a 07CC     		ldmia	r4!, {r0, r1, r2}
 445 020c 2861     		str	r0, [r5, #16]	@ unaligned
 446 020e 6961     		str	r1, [r5, #20]	@ unaligned
 447 0210 AA61     		str	r2, [r5, #24]	@ unaligned
 168:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 27; 	
 448              		.loc 1 168 0
 449 0212 1B23     		movs	r3, #27
 450 0214 BB61     		str	r3, [r7, #24]
 169:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 170:App/STM32F4-Discovery/tcpCLI.c **** 
 171:App/STM32F4-Discovery/tcpCLI.c **** 
 172:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 451              		.loc 1 172 0
 452 0216 0123     		movs	r3, #1
 453 0218 2BE0     		b	.L1
 454              	.L13:
 173:App/STM32F4-Discovery/tcpCLI.c **** 
 174:App/STM32F4-Discovery/tcpCLI.c **** 				}
 175:App/STM32F4-Discovery/tcpCLI.c **** 				else
 176:App/STM32F4-Discovery/tcpCLI.c **** 				{
 177:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 455              		.loc 1 177 0
 456 021a FA68     		ldr	r2, [r7, #12]
 457 021c 1E4B     		ldr	r3, .L15+28
 458 021e 1546     		mov	r5, r2
 459 0220 1C46     		mov	r4, r3
 460 0222 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 461 0224 2860     		str	r0, [r5]	@ unaligned
 462 0226 6960     		str	r1, [r5, #4]	@ unaligned
 463 0228 AA60     		str	r2, [r5, #8]	@ unaligned
 464 022a EB60     		str	r3, [r5, #12]	@ unaligned
 465 022c 2068     		ldr	r0, [r4]	@ unaligned
 466 022e 2861     		str	r0, [r5, #16]	@ unaligned
 178:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 467              		.loc 1 178 0
 468 0230 1323     		movs	r3, #19
 469 0232 BB61     		str	r3, [r7, #24]
 179:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 180:App/STM32F4-Discovery/tcpCLI.c **** 
 181:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 470              		.loc 1 181 0
 471 0234 0023     		movs	r3, #0
 472 0236 1CE0     		b	.L1
 473              	.L12:
 182:App/STM32F4-Discovery/tcpCLI.c **** 
 183:App/STM32F4-Discovery/tcpCLI.c **** 
 184:App/STM32F4-Discovery/tcpCLI.c **** 				}
 185:App/STM32F4-Discovery/tcpCLI.c **** 						
 186:App/STM32F4-Discovery/tcpCLI.c **** 			}
 187:App/STM32F4-Discovery/tcpCLI.c **** 
 188:App/STM32F4-Discovery/tcpCLI.c **** 		}
 189:App/STM32F4-Discovery/tcpCLI.c **** 		else
 190:App/STM32F4-Discovery/tcpCLI.c **** 		{
 191:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 192:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 193:App/STM32F4-Discovery/tcpCLI.c **** 		
 194:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 474              		.loc 1 194 0
 475 0238 FA68     		ldr	r2, [r7, #12]
 476 023a 194B     		ldr	r3, .L15+36
 477 023c 1446     		mov	r4, r2
 478 023e 1D46     		mov	r5, r3
 479 0240 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 480 0242 2060     		str	r0, [r4]	@ unaligned
 481 0244 6160     		str	r1, [r4, #4]	@ unaligned
 482 0246 A260     		str	r2, [r4, #8]	@ unaligned
 483 0248 E360     		str	r3, [r4, #12]	@ unaligned
 484 024a 2868     		ldr	r0, [r5]	@ unaligned
 485 024c 2061     		str	r0, [r4, #16]	@ unaligned
 486 024e AA88     		ldrh	r2, [r5, #4]	@ unaligned
 487 0250 AB79     		ldrb	r3, [r5, #6]
 488 0252 A282     		strh	r2, [r4, #20]	@ unaligned
 489 0254 A375     		strb	r3, [r4, #22]
 195:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 490              		.loc 1 195 0
 491 0256 1623     		movs	r3, #22
 492 0258 BB61     		str	r3, [r7, #24]
 196:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 197:App/STM32F4-Discovery/tcpCLI.c **** 
 198:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 493              		.loc 1 198 0
 494 025a 0023     		movs	r3, #0
 495 025c 09E0     		b	.L1
 496              	.L9:
 497              	.LBE3:
 199:App/STM32F4-Discovery/tcpCLI.c **** 		}
 200:App/STM32F4-Discovery/tcpCLI.c **** 	}
 201:App/STM32F4-Discovery/tcpCLI.c **** 
 202:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 203:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER downramp [value]
 204:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 205:App/STM32F4-Discovery/tcpCLI.c **** 
 206:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "downramp", 8))
 498              		.loc 1 206 0
 499 025e 7868     		ldr	r0, [r7, #4]
 500 0260 1349     		ldr	r1, .L15+52
 501 0262 0822     		movs	r2, #8
 502 0264 FFF7FEFF 		bl	strncmp
 503 0268 0346     		mov	r3, r0
 504 026a 002B     		cmp	r3, #0
 505 026c 01D1     		bne	.L14
 207:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 208:App/STM32F4-Discovery/tcpCLI.c **** 	
 209:App/STM32F4-Discovery/tcpCLI.c **** 	
 210:App/STM32F4-Discovery/tcpCLI.c **** 		
 211:App/STM32F4-Discovery/tcpCLI.c **** 				return 0; 
 506              		.loc 1 211 0
 507 026e 0023     		movs	r3, #0
 508 0270 FFE7     		b	.L1
 509              	.L14:
 510              	.L1:
 212:App/STM32F4-Discovery/tcpCLI.c **** 
 213:App/STM32F4-Discovery/tcpCLI.c **** 	}
 214:App/STM32F4-Discovery/tcpCLI.c **** 			
 215:App/STM32F4-Discovery/tcpCLI.c **** }
 511              		.loc 1 215 0
 512 0272 1846     		mov	r0, r3
 513 0274 2037     		adds	r7, r7, #32
 514 0276 BD46     		mov	sp, r7
 515              		@ sp needed
 516 0278 B0BD     		pop	{r4, r5, r7, pc}
 517              	.L16:
 518 027a 00BF     		.align	2
 519              	.L15:
 520 027c 74000000 		.word	.LC4
 521 0280 7C000000 		.word	.LC5
 522 0284 00000000 		.word	telegramS
 523 0288 00000000 		.word	QSpd_handle
 524 028c 00000000 		.word	xDelay
 525 0290 00000000 		.word	telegramR
 526 0294 AC000000 		.word	.LC6
 527 0298 C8000000 		.word	.LC7
 528 029c DC000000 		.word	.LC8
 529 02a0 F8000000 		.word	.LC9
 530 02a4 10010000 		.word	.LC10
 531 02a8 18010000 		.word	.LC11
 532 02ac 48010000 		.word	.LC12
 533 02b0 64010000 		.word	.LC13
 534              		.cfi_endproc
 535              	.LFE110:
 537              		.section	.rodata
 538 016d 000000   		.align	2
 539              	.LC14:
 540 0170 53706565 		.ascii	"Speed is  %2d.%2dp \012\012\000\000"
 540      64206973 
 540      20202532 
 540      642E2532 
 540      6470200A 
 541 0187 00       		.align	2
 542              	.LC15:
 543 0188 55702072 		.ascii	"Up ramp is %d seconds\012\012\000\000"
 543      616D7020 
 543      69732025 
 543      64207365 
 543      636F6E64 
 544              		.section	.text.handleVariable_get,"ax",%progbits
 545              		.align	2
 546              		.global	handleVariable_get
 547              		.thumb
 548              		.thumb_func
 550              	handleVariable_get:
 551              	.LFB111:
 216:App/STM32F4-Discovery/tcpCLI.c **** 
 217:App/STM32F4-Discovery/tcpCLI.c **** int handleVariable_get (	
 218:App/STM32F4-Discovery/tcpCLI.c **** 				int8_t *pcWriteBuffer, 
 219:App/STM32F4-Discovery/tcpCLI.c **** 				size_t xWriteBufferLen,
 220:App/STM32F4-Discovery/tcpCLI.c **** 				uint8_t * Param, 
 221:App/STM32F4-Discovery/tcpCLI.c **** 				int xParamLength,
 222:App/STM32F4-Discovery/tcpCLI.c **** 				xQueueHandle Qhandle,
 223:App/STM32F4-Discovery/tcpCLI.c **** 				int socket )
 224:App/STM32F4-Discovery/tcpCLI.c **** {
 552              		.loc 1 224 0
 553              		.cfi_startproc
 554              		@ args = 8, pretend = 0, frame = 24
 555              		@ frame_needed = 1, uses_anonymous_args = 0
 556 0000 B0B5     		push	{r4, r5, r7, lr}
 557              	.LCFI3:
 558              		.cfi_def_cfa_offset 16
 559              		.cfi_offset 4, -16
 560              		.cfi_offset 5, -12
 561              		.cfi_offset 7, -8
 562              		.cfi_offset 14, -4
 563 0002 86B0     		sub	sp, sp, #24
 564              	.LCFI4:
 565              		.cfi_def_cfa_offset 40
 566 0004 00AF     		add	r7, sp, #0
 567              	.LCFI5:
 568              		.cfi_def_cfa_register 7
 569 0006 F860     		str	r0, [r7, #12]
 570 0008 B960     		str	r1, [r7, #8]
 571 000a 7A60     		str	r2, [r7, #4]
 572 000c 3B60     		str	r3, [r7]
 225:App/STM32F4-Discovery/tcpCLI.c **** 
 226:App/STM32F4-Discovery/tcpCLI.c **** 
 227:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 228:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER speed [value]
 229:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 230:App/STM32F4-Discovery/tcpCLI.c **** 
 231:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "speed", 5))
 573              		.loc 1 231 0
 574 000e 7868     		ldr	r0, [r7, #4]
 575 0010 6B49     		ldr	r1, .L27
 576 0012 0522     		movs	r2, #5
 577 0014 FFF7FEFF 		bl	strncmp
 578 0018 0346     		mov	r3, r0
 579 001a 002B     		cmp	r3, #0
 580 001c 6CD1     		bne	.L18
 232:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 233:App/STM32F4-Discovery/tcpCLI.c **** 	
 234:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = GETDATA; 
 581              		.loc 1 234 0
 582 001e 694B     		ldr	r3, .L27+4
 583 0020 0122     		movs	r2, #1
 584 0022 1A70     		strb	r2, [r3]
 235:App/STM32F4-Discovery/tcpCLI.c **** 		
 236:App/STM32F4-Discovery/tcpCLI.c **** 	
 237:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 238:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 585              		.loc 1 238 0
 586 0024 684B     		ldr	r3, .L27+8
 587 0026 1A68     		ldr	r2, [r3]
 588 0028 684B     		ldr	r3, .L27+12
 589 002a 1B68     		ldr	r3, [r3]
 590 002c 1046     		mov	r0, r2
 591 002e 6549     		ldr	r1, .L27+4
 592 0030 1A46     		mov	r2, r3
 593 0032 0023     		movs	r3, #0
 594 0034 FFF7FEFF 		bl	xQueueGenericSend
 595 0038 0346     		mov	r3, r0
 596 003a 012B     		cmp	r3, #1
 597 003c 49D1     		bne	.L19
 239:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 240:App/STM32F4-Discovery/tcpCLI.c **** 					
 241:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay)== pdPASS)
 598              		.loc 1 241 0
 599 003e 624B     		ldr	r3, .L27+8
 600 0040 1A68     		ldr	r2, [r3]
 601 0042 624B     		ldr	r3, .L27+12
 602 0044 1B68     		ldr	r3, [r3]
 603 0046 1046     		mov	r0, r2
 604 0048 6149     		ldr	r1, .L27+16
 605 004a 1A46     		mov	r2, r3
 606 004c 0023     		movs	r3, #0
 607 004e FFF7FEFF 		bl	xQueueGenericReceive
 608 0052 0346     		mov	r3, r0
 609 0054 012B     		cmp	r3, #1
 610 0056 2BD1     		bne	.L20
 242:App/STM32F4-Discovery/tcpCLI.c **** 			{
 243:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 611              		.loc 1 243 0
 612 0058 5D4B     		ldr	r3, .L27+16
 613 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 614 005c 062B     		cmp	r3, #6
 615 005e 18D1     		bne	.L21
 244:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 245:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 246:App/STM32F4-Discovery/tcpCLI.c **** 					telegramR.data[3]/100,
 616              		.loc 1 246 0
 617 0060 5B4B     		ldr	r3, .L27+16
 618 0062 DA89     		ldrh	r2, [r3, #14]
 245:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 619              		.loc 1 245 0
 620 0064 5B4B     		ldr	r3, .L27+20
 621 0066 A3FB0203 		umull	r0, r3, r3, r2
 622 006a 5B09     		lsrs	r3, r3, #5
 623 006c 9BB2     		uxth	r3, r3
 624 006e 1A46     		mov	r2, r3
 247:App/STM32F4-Discovery/tcpCLI.c **** 					telegramR.data[3] % 100);
 625              		.loc 1 247 0
 626 0070 574B     		ldr	r3, .L27+16
 627 0072 DB89     		ldrh	r3, [r3, #14]
 245:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 628              		.loc 1 245 0
 629 0074 5749     		ldr	r1, .L27+20
 630 0076 A1FB0301 		umull	r0, r1, r1, r3
 631 007a 4909     		lsrs	r1, r1, #5
 632 007c 6420     		movs	r0, #100
 633 007e 00FB01F1 		mul	r1, r0, r1
 634 0082 5B1A     		subs	r3, r3, r1
 635 0084 9BB2     		uxth	r3, r3
 636 0086 F868     		ldr	r0, [r7, #12]
 637 0088 5349     		ldr	r1, .L27+24
 638 008a FFF7FEFF 		bl	sprintf
 248:App/STM32F4-Discovery/tcpCLI.c **** 				
 249:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 250:App/STM32F4-Discovery/tcpCLI.c **** 
 251:App/STM32F4-Discovery/tcpCLI.c **** 
 252:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 639              		.loc 1 252 0
 640 008e 0123     		movs	r3, #1
 641 0090 92E0     		b	.L17
 642              	.L21:
 253:App/STM32F4-Discovery/tcpCLI.c **** 
 254:App/STM32F4-Discovery/tcpCLI.c **** 				}
 255:App/STM32F4-Discovery/tcpCLI.c **** 				else
 256:App/STM32F4-Discovery/tcpCLI.c **** 				{
 257:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 643              		.loc 1 257 0
 644 0092 FA68     		ldr	r2, [r7, #12]
 645 0094 514B     		ldr	r3, .L27+28
 646 0096 1546     		mov	r5, r2
 647 0098 1C46     		mov	r4, r3
 648 009a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 649 009c 2860     		str	r0, [r5]	@ unaligned
 650 009e 6960     		str	r1, [r5, #4]	@ unaligned
 651 00a0 AA60     		str	r2, [r5, #8]	@ unaligned
 652 00a2 EB60     		str	r3, [r5, #12]	@ unaligned
 653 00a4 2068     		ldr	r0, [r4]	@ unaligned
 654 00a6 2861     		str	r0, [r5, #16]	@ unaligned
 258:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 655              		.loc 1 258 0
 656 00a8 1323     		movs	r3, #19
 657 00aa 7B61     		str	r3, [r7, #20]
 259:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 260:App/STM32F4-Discovery/tcpCLI.c **** 
 261:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 658              		.loc 1 261 0
 659 00ac 0023     		movs	r3, #0
 660 00ae 83E0     		b	.L17
 661              	.L20:
 262:App/STM32F4-Discovery/tcpCLI.c **** 
 263:App/STM32F4-Discovery/tcpCLI.c **** 
 264:App/STM32F4-Discovery/tcpCLI.c **** 				}
 265:App/STM32F4-Discovery/tcpCLI.c **** 						
 266:App/STM32F4-Discovery/tcpCLI.c **** 			}
 267:App/STM32F4-Discovery/tcpCLI.c **** 			else
 268:App/STM32F4-Discovery/tcpCLI.c **** 			{
 269:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 270:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 271:App/STM32F4-Discovery/tcpCLI.c **** 		
 272:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 662              		.loc 1 272 0
 663 00b0 FA68     		ldr	r2, [r7, #12]
 664 00b2 4B4B     		ldr	r3, .L27+32
 665 00b4 1546     		mov	r5, r2
 666 00b6 1C46     		mov	r4, r3
 667 00b8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 668 00ba 2860     		str	r0, [r5]	@ unaligned
 669 00bc 6960     		str	r1, [r5, #4]	@ unaligned
 670 00be AA60     		str	r2, [r5, #8]	@ unaligned
 671 00c0 EB60     		str	r3, [r5, #12]	@ unaligned
 672 00c2 07CC     		ldmia	r4!, {r0, r1, r2}
 673 00c4 2861     		str	r0, [r5, #16]	@ unaligned
 674 00c6 6961     		str	r1, [r5, #20]	@ unaligned
 675 00c8 AA61     		str	r2, [r5, #24]	@ unaligned
 273:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 676              		.loc 1 273 0
 677 00ca 1B23     		movs	r3, #27
 678 00cc 7B61     		str	r3, [r7, #20]
 274:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 275:App/STM32F4-Discovery/tcpCLI.c **** 
 276:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 679              		.loc 1 276 0
 680 00ce 0023     		movs	r3, #0
 681 00d0 72E0     		b	.L17
 682              	.L19:
 277:App/STM32F4-Discovery/tcpCLI.c **** 			}
 278:App/STM32F4-Discovery/tcpCLI.c **** 
 279:App/STM32F4-Discovery/tcpCLI.c **** 
 280:App/STM32F4-Discovery/tcpCLI.c **** 		}
 281:App/STM32F4-Discovery/tcpCLI.c **** 		else
 282:App/STM32F4-Discovery/tcpCLI.c **** 		{
 283:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 284:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 285:App/STM32F4-Discovery/tcpCLI.c **** 		
 286:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 683              		.loc 1 286 0
 684 00d2 FA68     		ldr	r2, [r7, #12]
 685 00d4 434B     		ldr	r3, .L27+36
 686 00d6 1446     		mov	r4, r2
 687 00d8 1D46     		mov	r5, r3
 688 00da 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 689 00dc 2060     		str	r0, [r4]	@ unaligned
 690 00de 6160     		str	r1, [r4, #4]	@ unaligned
 691 00e0 A260     		str	r2, [r4, #8]	@ unaligned
 692 00e2 E360     		str	r3, [r4, #12]	@ unaligned
 693 00e4 2868     		ldr	r0, [r5]	@ unaligned
 694 00e6 2061     		str	r0, [r4, #16]	@ unaligned
 695 00e8 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 696 00ea AB79     		ldrb	r3, [r5, #6]
 697 00ec A282     		strh	r2, [r4, #20]	@ unaligned
 698 00ee A375     		strb	r3, [r4, #22]
 287:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 699              		.loc 1 287 0
 700 00f0 1623     		movs	r3, #22
 701 00f2 7B61     		str	r3, [r7, #20]
 288:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 289:App/STM32F4-Discovery/tcpCLI.c **** 
 290:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 702              		.loc 1 290 0
 703 00f4 0023     		movs	r3, #0
 704 00f6 5FE0     		b	.L17
 705              	.L18:
 291:App/STM32F4-Discovery/tcpCLI.c **** 		}
 292:App/STM32F4-Discovery/tcpCLI.c **** 	}
 293:App/STM32F4-Discovery/tcpCLI.c **** 	
 294:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 295:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER upramp [value]
 296:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 297:App/STM32F4-Discovery/tcpCLI.c **** 
 298:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "upramp", 6))
 706              		.loc 1 298 0
 707 00f8 7868     		ldr	r0, [r7, #4]
 708 00fa 3B49     		ldr	r1, .L27+40
 709 00fc 0622     		movs	r2, #6
 710 00fe FFF7FEFF 		bl	strncmp
 711 0102 0346     		mov	r3, r0
 712 0104 002B     		cmp	r3, #0
 713 0106 4DD1     		bne	.L23
 299:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 300:App/STM32F4-Discovery/tcpCLI.c **** 	
 301:App/STM32F4-Discovery/tcpCLI.c **** 	
 302:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = GETDATA;
 714              		.loc 1 302 0
 715 0108 2E4B     		ldr	r3, .L27+4
 716 010a 0122     		movs	r2, #1
 717 010c 1A70     		strb	r2, [r3]
 303:App/STM32F4-Discovery/tcpCLI.c **** 			
 304:App/STM32F4-Discovery/tcpCLI.c **** 	
 305:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 306:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 718              		.loc 1 306 0
 719 010e 2E4B     		ldr	r3, .L27+8
 720 0110 1A68     		ldr	r2, [r3]
 721 0112 2E4B     		ldr	r3, .L27+12
 722 0114 1B68     		ldr	r3, [r3]
 723 0116 1046     		mov	r0, r2
 724 0118 2A49     		ldr	r1, .L27+4
 725 011a 1A46     		mov	r2, r3
 726 011c 0023     		movs	r3, #0
 727 011e FFF7FEFF 		bl	xQueueGenericSend
 728 0122 0346     		mov	r3, r0
 729 0124 012B     		cmp	r3, #1
 730 0126 2AD1     		bne	.L24
 307:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 308:App/STM32F4-Discovery/tcpCLI.c **** 					
 309:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay))
 731              		.loc 1 309 0
 732 0128 274B     		ldr	r3, .L27+8
 733 012a 1A68     		ldr	r2, [r3]
 734 012c 274B     		ldr	r3, .L27+12
 735 012e 1B68     		ldr	r3, [r3]
 736 0130 1046     		mov	r0, r2
 737 0132 2749     		ldr	r1, .L27+16
 738 0134 1A46     		mov	r2, r3
 739 0136 0023     		movs	r3, #0
 740 0138 FFF7FEFF 		bl	xQueueGenericReceive
 741 013c 0346     		mov	r3, r0
 742 013e 002B     		cmp	r3, #0
 743 0140 30D0     		beq	.L23
 310:App/STM32F4-Discovery/tcpCLI.c **** 			{
 311:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 744              		.loc 1 311 0
 745 0142 234B     		ldr	r3, .L27+16
 746 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 747 0146 062B     		cmp	r3, #6
 748 0148 0AD1     		bne	.L25
 312:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 313:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Up ramp is %d seconds\n\n\0", 
 314:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[3]);
 749              		.loc 1 314 0
 750 014a 214B     		ldr	r3, .L27+16
 751 014c DB89     		ldrh	r3, [r3, #14]
 313:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Up ramp is %d seconds\n\n\0", 
 752              		.loc 1 313 0
 753 014e F868     		ldr	r0, [r7, #12]
 754 0150 2649     		ldr	r1, .L27+44
 755 0152 1A46     		mov	r2, r3
 756 0154 FFF7FEFF 		bl	sprintf
 315:App/STM32F4-Discovery/tcpCLI.c **** 					
 316:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 25; 	
 757              		.loc 1 316 0
 758 0158 1923     		movs	r3, #25
 759 015a 7B61     		str	r3, [r7, #20]
 317:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 318:App/STM32F4-Discovery/tcpCLI.c **** 
 319:App/STM32F4-Discovery/tcpCLI.c **** 
 320:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 760              		.loc 1 320 0
 761 015c 0123     		movs	r3, #1
 762 015e 2BE0     		b	.L17
 763              	.L25:
 321:App/STM32F4-Discovery/tcpCLI.c **** 
 322:App/STM32F4-Discovery/tcpCLI.c **** 				}
 323:App/STM32F4-Discovery/tcpCLI.c **** 				else
 324:App/STM32F4-Discovery/tcpCLI.c **** 				{
 325:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 764              		.loc 1 325 0
 765 0160 FA68     		ldr	r2, [r7, #12]
 766 0162 1E4B     		ldr	r3, .L27+28
 767 0164 1546     		mov	r5, r2
 768 0166 1C46     		mov	r4, r3
 769 0168 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 770 016a 2860     		str	r0, [r5]	@ unaligned
 771 016c 6960     		str	r1, [r5, #4]	@ unaligned
 772 016e AA60     		str	r2, [r5, #8]	@ unaligned
 773 0170 EB60     		str	r3, [r5, #12]	@ unaligned
 774 0172 2068     		ldr	r0, [r4]	@ unaligned
 775 0174 2861     		str	r0, [r5, #16]	@ unaligned
 326:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 776              		.loc 1 326 0
 777 0176 1323     		movs	r3, #19
 778 0178 7B61     		str	r3, [r7, #20]
 327:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 328:App/STM32F4-Discovery/tcpCLI.c **** 
 329:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 779              		.loc 1 329 0
 780 017a 0023     		movs	r3, #0
 781 017c 1CE0     		b	.L17
 782              	.L24:
 330:App/STM32F4-Discovery/tcpCLI.c **** 
 331:App/STM32F4-Discovery/tcpCLI.c **** 
 332:App/STM32F4-Discovery/tcpCLI.c **** 				}
 333:App/STM32F4-Discovery/tcpCLI.c **** 						
 334:App/STM32F4-Discovery/tcpCLI.c **** 			}
 335:App/STM32F4-Discovery/tcpCLI.c **** 
 336:App/STM32F4-Discovery/tcpCLI.c **** 		}
 337:App/STM32F4-Discovery/tcpCLI.c **** 		else
 338:App/STM32F4-Discovery/tcpCLI.c **** 		{
 339:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 340:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 341:App/STM32F4-Discovery/tcpCLI.c **** 		
 342:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 783              		.loc 1 342 0
 784 017e FA68     		ldr	r2, [r7, #12]
 785 0180 184B     		ldr	r3, .L27+36
 786 0182 1446     		mov	r4, r2
 787 0184 1D46     		mov	r5, r3
 788 0186 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 789 0188 2060     		str	r0, [r4]	@ unaligned
 790 018a 6160     		str	r1, [r4, #4]	@ unaligned
 791 018c A260     		str	r2, [r4, #8]	@ unaligned
 792 018e E360     		str	r3, [r4, #12]	@ unaligned
 793 0190 2868     		ldr	r0, [r5]	@ unaligned
 794 0192 2061     		str	r0, [r4, #16]	@ unaligned
 795 0194 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 796 0196 AB79     		ldrb	r3, [r5, #6]
 797 0198 A282     		strh	r2, [r4, #20]	@ unaligned
 798 019a A375     		strb	r3, [r4, #22]
 343:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 799              		.loc 1 343 0
 800 019c 1623     		movs	r3, #22
 801 019e 7B61     		str	r3, [r7, #20]
 344:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 345:App/STM32F4-Discovery/tcpCLI.c **** 
 346:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 802              		.loc 1 346 0
 803 01a0 0023     		movs	r3, #0
 804 01a2 09E0     		b	.L17
 805              	.L23:
 347:App/STM32F4-Discovery/tcpCLI.c **** 		}
 348:App/STM32F4-Discovery/tcpCLI.c **** 	}
 349:App/STM32F4-Discovery/tcpCLI.c **** 
 350:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 351:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER downramp [value]
 352:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 353:App/STM32F4-Discovery/tcpCLI.c **** 
 354:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "downramp", 8))
 806              		.loc 1 354 0
 807 01a4 7868     		ldr	r0, [r7, #4]
 808 01a6 1249     		ldr	r1, .L27+48
 809 01a8 0822     		movs	r2, #8
 810 01aa FFF7FEFF 		bl	strncmp
 811 01ae 0346     		mov	r3, r0
 812 01b0 002B     		cmp	r3, #0
 813 01b2 01D1     		bne	.L26
 355:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 356:App/STM32F4-Discovery/tcpCLI.c **** 	
 357:App/STM32F4-Discovery/tcpCLI.c **** 	
 358:App/STM32F4-Discovery/tcpCLI.c **** 				
 359:App/STM32F4-Discovery/tcpCLI.c **** 	
 360:App/STM32F4-Discovery/tcpCLI.c **** 	
 361:App/STM32F4-Discovery/tcpCLI.c **** 
 362:App/STM32F4-Discovery/tcpCLI.c **** 			return 0; 
 814              		.loc 1 362 0
 815 01b4 0023     		movs	r3, #0
 816 01b6 FFE7     		b	.L17
 817              	.L26:
 818              	.L17:
 363:App/STM32F4-Discovery/tcpCLI.c **** 
 364:App/STM32F4-Discovery/tcpCLI.c **** 	}
 365:App/STM32F4-Discovery/tcpCLI.c **** 
 366:App/STM32F4-Discovery/tcpCLI.c **** 
 367:App/STM32F4-Discovery/tcpCLI.c **** 
 368:App/STM32F4-Discovery/tcpCLI.c **** 
 369:App/STM32F4-Discovery/tcpCLI.c **** }
 819              		.loc 1 369 0
 820 01b8 1846     		mov	r0, r3
 821 01ba 1837     		adds	r7, r7, #24
 822 01bc BD46     		mov	sp, r7
 823              		@ sp needed
 824 01be B0BD     		pop	{r4, r5, r7, pc}
 825              	.L28:
 826              		.align	2
 827              	.L27:
 828 01c0 74000000 		.word	.LC4
 829 01c4 00000000 		.word	telegramS
 830 01c8 00000000 		.word	QSpd_handle
 831 01cc 00000000 		.word	xDelay
 832 01d0 00000000 		.word	telegramR
 833 01d4 1F85EB51 		.word	1374389535
 834 01d8 70010000 		.word	.LC14
 835 01dc C8000000 		.word	.LC7
 836 01e0 DC000000 		.word	.LC8
 837 01e4 F8000000 		.word	.LC9
 838 01e8 10010000 		.word	.LC10
 839 01ec 88010000 		.word	.LC15
 840 01f0 64010000 		.word	.LC13
 841              		.cfi_endproc
 842              	.LFE111:
 844              		.section	.rodata
 845 01a1 000000   		.align	2
 846              	.LC16:
 847 01a4 546F2066 		.ascii	"To few arguments. \012\012\000\000"
 847      65772061 
 847      7267756D 
 847      656E7473 
 847      2E200A0A 
 848 01ba 0000     		.align	2
 849              	.LC17:
 850 01bc 68656C70 		.ascii	"help\000"
 850      00
 851 01c1 000000   		.align	2
 852              	.LC18:
 853 01c4 55736167 		.ascii	"Usage and parameters\012options:\012\011get - get m"
 853      6520616E 
 853      64207061 
 853      72616D65 
 853      74657273 
 854 01ee 6F746F72 		.ascii	"otor parameter value\012\011set - set motor paramet"
 854      20706172 
 854      616D6574 
 854      65722076 
 854      616C7565 
 855 021b 65722076 		.ascii	"er value\012\011start - starts motor\012\011stop - "
 855      616C7565 
 855      0A097374 
 855      61727420 
 855      2D207374 
 856 0242 73746F70 		.ascii	"stops motor\012parametrs:\012\011speed - sets speed"
 856      73206D6F 
 856      746F720A 
 856      70617261 
 856      6D657472 
 857 026c 0A097570 		.ascii	"\012\011upramp\012\011downramp\012\000\000"
 857      72616D70 
 857      0A09646F 
 857      776E7261 
 857      6D700A00 
 858 0281 000000   		.align	2
 859              	.LC19:
 860 0284 73657400 		.ascii	"set\000"
 861              		.align	2
 862              	.LC20:
 863 0288 67657400 		.ascii	"get\000"
 864              		.align	2
 865              	.LC21:
 866 028c 73746F70 		.ascii	"stop\000"
 866      00
 867 0291 000000   		.align	2
 868              	.LC22:
 869 0294 4D6F746F 		.ascii	"Motor succsesfully stopped.\012\012\000"
 869      72207375 
 869      63637365 
 869      7366756C 
 869      6C792073 
 870 02b2 0000     		.align	2
 871              	.LC23:
 872 02b4 73746172 		.ascii	"start\000"
 872      7400
 873 02ba 0000     		.align	2
 874              	.LC24:
 875 02bc 4D6F746F 		.ascii	"Motor succsesfully started.\012\012\000"
 875      72207375 
 875      63637365 
 875      7366756C 
 875      6C792073 
 876 02da 0000     		.section	.text.prvMotorCommand,"ax",%progbits
 877              		.align	2
 878              		.global	prvMotorCommand
 879              		.thumb
 880              		.thumb_func
 882              	prvMotorCommand:
 883              	.LFB112:
 370:App/STM32F4-Discovery/tcpCLI.c **** 
 371:App/STM32F4-Discovery/tcpCLI.c **** 
 372:App/STM32F4-Discovery/tcpCLI.c **** 
 373:App/STM32F4-Discovery/tcpCLI.c **** 
 374:App/STM32F4-Discovery/tcpCLI.c **** 
 375:App/STM32F4-Discovery/tcpCLI.c **** 
 376:App/STM32F4-Discovery/tcpCLI.c **** /* ================================================================================================
 377:App/STM32F4-Discovery/tcpCLI.c ****  * ================================================================================================
 378:App/STM32F4-Discovery/tcpCLI.c ****  * 		prvMotorCommand 
 379:App/STM32F4-Discovery/tcpCLI.c ****  * ================================================================================================
 380:App/STM32F4-Discovery/tcpCLI.c ****  * ==============================================================================================*/
 381:App/STM32F4-Discovery/tcpCLI.c **** 
 382:App/STM32F4-Discovery/tcpCLI.c **** portBASE_TYPE prvMotorCommand ( 	int8_t *pcWriteBuffer, 
 383:App/STM32F4-Discovery/tcpCLI.c **** 						size_t xWriteBufferLen, 
 384:App/STM32F4-Discovery/tcpCLI.c **** 						const int8_t *pcCommandString)
 385:App/STM32F4-Discovery/tcpCLI.c **** {
 884              		.loc 1 385 0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 40
 887              		@ frame_needed = 1, uses_anonymous_args = 0
 888 0000 B0B5     		push	{r4, r5, r7, lr}
 889              	.LCFI6:
 890              		.cfi_def_cfa_offset 16
 891              		.cfi_offset 4, -16
 892              		.cfi_offset 5, -12
 893              		.cfi_offset 7, -8
 894              		.cfi_offset 14, -4
 895 0002 8EB0     		sub	sp, sp, #56
 896              	.LCFI7:
 897              		.cfi_def_cfa_offset 72
 898 0004 04AF     		add	r7, sp, #16
 899              	.LCFI8:
 900              		.cfi_def_cfa 7, 56
 901 0006 F860     		str	r0, [r7, #12]
 902 0008 B960     		str	r1, [r7, #8]
 903 000a 7A60     		str	r2, [r7, #4]
 386:App/STM32F4-Discovery/tcpCLI.c **** 	/* globals: 
 387:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	socket 
 388:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	setSpeedHandle
 389:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	QSpd_Handle
 390:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	QStatus_handle
 391:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	
 392:App/STM32F4-Discovery/tcpCLI.c **** 	 **/
 393:App/STM32F4-Discovery/tcpCLI.c **** 
 394:App/STM32F4-Discovery/tcpCLI.c **** 	int8_t *Option, *Param, *Value;
 395:App/STM32F4-Discovery/tcpCLI.c **** 	int xOptionLength, xParamLength, xValueLength; 
 396:App/STM32F4-Discovery/tcpCLI.c **** 	//QueueTelegram telegram; 
 397:App/STM32F4-Discovery/tcpCLI.c **** 	
 398:App/STM32F4-Discovery/tcpCLI.c **** 	// get option from command line 
 399:App/STM32F4-Discovery/tcpCLI.c **** 
 400:App/STM32F4-Discovery/tcpCLI.c **** 	Option = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 904              		.loc 1 400 0
 905 000c 07F11803 		add	r3, r7, #24
 906 0010 7868     		ldr	r0, [r7, #4]
 907 0012 0121     		movs	r1, #1
 908 0014 1A46     		mov	r2, r3
 909 0016 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 910 001a 7862     		str	r0, [r7, #36]
 401:App/STM32F4-Discovery/tcpCLI.c **** 					  1,  		   // first parameter
 402:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xOptionLength // parameter string length
 403:App/STM32F4-Discovery/tcpCLI.c **** 					  
 404:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 405:App/STM32F4-Discovery/tcpCLI.c **** 
 406:App/STM32F4-Discovery/tcpCLI.c **** 	if ( Option == NULL)
 911              		.loc 1 406 0
 912 001c 7B6A     		ldr	r3, [r7, #36]
 913 001e 002B     		cmp	r3, #0
 914 0020 0ED1     		bne	.L30
 407:App/STM32F4-Discovery/tcpCLI.c **** 	{
 408:App/STM32F4-Discovery/tcpCLI.c **** 		sprintf(pcWriteBuffer, "To few arguments. \n\n\0");
 915              		.loc 1 408 0
 916 0022 FA68     		ldr	r2, [r7, #12]
 917 0024 9F4B     		ldr	r3, .L50
 918 0026 1546     		mov	r5, r2
 919 0028 1C46     		mov	r4, r3
 920 002a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 921 002c 2860     		str	r0, [r5]	@ unaligned
 922 002e 6960     		str	r1, [r5, #4]	@ unaligned
 923 0030 AA60     		str	r2, [r5, #8]	@ unaligned
 924 0032 EB60     		str	r3, [r5, #12]	@ unaligned
 925 0034 2068     		ldr	r0, [r4]	@ unaligned
 926 0036 2861     		str	r0, [r5, #16]	@ unaligned
 927 0038 2379     		ldrb	r3, [r4, #4]
 928 003a 2B75     		strb	r3, [r5, #20]
 409:App/STM32F4-Discovery/tcpCLI.c **** 		return pdFALSE;
 929              		.loc 1 409 0
 930 003c 0023     		movs	r3, #0
 931 003e 8EE1     		b	.L49
 932              	.L30:
 410:App/STM32F4-Discovery/tcpCLI.c **** 	}
 411:App/STM32F4-Discovery/tcpCLI.c **** 
 412:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp(Option, "help", 4))
 933              		.loc 1 412 0
 934 0040 786A     		ldr	r0, [r7, #36]
 935 0042 9949     		ldr	r1, .L50+4
 936 0044 0422     		movs	r2, #4
 937 0046 FFF7FEFF 		bl	strncmp
 938 004a 0346     		mov	r3, r0
 939 004c 002B     		cmp	r3, #0
 940 004e 0BD1     		bne	.L32
 413:App/STM32F4-Discovery/tcpCLI.c **** 	{
 414:App/STM32F4-Discovery/tcpCLI.c **** 		strcpy(pcWriteBuffer, 
 941              		.loc 1 414 0
 942 0050 FA68     		ldr	r2, [r7, #12]
 943 0052 964B     		ldr	r3, .L50+8
 944 0054 1146     		mov	r1, r2
 945 0056 1A46     		mov	r2, r3
 946 0058 BC23     		movs	r3, #188
 947 005a 0846     		mov	r0, r1
 948 005c 1146     		mov	r1, r2
 949 005e 1A46     		mov	r2, r3
 950 0060 FFF7FEFF 		bl	memcpy
 415:App/STM32F4-Discovery/tcpCLI.c **** 			"Usage and parameters\n"
 416:App/STM32F4-Discovery/tcpCLI.c **** 			"options:\n"
 417:App/STM32F4-Discovery/tcpCLI.c **** 			"\tget - get motor parameter value\n"
 418:App/STM32F4-Discovery/tcpCLI.c **** 			"\tset - set motor parameter value\n"
 419:App/STM32F4-Discovery/tcpCLI.c **** 			"\tstart - starts motor\n"
 420:App/STM32F4-Discovery/tcpCLI.c **** 			"\tstop - stops motor\n"
 421:App/STM32F4-Discovery/tcpCLI.c **** 			"parametrs:\n"
 422:App/STM32F4-Discovery/tcpCLI.c **** 			"\tspeed - sets speed\n"
 423:App/STM32F4-Discovery/tcpCLI.c **** 			"\tupramp\n"
 424:App/STM32F4-Discovery/tcpCLI.c **** 			"\tdownramp\n"
 425:App/STM32F4-Discovery/tcpCLI.c **** 
 426:App/STM32F4-Discovery/tcpCLI.c **** 			
 427:App/STM32F4-Discovery/tcpCLI.c **** 			"\0"
 428:App/STM32F4-Discovery/tcpCLI.c **** 
 429:App/STM32F4-Discovery/tcpCLI.c **** 		      );
 430:App/STM32F4-Discovery/tcpCLI.c **** 
 431:App/STM32F4-Discovery/tcpCLI.c **** 		return pdPASS;
 951              		.loc 1 431 0
 952 0064 0123     		movs	r3, #1
 953 0066 7AE1     		b	.L49
 954              	.L32:
 432:App/STM32F4-Discovery/tcpCLI.c **** 	}
 433:App/STM32F4-Discovery/tcpCLI.c **** 
 434:App/STM32F4-Discovery/tcpCLI.c **** 
 435:App/STM32F4-Discovery/tcpCLI.c ****     //	vTaskResume(motorHBHandle);
 436:App/STM32F4-Discovery/tcpCLI.c **** 
 437:App/STM32F4-Discovery/tcpCLI.c **** 
 438:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 439:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND SET [parameter name] [value]
 440:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 441:App/STM32F4-Discovery/tcpCLI.c **** 
 442:App/STM32F4-Discovery/tcpCLI.c **** 	if( !strncmp( Option, "set", 3) ) 
 955              		.loc 1 442 0
 956 0068 786A     		ldr	r0, [r7, #36]
 957 006a 9149     		ldr	r1, .L50+12
 958 006c 0322     		movs	r2, #3
 959 006e FFF7FEFF 		bl	strncmp
 960 0072 0346     		mov	r3, r0
 961 0074 002B     		cmp	r3, #0
 962 0076 33D1     		bne	.L33
 443:App/STM32F4-Discovery/tcpCLI.c **** 	{
 444:App/STM32F4-Discovery/tcpCLI.c **** 
 445:App/STM32F4-Discovery/tcpCLI.c **** 		// get parameter from command line 
 446:App/STM32F4-Discovery/tcpCLI.c **** 	
 447:App/STM32F4-Discovery/tcpCLI.c **** 		Param = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 963              		.loc 1 447 0
 964 0078 07F11403 		add	r3, r7, #20
 965 007c 7868     		ldr	r0, [r7, #4]
 966 007e 0221     		movs	r1, #2
 967 0080 1A46     		mov	r2, r3
 968 0082 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 969 0086 3862     		str	r0, [r7, #32]
 448:App/STM32F4-Discovery/tcpCLI.c **** 					  2,  		   // 2nd parameter
 449:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xParamLength // parameter string length
 450:App/STM32F4-Discovery/tcpCLI.c **** 					  
 451:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 452:App/STM32F4-Discovery/tcpCLI.c **** 		Value = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 970              		.loc 1 452 0
 971 0088 07F11003 		add	r3, r7, #16
 972 008c 7868     		ldr	r0, [r7, #4]
 973 008e 0321     		movs	r1, #3
 974 0090 1A46     		mov	r2, r3
 975 0092 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 976 0096 F861     		str	r0, [r7, #28]
 453:App/STM32F4-Discovery/tcpCLI.c **** 					  3,  		   // 2nd parameter
 454:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xValueLength // parameter string length
 455:App/STM32F4-Discovery/tcpCLI.c **** 					  
 456:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 457:App/STM32F4-Discovery/tcpCLI.c **** 		
 458:App/STM32F4-Discovery/tcpCLI.c **** 		// return pdFALSE if there is no 3rd parameter 
 459:App/STM32F4-Discovery/tcpCLI.c **** 
 460:App/STM32F4-Discovery/tcpCLI.c **** 		if (Value==NULL||Param==NULL)
 977              		.loc 1 460 0
 978 0098 FB69     		ldr	r3, [r7, #28]
 979 009a 002B     		cmp	r3, #0
 980 009c 02D0     		beq	.L34
 981              		.loc 1 460 0 is_stmt 0 discriminator 1
 982 009e 3B6A     		ldr	r3, [r7, #32]
 983 00a0 002B     		cmp	r3, #0
 984 00a2 06D1     		bne	.L35
 985              	.L34:
 461:App/STM32F4-Discovery/tcpCLI.c **** 		{
 462:App/STM32F4-Discovery/tcpCLI.c **** 			strcpy(pcWriteBuffer, xMotorCommand.pcHelpString);
 986              		.loc 1 462 0 is_stmt 1
 987 00a4 834B     		ldr	r3, .L50+16
 988 00a6 F868     		ldr	r0, [r7, #12]
 989 00a8 1946     		mov	r1, r3
 990 00aa FFF7FEFF 		bl	strcpy
 463:App/STM32F4-Discovery/tcpCLI.c **** 
 464:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 
 991              		.loc 1 464 0
 992 00ae 0023     		movs	r3, #0
 993 00b0 55E1     		b	.L49
 994              	.L35:
 465:App/STM32F4-Discovery/tcpCLI.c **** 
 466:App/STM32F4-Discovery/tcpCLI.c **** 		}
 467:App/STM32F4-Discovery/tcpCLI.c **** 
 468:App/STM32F4-Discovery/tcpCLI.c **** 		
 469:App/STM32F4-Discovery/tcpCLI.c **** 		if ( handleVariable_set ( 
 995              		.loc 1 469 0
 996 00b2 7B69     		ldr	r3, [r7, #20]
 997 00b4 804A     		ldr	r2, .L50+20
 998 00b6 1068     		ldr	r0, [r2]
 999 00b8 3969     		ldr	r1, [r7, #16]
 1000 00ba 804A     		ldr	r2, .L50+24
 1001 00bc 1268     		ldr	r2, [r2]
 1002 00be 0090     		str	r0, [sp]
 1003 00c0 F869     		ldr	r0, [r7, #28]
 1004 00c2 0190     		str	r0, [sp, #4]
 1005 00c4 0291     		str	r1, [sp, #8]
 1006 00c6 0392     		str	r2, [sp, #12]
 1007 00c8 F868     		ldr	r0, [r7, #12]
 1008 00ca B968     		ldr	r1, [r7, #8]
 1009 00cc 3A6A     		ldr	r2, [r7, #32]
 1010 00ce FFF7FEFF 		bl	handleVariable_set
 1011 00d2 0346     		mov	r3, r0
 1012 00d4 002B     		cmp	r3, #0
 1013 00d6 01D0     		beq	.L36
 470:App/STM32F4-Discovery/tcpCLI.c **** 				           pcWriteBuffer, 
 471:App/STM32F4-Discovery/tcpCLI.c **** 					   xWriteBufferLen,
 472:App/STM32F4-Discovery/tcpCLI.c **** 					   Param, 
 473:App/STM32F4-Discovery/tcpCLI.c **** 					   xParamLength, 
 474:App/STM32F4-Discovery/tcpCLI.c **** 					   QSpd_handle, 
 475:App/STM32F4-Discovery/tcpCLI.c **** 					   Value,
 476:App/STM32F4-Discovery/tcpCLI.c **** 					   xValueLength,  
 477:App/STM32F4-Discovery/tcpCLI.c **** 					   socket_0)) return pdPASS;
 1014              		.loc 1 477 0
 1015 00d8 0123     		movs	r3, #1
 1016 00da 40E1     		b	.L49
 1017              	.L36:
 478:App/STM32F4-Discovery/tcpCLI.c **** 
 479:App/STM32F4-Discovery/tcpCLI.c **** 		
 480:App/STM32F4-Discovery/tcpCLI.c **** 			
 481:App/STM32F4-Discovery/tcpCLI.c **** 		return pdFALSE;
 1018              		.loc 1 481 0
 1019 00dc 0023     		movs	r3, #0
 1020 00de 3EE1     		b	.L49
 1021              	.L33:
 482:App/STM32F4-Discovery/tcpCLI.c **** 
 483:App/STM32F4-Discovery/tcpCLI.c **** 	}
 484:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 485:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND GET [parameter name] [value]
 486:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 487:App/STM32F4-Discovery/tcpCLI.c **** 
 488:App/STM32F4-Discovery/tcpCLI.c **** 
 489:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "get", 3))
 1022              		.loc 1 489 0
 1023 00e0 786A     		ldr	r0, [r7, #36]
 1024 00e2 7749     		ldr	r1, .L50+28
 1025 00e4 0322     		movs	r2, #3
 1026 00e6 FFF7FEFF 		bl	strncmp
 1027 00ea 0346     		mov	r3, r0
 1028 00ec 002B     		cmp	r3, #0
 1029 00ee 27D1     		bne	.L37
 490:App/STM32F4-Discovery/tcpCLI.c **** 	{
 491:App/STM32F4-Discovery/tcpCLI.c **** 		// get parameter from command line 
 492:App/STM32F4-Discovery/tcpCLI.c **** 	
 493:App/STM32F4-Discovery/tcpCLI.c **** 		Param = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1030              		.loc 1 493 0
 1031 00f0 07F11403 		add	r3, r7, #20
 1032 00f4 7868     		ldr	r0, [r7, #4]
 1033 00f6 0221     		movs	r1, #2
 1034 00f8 1A46     		mov	r2, r3
 1035 00fa FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1036 00fe 3862     		str	r0, [r7, #32]
 494:App/STM32F4-Discovery/tcpCLI.c **** 					  2,  		   // 2nd parameter
 495:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xParamLength // parameter string length
 496:App/STM32F4-Discovery/tcpCLI.c **** 					  
 497:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 498:App/STM32F4-Discovery/tcpCLI.c **** 			
 499:App/STM32F4-Discovery/tcpCLI.c **** 		// return pdFALSE if there is no 3rd parameter 
 500:App/STM32F4-Discovery/tcpCLI.c **** 
 501:App/STM32F4-Discovery/tcpCLI.c **** 		if(Value==NULL||Param==NULL)
 1037              		.loc 1 501 0
 1038 0100 FB69     		ldr	r3, [r7, #28]
 1039 0102 002B     		cmp	r3, #0
 1040 0104 02D0     		beq	.L38
 1041              		.loc 1 501 0 is_stmt 0 discriminator 1
 1042 0106 3B6A     		ldr	r3, [r7, #32]
 1043 0108 002B     		cmp	r3, #0
 1044 010a 06D1     		bne	.L39
 1045              	.L38:
 502:App/STM32F4-Discovery/tcpCLI.c **** 		{
 503:App/STM32F4-Discovery/tcpCLI.c **** 			strcpy(pcWriteBuffer, xMotorCommand.pcHelpString);
 1046              		.loc 1 503 0 is_stmt 1
 1047 010c 694B     		ldr	r3, .L50+16
 1048 010e F868     		ldr	r0, [r7, #12]
 1049 0110 1946     		mov	r1, r3
 1050 0112 FFF7FEFF 		bl	strcpy
 504:App/STM32F4-Discovery/tcpCLI.c **** 
 505:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 
 1051              		.loc 1 505 0
 1052 0116 0023     		movs	r3, #0
 1053 0118 21E1     		b	.L49
 1054              	.L39:
 506:App/STM32F4-Discovery/tcpCLI.c **** 
 507:App/STM32F4-Discovery/tcpCLI.c **** 		}
 508:App/STM32F4-Discovery/tcpCLI.c **** 
 509:App/STM32F4-Discovery/tcpCLI.c **** 		
 510:App/STM32F4-Discovery/tcpCLI.c **** 		if ( handleVariable_get ( 
 1055              		.loc 1 510 0
 1056 011a 7B69     		ldr	r3, [r7, #20]
 1057 011c 664A     		ldr	r2, .L50+20
 1058 011e 1168     		ldr	r1, [r2]
 1059 0120 664A     		ldr	r2, .L50+24
 1060 0122 1268     		ldr	r2, [r2]
 1061 0124 0091     		str	r1, [sp]
 1062 0126 0192     		str	r2, [sp, #4]
 1063 0128 F868     		ldr	r0, [r7, #12]
 1064 012a B968     		ldr	r1, [r7, #8]
 1065 012c 3A6A     		ldr	r2, [r7, #32]
 1066 012e FFF7FEFF 		bl	handleVariable_get
 1067 0132 0346     		mov	r3, r0
 1068 0134 002B     		cmp	r3, #0
 1069 0136 01D0     		beq	.L40
 511:App/STM32F4-Discovery/tcpCLI.c **** 				        pcWriteBuffer, 
 512:App/STM32F4-Discovery/tcpCLI.c **** 					   xWriteBufferLen,
 513:App/STM32F4-Discovery/tcpCLI.c **** 	
 514:App/STM32F4-Discovery/tcpCLI.c **** 				           Param, 
 515:App/STM32F4-Discovery/tcpCLI.c **** 					   xParamLength, 
 516:App/STM32F4-Discovery/tcpCLI.c **** 					   QSpd_handle, 
 517:App/STM32F4-Discovery/tcpCLI.c **** 					   socket_0)) return pdPASS;
 1070              		.loc 1 517 0
 1071 0138 0123     		movs	r3, #1
 1072 013a 10E1     		b	.L49
 1073              	.L40:
 518:App/STM32F4-Discovery/tcpCLI.c **** 		return pdFALSE;
 1074              		.loc 1 518 0
 1075 013c 0023     		movs	r3, #0
 1076 013e 0EE1     		b	.L49
 1077              	.L37:
 519:App/STM32F4-Discovery/tcpCLI.c **** 
 520:App/STM32F4-Discovery/tcpCLI.c **** 
 521:App/STM32F4-Discovery/tcpCLI.c **** 	}
 522:App/STM32F4-Discovery/tcpCLI.c **** 		
 523:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 524:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND STOP 
 525:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 526:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "stop", 4))
 1078              		.loc 1 526 0
 1079 0140 786A     		ldr	r0, [r7, #36]
 1080 0142 6049     		ldr	r1, .L50+32
 1081 0144 0422     		movs	r2, #4
 1082 0146 FFF7FEFF 		bl	strncmp
 1083 014a 0346     		mov	r3, r0
 1084 014c 002B     		cmp	r3, #0
 1085 014e 69D1     		bne	.L41
 527:App/STM32F4-Discovery/tcpCLI.c **** 	{
 528:App/STM32F4-Discovery/tcpCLI.c **** 
 529:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = STOP; 
 1086              		.loc 1 529 0
 1087 0150 5D4B     		ldr	r3, .L50+36
 1088 0152 0522     		movs	r2, #5
 1089 0154 1A70     		strb	r2, [r3]
 530:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5; 
 1090              		.loc 1 530 0
 1091 0156 5C4B     		ldr	r3, .L50+36
 1092 0158 0522     		movs	r2, #5
 1093 015a 5A60     		str	r2, [r3, #4]
 531:App/STM32F4-Discovery/tcpCLI.c **** 			// send value to setSpeed_task via Queue 
 532:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) )
 1094              		.loc 1 532 0
 1095 015c 564B     		ldr	r3, .L50+20
 1096 015e 1A68     		ldr	r2, [r3]
 1097 0160 5A4B     		ldr	r3, .L50+40
 1098 0162 1B68     		ldr	r3, [r3]
 1099 0164 1046     		mov	r0, r2
 1100 0166 5849     		ldr	r1, .L50+36
 1101 0168 1A46     		mov	r2, r3
 1102 016a 0023     		movs	r3, #0
 1103 016c FFF7FEFF 		bl	xQueueGenericSend
 1104 0170 0346     		mov	r3, r0
 1105 0172 002B     		cmp	r3, #0
 1106 0174 43D0     		beq	.L42
 533:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 534:App/STM32F4-Discovery/tcpCLI.c **** 					
 535:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay)== pdPASS)
 1107              		.loc 1 535 0
 1108 0176 504B     		ldr	r3, .L50+20
 1109 0178 1A68     		ldr	r2, [r3]
 1110 017a 544B     		ldr	r3, .L50+40
 1111 017c 1B68     		ldr	r3, [r3]
 1112 017e 1046     		mov	r0, r2
 1113 0180 5349     		ldr	r1, .L50+44
 1114 0182 1A46     		mov	r2, r3
 1115 0184 0023     		movs	r3, #0
 1116 0186 FFF7FEFF 		bl	xQueueGenericReceive
 1117 018a 0346     		mov	r3, r0
 1118 018c 012B     		cmp	r3, #1
 1119 018e 25D1     		bne	.L43
 536:App/STM32F4-Discovery/tcpCLI.c **** 			{
 537:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 1120              		.loc 1 537 0
 1121 0190 4F4B     		ldr	r3, .L50+44
 1122 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1123 0194 062B     		cmp	r3, #6
 1124 0196 12D1     		bne	.L44
 538:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 539:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer ,"Motor succsesfully stopped.\n\n");
 1125              		.loc 1 539 0
 1126 0198 FA68     		ldr	r2, [r7, #12]
 1127 019a 4E4B     		ldr	r3, .L50+48
 1128 019c 1546     		mov	r5, r2
 1129 019e 1C46     		mov	r4, r3
 1130 01a0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1131 01a2 2860     		str	r0, [r5]	@ unaligned
 1132 01a4 6960     		str	r1, [r5, #4]	@ unaligned
 1133 01a6 AA60     		str	r2, [r5, #8]	@ unaligned
 1134 01a8 EB60     		str	r3, [r5, #12]	@ unaligned
 1135 01aa 07CC     		ldmia	r4!, {r0, r1, r2}
 1136 01ac 2861     		str	r0, [r5, #16]	@ unaligned
 1137 01ae 6961     		str	r1, [r5, #20]	@ unaligned
 1138 01b0 AA61     		str	r2, [r5, #24]	@ unaligned
 1139 01b2 2388     		ldrh	r3, [r4]	@ unaligned
 1140 01b4 AB83     		strh	r3, [r5, #28]	@ unaligned
 540:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 29 ; 	
 1141              		.loc 1 540 0
 1142 01b6 1D23     		movs	r3, #29
 1143 01b8 BB60     		str	r3, [r7, #8]
 541:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 542:App/STM32F4-Discovery/tcpCLI.c **** 
 543:App/STM32F4-Discovery/tcpCLI.c **** 					
 544:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 1144              		.loc 1 544 0
 1145 01ba 0123     		movs	r3, #1
 1146 01bc CFE0     		b	.L49
 1147              	.L44:
 545:App/STM32F4-Discovery/tcpCLI.c **** 
 546:App/STM32F4-Discovery/tcpCLI.c **** 				}
 547:App/STM32F4-Discovery/tcpCLI.c **** 				else
 548:App/STM32F4-Discovery/tcpCLI.c **** 				{
 549:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1148              		.loc 1 549 0
 1149 01be FA68     		ldr	r2, [r7, #12]
 1150 01c0 454B     		ldr	r3, .L50+52
 1151 01c2 1546     		mov	r5, r2
 1152 01c4 1C46     		mov	r4, r3
 1153 01c6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1154 01c8 2860     		str	r0, [r5]	@ unaligned
 1155 01ca 6960     		str	r1, [r5, #4]	@ unaligned
 1156 01cc AA60     		str	r2, [r5, #8]	@ unaligned
 1157 01ce EB60     		str	r3, [r5, #12]	@ unaligned
 1158 01d0 2068     		ldr	r0, [r4]	@ unaligned
 1159 01d2 2861     		str	r0, [r5, #16]	@ unaligned
 550:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 1160              		.loc 1 550 0
 1161 01d4 1323     		movs	r3, #19
 1162 01d6 BB60     		str	r3, [r7, #8]
 551:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 552:App/STM32F4-Discovery/tcpCLI.c **** 
 553:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 1163              		.loc 1 553 0
 1164 01d8 0023     		movs	r3, #0
 1165 01da C0E0     		b	.L49
 1166              	.L43:
 554:App/STM32F4-Discovery/tcpCLI.c **** 
 555:App/STM32F4-Discovery/tcpCLI.c **** 
 556:App/STM32F4-Discovery/tcpCLI.c **** 				}
 557:App/STM32F4-Discovery/tcpCLI.c **** 			}
 558:App/STM32F4-Discovery/tcpCLI.c **** 			else
 559:App/STM32F4-Discovery/tcpCLI.c **** 			{
 560:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 561:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 562:App/STM32F4-Discovery/tcpCLI.c **** 		
 563:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 1167              		.loc 1 563 0
 1168 01dc FA68     		ldr	r2, [r7, #12]
 1169 01de 3F4B     		ldr	r3, .L50+56
 1170 01e0 1546     		mov	r5, r2
 1171 01e2 1C46     		mov	r4, r3
 1172 01e4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1173 01e6 2860     		str	r0, [r5]	@ unaligned
 1174 01e8 6960     		str	r1, [r5, #4]	@ unaligned
 1175 01ea AA60     		str	r2, [r5, #8]	@ unaligned
 1176 01ec EB60     		str	r3, [r5, #12]	@ unaligned
 1177 01ee 07CC     		ldmia	r4!, {r0, r1, r2}
 1178 01f0 2861     		str	r0, [r5, #16]	@ unaligned
 1179 01f2 6961     		str	r1, [r5, #20]	@ unaligned
 1180 01f4 AA61     		str	r2, [r5, #24]	@ unaligned
 564:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 1181              		.loc 1 564 0
 1182 01f6 1B23     		movs	r3, #27
 1183 01f8 BB60     		str	r3, [r7, #8]
 565:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 566:App/STM32F4-Discovery/tcpCLI.c **** 
 567:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 1184              		.loc 1 567 0
 1185 01fa 0023     		movs	r3, #0
 1186 01fc AFE0     		b	.L49
 1187              	.L42:
 568:App/STM32F4-Discovery/tcpCLI.c **** 			}
 569:App/STM32F4-Discovery/tcpCLI.c **** 		}
 570:App/STM32F4-Discovery/tcpCLI.c **** 		else
 571:App/STM32F4-Discovery/tcpCLI.c **** 		{
 572:App/STM32F4-Discovery/tcpCLI.c **** 			
 573:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 574:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 575:App/STM32F4-Discovery/tcpCLI.c **** 		
 576:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 1188              		.loc 1 576 0
 1189 01fe FA68     		ldr	r2, [r7, #12]
 1190 0200 374B     		ldr	r3, .L50+60
 1191 0202 1446     		mov	r4, r2
 1192 0204 1D46     		mov	r5, r3
 1193 0206 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1194 0208 2060     		str	r0, [r4]	@ unaligned
 1195 020a 6160     		str	r1, [r4, #4]	@ unaligned
 1196 020c A260     		str	r2, [r4, #8]	@ unaligned
 1197 020e E360     		str	r3, [r4, #12]	@ unaligned
 1198 0210 2868     		ldr	r0, [r5]	@ unaligned
 1199 0212 2061     		str	r0, [r4, #16]	@ unaligned
 1200 0214 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1201 0216 AB79     		ldrb	r3, [r5, #6]
 1202 0218 A282     		strh	r2, [r4, #20]	@ unaligned
 1203 021a A375     		strb	r3, [r4, #22]
 577:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1204              		.loc 1 577 0
 1205 021c 1623     		movs	r3, #22
 1206 021e BB60     		str	r3, [r7, #8]
 578:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 579:App/STM32F4-Discovery/tcpCLI.c **** 
 580:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1207              		.loc 1 580 0
 1208 0220 0023     		movs	r3, #0
 1209 0222 9CE0     		b	.L49
 1210              	.L41:
 581:App/STM32F4-Discovery/tcpCLI.c **** 		}
 582:App/STM32F4-Discovery/tcpCLI.c **** 					
 583:App/STM32F4-Discovery/tcpCLI.c **** 	}
 584:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 585:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND START
 586:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 587:App/STM32F4-Discovery/tcpCLI.c **** 
 588:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "start", 5))
 1211              		.loc 1 588 0
 1212 0224 786A     		ldr	r0, [r7, #36]
 1213 0226 2F49     		ldr	r1, .L50+64
 1214 0228 0522     		movs	r2, #5
 1215 022a FFF7FEFF 		bl	strncmp
 1216 022e 0346     		mov	r3, r0
 1217 0230 002B     		cmp	r3, #0
 1218 0232 40F08E80 		bne	.L45
 589:App/STM32F4-Discovery/tcpCLI.c **** 	{
 590:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = START; 
 1219              		.loc 1 590 0
 1220 0236 244B     		ldr	r3, .L50+36
 1221 0238 0422     		movs	r2, #4
 1222 023a 1A70     		strb	r2, [r3]
 591:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5; 
 1223              		.loc 1 591 0
 1224 023c 224B     		ldr	r3, .L50+36
 1225 023e 0522     		movs	r2, #5
 1226 0240 5A60     		str	r2, [r3, #4]
 592:App/STM32F4-Discovery/tcpCLI.c **** 			// send value to setSpeed_task via Queue 
 593:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 1227              		.loc 1 593 0
 1228 0242 1D4B     		ldr	r3, .L50+20
 1229 0244 1A68     		ldr	r2, [r3]
 1230 0246 214B     		ldr	r3, .L50+40
 1231 0248 1B68     		ldr	r3, [r3]
 1232 024a 1046     		mov	r0, r2
 1233 024c 1E49     		ldr	r1, .L50+36
 1234 024e 1A46     		mov	r2, r3
 1235 0250 0023     		movs	r3, #0
 1236 0252 FFF7FEFF 		bl	xQueueGenericSend
 1237 0256 0346     		mov	r3, r0
 1238 0258 012B     		cmp	r3, #1
 1239 025a 67D1     		bne	.L46
 594:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 595:App/STM32F4-Discovery/tcpCLI.c **** 		//	vTaskDelay(500/portTICK_RATE_MS);		
 596:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay) == pdPASS)
 1240              		.loc 1 596 0
 1241 025c 164B     		ldr	r3, .L50+20
 1242 025e 1A68     		ldr	r2, [r3]
 1243 0260 1A4B     		ldr	r3, .L50+40
 1244 0262 1B68     		ldr	r3, [r3]
 1245 0264 1046     		mov	r0, r2
 1246 0266 1A49     		ldr	r1, .L50+44
 1247 0268 1A46     		mov	r2, r3
 1248 026a 0023     		movs	r3, #0
 1249 026c FFF7FEFF 		bl	xQueueGenericReceive
 1250 0270 0346     		mov	r3, r0
 1251 0272 012B     		cmp	r3, #1
 1252 0274 49D1     		bne	.L47
 597:App/STM32F4-Discovery/tcpCLI.c **** 			{
 598:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 1253              		.loc 1 598 0
 1254 0276 164B     		ldr	r3, .L50+44
 1255 0278 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1256 027a 062B     		cmp	r3, #6
 1257 027c 36D1     		bne	.L48
 599:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 600:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer , "Motor succsesfully started.\n\n");
 1258              		.loc 1 600 0
 1259 027e FA68     		ldr	r2, [r7, #12]
 1260 0280 194B     		ldr	r3, .L50+68
 1261 0282 1546     		mov	r5, r2
 1262 0284 1C46     		mov	r4, r3
 1263 0286 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1264 0288 2860     		str	r0, [r5]	@ unaligned
 1265 028a 6960     		str	r1, [r5, #4]	@ unaligned
 1266 028c AA60     		str	r2, [r5, #8]	@ unaligned
 1267 028e EB60     		str	r3, [r5, #12]	@ unaligned
 1268 0290 07CC     		ldmia	r4!, {r0, r1, r2}
 1269 0292 2861     		str	r0, [r5, #16]	@ unaligned
 1270 0294 6961     		str	r1, [r5, #20]	@ unaligned
 1271 0296 AA61     		str	r2, [r5, #24]	@ unaligned
 1272 0298 2388     		ldrh	r3, [r4]	@ unaligned
 1273 029a AB83     		strh	r3, [r5, #28]	@ unaligned
 601:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 29; 	
 1274              		.loc 1 601 0
 1275 029c 1D23     		movs	r3, #29
 1276 029e BB60     		str	r3, [r7, #8]
 602:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 603:App/STM32F4-Discovery/tcpCLI.c **** 
 604:App/STM32F4-Discovery/tcpCLI.c **** 					
 605:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 1277              		.loc 1 605 0
 1278 02a0 0123     		movs	r3, #1
 1279 02a2 5CE0     		b	.L49
 1280              	.L51:
 1281              		.align	2
 1282              	.L50:
 1283 02a4 A4010000 		.word	.LC16
 1284 02a8 BC010000 		.word	.LC17
 1285 02ac C4010000 		.word	.LC18
 1286 02b0 84020000 		.word	.LC19
 1287 02b4 08000000 		.word	.LC1
 1288 02b8 00000000 		.word	QSpd_handle
 1289 02bc 00000000 		.word	socket_0
 1290 02c0 88020000 		.word	.LC20
 1291 02c4 8C020000 		.word	.LC21
 1292 02c8 00000000 		.word	telegramS
 1293 02cc 00000000 		.word	xDelay
 1294 02d0 00000000 		.word	telegramR
 1295 02d4 94020000 		.word	.LC22
 1296 02d8 C8000000 		.word	.LC7
 1297 02dc DC000000 		.word	.LC8
 1298 02e0 F8000000 		.word	.LC9
 1299 02e4 B4020000 		.word	.LC23
 1300 02e8 BC020000 		.word	.LC24
 1301              	.L48:
 606:App/STM32F4-Discovery/tcpCLI.c **** 
 607:App/STM32F4-Discovery/tcpCLI.c **** 				}
 608:App/STM32F4-Discovery/tcpCLI.c **** 				else
 609:App/STM32F4-Discovery/tcpCLI.c **** 				{
 610:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1302              		.loc 1 610 0
 1303 02ec FA68     		ldr	r2, [r7, #12]
 1304 02ee 1E4B     		ldr	r3, .L52
 1305 02f0 1546     		mov	r5, r2
 1306 02f2 1C46     		mov	r4, r3
 1307 02f4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1308 02f6 2860     		str	r0, [r5]	@ unaligned
 1309 02f8 6960     		str	r1, [r5, #4]	@ unaligned
 1310 02fa AA60     		str	r2, [r5, #8]	@ unaligned
 1311 02fc EB60     		str	r3, [r5, #12]	@ unaligned
 1312 02fe 2068     		ldr	r0, [r4]	@ unaligned
 1313 0300 2861     		str	r0, [r5, #16]	@ unaligned
 611:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 1314              		.loc 1 611 0
 1315 0302 1323     		movs	r3, #19
 1316 0304 BB60     		str	r3, [r7, #8]
 612:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 613:App/STM32F4-Discovery/tcpCLI.c **** 
 614:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 1317              		.loc 1 614 0
 1318 0306 0023     		movs	r3, #0
 1319 0308 29E0     		b	.L49
 1320              	.L47:
 615:App/STM32F4-Discovery/tcpCLI.c **** 
 616:App/STM32F4-Discovery/tcpCLI.c **** 
 617:App/STM32F4-Discovery/tcpCLI.c **** 				}
 618:App/STM32F4-Discovery/tcpCLI.c **** 			}
 619:App/STM32F4-Discovery/tcpCLI.c **** 			else
 620:App/STM32F4-Discovery/tcpCLI.c **** 			{
 621:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 622:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 623:App/STM32F4-Discovery/tcpCLI.c **** 		
 624:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 1321              		.loc 1 624 0
 1322 030a FA68     		ldr	r2, [r7, #12]
 1323 030c 174B     		ldr	r3, .L52+4
 1324 030e 1546     		mov	r5, r2
 1325 0310 1C46     		mov	r4, r3
 1326 0312 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1327 0314 2860     		str	r0, [r5]	@ unaligned
 1328 0316 6960     		str	r1, [r5, #4]	@ unaligned
 1329 0318 AA60     		str	r2, [r5, #8]	@ unaligned
 1330 031a EB60     		str	r3, [r5, #12]	@ unaligned
 1331 031c 07CC     		ldmia	r4!, {r0, r1, r2}
 1332 031e 2861     		str	r0, [r5, #16]	@ unaligned
 1333 0320 6961     		str	r1, [r5, #20]	@ unaligned
 1334 0322 AA61     		str	r2, [r5, #24]	@ unaligned
 625:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 1335              		.loc 1 625 0
 1336 0324 1B23     		movs	r3, #27
 1337 0326 BB60     		str	r3, [r7, #8]
 626:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 627:App/STM32F4-Discovery/tcpCLI.c **** 
 628:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 1338              		.loc 1 628 0
 1339 0328 0023     		movs	r3, #0
 1340 032a 18E0     		b	.L49
 1341              	.L46:
 629:App/STM32F4-Discovery/tcpCLI.c **** 			}
 630:App/STM32F4-Discovery/tcpCLI.c **** 		}
 631:App/STM32F4-Discovery/tcpCLI.c **** 		else
 632:App/STM32F4-Discovery/tcpCLI.c **** 		{
 633:App/STM32F4-Discovery/tcpCLI.c **** 			
 634:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 635:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 636:App/STM32F4-Discovery/tcpCLI.c **** 		
 637:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer,"Error sending Queue!\n\n");
 1342              		.loc 1 637 0
 1343 032c FA68     		ldr	r2, [r7, #12]
 1344 032e 104B     		ldr	r3, .L52+8
 1345 0330 1446     		mov	r4, r2
 1346 0332 1D46     		mov	r5, r3
 1347 0334 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1348 0336 2060     		str	r0, [r4]	@ unaligned
 1349 0338 6160     		str	r1, [r4, #4]	@ unaligned
 1350 033a A260     		str	r2, [r4, #8]	@ unaligned
 1351 033c E360     		str	r3, [r4, #12]	@ unaligned
 1352 033e 2868     		ldr	r0, [r5]	@ unaligned
 1353 0340 2061     		str	r0, [r4, #16]	@ unaligned
 1354 0342 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1355 0344 AB79     		ldrb	r3, [r5, #6]
 1356 0346 A282     		strh	r2, [r4, #20]	@ unaligned
 1357 0348 A375     		strb	r3, [r4, #22]
 638:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1358              		.loc 1 638 0
 1359 034a 1623     		movs	r3, #22
 1360 034c BB60     		str	r3, [r7, #8]
 639:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket_0, buf, len, 0);
 640:App/STM32F4-Discovery/tcpCLI.c **** 
 641:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1361              		.loc 1 641 0
 1362 034e 0023     		movs	r3, #0
 1363 0350 05E0     		b	.L49
 1364              	.L45:
 642:App/STM32F4-Discovery/tcpCLI.c **** 		}
 643:App/STM32F4-Discovery/tcpCLI.c **** 
 644:App/STM32F4-Discovery/tcpCLI.c **** 
 645:App/STM32F4-Discovery/tcpCLI.c **** 	}
 646:App/STM32F4-Discovery/tcpCLI.c **** 
 647:App/STM32F4-Discovery/tcpCLI.c **** 
 648:App/STM32F4-Discovery/tcpCLI.c **** 	strcpy(pcWriteBuffer, xMotorCommand.pcHelpString);
 1365              		.loc 1 648 0
 1366 0352 084B     		ldr	r3, .L52+12
 1367 0354 F868     		ldr	r0, [r7, #12]
 1368 0356 1946     		mov	r1, r3
 1369 0358 FFF7FEFF 		bl	strcpy
 649:App/STM32F4-Discovery/tcpCLI.c **** 		
 650:App/STM32F4-Discovery/tcpCLI.c **** 	return pdFALSE;
 1370              		.loc 1 650 0
 1371 035c 0023     		movs	r3, #0
 1372              	.L49:
 651:App/STM32F4-Discovery/tcpCLI.c **** 
 652:App/STM32F4-Discovery/tcpCLI.c **** 
 653:App/STM32F4-Discovery/tcpCLI.c **** }
 1373              		.loc 1 653 0
 1374 035e 1846     		mov	r0, r3
 1375 0360 2837     		adds	r7, r7, #40
 1376 0362 BD46     		mov	sp, r7
 1377              		@ sp needed
 1378 0364 B0BD     		pop	{r4, r5, r7, pc}
 1379              	.L53:
 1380 0366 00BF     		.align	2
 1381              	.L52:
 1382 0368 C8000000 		.word	.LC7
 1383 036c DC000000 		.word	.LC8
 1384 0370 F8000000 		.word	.LC9
 1385 0374 08000000 		.word	.LC1
 1386              		.cfi_endproc
 1387              	.LFE112:
 1389              		.section	.text.prvTaskStatsCommand,"ax",%progbits
 1390              		.align	2
 1391              		.global	prvTaskStatsCommand
 1392              		.thumb
 1393              		.thumb_func
 1395              	prvTaskStatsCommand:
 1396              	.LFB113:
 654:App/STM32F4-Discovery/tcpCLI.c **** 
 655:App/STM32F4-Discovery/tcpCLI.c **** portBASE_TYPE prvTaskStatsCommand ( 	int8_t *pcWriteBuffer, 
 656:App/STM32F4-Discovery/tcpCLI.c **** 						size_t xWriteBufferLen, 
 657:App/STM32F4-Discovery/tcpCLI.c **** 						const int8_t *pcCommandString)
 658:App/STM32F4-Discovery/tcpCLI.c **** {
 1397              		.loc 1 658 0
 1398              		.cfi_startproc
 1399              		@ args = 0, pretend = 0, frame = 16
 1400              		@ frame_needed = 1, uses_anonymous_args = 0
 1401 0000 80B5     		push	{r7, lr}
 1402              	.LCFI9:
 1403              		.cfi_def_cfa_offset 8
 1404              		.cfi_offset 7, -8
 1405              		.cfi_offset 14, -4
 1406 0002 84B0     		sub	sp, sp, #16
 1407              	.LCFI10:
 1408              		.cfi_def_cfa_offset 24
 1409 0004 00AF     		add	r7, sp, #0
 1410              	.LCFI11:
 1411              		.cfi_def_cfa_register 7
 1412 0006 F860     		str	r0, [r7, #12]
 1413 0008 B960     		str	r1, [r7, #8]
 1414 000a 7A60     		str	r2, [r7, #4]
 659:App/STM32F4-Discovery/tcpCLI.c ****     /* For simplicity, this function assumes the output buffer is large enough
 660:App/STM32F4-Discovery/tcpCLI.c ****     to hold all the text generated by executing the vTaskList() API function,
 661:App/STM32F4-Discovery/tcpCLI.c ****     so the xWriteBufferLen parameter is not used. */
 662:App/STM32F4-Discovery/tcpCLI.c ****     ( void ) xWriteBufferLen;
 663:App/STM32F4-Discovery/tcpCLI.c **** 
 664:App/STM32F4-Discovery/tcpCLI.c ****     /* pcWriteBuffer is used directly as the vTaskList() parameter, so the table
 665:App/STM32F4-Discovery/tcpCLI.c ****     generated by executing vTaskList() is written directly into the output
 666:App/STM32F4-Discovery/tcpCLI.c ****     buffer. */
 667:App/STM32F4-Discovery/tcpCLI.c **** 
 668:App/STM32F4-Discovery/tcpCLI.c ****   
 669:App/STM32F4-Discovery/tcpCLI.c ****     vTaskList( pcWriteBuffer);
 1415              		.loc 1 669 0
 1416 000c F868     		ldr	r0, [r7, #12]
 1417 000e FFF7FEFF 		bl	vTaskList
 670:App/STM32F4-Discovery/tcpCLI.c **** 
 671:App/STM32F4-Discovery/tcpCLI.c ****  
 672:App/STM32F4-Discovery/tcpCLI.c **** 
 673:App/STM32F4-Discovery/tcpCLI.c ****     /* The entire table was written directly to the output buffer.  Execution
 674:App/STM32F4-Discovery/tcpCLI.c ****     of this command is complete, so return pdFALSE. */
 675:App/STM32F4-Discovery/tcpCLI.c ****     return pdFALSE;
 1418              		.loc 1 675 0
 1419 0012 0023     		movs	r3, #0
 676:App/STM32F4-Discovery/tcpCLI.c **** }
 1420              		.loc 1 676 0
 1421 0014 1846     		mov	r0, r3
 1422 0016 1037     		adds	r7, r7, #16
 1423 0018 BD46     		mov	sp, r7
 1424              		@ sp needed
 1425 001a 80BD     		pop	{r7, pc}
 1426              		.cfi_endproc
 1427              	.LFE113:
 1429              		.text
 1430              	.Letext0:
 1431              		.file 2 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/lib/gcc/arm-none-eabi/4.8.4/include/std
 1432              		.file 3 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/machine/_default_
 1433              		.file 4 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/stdint.h"
 1434              		.file 5 "Source/portable/GCC/ARM_CM4F/portmacro.h"
 1435              		.file 6 "Source/include/task.h"
 1436              		.file 7 "Source/include/queue.h"
 1437              		.file 8 "Source/include/semphr.h"
 1438              		.file 9 "Source/FreeRTOS-Plus-CLI/FreeRTOS_CLI.h"
 1439              		.file 10 "App/STM32F4-Discovery/tcpCLI.h"
 1440              		.file 11 "App/STM32F4-Discovery/main.h"
 1441              		.file 12 "App/STM32F4-Discovery/Libraries/CMSIS/Include/core_cm4.h"
 1442              		.file 13 "App/STM32F4-Discovery/spi.h"
 1443              		.file 14 "App/STM32F4-Discovery/W5200.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 tcpCLI.c
                            *COM*:0000000000000004 xSemaphoreDMASPI
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccKFoMwT.s:21     .bss.xHigherPriorityTaskWoken:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccKFoMwT.s:24     .bss.xHigherPriorityTaskWoken:0000000000000000 xHigherPriorityTaskWoken
                            *COM*:0000000000000004 xSmphrUSART
                            *COM*:0000000000000004 motorHeartBeatHandle
                            *COM*:0000000000000004 motorHBHandle
                            *COM*:0000000000000004 QSpd_handle
                            *COM*:0000000000000004 QStatus_handle
                            *COM*:0000000000000004 socket_0
                            *COM*:00000000000007d0 bufferTX
                            *COM*:00000000000007d0 bufferRX
                            *COM*:0000000000000004 bufferRXidx
                            *COM*:0000000000000004 bufferTXidx
                            *COM*:0000000000000004 dat_lengthRX
                            *COM*:0000000000000004 dat_lengthTX
                            *COM*:0000000000000004 set_macTaskHandle
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccKFoMwT.s:40     .rodata:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccKFoMwT.s:48     .rodata.xMotorCommand:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccKFoMwT.s:51     .rodata.xMotorCommand:0000000000000000 xMotorCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccKFoMwT.s:882    .text.prvMotorCommand:0000000000000000 prvMotorCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccKFoMwT.s:65     .rodata.xTaskStatsCommand:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccKFoMwT.s:68     .rodata.xTaskStatsCommand:0000000000000000 xTaskStatsCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccKFoMwT.s:1395   .text.prvTaskStatsCommand:0000000000000000 prvTaskStatsCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccKFoMwT.s:75     .data.xDelay:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccKFoMwT.s:78     .data.xDelay:0000000000000000 xDelay
                            *COM*:000000000000001c telegramS
                            *COM*:000000000000001c telegramR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccKFoMwT.s:116    .text.handleVariable_set:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccKFoMwT.s:121    .text.handleVariable_set:0000000000000000 handleVariable_set
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccKFoMwT.s:520    .text.handleVariable_set:000000000000027c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccKFoMwT.s:545    .text.handleVariable_get:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccKFoMwT.s:550    .text.handleVariable_get:0000000000000000 handleVariable_get
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccKFoMwT.s:828    .text.handleVariable_get:00000000000001c0 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccKFoMwT.s:877    .text.prvMotorCommand:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccKFoMwT.s:1283   .text.prvMotorCommand:00000000000002a4 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccKFoMwT.s:1303   .text.prvMotorCommand:00000000000002ec $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccKFoMwT.s:1382   .text.prvMotorCommand:0000000000000368 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccKFoMwT.s:1390   .text.prvTaskStatsCommand:0000000000000000 $t
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
strncmp
atoi
sprintf
xQueueGenericSend
xQueueGenericReceive
FreeRTOS_CLIGetParameter
memcpy
strcpy
vTaskList
