   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"tcpCLI.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	xSemaphoreDMASPI,4,4
  20              		.comm	xSmphrUSART,4,4
  21              		.comm	xSemaphoreREADLEN,4,4
  22              		.comm	motorHeartBeatHandle,4,4
  23              		.comm	motorHBHandle,4,4
  24              		.comm	QSpd_handle,4,4
  25              		.comm	QTCP_handle,4,4
  26              		.comm	socket_0,4,4
  27              		.comm	bufferTX,2000,4
  28              		.comm	bufferRX,2000,4
  29              		.comm	bufferRXidx,4,4
  30              		.comm	bufferTXidx,4,4
  31              		.comm	dat_lengthRX,4,4
  32              		.comm	dat_lengthTX,4,4
  33              		.comm	set_macTaskHandle,4,4
  34              		.section	.rodata.table_crc_hi,"a",%progbits
  35              		.align	2
  38              	table_crc_hi:
  39 0000 00       		.byte	0
  40 0001 C1       		.byte	-63
  41 0002 81       		.byte	-127
  42 0003 40       		.byte	64
  43 0004 01       		.byte	1
  44 0005 C0       		.byte	-64
  45 0006 80       		.byte	-128
  46 0007 41       		.byte	65
  47 0008 01       		.byte	1
  48 0009 C0       		.byte	-64
  49 000a 80       		.byte	-128
  50 000b 41       		.byte	65
  51 000c 00       		.byte	0
  52 000d C1       		.byte	-63
  53 000e 81       		.byte	-127
  54 000f 40       		.byte	64
  55 0010 01       		.byte	1
  56 0011 C0       		.byte	-64
  57 0012 80       		.byte	-128
  58 0013 41       		.byte	65
  59 0014 00       		.byte	0
  60 0015 C1       		.byte	-63
  61 0016 81       		.byte	-127
  62 0017 40       		.byte	64
  63 0018 00       		.byte	0
  64 0019 C1       		.byte	-63
  65 001a 81       		.byte	-127
  66 001b 40       		.byte	64
  67 001c 01       		.byte	1
  68 001d C0       		.byte	-64
  69 001e 80       		.byte	-128
  70 001f 41       		.byte	65
  71 0020 01       		.byte	1
  72 0021 C0       		.byte	-64
  73 0022 80       		.byte	-128
  74 0023 41       		.byte	65
  75 0024 00       		.byte	0
  76 0025 C1       		.byte	-63
  77 0026 81       		.byte	-127
  78 0027 40       		.byte	64
  79 0028 00       		.byte	0
  80 0029 C1       		.byte	-63
  81 002a 81       		.byte	-127
  82 002b 40       		.byte	64
  83 002c 01       		.byte	1
  84 002d C0       		.byte	-64
  85 002e 80       		.byte	-128
  86 002f 41       		.byte	65
  87 0030 00       		.byte	0
  88 0031 C1       		.byte	-63
  89 0032 81       		.byte	-127
  90 0033 40       		.byte	64
  91 0034 01       		.byte	1
  92 0035 C0       		.byte	-64
  93 0036 80       		.byte	-128
  94 0037 41       		.byte	65
  95 0038 01       		.byte	1
  96 0039 C0       		.byte	-64
  97 003a 80       		.byte	-128
  98 003b 41       		.byte	65
  99 003c 00       		.byte	0
 100 003d C1       		.byte	-63
 101 003e 81       		.byte	-127
 102 003f 40       		.byte	64
 103 0040 01       		.byte	1
 104 0041 C0       		.byte	-64
 105 0042 80       		.byte	-128
 106 0043 41       		.byte	65
 107 0044 00       		.byte	0
 108 0045 C1       		.byte	-63
 109 0046 81       		.byte	-127
 110 0047 40       		.byte	64
 111 0048 00       		.byte	0
 112 0049 C1       		.byte	-63
 113 004a 81       		.byte	-127
 114 004b 40       		.byte	64
 115 004c 01       		.byte	1
 116 004d C0       		.byte	-64
 117 004e 80       		.byte	-128
 118 004f 41       		.byte	65
 119 0050 00       		.byte	0
 120 0051 C1       		.byte	-63
 121 0052 81       		.byte	-127
 122 0053 40       		.byte	64
 123 0054 01       		.byte	1
 124 0055 C0       		.byte	-64
 125 0056 80       		.byte	-128
 126 0057 41       		.byte	65
 127 0058 01       		.byte	1
 128 0059 C0       		.byte	-64
 129 005a 80       		.byte	-128
 130 005b 41       		.byte	65
 131 005c 00       		.byte	0
 132 005d C1       		.byte	-63
 133 005e 81       		.byte	-127
 134 005f 40       		.byte	64
 135 0060 00       		.byte	0
 136 0061 C1       		.byte	-63
 137 0062 81       		.byte	-127
 138 0063 40       		.byte	64
 139 0064 01       		.byte	1
 140 0065 C0       		.byte	-64
 141 0066 80       		.byte	-128
 142 0067 41       		.byte	65
 143 0068 01       		.byte	1
 144 0069 C0       		.byte	-64
 145 006a 80       		.byte	-128
 146 006b 41       		.byte	65
 147 006c 00       		.byte	0
 148 006d C1       		.byte	-63
 149 006e 81       		.byte	-127
 150 006f 40       		.byte	64
 151 0070 01       		.byte	1
 152 0071 C0       		.byte	-64
 153 0072 80       		.byte	-128
 154 0073 41       		.byte	65
 155 0074 00       		.byte	0
 156 0075 C1       		.byte	-63
 157 0076 81       		.byte	-127
 158 0077 40       		.byte	64
 159 0078 00       		.byte	0
 160 0079 C1       		.byte	-63
 161 007a 81       		.byte	-127
 162 007b 40       		.byte	64
 163 007c 01       		.byte	1
 164 007d C0       		.byte	-64
 165 007e 80       		.byte	-128
 166 007f 41       		.byte	65
 167 0080 01       		.byte	1
 168 0081 C0       		.byte	-64
 169 0082 80       		.byte	-128
 170 0083 41       		.byte	65
 171 0084 00       		.byte	0
 172 0085 C1       		.byte	-63
 173 0086 81       		.byte	-127
 174 0087 40       		.byte	64
 175 0088 00       		.byte	0
 176 0089 C1       		.byte	-63
 177 008a 81       		.byte	-127
 178 008b 40       		.byte	64
 179 008c 01       		.byte	1
 180 008d C0       		.byte	-64
 181 008e 80       		.byte	-128
 182 008f 41       		.byte	65
 183 0090 00       		.byte	0
 184 0091 C1       		.byte	-63
 185 0092 81       		.byte	-127
 186 0093 40       		.byte	64
 187 0094 01       		.byte	1
 188 0095 C0       		.byte	-64
 189 0096 80       		.byte	-128
 190 0097 41       		.byte	65
 191 0098 01       		.byte	1
 192 0099 C0       		.byte	-64
 193 009a 80       		.byte	-128
 194 009b 41       		.byte	65
 195 009c 00       		.byte	0
 196 009d C1       		.byte	-63
 197 009e 81       		.byte	-127
 198 009f 40       		.byte	64
 199 00a0 00       		.byte	0
 200 00a1 C1       		.byte	-63
 201 00a2 81       		.byte	-127
 202 00a3 40       		.byte	64
 203 00a4 01       		.byte	1
 204 00a5 C0       		.byte	-64
 205 00a6 80       		.byte	-128
 206 00a7 41       		.byte	65
 207 00a8 01       		.byte	1
 208 00a9 C0       		.byte	-64
 209 00aa 80       		.byte	-128
 210 00ab 41       		.byte	65
 211 00ac 00       		.byte	0
 212 00ad C1       		.byte	-63
 213 00ae 81       		.byte	-127
 214 00af 40       		.byte	64
 215 00b0 01       		.byte	1
 216 00b1 C0       		.byte	-64
 217 00b2 80       		.byte	-128
 218 00b3 41       		.byte	65
 219 00b4 00       		.byte	0
 220 00b5 C1       		.byte	-63
 221 00b6 81       		.byte	-127
 222 00b7 40       		.byte	64
 223 00b8 00       		.byte	0
 224 00b9 C1       		.byte	-63
 225 00ba 81       		.byte	-127
 226 00bb 40       		.byte	64
 227 00bc 01       		.byte	1
 228 00bd C0       		.byte	-64
 229 00be 80       		.byte	-128
 230 00bf 41       		.byte	65
 231 00c0 00       		.byte	0
 232 00c1 C1       		.byte	-63
 233 00c2 81       		.byte	-127
 234 00c3 40       		.byte	64
 235 00c4 01       		.byte	1
 236 00c5 C0       		.byte	-64
 237 00c6 80       		.byte	-128
 238 00c7 41       		.byte	65
 239 00c8 01       		.byte	1
 240 00c9 C0       		.byte	-64
 241 00ca 80       		.byte	-128
 242 00cb 41       		.byte	65
 243 00cc 00       		.byte	0
 244 00cd C1       		.byte	-63
 245 00ce 81       		.byte	-127
 246 00cf 40       		.byte	64
 247 00d0 01       		.byte	1
 248 00d1 C0       		.byte	-64
 249 00d2 80       		.byte	-128
 250 00d3 41       		.byte	65
 251 00d4 00       		.byte	0
 252 00d5 C1       		.byte	-63
 253 00d6 81       		.byte	-127
 254 00d7 40       		.byte	64
 255 00d8 00       		.byte	0
 256 00d9 C1       		.byte	-63
 257 00da 81       		.byte	-127
 258 00db 40       		.byte	64
 259 00dc 01       		.byte	1
 260 00dd C0       		.byte	-64
 261 00de 80       		.byte	-128
 262 00df 41       		.byte	65
 263 00e0 01       		.byte	1
 264 00e1 C0       		.byte	-64
 265 00e2 80       		.byte	-128
 266 00e3 41       		.byte	65
 267 00e4 00       		.byte	0
 268 00e5 C1       		.byte	-63
 269 00e6 81       		.byte	-127
 270 00e7 40       		.byte	64
 271 00e8 00       		.byte	0
 272 00e9 C1       		.byte	-63
 273 00ea 81       		.byte	-127
 274 00eb 40       		.byte	64
 275 00ec 01       		.byte	1
 276 00ed C0       		.byte	-64
 277 00ee 80       		.byte	-128
 278 00ef 41       		.byte	65
 279 00f0 00       		.byte	0
 280 00f1 C1       		.byte	-63
 281 00f2 81       		.byte	-127
 282 00f3 40       		.byte	64
 283 00f4 01       		.byte	1
 284 00f5 C0       		.byte	-64
 285 00f6 80       		.byte	-128
 286 00f7 41       		.byte	65
 287 00f8 01       		.byte	1
 288 00f9 C0       		.byte	-64
 289 00fa 80       		.byte	-128
 290 00fb 41       		.byte	65
 291 00fc 00       		.byte	0
 292 00fd C1       		.byte	-63
 293 00fe 81       		.byte	-127
 294 00ff 40       		.byte	64
 295              		.section	.rodata.table_crc_lo,"a",%progbits
 296              		.align	2
 299              	table_crc_lo:
 300 0000 00       		.byte	0
 301 0001 C0       		.byte	-64
 302 0002 C1       		.byte	-63
 303 0003 01       		.byte	1
 304 0004 C3       		.byte	-61
 305 0005 03       		.byte	3
 306 0006 02       		.byte	2
 307 0007 C2       		.byte	-62
 308 0008 C6       		.byte	-58
 309 0009 06       		.byte	6
 310 000a 07       		.byte	7
 311 000b C7       		.byte	-57
 312 000c 05       		.byte	5
 313 000d C5       		.byte	-59
 314 000e C4       		.byte	-60
 315 000f 04       		.byte	4
 316 0010 CC       		.byte	-52
 317 0011 0C       		.byte	12
 318 0012 0D       		.byte	13
 319 0013 CD       		.byte	-51
 320 0014 0F       		.byte	15
 321 0015 CF       		.byte	-49
 322 0016 CE       		.byte	-50
 323 0017 0E       		.byte	14
 324 0018 0A       		.byte	10
 325 0019 CA       		.byte	-54
 326 001a CB       		.byte	-53
 327 001b 0B       		.byte	11
 328 001c C9       		.byte	-55
 329 001d 09       		.byte	9
 330 001e 08       		.byte	8
 331 001f C8       		.byte	-56
 332 0020 D8       		.byte	-40
 333 0021 18       		.byte	24
 334 0022 19       		.byte	25
 335 0023 D9       		.byte	-39
 336 0024 1B       		.byte	27
 337 0025 DB       		.byte	-37
 338 0026 DA       		.byte	-38
 339 0027 1A       		.byte	26
 340 0028 1E       		.byte	30
 341 0029 DE       		.byte	-34
 342 002a DF       		.byte	-33
 343 002b 1F       		.byte	31
 344 002c DD       		.byte	-35
 345 002d 1D       		.byte	29
 346 002e 1C       		.byte	28
 347 002f DC       		.byte	-36
 348 0030 14       		.byte	20
 349 0031 D4       		.byte	-44
 350 0032 D5       		.byte	-43
 351 0033 15       		.byte	21
 352 0034 D7       		.byte	-41
 353 0035 17       		.byte	23
 354 0036 16       		.byte	22
 355 0037 D6       		.byte	-42
 356 0038 D2       		.byte	-46
 357 0039 12       		.byte	18
 358 003a 13       		.byte	19
 359 003b D3       		.byte	-45
 360 003c 11       		.byte	17
 361 003d D1       		.byte	-47
 362 003e D0       		.byte	-48
 363 003f 10       		.byte	16
 364 0040 F0       		.byte	-16
 365 0041 30       		.byte	48
 366 0042 31       		.byte	49
 367 0043 F1       		.byte	-15
 368 0044 33       		.byte	51
 369 0045 F3       		.byte	-13
 370 0046 F2       		.byte	-14
 371 0047 32       		.byte	50
 372 0048 36       		.byte	54
 373 0049 F6       		.byte	-10
 374 004a F7       		.byte	-9
 375 004b 37       		.byte	55
 376 004c F5       		.byte	-11
 377 004d 35       		.byte	53
 378 004e 34       		.byte	52
 379 004f F4       		.byte	-12
 380 0050 3C       		.byte	60
 381 0051 FC       		.byte	-4
 382 0052 FD       		.byte	-3
 383 0053 3D       		.byte	61
 384 0054 FF       		.byte	-1
 385 0055 3F       		.byte	63
 386 0056 3E       		.byte	62
 387 0057 FE       		.byte	-2
 388 0058 FA       		.byte	-6
 389 0059 3A       		.byte	58
 390 005a 3B       		.byte	59
 391 005b FB       		.byte	-5
 392 005c 39       		.byte	57
 393 005d F9       		.byte	-7
 394 005e F8       		.byte	-8
 395 005f 38       		.byte	56
 396 0060 28       		.byte	40
 397 0061 E8       		.byte	-24
 398 0062 E9       		.byte	-23
 399 0063 29       		.byte	41
 400 0064 EB       		.byte	-21
 401 0065 2B       		.byte	43
 402 0066 2A       		.byte	42
 403 0067 EA       		.byte	-22
 404 0068 EE       		.byte	-18
 405 0069 2E       		.byte	46
 406 006a 2F       		.byte	47
 407 006b EF       		.byte	-17
 408 006c 2D       		.byte	45
 409 006d ED       		.byte	-19
 410 006e EC       		.byte	-20
 411 006f 2C       		.byte	44
 412 0070 E4       		.byte	-28
 413 0071 24       		.byte	36
 414 0072 25       		.byte	37
 415 0073 E5       		.byte	-27
 416 0074 27       		.byte	39
 417 0075 E7       		.byte	-25
 418 0076 E6       		.byte	-26
 419 0077 26       		.byte	38
 420 0078 22       		.byte	34
 421 0079 E2       		.byte	-30
 422 007a E3       		.byte	-29
 423 007b 23       		.byte	35
 424 007c E1       		.byte	-31
 425 007d 21       		.byte	33
 426 007e 20       		.byte	32
 427 007f E0       		.byte	-32
 428 0080 A0       		.byte	-96
 429 0081 60       		.byte	96
 430 0082 61       		.byte	97
 431 0083 A1       		.byte	-95
 432 0084 63       		.byte	99
 433 0085 A3       		.byte	-93
 434 0086 A2       		.byte	-94
 435 0087 62       		.byte	98
 436 0088 66       		.byte	102
 437 0089 A6       		.byte	-90
 438 008a A7       		.byte	-89
 439 008b 67       		.byte	103
 440 008c A5       		.byte	-91
 441 008d 65       		.byte	101
 442 008e 64       		.byte	100
 443 008f A4       		.byte	-92
 444 0090 6C       		.byte	108
 445 0091 AC       		.byte	-84
 446 0092 AD       		.byte	-83
 447 0093 6D       		.byte	109
 448 0094 AF       		.byte	-81
 449 0095 6F       		.byte	111
 450 0096 6E       		.byte	110
 451 0097 AE       		.byte	-82
 452 0098 AA       		.byte	-86
 453 0099 6A       		.byte	106
 454 009a 6B       		.byte	107
 455 009b AB       		.byte	-85
 456 009c 69       		.byte	105
 457 009d A9       		.byte	-87
 458 009e A8       		.byte	-88
 459 009f 68       		.byte	104
 460 00a0 78       		.byte	120
 461 00a1 B8       		.byte	-72
 462 00a2 B9       		.byte	-71
 463 00a3 79       		.byte	121
 464 00a4 BB       		.byte	-69
 465 00a5 7B       		.byte	123
 466 00a6 7A       		.byte	122
 467 00a7 BA       		.byte	-70
 468 00a8 BE       		.byte	-66
 469 00a9 7E       		.byte	126
 470 00aa 7F       		.byte	127
 471 00ab BF       		.byte	-65
 472 00ac 7D       		.byte	125
 473 00ad BD       		.byte	-67
 474 00ae BC       		.byte	-68
 475 00af 7C       		.byte	124
 476 00b0 B4       		.byte	-76
 477 00b1 74       		.byte	116
 478 00b2 75       		.byte	117
 479 00b3 B5       		.byte	-75
 480 00b4 77       		.byte	119
 481 00b5 B7       		.byte	-73
 482 00b6 B6       		.byte	-74
 483 00b7 76       		.byte	118
 484 00b8 72       		.byte	114
 485 00b9 B2       		.byte	-78
 486 00ba B3       		.byte	-77
 487 00bb 73       		.byte	115
 488 00bc B1       		.byte	-79
 489 00bd 71       		.byte	113
 490 00be 70       		.byte	112
 491 00bf B0       		.byte	-80
 492 00c0 50       		.byte	80
 493 00c1 90       		.byte	-112
 494 00c2 91       		.byte	-111
 495 00c3 51       		.byte	81
 496 00c4 93       		.byte	-109
 497 00c5 53       		.byte	83
 498 00c6 52       		.byte	82
 499 00c7 92       		.byte	-110
 500 00c8 96       		.byte	-106
 501 00c9 56       		.byte	86
 502 00ca 57       		.byte	87
 503 00cb 97       		.byte	-105
 504 00cc 55       		.byte	85
 505 00cd 95       		.byte	-107
 506 00ce 94       		.byte	-108
 507 00cf 54       		.byte	84
 508 00d0 9C       		.byte	-100
 509 00d1 5C       		.byte	92
 510 00d2 5D       		.byte	93
 511 00d3 9D       		.byte	-99
 512 00d4 5F       		.byte	95
 513 00d5 9F       		.byte	-97
 514 00d6 9E       		.byte	-98
 515 00d7 5E       		.byte	94
 516 00d8 5A       		.byte	90
 517 00d9 9A       		.byte	-102
 518 00da 9B       		.byte	-101
 519 00db 5B       		.byte	91
 520 00dc 99       		.byte	-103
 521 00dd 59       		.byte	89
 522 00de 58       		.byte	88
 523 00df 98       		.byte	-104
 524 00e0 88       		.byte	-120
 525 00e1 48       		.byte	72
 526 00e2 49       		.byte	73
 527 00e3 89       		.byte	-119
 528 00e4 4B       		.byte	75
 529 00e5 8B       		.byte	-117
 530 00e6 8A       		.byte	-118
 531 00e7 4A       		.byte	74
 532 00e8 4E       		.byte	78
 533 00e9 8E       		.byte	-114
 534 00ea 8F       		.byte	-113
 535 00eb 4F       		.byte	79
 536 00ec 8D       		.byte	-115
 537 00ed 4D       		.byte	77
 538 00ee 4C       		.byte	76
 539 00ef 8C       		.byte	-116
 540 00f0 44       		.byte	68
 541 00f1 84       		.byte	-124
 542 00f2 85       		.byte	-123
 543 00f3 45       		.byte	69
 544 00f4 87       		.byte	-121
 545 00f5 47       		.byte	71
 546 00f6 46       		.byte	70
 547 00f7 86       		.byte	-122
 548 00f8 82       		.byte	-126
 549 00f9 42       		.byte	66
 550 00fa 43       		.byte	67
 551 00fb 83       		.byte	-125
 552 00fc 41       		.byte	65
 553 00fd 81       		.byte	-127
 554 00fe 80       		.byte	-128
 555 00ff 40       		.byte	64
 556              		.comm	fd,4,4
 557              		.comm	received_string,513,4
 558              		.comm	rx_length,4,4
 559              		.comm	input_Register,20,4
 560              		.section	.rodata
 561              		.align	2
 562              	.LC0:
 563 0000 6D6F746F 		.ascii	"motor\000"
 563      7200
 564 0006 0000     		.align	2
 565              	.LC1:
 566 0008 6D6F746F 		.ascii	"motor  [options]\302\240[parameters]\302\240- Type "
 566      7220205B 
 566      6F707469 
 566      6F6E735D 
 566      C2A05B70 
 567 002f 6D6F746F 		.ascii	"motor help for more help\015\012\012\000\000"
 567      72206865 
 567      6C702066 
 567      6F72206D 
 567      6F726520 
 568              		.section	.rodata.xMotorCommand,"a",%progbits
 569              		.align	2
 572              	xMotorCommand:
 573 0000 00000000 		.word	.LC0
 574 0004 08000000 		.word	.LC1
 575 0008 00000000 		.word	prvMotorCommand
 576 000c FF       		.byte	-1
 577 000d 000000   		.space	3
 578              		.section	.rodata
 579              		.align	2
 580              	.LC2:
 581 004c 7461736B 		.ascii	"task\000"
 581      00
 582 0051 000000   		.align	2
 583              	.LC3:
 584 0054 7461736B 		.ascii	"task - return tasks list\015\012\012\000\000"
 584      202D2072 
 584      65747572 
 584      6E207461 
 584      736B7320 
 585              		.section	.rodata.xTaskStatsCommand,"a",%progbits
 586              		.align	2
 589              	xTaskStatsCommand:
 590 0000 4C000000 		.word	.LC2
 591 0004 54000000 		.word	.LC3
 592 0008 00000000 		.word	prvTaskStatsCommand
 593 000c FF       		.byte	-1
 594 000d 000000   		.space	3
 595              		.section	.data.xDelay,"aw",%progbits
 596              		.align	2
 599              	xDelay:
 600 0000 FFFFFFFF 		.word	-1
 601              		.comm	telegramS,28,4
 602              		.comm	telegramR,28,4
 603              		.section	.rodata
 604 0071 000000   		.align	2
 605              	.LC4:
 606 0074 73706565 		.ascii	"speed\000"
 606      6400
 607 007a 0000     		.align	2
 608              	.LC5:
 609 007c 4572726F 		.ascii	"Error: speed is out of range [1,100]p : %d\012\012\000"
 609      723A2073 
 609      70656564 
 609      20697320 
 609      6F757420 
 610 00a9 00       		.ascii	"\000"
 611 00aa 0000     		.align	2
 612              	.LC6:
 613 00ac 53706565 		.ascii	"Speed succsesfully set.\012\012\000"
 613      64207375 
 613      63637365 
 613      7366756C 
 613      6C792073 
 614 00c6 0000     		.align	2
 615              	.LC7:
 616 00c8 4D4F4442 		.ascii	"MODBUS ERROR !!!.\012\012\000"
 616      55532045 
 616      52524F52 
 616      20212121 
 616      2E0A0A00 
 617              		.align	2
 618              	.LC8:
 619 00dc 4572726F 		.ascii	"Error recieving response!\012\012\000"
 619      72207265 
 619      63696576 
 619      696E6720 
 619      72657370 
 620              		.align	2
 621              	.LC9:
 622 00f8 4572726F 		.ascii	"Error sending Queue!\012\012\000"
 622      72207365 
 622      6E64696E 
 622      67205175 
 622      65756521 
 623 010f 00       		.align	2
 624              	.LC10:
 625 0110 75707261 		.ascii	"upramp\000"
 625      6D7000
 626 0117 00       		.align	2
 627              	.LC11:
 628 0118 4572726F 		.ascii	"Error: Ramp time is out of range [15,300]s : %d\012"
 628      723A2052 
 628      616D7020 
 628      74696D65 
 628      20697320 
 629 0148 0A0000   		.ascii	"\012\000\000"
 630 014b 00       		.align	2
 631              	.LC12:
 632 014c 55702072 		.ascii	"Up ramp succsesfully set.\012\012\000"
 632      616D7020 
 632      73756363 
 632      73657366 
 632      756C6C79 
 633              		.align	2
 634              	.LC13:
 635 0168 646F776E 		.ascii	"downramp\000"
 635      72616D70 
 635      00
 636 0171 000000   		.align	2
 637              	.LC14:
 638 0174 446F776E 		.ascii	"Down ramp succsesfully set.\012\012\000"
 638      2072616D 
 638      70207375 
 638      63637365 
 638      7366756C 
 639              		.section	.text.handleVariable_set,"ax",%progbits
 640              		.align	2
 641              		.global	handleVariable_set
 642              		.thumb
 643              		.thumb_func
 645              	handleVariable_set:
 646              	.LFB110:
 647              		.file 1 "App/STM32F4-Discovery/tcpCLI.c"
   1:App/STM32F4-Discovery/tcpCLI.c **** #include "tcpCLI.h"
   2:App/STM32F4-Discovery/tcpCLI.c **** 
   3:App/STM32F4-Discovery/tcpCLI.c **** 
   4:App/STM32F4-Discovery/tcpCLI.c **** static 	portTickType xDelay = portMAX_DELAY;//3000 / portTICK_RATE_MS;
   5:App/STM32F4-Discovery/tcpCLI.c **** 
   6:App/STM32F4-Discovery/tcpCLI.c **** QueueTelegram telegramS, telegramR; 
   7:App/STM32F4-Discovery/tcpCLI.c **** 
   8:App/STM32F4-Discovery/tcpCLI.c **** /* default telegram */
   9:App/STM32F4-Discovery/tcpCLI.c **** /*
  10:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[0] = 1000;
  11:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[1] = 0;	
  12:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[2] = 2250;
  13:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[3] = 10;	
  14:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[4] = 10;	
  15:App/STM32F4-Discovery/tcpCLI.c **** telegram.size = 5;
  16:App/STM32F4-Discovery/tcpCLI.c **** telegram.Qcmd = SETDATA;		
  17:App/STM32F4-Discovery/tcpCLI.c **** */
  18:App/STM32F4-Discovery/tcpCLI.c **** 
  19:App/STM32F4-Discovery/tcpCLI.c **** 
  20:App/STM32F4-Discovery/tcpCLI.c **** 
  21:App/STM32F4-Discovery/tcpCLI.c **** int handleVariable_set (	
  22:App/STM32F4-Discovery/tcpCLI.c **** 				int8_t *pcWriteBuffer, 
  23:App/STM32F4-Discovery/tcpCLI.c **** 				size_t xWriteBufferLen,
  24:App/STM32F4-Discovery/tcpCLI.c **** 				uint8_t * Param, 
  25:App/STM32F4-Discovery/tcpCLI.c **** 				int xParamLength,
  26:App/STM32F4-Discovery/tcpCLI.c **** 				xQueueHandle Qhandle,
  27:App/STM32F4-Discovery/tcpCLI.c **** 				uint8_t * Value,
  28:App/STM32F4-Discovery/tcpCLI.c **** 				int xValueLength,
  29:App/STM32F4-Discovery/tcpCLI.c **** 				int socket )
  30:App/STM32F4-Discovery/tcpCLI.c **** {
 648              		.loc 1 30 0
 649              		.cfi_startproc
 650              		@ args = 16, pretend = 0, frame = 32
 651              		@ frame_needed = 1, uses_anonymous_args = 0
 652 0000 B0B5     		push	{r4, r5, r7, lr}
 653              	.LCFI0:
 654              		.cfi_def_cfa_offset 16
 655              		.cfi_offset 4, -16
 656              		.cfi_offset 5, -12
 657              		.cfi_offset 7, -8
 658              		.cfi_offset 14, -4
 659 0002 88B0     		sub	sp, sp, #32
 660              	.LCFI1:
 661              		.cfi_def_cfa_offset 48
 662 0004 00AF     		add	r7, sp, #0
 663              	.LCFI2:
 664              		.cfi_def_cfa_register 7
 665 0006 F860     		str	r0, [r7, #12]
 666 0008 B960     		str	r1, [r7, #8]
 667 000a 7A60     		str	r2, [r7, #4]
 668 000c 3B60     		str	r3, [r7]
  31:App/STM32F4-Discovery/tcpCLI.c **** 
  32:App/STM32F4-Discovery/tcpCLI.c **** 
  33:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
  34:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER speed [value]
  35:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
  36:App/STM32F4-Discovery/tcpCLI.c **** 
  37:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "speed", 5))
 669              		.loc 1 37 0
 670 000e 7868     		ldr	r0, [r7, #4]
 671 0010 A549     		ldr	r1, .L19
 672 0012 0522     		movs	r2, #5
 673 0014 FFF7FEFF 		bl	strncmp
 674 0018 0346     		mov	r3, r0
 675 001a 002B     		cmp	r3, #0
 676 001c 40F0A280 		bne	.L2
 677              	.LBB2:
  38:App/STM32F4-Discovery/tcpCLI.c **** 	{	
  39:App/STM32F4-Discovery/tcpCLI.c **** 	
  40:App/STM32F4-Discovery/tcpCLI.c **** 	
  41:App/STM32F4-Discovery/tcpCLI.c **** 		
  42:App/STM32F4-Discovery/tcpCLI.c **** 		// now convert parameter to proper value and check if it is in range 
  43:App/STM32F4-Discovery/tcpCLI.c ****         	Value[xValueLength] = '\0'; 	
 678              		.loc 1 43 0
 679 0020 BB6B     		ldr	r3, [r7, #56]
 680 0022 7A6B     		ldr	r2, [r7, #52]
 681 0024 1344     		add	r3, r3, r2
 682 0026 0022     		movs	r2, #0
 683 0028 1A70     		strb	r2, [r3]
  44:App/STM32F4-Discovery/tcpCLI.c **** 		uint16_t s1 = atoi ( Value ); 
 684              		.loc 1 44 0
 685 002a 786B     		ldr	r0, [r7, #52]
 686 002c FFF7FEFF 		bl	atoi
 687 0030 0346     		mov	r3, r0
 688 0032 FB83     		strh	r3, [r7, #30]	@ movhi
  45:App/STM32F4-Discovery/tcpCLI.c **** 		// if speed is in range
  46:App/STM32F4-Discovery/tcpCLI.c **** 		if(s1 < 1 ||  s1 > 100 )
 689              		.loc 1 46 0
 690 0034 FB8B     		ldrh	r3, [r7, #30]
 691 0036 002B     		cmp	r3, #0
 692 0038 02D0     		beq	.L3
 693              		.loc 1 46 0 is_stmt 0 discriminator 1
 694 003a FB8B     		ldrh	r3, [r7, #30]
 695 003c 642B     		cmp	r3, #100
 696 003e 07D9     		bls	.L4
 697              	.L3:
  47:App/STM32F4-Discovery/tcpCLI.c **** 		{
  48:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP
  49:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error: speed is out of range [1,100]p : %d\n\n\0", s1);
 698              		.loc 1 49 0 is_stmt 1
 699 0040 FB8B     		ldrh	r3, [r7, #30]
 700 0042 F868     		ldr	r0, [r7, #12]
 701 0044 9949     		ldr	r1, .L19+4
 702 0046 1A46     		mov	r2, r3
 703 0048 FFF7FEFF 		bl	sprintf
  50:App/STM32F4-Discovery/tcpCLI.c **** 		//	pcWriteBuffer[11+ 3] = "\0"; 
  51:App/STM32F4-Discovery/tcpCLI.c **** 			
  52:App/STM32F4-Discovery/tcpCLI.c **** 			////send( socket_0, buf, 11+3, 0);
  53:App/STM32F4-Discovery/tcpCLI.c **** 
  54:App/STM32F4-Discovery/tcpCLI.c **** 	       		return pdFALSE; 	
 704              		.loc 1 54 0
 705 004c 0023     		movs	r3, #0
 706 004e A3E1     		b	.L1
 707              	.L4:
  55:App/STM32F4-Discovery/tcpCLI.c **** 		}	
  56:App/STM32F4-Discovery/tcpCLI.c **** 	
  57:App/STM32F4-Discovery/tcpCLI.c **** 		// convert to correct value ( * 100 ) 
  58:App/STM32F4-Discovery/tcpCLI.c **** 		s1 *= 100; 
 708              		.loc 1 58 0
 709 0050 FB8B     		ldrh	r3, [r7, #30]	@ movhi
 710 0052 1A46     		mov	r2, r3	@ movhi
 711 0054 9200     		lsls	r2, r2, #2
 712 0056 1344     		add	r3, r3, r2
 713 0058 1A46     		mov	r2, r3	@ movhi
 714 005a 9100     		lsls	r1, r2, #2
 715 005c 1A46     		mov	r2, r3	@ movhi
 716 005e 0B46     		mov	r3, r1	@ movhi
 717 0060 1344     		add	r3, r3, r2
 718 0062 9B00     		lsls	r3, r3, #2
 719 0064 FB83     		strh	r3, [r7, #30]	@ movhi
  59:App/STM32F4-Discovery/tcpCLI.c **** 		
  60:App/STM32F4-Discovery/tcpCLI.c **** 		// test i
  61:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[1] = 0;	
 720              		.loc 1 61 0
 721 0066 924B     		ldr	r3, .L19+8
 722 0068 0022     		movs	r2, #0
 723 006a 5A81     		strh	r2, [r3, #10]	@ movhi
  62:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[2] = 2250;
 724              		.loc 1 62 0
 725 006c 904B     		ldr	r3, .L19+8
 726 006e 40F6CA02 		movw	r2, #2250
 727 0072 9A81     		strh	r2, [r3, #12]	@ movhi
  63:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[3] = 10;	
 728              		.loc 1 63 0
 729 0074 8E4B     		ldr	r3, .L19+8
 730 0076 0A22     		movs	r2, #10
 731 0078 DA81     		strh	r2, [r3, #14]	@ movhi
  64:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[4] = 10;	
 732              		.loc 1 64 0
 733 007a 8D4B     		ldr	r3, .L19+8
 734 007c 0A22     		movs	r2, #10
 735 007e 1A82     		strh	r2, [r3, #16]	@ movhi
  65:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5;
 736              		.loc 1 65 0
 737 0080 8B4B     		ldr	r3, .L19+8
 738 0082 0522     		movs	r2, #5
 739 0084 5A60     		str	r2, [r3, #4]
  66:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = SETDATA;	
 740              		.loc 1 66 0
 741 0086 8A4B     		ldr	r3, .L19+8
 742 0088 0022     		movs	r2, #0
 743 008a 1A70     		strb	r2, [r3]
  67:App/STM32F4-Discovery/tcpCLI.c **** 		// test /
  68:App/STM32F4-Discovery/tcpCLI.c **** 		// setup telegram 
  69:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = SETDATA;
 744              		.loc 1 69 0
 745 008c 884B     		ldr	r3, .L19+8
 746 008e 0022     		movs	r2, #0
 747 0090 1A70     		strb	r2, [r3]
  70:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5;
 748              		.loc 1 70 0
 749 0092 874B     		ldr	r3, .L19+8
 750 0094 0522     		movs	r2, #5
 751 0096 5A60     		str	r2, [r3, #4]
  71:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[0] = s1;
 752              		.loc 1 71 0
 753 0098 854B     		ldr	r3, .L19+8
 754 009a FA8B     		ldrh	r2, [r7, #30]	@ movhi
 755 009c 1A81     		strh	r2, [r3, #8]	@ movhi
  72:App/STM32F4-Discovery/tcpCLI.c **** 		
  73:App/STM32F4-Discovery/tcpCLI.c **** 	
  74:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
  75:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 756              		.loc 1 75 0
 757 009e 854B     		ldr	r3, .L19+12
 758 00a0 1A68     		ldr	r2, [r3]
 759 00a2 854B     		ldr	r3, .L19+16
 760 00a4 1B68     		ldr	r3, [r3]
 761 00a6 1046     		mov	r0, r2
 762 00a8 8149     		ldr	r1, .L19+8
 763 00aa 1A46     		mov	r2, r3
 764 00ac 0023     		movs	r3, #0
 765 00ae FFF7FEFF 		bl	xQueueGenericSend
 766 00b2 0346     		mov	r3, r0
 767 00b4 012B     		cmp	r3, #1
 768 00b6 42D1     		bne	.L6
  76:App/STM32F4-Discovery/tcpCLI.c **** 		{	
  77:App/STM32F4-Discovery/tcpCLI.c **** 					
  78:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay)== pdPASS)
 769              		.loc 1 78 0
 770 00b8 7E4B     		ldr	r3, .L19+12
 771 00ba 1A68     		ldr	r2, [r3]
 772 00bc 7E4B     		ldr	r3, .L19+16
 773 00be 1B68     		ldr	r3, [r3]
 774 00c0 1046     		mov	r0, r2
 775 00c2 7E49     		ldr	r1, .L19+20
 776 00c4 1A46     		mov	r2, r3
 777 00c6 0023     		movs	r3, #0
 778 00c8 FFF7FEFF 		bl	xQueueGenericReceive
 779 00cc 0346     		mov	r3, r0
 780 00ce 012B     		cmp	r3, #1
 781 00d0 24D1     		bne	.L7
  79:App/STM32F4-Discovery/tcpCLI.c **** 			{
  80:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 782              		.loc 1 80 0
 783 00d2 7A4B     		ldr	r3, .L19+20
 784 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 785 00d6 062B     		cmp	r3, #6
 786 00d8 11D1     		bne	.L8
  81:App/STM32F4-Discovery/tcpCLI.c **** 				{	
  82:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed succsesfully set.\n\n");
 787              		.loc 1 82 0
 788 00da FA68     		ldr	r2, [r7, #12]
 789 00dc 784B     		ldr	r3, .L19+24
 790 00de 1546     		mov	r5, r2
 791 00e0 1C46     		mov	r4, r3
 792 00e2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 793 00e4 2860     		str	r0, [r5]	@ unaligned
 794 00e6 6960     		str	r1, [r5, #4]	@ unaligned
 795 00e8 AA60     		str	r2, [r5, #8]	@ unaligned
 796 00ea EB60     		str	r3, [r5, #12]	@ unaligned
 797 00ec 03CC     		ldmia	r4!, {r0, r1}
 798 00ee 2861     		str	r0, [r5, #16]	@ unaligned
 799 00f0 6961     		str	r1, [r5, #20]	@ unaligned
 800 00f2 2388     		ldrh	r3, [r4]	@ unaligned
 801 00f4 2B83     		strh	r3, [r5, #24]	@ unaligned
  83:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 25; 	
 802              		.loc 1 83 0
 803 00f6 1923     		movs	r3, #25
 804 00f8 BB61     		str	r3, [r7, #24]
  84:App/STM32F4-Discovery/tcpCLI.c **** 				//	//send( socket, buf, len, 0);
  85:App/STM32F4-Discovery/tcpCLI.c **** 
  86:App/STM32F4-Discovery/tcpCLI.c **** 
  87:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 805              		.loc 1 87 0
 806 00fa 0123     		movs	r3, #1
 807 00fc 4CE1     		b	.L1
 808              	.L8:
  88:App/STM32F4-Discovery/tcpCLI.c **** 
  89:App/STM32F4-Discovery/tcpCLI.c **** 				}
  90:App/STM32F4-Discovery/tcpCLI.c **** 				else
  91:App/STM32F4-Discovery/tcpCLI.c **** 				{
  92:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 809              		.loc 1 92 0
 810 00fe FA68     		ldr	r2, [r7, #12]
 811 0100 704B     		ldr	r3, .L19+28
 812 0102 1546     		mov	r5, r2
 813 0104 1C46     		mov	r4, r3
 814 0106 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 815 0108 2860     		str	r0, [r5]	@ unaligned
 816 010a 6960     		str	r1, [r5, #4]	@ unaligned
 817 010c AA60     		str	r2, [r5, #8]	@ unaligned
 818 010e EB60     		str	r3, [r5, #12]	@ unaligned
 819 0110 2068     		ldr	r0, [r4]	@ unaligned
 820 0112 2861     		str	r0, [r5, #16]	@ unaligned
  93:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 821              		.loc 1 93 0
 822 0114 1323     		movs	r3, #19
 823 0116 BB61     		str	r3, [r7, #24]
  94:App/STM32F4-Discovery/tcpCLI.c **** //					//send( socket, buf, len, 0);
  95:App/STM32F4-Discovery/tcpCLI.c **** 
  96:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 824              		.loc 1 96 0
 825 0118 0023     		movs	r3, #0
 826 011a 3DE1     		b	.L1
 827              	.L7:
  97:App/STM32F4-Discovery/tcpCLI.c **** 
  98:App/STM32F4-Discovery/tcpCLI.c **** 
  99:App/STM32F4-Discovery/tcpCLI.c **** 				}
 100:App/STM32F4-Discovery/tcpCLI.c **** 						
 101:App/STM32F4-Discovery/tcpCLI.c **** 			}
 102:App/STM32F4-Discovery/tcpCLI.c **** 			else
 103:App/STM32F4-Discovery/tcpCLI.c **** 			{
 104:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 105:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 106:App/STM32F4-Discovery/tcpCLI.c **** 		
 107:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 828              		.loc 1 107 0
 829 011c FA68     		ldr	r2, [r7, #12]
 830 011e 6A4B     		ldr	r3, .L19+32
 831 0120 1546     		mov	r5, r2
 832 0122 1C46     		mov	r4, r3
 833 0124 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 834 0126 2860     		str	r0, [r5]	@ unaligned
 835 0128 6960     		str	r1, [r5, #4]	@ unaligned
 836 012a AA60     		str	r2, [r5, #8]	@ unaligned
 837 012c EB60     		str	r3, [r5, #12]	@ unaligned
 838 012e 07CC     		ldmia	r4!, {r0, r1, r2}
 839 0130 2861     		str	r0, [r5, #16]	@ unaligned
 840 0132 6961     		str	r1, [r5, #20]	@ unaligned
 841 0134 AA61     		str	r2, [r5, #24]	@ unaligned
 108:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 842              		.loc 1 108 0
 843 0136 1B23     		movs	r3, #27
 844 0138 BB61     		str	r3, [r7, #24]
 109:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 110:App/STM32F4-Discovery/tcpCLI.c **** 
 111:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 845              		.loc 1 111 0
 846 013a 0023     		movs	r3, #0
 847 013c 2CE1     		b	.L1
 848              	.L6:
 112:App/STM32F4-Discovery/tcpCLI.c **** 			}
 113:App/STM32F4-Discovery/tcpCLI.c **** 
 114:App/STM32F4-Discovery/tcpCLI.c **** 
 115:App/STM32F4-Discovery/tcpCLI.c **** 		}
 116:App/STM32F4-Discovery/tcpCLI.c **** 		else
 117:App/STM32F4-Discovery/tcpCLI.c **** 		{
 118:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 119:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 120:App/STM32F4-Discovery/tcpCLI.c **** 		
 121:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 849              		.loc 1 121 0
 850 013e FA68     		ldr	r2, [r7, #12]
 851 0140 624B     		ldr	r3, .L19+36
 852 0142 1446     		mov	r4, r2
 853 0144 1D46     		mov	r5, r3
 854 0146 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 855 0148 2060     		str	r0, [r4]	@ unaligned
 856 014a 6160     		str	r1, [r4, #4]	@ unaligned
 857 014c A260     		str	r2, [r4, #8]	@ unaligned
 858 014e E360     		str	r3, [r4, #12]	@ unaligned
 859 0150 2868     		ldr	r0, [r5]	@ unaligned
 860 0152 2061     		str	r0, [r4, #16]	@ unaligned
 861 0154 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 862 0156 AB79     		ldrb	r3, [r5, #6]
 863 0158 A282     		strh	r2, [r4, #20]	@ unaligned
 864 015a A375     		strb	r3, [r4, #22]
 122:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 865              		.loc 1 122 0
 866 015c 1623     		movs	r3, #22
 867 015e BB61     		str	r3, [r7, #24]
 123:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 124:App/STM32F4-Discovery/tcpCLI.c **** 
 125:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 868              		.loc 1 125 0
 869 0160 0023     		movs	r3, #0
 870 0162 19E1     		b	.L1
 871              	.L2:
 872              	.LBE2:
 126:App/STM32F4-Discovery/tcpCLI.c **** 		}
 127:App/STM32F4-Discovery/tcpCLI.c **** 	}
 128:App/STM32F4-Discovery/tcpCLI.c **** 	
 129:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 130:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER upramp [value]
 131:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 132:App/STM32F4-Discovery/tcpCLI.c **** 
 133:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "upramp", 6))
 873              		.loc 1 133 0
 874 0164 7868     		ldr	r0, [r7, #4]
 875 0166 5A49     		ldr	r1, .L19+40
 876 0168 0622     		movs	r2, #6
 877 016a FFF7FEFF 		bl	strncmp
 878 016e 0346     		mov	r3, r0
 879 0170 002B     		cmp	r3, #0
 880 0172 74D1     		bne	.L9
 881              	.LBB3:
 134:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 135:App/STM32F4-Discovery/tcpCLI.c **** 	
 136:App/STM32F4-Discovery/tcpCLI.c **** 	
 137:App/STM32F4-Discovery/tcpCLI.c **** 		
 138:App/STM32F4-Discovery/tcpCLI.c **** 		// now convert parameter to proper value and check if it is in range 
 139:App/STM32F4-Discovery/tcpCLI.c ****         	Value[xValueLength] = '\0'; 	
 882              		.loc 1 139 0
 883 0174 BB6B     		ldr	r3, [r7, #56]
 884 0176 7A6B     		ldr	r2, [r7, #52]
 885 0178 1344     		add	r3, r3, r2
 886 017a 0022     		movs	r2, #0
 887 017c 1A70     		strb	r2, [r3]
 140:App/STM32F4-Discovery/tcpCLI.c **** 		uint16_t s1 = atoi ( Value ); 
 888              		.loc 1 140 0
 889 017e 786B     		ldr	r0, [r7, #52]
 890 0180 FFF7FEFF 		bl	atoi
 891 0184 0346     		mov	r3, r0
 892 0186 FB82     		strh	r3, [r7, #22]	@ movhi
 141:App/STM32F4-Discovery/tcpCLI.c **** 		// if speed is in range
 142:App/STM32F4-Discovery/tcpCLI.c **** 		if(s1 < 15 ||  s1 > 300 )
 893              		.loc 1 142 0
 894 0188 FB8A     		ldrh	r3, [r7, #22]
 895 018a 0E2B     		cmp	r3, #14
 896 018c 03D9     		bls	.L10
 897              		.loc 1 142 0 is_stmt 0 discriminator 1
 898 018e FB8A     		ldrh	r3, [r7, #22]
 899 0190 B3F5967F 		cmp	r3, #300
 900 0194 09D9     		bls	.L11
 901              	.L10:
 143:App/STM32F4-Discovery/tcpCLI.c **** 		{
 144:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP
 145:App/STM32F4-Discovery/tcpCLI.c **** 			
 146:App/STM32F4-Discovery/tcpCLI.c **** 			xWriteBufferLen = 100; 
 902              		.loc 1 146 0 is_stmt 1
 903 0196 6423     		movs	r3, #100
 904 0198 BB61     		str	r3, [r7, #24]
 147:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error: Ramp time is out of range [15,300]s : %d\n\n\0", s1);
 905              		.loc 1 147 0
 906 019a FB8A     		ldrh	r3, [r7, #22]
 907 019c F868     		ldr	r0, [r7, #12]
 908 019e 4D49     		ldr	r1, .L19+44
 909 01a0 1A46     		mov	r2, r3
 910 01a2 FFF7FEFF 		bl	sprintf
 148:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket_0, buf, len, 0);
 149:App/STM32F4-Discovery/tcpCLI.c **** 
 150:App/STM32F4-Discovery/tcpCLI.c **** 	       		return pdFALSE; 	
 911              		.loc 1 150 0
 912 01a6 0023     		movs	r3, #0
 913 01a8 F6E0     		b	.L1
 914              	.L11:
 151:App/STM32F4-Discovery/tcpCLI.c **** 		}	
 152:App/STM32F4-Discovery/tcpCLI.c **** 	
 153:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[3] = s1; 
 915              		.loc 1 153 0
 916 01aa 414B     		ldr	r3, .L19+8
 917 01ac FA8A     		ldrh	r2, [r7, #22]	@ movhi
 918 01ae DA81     		strh	r2, [r3, #14]	@ movhi
 154:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5; 
 919              		.loc 1 154 0
 920 01b0 3F4B     		ldr	r3, .L19+8
 921 01b2 0522     		movs	r2, #5
 922 01b4 5A60     		str	r2, [r3, #4]
 155:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = SETDATA;
 923              		.loc 1 155 0
 924 01b6 3E4B     		ldr	r3, .L19+8
 925 01b8 0022     		movs	r2, #0
 926 01ba 1A70     		strb	r2, [r3]
 156:App/STM32F4-Discovery/tcpCLI.c **** 		
 157:App/STM32F4-Discovery/tcpCLI.c **** 	
 158:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 159:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 927              		.loc 1 159 0
 928 01bc 3D4B     		ldr	r3, .L19+12
 929 01be 1A68     		ldr	r2, [r3]
 930 01c0 3D4B     		ldr	r3, .L19+16
 931 01c2 1B68     		ldr	r3, [r3]
 932 01c4 1046     		mov	r0, r2
 933 01c6 3A49     		ldr	r1, .L19+8
 934 01c8 1A46     		mov	r2, r3
 935 01ca 0023     		movs	r3, #0
 936 01cc FFF7FEFF 		bl	xQueueGenericSend
 937 01d0 0346     		mov	r3, r0
 938 01d2 012B     		cmp	r3, #1
 939 01d4 30D1     		bne	.L12
 160:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 161:App/STM32F4-Discovery/tcpCLI.c **** 					
 162:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay))
 940              		.loc 1 162 0
 941 01d6 374B     		ldr	r3, .L19+12
 942 01d8 1A68     		ldr	r2, [r3]
 943 01da 374B     		ldr	r3, .L19+16
 944 01dc 1B68     		ldr	r3, [r3]
 945 01de 1046     		mov	r0, r2
 946 01e0 3649     		ldr	r1, .L19+20
 947 01e2 1A46     		mov	r2, r3
 948 01e4 0023     		movs	r3, #0
 949 01e6 FFF7FEFF 		bl	xQueueGenericReceive
 950 01ea 0346     		mov	r3, r0
 951 01ec 002B     		cmp	r3, #0
 952 01ee 36D0     		beq	.L9
 163:App/STM32F4-Discovery/tcpCLI.c **** 			{
 164:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 953              		.loc 1 164 0
 954 01f0 324B     		ldr	r3, .L19+20
 955 01f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 956 01f4 062B     		cmp	r3, #6
 957 01f6 10D1     		bne	.L13
 165:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 166:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Up ramp succsesfully set.\n\n");
 958              		.loc 1 166 0
 959 01f8 FA68     		ldr	r2, [r7, #12]
 960 01fa 374B     		ldr	r3, .L19+48
 961 01fc 1546     		mov	r5, r2
 962 01fe 1C46     		mov	r4, r3
 963 0200 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 964 0202 2860     		str	r0, [r5]	@ unaligned
 965 0204 6960     		str	r1, [r5, #4]	@ unaligned
 966 0206 AA60     		str	r2, [r5, #8]	@ unaligned
 967 0208 EB60     		str	r3, [r5, #12]	@ unaligned
 968 020a 07CC     		ldmia	r4!, {r0, r1, r2}
 969 020c 2861     		str	r0, [r5, #16]	@ unaligned
 970 020e 6961     		str	r1, [r5, #20]	@ unaligned
 971 0210 AA61     		str	r2, [r5, #24]	@ unaligned
 167:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 27; 	
 972              		.loc 1 167 0
 973 0212 1B23     		movs	r3, #27
 974 0214 BB61     		str	r3, [r7, #24]
 168:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 169:App/STM32F4-Discovery/tcpCLI.c **** 
 170:App/STM32F4-Discovery/tcpCLI.c **** 
 171:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 975              		.loc 1 171 0
 976 0216 0123     		movs	r3, #1
 977 0218 BEE0     		b	.L1
 978              	.L13:
 172:App/STM32F4-Discovery/tcpCLI.c **** 
 173:App/STM32F4-Discovery/tcpCLI.c **** 				}
 174:App/STM32F4-Discovery/tcpCLI.c **** 				else
 175:App/STM32F4-Discovery/tcpCLI.c **** 				{
 176:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 979              		.loc 1 176 0
 980 021a FA68     		ldr	r2, [r7, #12]
 981 021c 294B     		ldr	r3, .L19+28
 982 021e 1546     		mov	r5, r2
 983 0220 1C46     		mov	r4, r3
 984 0222 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 985 0224 2860     		str	r0, [r5]	@ unaligned
 986 0226 6960     		str	r1, [r5, #4]	@ unaligned
 987 0228 AA60     		str	r2, [r5, #8]	@ unaligned
 988 022a EB60     		str	r3, [r5, #12]	@ unaligned
 989 022c 2068     		ldr	r0, [r4]	@ unaligned
 990 022e 2861     		str	r0, [r5, #16]	@ unaligned
 177:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 991              		.loc 1 177 0
 992 0230 1323     		movs	r3, #19
 993 0232 BB61     		str	r3, [r7, #24]
 178:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 179:App/STM32F4-Discovery/tcpCLI.c **** 
 180:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 994              		.loc 1 180 0
 995 0234 0023     		movs	r3, #0
 996 0236 AFE0     		b	.L1
 997              	.L12:
 181:App/STM32F4-Discovery/tcpCLI.c **** 
 182:App/STM32F4-Discovery/tcpCLI.c **** 
 183:App/STM32F4-Discovery/tcpCLI.c **** 				}
 184:App/STM32F4-Discovery/tcpCLI.c **** 						
 185:App/STM32F4-Discovery/tcpCLI.c **** 			}
 186:App/STM32F4-Discovery/tcpCLI.c **** 
 187:App/STM32F4-Discovery/tcpCLI.c **** 		}
 188:App/STM32F4-Discovery/tcpCLI.c **** 		else
 189:App/STM32F4-Discovery/tcpCLI.c **** 		{
 190:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 191:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 192:App/STM32F4-Discovery/tcpCLI.c **** 		
 193:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 998              		.loc 1 193 0
 999 0238 FA68     		ldr	r2, [r7, #12]
 1000 023a 244B     		ldr	r3, .L19+36
 1001 023c 1446     		mov	r4, r2
 1002 023e 1D46     		mov	r5, r3
 1003 0240 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1004 0242 2060     		str	r0, [r4]	@ unaligned
 1005 0244 6160     		str	r1, [r4, #4]	@ unaligned
 1006 0246 A260     		str	r2, [r4, #8]	@ unaligned
 1007 0248 E360     		str	r3, [r4, #12]	@ unaligned
 1008 024a 2868     		ldr	r0, [r5]	@ unaligned
 1009 024c 2061     		str	r0, [r4, #16]	@ unaligned
 1010 024e AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1011 0250 AB79     		ldrb	r3, [r5, #6]
 1012 0252 A282     		strh	r2, [r4, #20]	@ unaligned
 1013 0254 A375     		strb	r3, [r4, #22]
 194:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1014              		.loc 1 194 0
 1015 0256 1623     		movs	r3, #22
 1016 0258 BB61     		str	r3, [r7, #24]
 195:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 196:App/STM32F4-Discovery/tcpCLI.c **** 
 197:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1017              		.loc 1 197 0
 1018 025a 0023     		movs	r3, #0
 1019 025c 9CE0     		b	.L1
 1020              	.L9:
 1021              	.LBE3:
 198:App/STM32F4-Discovery/tcpCLI.c **** 		}
 199:App/STM32F4-Discovery/tcpCLI.c **** 	}
 200:App/STM32F4-Discovery/tcpCLI.c **** 
 201:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 202:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER downramp [value]
 203:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 204:App/STM32F4-Discovery/tcpCLI.c **** 
 205:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "downramp", 8))
 1022              		.loc 1 205 0
 1023 025e 7868     		ldr	r0, [r7, #4]
 1024 0260 1E49     		ldr	r1, .L19+52
 1025 0262 0822     		movs	r2, #8
 1026 0264 FFF7FEFF 		bl	strncmp
 1027 0268 0346     		mov	r3, r0
 1028 026a 002B     		cmp	r3, #0
 1029 026c 40F09480 		bne	.L14
 1030              	.LBB4:
 206:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 207:App/STM32F4-Discovery/tcpCLI.c **** 	
 208:App/STM32F4-Discovery/tcpCLI.c **** 		// now convert parameter to proper value and check if it is in range 
 209:App/STM32F4-Discovery/tcpCLI.c ****         	Value[xValueLength] = '\0'; 	
 1031              		.loc 1 209 0
 1032 0270 BB6B     		ldr	r3, [r7, #56]
 1033 0272 7A6B     		ldr	r2, [r7, #52]
 1034 0274 1344     		add	r3, r3, r2
 1035 0276 0022     		movs	r2, #0
 1036 0278 1A70     		strb	r2, [r3]
 210:App/STM32F4-Discovery/tcpCLI.c **** 		uint16_t s1 = atoi ( Value ); 
 1037              		.loc 1 210 0
 1038 027a 786B     		ldr	r0, [r7, #52]
 1039 027c FFF7FEFF 		bl	atoi
 1040 0280 0346     		mov	r3, r0
 1041 0282 BB82     		strh	r3, [r7, #20]	@ movhi
 211:App/STM32F4-Discovery/tcpCLI.c **** 		// if speed is in range
 212:App/STM32F4-Discovery/tcpCLI.c **** 		if(s1 < 15 ||  s1 > 300 )
 1042              		.loc 1 212 0
 1043 0284 BB8A     		ldrh	r3, [r7, #20]
 1044 0286 0E2B     		cmp	r3, #14
 1045 0288 03D9     		bls	.L15
 1046              		.loc 1 212 0 is_stmt 0 discriminator 1
 1047 028a BB8A     		ldrh	r3, [r7, #20]
 1048 028c B3F5967F 		cmp	r3, #300
 1049 0290 26D9     		bls	.L16
 1050              	.L15:
 213:App/STM32F4-Discovery/tcpCLI.c **** 		{
 214:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP
 215:App/STM32F4-Discovery/tcpCLI.c **** 			
 216:App/STM32F4-Discovery/tcpCLI.c **** 			xWriteBufferLen = 100; 
 1051              		.loc 1 216 0 is_stmt 1
 1052 0292 6423     		movs	r3, #100
 1053 0294 BB61     		str	r3, [r7, #24]
 217:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error: Ramp time is out of range [15,300]s : %d\n\n\0", s1);
 1054              		.loc 1 217 0
 1055 0296 BB8A     		ldrh	r3, [r7, #20]
 1056 0298 F868     		ldr	r0, [r7, #12]
 1057 029a 0E49     		ldr	r1, .L19+44
 1058 029c 1A46     		mov	r2, r3
 1059 029e FFF7FEFF 		bl	sprintf
 218:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket_0, buf, len, 0);
 219:App/STM32F4-Discovery/tcpCLI.c **** 
 220:App/STM32F4-Discovery/tcpCLI.c **** 	       		return pdFALSE; 	
 1060              		.loc 1 220 0
 1061 02a2 0023     		movs	r3, #0
 1062 02a4 78E0     		b	.L1
 1063              	.L20:
 1064 02a6 00BF     		.align	2
 1065              	.L19:
 1066 02a8 74000000 		.word	.LC4
 1067 02ac 7C000000 		.word	.LC5
 1068 02b0 00000000 		.word	telegramS
 1069 02b4 00000000 		.word	QSpd_handle
 1070 02b8 00000000 		.word	xDelay
 1071 02bc 00000000 		.word	telegramR
 1072 02c0 AC000000 		.word	.LC6
 1073 02c4 C8000000 		.word	.LC7
 1074 02c8 DC000000 		.word	.LC8
 1075 02cc F8000000 		.word	.LC9
 1076 02d0 10010000 		.word	.LC10
 1077 02d4 18010000 		.word	.LC11
 1078 02d8 4C010000 		.word	.LC12
 1079 02dc 68010000 		.word	.LC13
 1080              	.L16:
 221:App/STM32F4-Discovery/tcpCLI.c **** 		}	
 222:App/STM32F4-Discovery/tcpCLI.c **** 	
 223:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[3] = s1; 
 1081              		.loc 1 223 0
 1082 02e0 2F4B     		ldr	r3, .L21
 1083 02e2 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 1084 02e4 DA81     		strh	r2, [r3, #14]	@ movhi
 224:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5; 
 1085              		.loc 1 224 0
 1086 02e6 2E4B     		ldr	r3, .L21
 1087 02e8 0522     		movs	r2, #5
 1088 02ea 5A60     		str	r2, [r3, #4]
 225:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = SETDATA;
 1089              		.loc 1 225 0
 1090 02ec 2C4B     		ldr	r3, .L21
 1091 02ee 0022     		movs	r2, #0
 1092 02f0 1A70     		strb	r2, [r3]
 226:App/STM32F4-Discovery/tcpCLI.c **** 		
 227:App/STM32F4-Discovery/tcpCLI.c **** 	
 228:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 229:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 1093              		.loc 1 229 0
 1094 02f2 2C4B     		ldr	r3, .L21+4
 1095 02f4 1A68     		ldr	r2, [r3]
 1096 02f6 2C4B     		ldr	r3, .L21+8
 1097 02f8 1B68     		ldr	r3, [r3]
 1098 02fa 1046     		mov	r0, r2
 1099 02fc 2849     		ldr	r1, .L21
 1100 02fe 1A46     		mov	r2, r3
 1101 0300 0023     		movs	r3, #0
 1102 0302 FFF7FEFF 		bl	xQueueGenericSend
 1103 0306 0346     		mov	r3, r0
 1104 0308 012B     		cmp	r3, #1
 1105 030a 32D1     		bne	.L17
 230:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 231:App/STM32F4-Discovery/tcpCLI.c **** 					
 232:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay))
 1106              		.loc 1 232 0
 1107 030c 254B     		ldr	r3, .L21+4
 1108 030e 1A68     		ldr	r2, [r3]
 1109 0310 254B     		ldr	r3, .L21+8
 1110 0312 1B68     		ldr	r3, [r3]
 1111 0314 1046     		mov	r0, r2
 1112 0316 2549     		ldr	r1, .L21+12
 1113 0318 1A46     		mov	r2, r3
 1114 031a 0023     		movs	r3, #0
 1115 031c FFF7FEFF 		bl	xQueueGenericReceive
 1116 0320 0346     		mov	r3, r0
 1117 0322 002B     		cmp	r3, #0
 1118 0324 38D0     		beq	.L14
 233:App/STM32F4-Discovery/tcpCLI.c **** 			{
 234:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 1119              		.loc 1 234 0
 1120 0326 214B     		ldr	r3, .L21+12
 1121 0328 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1122 032a 062B     		cmp	r3, #6
 1123 032c 12D1     		bne	.L18
 235:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 236:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Down ramp succsesfully set.\n\n");
 1124              		.loc 1 236 0
 1125 032e FA68     		ldr	r2, [r7, #12]
 1126 0330 1F4B     		ldr	r3, .L21+16
 1127 0332 1546     		mov	r5, r2
 1128 0334 1C46     		mov	r4, r3
 1129 0336 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1130 0338 2860     		str	r0, [r5]	@ unaligned
 1131 033a 6960     		str	r1, [r5, #4]	@ unaligned
 1132 033c AA60     		str	r2, [r5, #8]	@ unaligned
 1133 033e EB60     		str	r3, [r5, #12]	@ unaligned
 1134 0340 07CC     		ldmia	r4!, {r0, r1, r2}
 1135 0342 2861     		str	r0, [r5, #16]	@ unaligned
 1136 0344 6961     		str	r1, [r5, #20]	@ unaligned
 1137 0346 AA61     		str	r2, [r5, #24]	@ unaligned
 1138 0348 2388     		ldrh	r3, [r4]	@ unaligned
 1139 034a AB83     		strh	r3, [r5, #28]	@ unaligned
 237:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 29; 	
 1140              		.loc 1 237 0
 1141 034c 1D23     		movs	r3, #29
 1142 034e BB61     		str	r3, [r7, #24]
 238:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 239:App/STM32F4-Discovery/tcpCLI.c **** 
 240:App/STM32F4-Discovery/tcpCLI.c **** 
 241:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 1143              		.loc 1 241 0
 1144 0350 0123     		movs	r3, #1
 1145 0352 21E0     		b	.L1
 1146              	.L18:
 242:App/STM32F4-Discovery/tcpCLI.c **** 
 243:App/STM32F4-Discovery/tcpCLI.c **** 				}
 244:App/STM32F4-Discovery/tcpCLI.c **** 				else
 245:App/STM32F4-Discovery/tcpCLI.c **** 				{
 246:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1147              		.loc 1 246 0
 1148 0354 FA68     		ldr	r2, [r7, #12]
 1149 0356 174B     		ldr	r3, .L21+20
 1150 0358 1546     		mov	r5, r2
 1151 035a 1C46     		mov	r4, r3
 1152 035c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1153 035e 2860     		str	r0, [r5]	@ unaligned
 1154 0360 6960     		str	r1, [r5, #4]	@ unaligned
 1155 0362 AA60     		str	r2, [r5, #8]	@ unaligned
 1156 0364 EB60     		str	r3, [r5, #12]	@ unaligned
 1157 0366 2068     		ldr	r0, [r4]	@ unaligned
 1158 0368 2861     		str	r0, [r5, #16]	@ unaligned
 247:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 1159              		.loc 1 247 0
 1160 036a 1323     		movs	r3, #19
 1161 036c BB61     		str	r3, [r7, #24]
 248:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 249:App/STM32F4-Discovery/tcpCLI.c **** 
 250:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 1162              		.loc 1 250 0
 1163 036e 0023     		movs	r3, #0
 1164 0370 12E0     		b	.L1
 1165              	.L17:
 251:App/STM32F4-Discovery/tcpCLI.c **** 
 252:App/STM32F4-Discovery/tcpCLI.c **** 
 253:App/STM32F4-Discovery/tcpCLI.c **** 				}
 254:App/STM32F4-Discovery/tcpCLI.c **** 						
 255:App/STM32F4-Discovery/tcpCLI.c **** 			}
 256:App/STM32F4-Discovery/tcpCLI.c **** 
 257:App/STM32F4-Discovery/tcpCLI.c **** 		}
 258:App/STM32F4-Discovery/tcpCLI.c **** 		else
 259:App/STM32F4-Discovery/tcpCLI.c **** 		{
 260:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 261:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 262:App/STM32F4-Discovery/tcpCLI.c **** 		
 263:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 1166              		.loc 1 263 0
 1167 0372 FA68     		ldr	r2, [r7, #12]
 1168 0374 104B     		ldr	r3, .L21+24
 1169 0376 1446     		mov	r4, r2
 1170 0378 1D46     		mov	r5, r3
 1171 037a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1172 037c 2060     		str	r0, [r4]	@ unaligned
 1173 037e 6160     		str	r1, [r4, #4]	@ unaligned
 1174 0380 A260     		str	r2, [r4, #8]	@ unaligned
 1175 0382 E360     		str	r3, [r4, #12]	@ unaligned
 1176 0384 2868     		ldr	r0, [r5]	@ unaligned
 1177 0386 2061     		str	r0, [r4, #16]	@ unaligned
 1178 0388 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1179 038a AB79     		ldrb	r3, [r5, #6]
 1180 038c A282     		strh	r2, [r4, #20]	@ unaligned
 1181 038e A375     		strb	r3, [r4, #22]
 264:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1182              		.loc 1 264 0
 1183 0390 1623     		movs	r3, #22
 1184 0392 BB61     		str	r3, [r7, #24]
 265:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 266:App/STM32F4-Discovery/tcpCLI.c **** 
 267:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1185              		.loc 1 267 0
 1186 0394 0023     		movs	r3, #0
 1187 0396 FFE7     		b	.L1
 1188              	.L14:
 1189              	.L1:
 1190              	.LBE4:
 268:App/STM32F4-Discovery/tcpCLI.c **** 		}
 269:App/STM32F4-Discovery/tcpCLI.c **** 	
 270:App/STM32F4-Discovery/tcpCLI.c **** 		
 271:App/STM32F4-Discovery/tcpCLI.c **** 		
 272:App/STM32F4-Discovery/tcpCLI.c **** 
 273:App/STM32F4-Discovery/tcpCLI.c **** 	}
 274:App/STM32F4-Discovery/tcpCLI.c **** 			
 275:App/STM32F4-Discovery/tcpCLI.c **** }
 1191              		.loc 1 275 0
 1192 0398 1846     		mov	r0, r3
 1193 039a 2037     		adds	r7, r7, #32
 1194 039c BD46     		mov	sp, r7
 1195              		@ sp needed
 1196 039e B0BD     		pop	{r4, r5, r7, pc}
 1197              	.L22:
 1198              		.align	2
 1199              	.L21:
 1200 03a0 00000000 		.word	telegramS
 1201 03a4 00000000 		.word	QSpd_handle
 1202 03a8 00000000 		.word	xDelay
 1203 03ac 00000000 		.word	telegramR
 1204 03b0 74010000 		.word	.LC14
 1205 03b4 C8000000 		.word	.LC7
 1206 03b8 F8000000 		.word	.LC9
 1207              		.cfi_endproc
 1208              	.LFE110:
 1210              		.section	.rodata
 1211 0192 0000     		.align	2
 1212              	.LC15:
 1213 0194 53706565 		.ascii	"Speed is  %2d.%2dp \012\012\000\000"
 1213      64206973 
 1213      20202532 
 1213      642E2532 
 1213      6470200A 
 1214              		.section	.text.handleVariable_get,"ax",%progbits
 1215              		.align	2
 1216              		.global	handleVariable_get
 1217              		.thumb
 1218              		.thumb_func
 1220              	handleVariable_get:
 1221              	.LFB111:
 276:App/STM32F4-Discovery/tcpCLI.c **** //=======================================================================================//
 277:App/STM32F4-Discovery/tcpCLI.c **** //=======================================================================================//
 278:App/STM32F4-Discovery/tcpCLI.c **** //		GET PARAMETETERS 
 279:App/STM32F4-Discovery/tcpCLI.c **** //=======================================================================================//
 280:App/STM32F4-Discovery/tcpCLI.c **** //=======================================================================================//
 281:App/STM32F4-Discovery/tcpCLI.c **** int handleVariable_get (	
 282:App/STM32F4-Discovery/tcpCLI.c **** 				int8_t *pcWriteBuffer, 
 283:App/STM32F4-Discovery/tcpCLI.c **** 				size_t xWriteBufferLen,
 284:App/STM32F4-Discovery/tcpCLI.c **** 				uint8_t * Param, 
 285:App/STM32F4-Discovery/tcpCLI.c **** 				int xParamLength,
 286:App/STM32F4-Discovery/tcpCLI.c **** 				xQueueHandle Qhandle,
 287:App/STM32F4-Discovery/tcpCLI.c **** 				int socket )
 288:App/STM32F4-Discovery/tcpCLI.c **** {
 1222              		.loc 1 288 0
 1223              		.cfi_startproc
 1224              		@ args = 8, pretend = 0, frame = 24
 1225              		@ frame_needed = 1, uses_anonymous_args = 0
 1226 0000 B0B5     		push	{r4, r5, r7, lr}
 1227              	.LCFI3:
 1228              		.cfi_def_cfa_offset 16
 1229              		.cfi_offset 4, -16
 1230              		.cfi_offset 5, -12
 1231              		.cfi_offset 7, -8
 1232              		.cfi_offset 14, -4
 1233 0002 86B0     		sub	sp, sp, #24
 1234              	.LCFI4:
 1235              		.cfi_def_cfa_offset 40
 1236 0004 00AF     		add	r7, sp, #0
 1237              	.LCFI5:
 1238              		.cfi_def_cfa_register 7
 1239 0006 F860     		str	r0, [r7, #12]
 1240 0008 B960     		str	r1, [r7, #8]
 1241 000a 7A60     		str	r2, [r7, #4]
 1242 000c 3B60     		str	r3, [r7]
 289:App/STM32F4-Discovery/tcpCLI.c **** 
 290:App/STM32F4-Discovery/tcpCLI.c **** 
 291:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 292:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER speed [value]
 293:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 294:App/STM32F4-Discovery/tcpCLI.c **** 
 295:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "speed", 5))
 1243              		.loc 1 295 0
 1244 000e 7868     		ldr	r0, [r7, #4]
 1245 0010 3B49     		ldr	r1, .L29
 1246 0012 0522     		movs	r2, #5
 1247 0014 FFF7FEFF 		bl	strncmp
 1248 0018 0346     		mov	r3, r0
 1249 001a 002B     		cmp	r3, #0
 1250 001c 6CD1     		bne	.L24
 296:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 297:App/STM32F4-Discovery/tcpCLI.c **** 	
 298:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = GETDATA; 
 1251              		.loc 1 298 0
 1252 001e 394B     		ldr	r3, .L29+4
 1253 0020 0122     		movs	r2, #1
 1254 0022 1A70     		strb	r2, [r3]
 299:App/STM32F4-Discovery/tcpCLI.c **** 		
 300:App/STM32F4-Discovery/tcpCLI.c **** 	
 301:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 302:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 1255              		.loc 1 302 0
 1256 0024 384B     		ldr	r3, .L29+8
 1257 0026 1A68     		ldr	r2, [r3]
 1258 0028 384B     		ldr	r3, .L29+12
 1259 002a 1B68     		ldr	r3, [r3]
 1260 002c 1046     		mov	r0, r2
 1261 002e 3549     		ldr	r1, .L29+4
 1262 0030 1A46     		mov	r2, r3
 1263 0032 0023     		movs	r3, #0
 1264 0034 FFF7FEFF 		bl	xQueueGenericSend
 1265 0038 0346     		mov	r3, r0
 1266 003a 012B     		cmp	r3, #1
 1267 003c 49D1     		bne	.L25
 303:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 304:App/STM32F4-Discovery/tcpCLI.c **** 					
 305:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay)== pdPASS)
 1268              		.loc 1 305 0
 1269 003e 324B     		ldr	r3, .L29+8
 1270 0040 1A68     		ldr	r2, [r3]
 1271 0042 324B     		ldr	r3, .L29+12
 1272 0044 1B68     		ldr	r3, [r3]
 1273 0046 1046     		mov	r0, r2
 1274 0048 3149     		ldr	r1, .L29+16
 1275 004a 1A46     		mov	r2, r3
 1276 004c 0023     		movs	r3, #0
 1277 004e FFF7FEFF 		bl	xQueueGenericReceive
 1278 0052 0346     		mov	r3, r0
 1279 0054 012B     		cmp	r3, #1
 1280 0056 2BD1     		bne	.L26
 306:App/STM32F4-Discovery/tcpCLI.c **** 			{
 307:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 1281              		.loc 1 307 0
 1282 0058 2D4B     		ldr	r3, .L29+16
 1283 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1284 005c 062B     		cmp	r3, #6
 1285 005e 18D1     		bne	.L27
 308:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 309:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 310:App/STM32F4-Discovery/tcpCLI.c **** 					telegramR.data[3]/100,
 1286              		.loc 1 310 0
 1287 0060 2B4B     		ldr	r3, .L29+16
 1288 0062 DA89     		ldrh	r2, [r3, #14]
 309:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 1289              		.loc 1 309 0
 1290 0064 2B4B     		ldr	r3, .L29+20
 1291 0066 A3FB0203 		umull	r0, r3, r3, r2
 1292 006a 5B09     		lsrs	r3, r3, #5
 1293 006c 9BB2     		uxth	r3, r3
 1294 006e 1A46     		mov	r2, r3
 311:App/STM32F4-Discovery/tcpCLI.c **** 					telegramR.data[3] % 100);
 1295              		.loc 1 311 0
 1296 0070 274B     		ldr	r3, .L29+16
 1297 0072 DB89     		ldrh	r3, [r3, #14]
 309:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 1298              		.loc 1 309 0
 1299 0074 2749     		ldr	r1, .L29+20
 1300 0076 A1FB0301 		umull	r0, r1, r1, r3
 1301 007a 4909     		lsrs	r1, r1, #5
 1302 007c 6420     		movs	r0, #100
 1303 007e 00FB01F1 		mul	r1, r0, r1
 1304 0082 5B1A     		subs	r3, r3, r1
 1305 0084 9BB2     		uxth	r3, r3
 1306 0086 F868     		ldr	r0, [r7, #12]
 1307 0088 2349     		ldr	r1, .L29+24
 1308 008a FFF7FEFF 		bl	sprintf
 312:App/STM32F4-Discovery/tcpCLI.c **** 				
 313:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 314:App/STM32F4-Discovery/tcpCLI.c **** 
 315:App/STM32F4-Discovery/tcpCLI.c **** 
 316:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 1309              		.loc 1 316 0
 1310 008e 0123     		movs	r3, #1
 1311 0090 32E0     		b	.L23
 1312              	.L27:
 317:App/STM32F4-Discovery/tcpCLI.c **** 
 318:App/STM32F4-Discovery/tcpCLI.c **** 				}
 319:App/STM32F4-Discovery/tcpCLI.c **** 				else
 320:App/STM32F4-Discovery/tcpCLI.c **** 				{
 321:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1313              		.loc 1 321 0
 1314 0092 FA68     		ldr	r2, [r7, #12]
 1315 0094 214B     		ldr	r3, .L29+28
 1316 0096 1546     		mov	r5, r2
 1317 0098 1C46     		mov	r4, r3
 1318 009a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1319 009c 2860     		str	r0, [r5]	@ unaligned
 1320 009e 6960     		str	r1, [r5, #4]	@ unaligned
 1321 00a0 AA60     		str	r2, [r5, #8]	@ unaligned
 1322 00a2 EB60     		str	r3, [r5, #12]	@ unaligned
 1323 00a4 2068     		ldr	r0, [r4]	@ unaligned
 1324 00a6 2861     		str	r0, [r5, #16]	@ unaligned
 322:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 1325              		.loc 1 322 0
 1326 00a8 1323     		movs	r3, #19
 1327 00aa 7B61     		str	r3, [r7, #20]
 323:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 324:App/STM32F4-Discovery/tcpCLI.c **** 
 325:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 1328              		.loc 1 325 0
 1329 00ac 0023     		movs	r3, #0
 1330 00ae 23E0     		b	.L23
 1331              	.L26:
 326:App/STM32F4-Discovery/tcpCLI.c **** 
 327:App/STM32F4-Discovery/tcpCLI.c **** 
 328:App/STM32F4-Discovery/tcpCLI.c **** 				}
 329:App/STM32F4-Discovery/tcpCLI.c **** 						
 330:App/STM32F4-Discovery/tcpCLI.c **** 			}
 331:App/STM32F4-Discovery/tcpCLI.c **** 			else
 332:App/STM32F4-Discovery/tcpCLI.c **** 			{
 333:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 334:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 335:App/STM32F4-Discovery/tcpCLI.c **** 		
 336:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 1332              		.loc 1 336 0
 1333 00b0 FA68     		ldr	r2, [r7, #12]
 1334 00b2 1B4B     		ldr	r3, .L29+32
 1335 00b4 1546     		mov	r5, r2
 1336 00b6 1C46     		mov	r4, r3
 1337 00b8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1338 00ba 2860     		str	r0, [r5]	@ unaligned
 1339 00bc 6960     		str	r1, [r5, #4]	@ unaligned
 1340 00be AA60     		str	r2, [r5, #8]	@ unaligned
 1341 00c0 EB60     		str	r3, [r5, #12]	@ unaligned
 1342 00c2 07CC     		ldmia	r4!, {r0, r1, r2}
 1343 00c4 2861     		str	r0, [r5, #16]	@ unaligned
 1344 00c6 6961     		str	r1, [r5, #20]	@ unaligned
 1345 00c8 AA61     		str	r2, [r5, #24]	@ unaligned
 337:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 1346              		.loc 1 337 0
 1347 00ca 1B23     		movs	r3, #27
 1348 00cc 7B61     		str	r3, [r7, #20]
 338:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 339:App/STM32F4-Discovery/tcpCLI.c **** 
 340:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 1349              		.loc 1 340 0
 1350 00ce 0023     		movs	r3, #0
 1351 00d0 12E0     		b	.L23
 1352              	.L25:
 341:App/STM32F4-Discovery/tcpCLI.c **** 			}
 342:App/STM32F4-Discovery/tcpCLI.c **** 
 343:App/STM32F4-Discovery/tcpCLI.c **** 
 344:App/STM32F4-Discovery/tcpCLI.c **** 		}
 345:App/STM32F4-Discovery/tcpCLI.c **** 		else
 346:App/STM32F4-Discovery/tcpCLI.c **** 		{
 347:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 348:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 349:App/STM32F4-Discovery/tcpCLI.c **** 		
 350:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 1353              		.loc 1 350 0
 1354 00d2 FA68     		ldr	r2, [r7, #12]
 1355 00d4 134B     		ldr	r3, .L29+36
 1356 00d6 1446     		mov	r4, r2
 1357 00d8 1D46     		mov	r5, r3
 1358 00da 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1359 00dc 2060     		str	r0, [r4]	@ unaligned
 1360 00de 6160     		str	r1, [r4, #4]	@ unaligned
 1361 00e0 A260     		str	r2, [r4, #8]	@ unaligned
 1362 00e2 E360     		str	r3, [r4, #12]	@ unaligned
 1363 00e4 2868     		ldr	r0, [r5]	@ unaligned
 1364 00e6 2061     		str	r0, [r4, #16]	@ unaligned
 1365 00e8 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1366 00ea AB79     		ldrb	r3, [r5, #6]
 1367 00ec A282     		strh	r2, [r4, #20]	@ unaligned
 1368 00ee A375     		strb	r3, [r4, #22]
 351:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1369              		.loc 1 351 0
 1370 00f0 1623     		movs	r3, #22
 1371 00f2 7B61     		str	r3, [r7, #20]
 352:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 353:App/STM32F4-Discovery/tcpCLI.c **** 
 354:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1372              		.loc 1 354 0
 1373 00f4 0023     		movs	r3, #0
 1374 00f6 FFE7     		b	.L23
 1375              	.L24:
 1376              	.L23:
 355:App/STM32F4-Discovery/tcpCLI.c **** 		}
 356:App/STM32F4-Discovery/tcpCLI.c **** 	}
 357:App/STM32F4-Discovery/tcpCLI.c **** 	
 358:App/STM32F4-Discovery/tcpCLI.c **** 
 359:App/STM32F4-Discovery/tcpCLI.c **** 
 360:App/STM32F4-Discovery/tcpCLI.c **** }
 1377              		.loc 1 360 0
 1378 00f8 1846     		mov	r0, r3
 1379 00fa 1837     		adds	r7, r7, #24
 1380 00fc BD46     		mov	sp, r7
 1381              		@ sp needed
 1382 00fe B0BD     		pop	{r4, r5, r7, pc}
 1383              	.L30:
 1384              		.align	2
 1385              	.L29:
 1386 0100 74000000 		.word	.LC4
 1387 0104 00000000 		.word	telegramS
 1388 0108 00000000 		.word	QSpd_handle
 1389 010c 00000000 		.word	xDelay
 1390 0110 00000000 		.word	telegramR
 1391 0114 1F85EB51 		.word	1374389535
 1392 0118 94010000 		.word	.LC15
 1393 011c C8000000 		.word	.LC7
 1394 0120 DC000000 		.word	.LC8
 1395 0124 F8000000 		.word	.LC9
 1396              		.cfi_endproc
 1397              	.LFE111:
 1399              		.section	.rodata
 1400 01ab 00       		.align	2
 1401              	.LC16:
 1402 01ac 546F2066 		.ascii	"To few arguments. \012\012\000\000"
 1402      65772061 
 1402      7267756D 
 1402      656E7473 
 1402      2E200A0A 
 1403 01c2 0000     		.align	2
 1404              	.LC17:
 1405 01c4 68656C70 		.ascii	"help\000"
 1405      00
 1406 01c9 000000   		.align	2
 1407              	.LC18:
 1408 01cc 55736167 		.ascii	"Usage and parameters\012options:\012\011get - get m"
 1408      6520616E 
 1408      64207061 
 1408      72616D65 
 1408      74657273 
 1409 01f6 6F746F72 		.ascii	"otor parameter value\012\011set - set motor paramet"
 1409      20706172 
 1409      616D6574 
 1409      65722076 
 1409      616C7565 
 1410 0223 65722076 		.ascii	"er value\012\011start - starts motor\012\011stop - "
 1410      616C7565 
 1410      0A097374 
 1410      61727420 
 1410      2D207374 
 1411 024a 73746F70 		.ascii	"stops motor\012parametrs:\012\011speed - sets speed"
 1411      73206D6F 
 1411      746F720A 
 1411      70617261 
 1411      6D657472 
 1412 0274 0A097570 		.ascii	"\012\011upramp\012\011downramp\012\000\000"
 1412      72616D70 
 1412      0A09646F 
 1412      776E7261 
 1412      6D700A00 
 1413 0289 000000   		.align	2
 1414              	.LC19:
 1415 028c 73657400 		.ascii	"set\000"
 1416              		.align	2
 1417              	.LC20:
 1418 0290 67657400 		.ascii	"get\000"
 1419              		.align	2
 1420              	.LC21:
 1421 0294 506F7765 		.ascii	"Power In=%d, Iout=%d, Vin=%d, PrcOut=%d.%d, RPMOut="
 1421      7220496E 
 1421      3D25642C 
 1421      20496F75 
 1421      743D2564 
 1422 02c7 25642C20 		.ascii	"%d, InternalTemp=%d.%d\012\000"
 1422      496E7465 
 1422      726E616C 
 1422      54656D70 
 1422      3D25642E 
 1423 02df 00       		.align	2
 1424              	.LC22:
 1425 02e0 73746F70 		.ascii	"stop\000"
 1425      00
 1426 02e5 000000   		.align	2
 1427              	.LC23:
 1428 02e8 4D6F746F 		.ascii	"Motor succsesfully stopped.\012\012\000"
 1428      72207375 
 1428      63637365 
 1428      7366756C 
 1428      6C792073 
 1429 0306 0000     		.align	2
 1430              	.LC24:
 1431 0308 73746172 		.ascii	"start\000"
 1431      7400
 1432 030e 0000     		.align	2
 1433              	.LC25:
 1434 0310 4D6F746F 		.ascii	"Motor succsesfully started.\012\012\000"
 1434      72207375 
 1434      63637365 
 1434      7366756C 
 1434      6C792073 
 1435              		.section	.text.prvMotorCommand,"ax",%progbits
 1436              		.align	2
 1437              		.global	prvMotorCommand
 1438              		.thumb
 1439              		.thumb_func
 1441              	prvMotorCommand:
 1442              	.LFB112:
 361:App/STM32F4-Discovery/tcpCLI.c **** 
 362:App/STM32F4-Discovery/tcpCLI.c **** 
 363:App/STM32F4-Discovery/tcpCLI.c **** 
 364:App/STM32F4-Discovery/tcpCLI.c **** 
 365:App/STM32F4-Discovery/tcpCLI.c **** 
 366:App/STM32F4-Discovery/tcpCLI.c **** 
 367:App/STM32F4-Discovery/tcpCLI.c **** /* ================================================================================================
 368:App/STM32F4-Discovery/tcpCLI.c ****  * ================================================================================================
 369:App/STM32F4-Discovery/tcpCLI.c ****  * 		prvMotorCommand 
 370:App/STM32F4-Discovery/tcpCLI.c ****  * ================================================================================================
 371:App/STM32F4-Discovery/tcpCLI.c ****  * ==============================================================================================*/
 372:App/STM32F4-Discovery/tcpCLI.c **** 
 373:App/STM32F4-Discovery/tcpCLI.c **** portBASE_TYPE prvMotorCommand ( 	int8_t *pcWriteBuffer, 
 374:App/STM32F4-Discovery/tcpCLI.c **** 						size_t xWriteBufferLen, 
 375:App/STM32F4-Discovery/tcpCLI.c **** 						const int8_t *pcCommandString)
 376:App/STM32F4-Discovery/tcpCLI.c **** {
 1443              		.loc 1 376 0
 1444              		.cfi_startproc
 1445              		@ args = 0, pretend = 0, frame = 40
 1446              		@ frame_needed = 1, uses_anonymous_args = 0
 1447 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1448              	.LCFI6:
 1449              		.cfi_def_cfa_offset 24
 1450              		.cfi_offset 4, -24
 1451              		.cfi_offset 5, -20
 1452              		.cfi_offset 6, -16
 1453              		.cfi_offset 7, -12
 1454              		.cfi_offset 8, -8
 1455              		.cfi_offset 14, -4
 1456 0004 90B0     		sub	sp, sp, #64
 1457              	.LCFI7:
 1458              		.cfi_def_cfa_offset 88
 1459 0006 06AF     		add	r7, sp, #24
 1460              	.LCFI8:
 1461              		.cfi_def_cfa 7, 64
 1462 0008 F860     		str	r0, [r7, #12]
 1463 000a B960     		str	r1, [r7, #8]
 1464 000c 7A60     		str	r2, [r7, #4]
 377:App/STM32F4-Discovery/tcpCLI.c **** 	/* globals: 
 378:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	socket 
 379:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	setSpeedHandle
 380:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	QSpd_Handle
 381:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	QStatus_handle
 382:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	
 383:App/STM32F4-Discovery/tcpCLI.c **** 	 **/
 384:App/STM32F4-Discovery/tcpCLI.c **** 
 385:App/STM32F4-Discovery/tcpCLI.c **** 	int8_t *Option, *Param, *Value;
 386:App/STM32F4-Discovery/tcpCLI.c **** 	int xOptionLength, xParamLength, xValueLength; 
 387:App/STM32F4-Discovery/tcpCLI.c **** 	//QueueTelegram telegram; 
 388:App/STM32F4-Discovery/tcpCLI.c **** 	
 389:App/STM32F4-Discovery/tcpCLI.c **** 	// get option from command line 
 390:App/STM32F4-Discovery/tcpCLI.c **** 
 391:App/STM32F4-Discovery/tcpCLI.c **** 	Option = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1465              		.loc 1 391 0
 1466 000e 07F11803 		add	r3, r7, #24
 1467 0012 7868     		ldr	r0, [r7, #4]
 1468 0014 0121     		movs	r1, #1
 1469 0016 1A46     		mov	r2, r3
 1470 0018 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1471 001c 7862     		str	r0, [r7, #36]
 392:App/STM32F4-Discovery/tcpCLI.c **** 					  1,  		   // first parameter
 393:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xOptionLength // parameter string length
 394:App/STM32F4-Discovery/tcpCLI.c **** 					  
 395:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 396:App/STM32F4-Discovery/tcpCLI.c **** 
 397:App/STM32F4-Discovery/tcpCLI.c **** 	if ( Option == NULL)
 1472              		.loc 1 397 0
 1473 001e 7B6A     		ldr	r3, [r7, #36]
 1474 0020 002B     		cmp	r3, #0
 1475 0022 0ED1     		bne	.L32
 398:App/STM32F4-Discovery/tcpCLI.c **** 	{
 399:App/STM32F4-Discovery/tcpCLI.c **** 		sprintf(pcWriteBuffer, "To few arguments. \n\n\0");
 1476              		.loc 1 399 0
 1477 0024 FA68     		ldr	r2, [r7, #12]
 1478 0026 9C4B     		ldr	r3, .L54
 1479 0028 1546     		mov	r5, r2
 1480 002a 1C46     		mov	r4, r3
 1481 002c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1482 002e 2860     		str	r0, [r5]	@ unaligned
 1483 0030 6960     		str	r1, [r5, #4]	@ unaligned
 1484 0032 AA60     		str	r2, [r5, #8]	@ unaligned
 1485 0034 EB60     		str	r3, [r5, #12]	@ unaligned
 1486 0036 2068     		ldr	r0, [r4]	@ unaligned
 1487 0038 2861     		str	r0, [r5, #16]	@ unaligned
 1488 003a 2379     		ldrb	r3, [r4, #4]
 1489 003c 2B75     		strb	r3, [r5, #20]
 400:App/STM32F4-Discovery/tcpCLI.c **** 		return pdFALSE;
 1490              		.loc 1 400 0
 1491 003e 0023     		movs	r3, #0
 1492 0040 36E2     		b	.L53
 1493              	.L32:
 401:App/STM32F4-Discovery/tcpCLI.c **** 	}
 402:App/STM32F4-Discovery/tcpCLI.c **** 
 403:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp(Option, "help", 4))
 1494              		.loc 1 403 0
 1495 0042 786A     		ldr	r0, [r7, #36]
 1496 0044 9549     		ldr	r1, .L54+4
 1497 0046 0422     		movs	r2, #4
 1498 0048 FFF7FEFF 		bl	strncmp
 1499 004c 0346     		mov	r3, r0
 1500 004e 002B     		cmp	r3, #0
 1501 0050 0BD1     		bne	.L34
 404:App/STM32F4-Discovery/tcpCLI.c **** 	{
 405:App/STM32F4-Discovery/tcpCLI.c **** 		strcpy(pcWriteBuffer, 
 1502              		.loc 1 405 0
 1503 0052 FA68     		ldr	r2, [r7, #12]
 1504 0054 924B     		ldr	r3, .L54+8
 1505 0056 1146     		mov	r1, r2
 1506 0058 1A46     		mov	r2, r3
 1507 005a BC23     		movs	r3, #188
 1508 005c 0846     		mov	r0, r1
 1509 005e 1146     		mov	r1, r2
 1510 0060 1A46     		mov	r2, r3
 1511 0062 FFF7FEFF 		bl	memcpy
 406:App/STM32F4-Discovery/tcpCLI.c **** 			"Usage and parameters\n"
 407:App/STM32F4-Discovery/tcpCLI.c **** 			"options:\n"
 408:App/STM32F4-Discovery/tcpCLI.c **** 			"\tget - get motor parameter value\n"
 409:App/STM32F4-Discovery/tcpCLI.c **** 			"\tset - set motor parameter value\n"
 410:App/STM32F4-Discovery/tcpCLI.c **** 			"\tstart - starts motor\n"
 411:App/STM32F4-Discovery/tcpCLI.c **** 			"\tstop - stops motor\n"
 412:App/STM32F4-Discovery/tcpCLI.c **** 			"parametrs:\n"
 413:App/STM32F4-Discovery/tcpCLI.c **** 			"\tspeed - sets speed\n"
 414:App/STM32F4-Discovery/tcpCLI.c **** 			"\tupramp\n"
 415:App/STM32F4-Discovery/tcpCLI.c **** 			"\tdownramp\n"
 416:App/STM32F4-Discovery/tcpCLI.c **** 
 417:App/STM32F4-Discovery/tcpCLI.c **** 			
 418:App/STM32F4-Discovery/tcpCLI.c **** 			"\0"
 419:App/STM32F4-Discovery/tcpCLI.c **** 
 420:App/STM32F4-Discovery/tcpCLI.c **** 		      );
 421:App/STM32F4-Discovery/tcpCLI.c **** 
 422:App/STM32F4-Discovery/tcpCLI.c **** 		return pdPASS;
 1512              		.loc 1 422 0
 1513 0066 0123     		movs	r3, #1
 1514 0068 22E2     		b	.L53
 1515              	.L34:
 423:App/STM32F4-Discovery/tcpCLI.c **** 	}
 424:App/STM32F4-Discovery/tcpCLI.c **** 
 425:App/STM32F4-Discovery/tcpCLI.c **** 
 426:App/STM32F4-Discovery/tcpCLI.c ****     //	vTaskResume(motorHBHandle);
 427:App/STM32F4-Discovery/tcpCLI.c **** 
 428:App/STM32F4-Discovery/tcpCLI.c **** 
 429:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 430:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND SET [parameter name] [value]
 431:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 432:App/STM32F4-Discovery/tcpCLI.c **** 
 433:App/STM32F4-Discovery/tcpCLI.c **** 	if( !strncmp( Option, "set", 3) ) 
 1516              		.loc 1 433 0
 1517 006a 786A     		ldr	r0, [r7, #36]
 1518 006c 8D49     		ldr	r1, .L54+12
 1519 006e 0322     		movs	r2, #3
 1520 0070 FFF7FEFF 		bl	strncmp
 1521 0074 0346     		mov	r3, r0
 1522 0076 002B     		cmp	r3, #0
 1523 0078 33D1     		bne	.L35
 434:App/STM32F4-Discovery/tcpCLI.c **** 	{
 435:App/STM32F4-Discovery/tcpCLI.c **** 
 436:App/STM32F4-Discovery/tcpCLI.c **** 		// get parameter from command line 
 437:App/STM32F4-Discovery/tcpCLI.c **** 	
 438:App/STM32F4-Discovery/tcpCLI.c **** 		Param = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1524              		.loc 1 438 0
 1525 007a 07F11403 		add	r3, r7, #20
 1526 007e 7868     		ldr	r0, [r7, #4]
 1527 0080 0221     		movs	r1, #2
 1528 0082 1A46     		mov	r2, r3
 1529 0084 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1530 0088 3862     		str	r0, [r7, #32]
 439:App/STM32F4-Discovery/tcpCLI.c **** 					  2,  		   // 2nd parameter
 440:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xParamLength // parameter string length
 441:App/STM32F4-Discovery/tcpCLI.c **** 					  
 442:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 443:App/STM32F4-Discovery/tcpCLI.c **** 		Value = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1531              		.loc 1 443 0
 1532 008a 07F11003 		add	r3, r7, #16
 1533 008e 7868     		ldr	r0, [r7, #4]
 1534 0090 0321     		movs	r1, #3
 1535 0092 1A46     		mov	r2, r3
 1536 0094 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1537 0098 F861     		str	r0, [r7, #28]
 444:App/STM32F4-Discovery/tcpCLI.c **** 					  3,  		   // 2nd parameter
 445:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xValueLength // parameter string length
 446:App/STM32F4-Discovery/tcpCLI.c **** 					  
 447:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 448:App/STM32F4-Discovery/tcpCLI.c **** 		
 449:App/STM32F4-Discovery/tcpCLI.c **** 		// return pdFALSE if there is no 3rd parameter 
 450:App/STM32F4-Discovery/tcpCLI.c **** 
 451:App/STM32F4-Discovery/tcpCLI.c **** 		if (Value==NULL||Param==NULL)
 1538              		.loc 1 451 0
 1539 009a FB69     		ldr	r3, [r7, #28]
 1540 009c 002B     		cmp	r3, #0
 1541 009e 02D0     		beq	.L36
 1542              		.loc 1 451 0 is_stmt 0 discriminator 1
 1543 00a0 3B6A     		ldr	r3, [r7, #32]
 1544 00a2 002B     		cmp	r3, #0
 1545 00a4 06D1     		bne	.L37
 1546              	.L36:
 452:App/STM32F4-Discovery/tcpCLI.c **** 		{
 453:App/STM32F4-Discovery/tcpCLI.c **** 			strcpy(pcWriteBuffer, xMotorCommand.pcHelpString);
 1547              		.loc 1 453 0 is_stmt 1
 1548 00a6 804B     		ldr	r3, .L54+16
 1549 00a8 F868     		ldr	r0, [r7, #12]
 1550 00aa 1946     		mov	r1, r3
 1551 00ac FFF7FEFF 		bl	strcpy
 454:App/STM32F4-Discovery/tcpCLI.c **** 
 455:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 
 1552              		.loc 1 455 0
 1553 00b0 0023     		movs	r3, #0
 1554 00b2 FDE1     		b	.L53
 1555              	.L37:
 456:App/STM32F4-Discovery/tcpCLI.c **** 
 457:App/STM32F4-Discovery/tcpCLI.c **** 		}
 458:App/STM32F4-Discovery/tcpCLI.c **** 
 459:App/STM32F4-Discovery/tcpCLI.c **** 		
 460:App/STM32F4-Discovery/tcpCLI.c **** 		if ( handleVariable_set ( 
 1556              		.loc 1 460 0
 1557 00b4 7B69     		ldr	r3, [r7, #20]
 1558 00b6 7D4A     		ldr	r2, .L54+20
 1559 00b8 1068     		ldr	r0, [r2]
 1560 00ba 3969     		ldr	r1, [r7, #16]
 1561 00bc 7C4A     		ldr	r2, .L54+24
 1562 00be 1268     		ldr	r2, [r2]
 1563 00c0 0090     		str	r0, [sp]
 1564 00c2 F869     		ldr	r0, [r7, #28]
 1565 00c4 0190     		str	r0, [sp, #4]
 1566 00c6 0291     		str	r1, [sp, #8]
 1567 00c8 0392     		str	r2, [sp, #12]
 1568 00ca F868     		ldr	r0, [r7, #12]
 1569 00cc B968     		ldr	r1, [r7, #8]
 1570 00ce 3A6A     		ldr	r2, [r7, #32]
 1571 00d0 FFF7FEFF 		bl	handleVariable_set
 1572 00d4 0346     		mov	r3, r0
 1573 00d6 002B     		cmp	r3, #0
 1574 00d8 01D0     		beq	.L38
 461:App/STM32F4-Discovery/tcpCLI.c **** 				           pcWriteBuffer, 
 462:App/STM32F4-Discovery/tcpCLI.c **** 					   xWriteBufferLen,
 463:App/STM32F4-Discovery/tcpCLI.c **** 					   Param, 
 464:App/STM32F4-Discovery/tcpCLI.c **** 					   xParamLength, 
 465:App/STM32F4-Discovery/tcpCLI.c **** 					   QSpd_handle, 
 466:App/STM32F4-Discovery/tcpCLI.c **** 					   Value,
 467:App/STM32F4-Discovery/tcpCLI.c **** 					   xValueLength,  
 468:App/STM32F4-Discovery/tcpCLI.c **** 					   socket_0)) return pdPASS;
 1575              		.loc 1 468 0
 1576 00da 0123     		movs	r3, #1
 1577 00dc E8E1     		b	.L53
 1578              	.L38:
 469:App/STM32F4-Discovery/tcpCLI.c **** 
 470:App/STM32F4-Discovery/tcpCLI.c **** 		
 471:App/STM32F4-Discovery/tcpCLI.c **** 			
 472:App/STM32F4-Discovery/tcpCLI.c **** 		return pdFALSE;
 1579              		.loc 1 472 0
 1580 00de 0023     		movs	r3, #0
 1581 00e0 E6E1     		b	.L53
 1582              	.L35:
 473:App/STM32F4-Discovery/tcpCLI.c **** 
 474:App/STM32F4-Discovery/tcpCLI.c **** 	}
 475:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 476:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND GET [parameter name] [value]
 477:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 478:App/STM32F4-Discovery/tcpCLI.c **** 
 479:App/STM32F4-Discovery/tcpCLI.c **** 
 480:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "get", 3))
 1583              		.loc 1 480 0
 1584 00e2 786A     		ldr	r0, [r7, #36]
 1585 00e4 7349     		ldr	r1, .L54+28
 1586 00e6 0322     		movs	r2, #3
 1587 00e8 FFF7FEFF 		bl	strncmp
 1588 00ec 0346     		mov	r3, r0
 1589 00ee 002B     		cmp	r3, #0
 1590 00f0 40F0F480 		bne	.L39
 481:App/STM32F4-Discovery/tcpCLI.c **** 	{
 482:App/STM32F4-Discovery/tcpCLI.c **** 		// get parameter from command line 
 483:App/STM32F4-Discovery/tcpCLI.c **** 	
 484:App/STM32F4-Discovery/tcpCLI.c **** 		Param = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1591              		.loc 1 484 0
 1592 00f4 07F11403 		add	r3, r7, #20
 1593 00f8 7868     		ldr	r0, [r7, #4]
 1594 00fa 0221     		movs	r1, #2
 1595 00fc 1A46     		mov	r2, r3
 1596 00fe FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1597 0102 3862     		str	r0, [r7, #32]
 485:App/STM32F4-Discovery/tcpCLI.c **** 					  2,  		   // 2nd parameter
 486:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xParamLength // parameter string length
 487:App/STM32F4-Discovery/tcpCLI.c **** 					  
 488:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 489:App/STM32F4-Discovery/tcpCLI.c **** 			
 490:App/STM32F4-Discovery/tcpCLI.c **** 		// return pdFALSE if there is no 3rd parameter 
 491:App/STM32F4-Discovery/tcpCLI.c **** 
 492:App/STM32F4-Discovery/tcpCLI.c **** 		if(Param==NULL)
 1598              		.loc 1 492 0
 1599 0104 3B6A     		ldr	r3, [r7, #32]
 1600 0106 002B     		cmp	r3, #0
 1601 0108 40F0B380 		bne	.L40
 493:App/STM32F4-Discovery/tcpCLI.c **** 		{
 494:App/STM32F4-Discovery/tcpCLI.c **** 			telegramS.Qcmd = GETDATA;
 1602              		.loc 1 494 0
 1603 010c 6A4B     		ldr	r3, .L54+32
 1604 010e 0122     		movs	r2, #1
 1605 0110 1A70     		strb	r2, [r3]
 495:App/STM32F4-Discovery/tcpCLI.c **** 		
 496:App/STM32F4-Discovery/tcpCLI.c **** 			if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) )
 1606              		.loc 1 496 0
 1607 0112 664B     		ldr	r3, .L54+20
 1608 0114 1A68     		ldr	r2, [r3]
 1609 0116 694B     		ldr	r3, .L54+36
 1610 0118 1B68     		ldr	r3, [r3]
 1611 011a 1046     		mov	r0, r2
 1612 011c 6649     		ldr	r1, .L54+32
 1613 011e 1A46     		mov	r2, r3
 1614 0120 0023     		movs	r3, #0
 1615 0122 FFF7FEFF 		bl	xQueueGenericSend
 1616 0126 0346     		mov	r3, r0
 1617 0128 002B     		cmp	r3, #0
 1618 012a 00F08F80 		beq	.L41
 497:App/STM32F4-Discovery/tcpCLI.c **** 			{	
 498:App/STM32F4-Discovery/tcpCLI.c **** 					
 499:App/STM32F4-Discovery/tcpCLI.c **** 				if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay)== pdPASS)
 1619              		.loc 1 499 0
 1620 012e 5F4B     		ldr	r3, .L54+20
 1621 0130 1A68     		ldr	r2, [r3]
 1622 0132 624B     		ldr	r3, .L54+36
 1623 0134 1B68     		ldr	r3, [r3]
 1624 0136 1046     		mov	r0, r2
 1625 0138 6149     		ldr	r1, .L54+40
 1626 013a 1A46     		mov	r2, r3
 1627 013c 0023     		movs	r3, #0
 1628 013e FFF7FEFF 		bl	xQueueGenericReceive
 1629 0142 0346     		mov	r3, r0
 1630 0144 012B     		cmp	r3, #1
 1631 0146 70D1     		bne	.L42
 500:App/STM32F4-Discovery/tcpCLI.c **** 				{
 501:App/STM32F4-Discovery/tcpCLI.c **** 					if ( telegramR.Qcmd == SUCCSESS) 
 1632              		.loc 1 501 0
 1633 0148 5D4B     		ldr	r3, .L54+40
 1634 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1635 014c 062B     		cmp	r3, #6
 1636 014e 5DD1     		bne	.L43
 502:App/STM32F4-Discovery/tcpCLI.c **** 					{
 503:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 504:App/STM32F4-Discovery/tcpCLI.c **** 					telegramR.data[3]/100,
 1637              		.loc 1 504 0
 1638 0150 5B4B     		ldr	r3, .L54+40
 1639 0152 DA89     		ldrh	r2, [r3, #14]
 503:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 1640              		.loc 1 503 0
 1641 0154 5B4B     		ldr	r3, .L54+44
 1642 0156 A3FB0203 		umull	r0, r3, r3, r2
 1643 015a 5B09     		lsrs	r3, r3, #5
 1644 015c 9BB2     		uxth	r3, r3
 1645 015e 1A46     		mov	r2, r3
 505:App/STM32F4-Discovery/tcpCLI.c **** 					telegramR.data[3] % 100);
 1646              		.loc 1 505 0
 1647 0160 574B     		ldr	r3, .L54+40
 1648 0162 DB89     		ldrh	r3, [r3, #14]
 503:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 1649              		.loc 1 503 0
 1650 0164 5749     		ldr	r1, .L54+44
 1651 0166 A1FB0381 		umull	r8, r1, r1, r3
 1652 016a 4909     		lsrs	r1, r1, #5
 1653 016c 6420     		movs	r0, #100
 1654 016e 00FB01F1 		mul	r1, r0, r1
 1655 0172 5B1A     		subs	r3, r3, r1
 1656 0174 9BB2     		uxth	r3, r3
 1657 0176 F868     		ldr	r0, [r7, #12]
 1658 0178 5349     		ldr	r1, .L54+48
 1659 017a FFF7FEFF 		bl	sprintf
 506:App/STM32F4-Discovery/tcpCLI.c **** 
 507:App/STM32F4-Discovery/tcpCLI.c **** 
 508:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 509:App/STM32F4-Discovery/tcpCLI.c **** 							"Power In=%d, Iout=%d, Vin=%d, "
 510:App/STM32F4-Discovery/tcpCLI.c **** 							"PrcOut=%d.%d, RPMOut=%d, "
 511:App/STM32F4-Discovery/tcpCLI.c **** 							"InternalTemp=%d.%d\n",
 512:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[8],
 1660              		.loc 1 512 0
 1661 017e 504B     		ldr	r3, .L54+40
 1662 0180 1B8B     		ldrh	r3, [r3, #24]
 508:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1663              		.loc 1 508 0
 1664 0182 1A46     		mov	r2, r3
 513:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[7],
 1665              		.loc 1 513 0
 1666 0184 4E4B     		ldr	r3, .L54+40
 1667 0186 DB8A     		ldrh	r3, [r3, #22]
 508:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1668              		.loc 1 508 0
 1669 0188 1C46     		mov	r4, r3
 514:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[6],
 1670              		.loc 1 514 0
 1671 018a 4D4B     		ldr	r3, .L54+40
 1672 018c 9B8A     		ldrh	r3, [r3, #20]
 508:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1673              		.loc 1 508 0
 1674 018e 9E46     		mov	lr, r3
 515:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[3]/100,
 1675              		.loc 1 515 0
 1676 0190 4B4B     		ldr	r3, .L54+40
 1677 0192 D989     		ldrh	r1, [r3, #14]
 508:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1678              		.loc 1 508 0
 1679 0194 4B4B     		ldr	r3, .L54+44
 1680 0196 A3FB01C3 		umull	ip, r3, r3, r1
 1681 019a 5B09     		lsrs	r3, r3, #5
 1682 019c 9BB2     		uxth	r3, r3
 1683 019e 1E46     		mov	r6, r3
 516:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[3] % 100, 
 1684              		.loc 1 516 0
 1685 01a0 474B     		ldr	r3, .L54+40
 1686 01a2 DB89     		ldrh	r3, [r3, #14]
 508:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1687              		.loc 1 508 0
 1688 01a4 4749     		ldr	r1, .L54+44
 1689 01a6 A1FB0301 		umull	r0, r1, r1, r3
 1690 01aa 4909     		lsrs	r1, r1, #5
 1691 01ac 6420     		movs	r0, #100
 1692 01ae 00FB01F1 		mul	r1, r0, r1
 1693 01b2 5B1A     		subs	r3, r3, r1
 1694 01b4 9BB2     		uxth	r3, r3
 1695 01b6 1D46     		mov	r5, r3
 517:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[4],
 1696              		.loc 1 517 0
 1697 01b8 414B     		ldr	r3, .L54+40
 1698 01ba 1B8A     		ldrh	r3, [r3, #16]
 508:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1699              		.loc 1 508 0
 1700 01bc 1846     		mov	r0, r3
 518:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[5]/100,
 1701              		.loc 1 518 0
 1702 01be 404B     		ldr	r3, .L54+40
 1703 01c0 598A     		ldrh	r1, [r3, #18]
 508:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1704              		.loc 1 508 0
 1705 01c2 404B     		ldr	r3, .L54+44
 1706 01c4 A3FB0183 		umull	r8, r3, r3, r1
 1707 01c8 5B09     		lsrs	r3, r3, #5
 1708 01ca 9BB2     		uxth	r3, r3
 1709 01cc 1946     		mov	r1, r3
 519:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[5] % 100);
 1710              		.loc 1 519 0
 1711 01ce 3C4B     		ldr	r3, .L54+40
 1712 01d0 5B8A     		ldrh	r3, [r3, #18]
 508:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer ,
 1713              		.loc 1 508 0
 1714 01d2 DFF8F0C0 		ldr	ip, .L54+44
 1715 01d6 ACFB038C 		umull	r8, ip, ip, r3
 1716 01da 4FEA5C1C 		lsr	ip, ip, #5
 1717 01de 4FF06408 		mov	r8, #100
 1718 01e2 08FB0CFC 		mul	ip, r8, ip
 1719 01e6 CCEB0303 		rsb	r3, ip, r3
 1720 01ea 9BB2     		uxth	r3, r3
 1721 01ec CDF800E0 		str	lr, [sp]
 1722 01f0 0196     		str	r6, [sp, #4]
 1723 01f2 0295     		str	r5, [sp, #8]
 1724 01f4 0390     		str	r0, [sp, #12]
 1725 01f6 0491     		str	r1, [sp, #16]
 1726 01f8 0593     		str	r3, [sp, #20]
 1727 01fa F868     		ldr	r0, [r7, #12]
 1728 01fc 3349     		ldr	r1, .L54+52
 1729 01fe 2346     		mov	r3, r4
 1730 0200 FFF7FEFF 		bl	sprintf
 520:App/STM32F4-Discovery/tcpCLI.c **** 						xWriteBufferLen = 50 ; 	
 1731              		.loc 1 520 0
 1732 0204 3223     		movs	r3, #50
 1733 0206 BB60     		str	r3, [r7, #8]
 521:App/STM32F4-Discovery/tcpCLI.c **** 						//send( socket_0, buf, len, 0);
 522:App/STM32F4-Discovery/tcpCLI.c **** 
 523:App/STM32F4-Discovery/tcpCLI.c **** 					
 524:App/STM32F4-Discovery/tcpCLI.c **** 						return pdPASS;
 1734              		.loc 1 524 0
 1735 0208 0123     		movs	r3, #1
 1736 020a 51E1     		b	.L53
 1737              	.L43:
 525:App/STM32F4-Discovery/tcpCLI.c **** 
 526:App/STM32F4-Discovery/tcpCLI.c **** 					}
 527:App/STM32F4-Discovery/tcpCLI.c **** 					else
 528:App/STM32F4-Discovery/tcpCLI.c **** 					{
 529:App/STM32F4-Discovery/tcpCLI.c **** 						sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1738              		.loc 1 529 0
 1739 020c FA68     		ldr	r2, [r7, #12]
 1740 020e 304B     		ldr	r3, .L54+56
 1741 0210 1546     		mov	r5, r2
 1742 0212 1C46     		mov	r4, r3
 1743 0214 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1744 0216 2860     		str	r0, [r5]	@ unaligned
 1745 0218 6960     		str	r1, [r5, #4]	@ unaligned
 1746 021a AA60     		str	r2, [r5, #8]	@ unaligned
 1747 021c EB60     		str	r3, [r5, #12]	@ unaligned
 1748 021e 2068     		ldr	r0, [r4]	@ unaligned
 1749 0220 2861     		str	r0, [r5, #16]	@ unaligned
 530:App/STM32F4-Discovery/tcpCLI.c **** 			       			xWriteBufferLen = 19; 	
 1750              		.loc 1 530 0
 1751 0222 1323     		movs	r3, #19
 1752 0224 BB60     		str	r3, [r7, #8]
 531:App/STM32F4-Discovery/tcpCLI.c **** 						//send( socket_0, buf, len, 0);
 532:App/STM32F4-Discovery/tcpCLI.c **** 
 533:App/STM32F4-Discovery/tcpCLI.c **** 						return pdFALSE;
 1753              		.loc 1 533 0
 1754 0226 0023     		movs	r3, #0
 1755 0228 42E1     		b	.L53
 1756              	.L42:
 534:App/STM32F4-Discovery/tcpCLI.c **** 
 535:App/STM32F4-Discovery/tcpCLI.c **** 
 536:App/STM32F4-Discovery/tcpCLI.c **** 					}
 537:App/STM32F4-Discovery/tcpCLI.c **** 				}
 538:App/STM32F4-Discovery/tcpCLI.c **** 				else
 539:App/STM32F4-Discovery/tcpCLI.c **** 				{
 540:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 541:App/STM32F4-Discovery/tcpCLI.c **** 					// send error via TCP 
 542:App/STM32F4-Discovery/tcpCLI.c **** 		
 543:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 1757              		.loc 1 543 0
 1758 022a FA68     		ldr	r2, [r7, #12]
 1759 022c 294B     		ldr	r3, .L54+60
 1760 022e 1546     		mov	r5, r2
 1761 0230 1C46     		mov	r4, r3
 1762 0232 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1763 0234 2860     		str	r0, [r5]	@ unaligned
 1764 0236 6960     		str	r1, [r5, #4]	@ unaligned
 1765 0238 AA60     		str	r2, [r5, #8]	@ unaligned
 1766 023a EB60     		str	r3, [r5, #12]	@ unaligned
 1767 023c 07CC     		ldmia	r4!, {r0, r1, r2}
 1768 023e 2861     		str	r0, [r5, #16]	@ unaligned
 1769 0240 6961     		str	r1, [r5, #20]	@ unaligned
 1770 0242 AA61     		str	r2, [r5, #24]	@ unaligned
 544:App/STM32F4-Discovery/tcpCLI.c **** 	 				xWriteBufferLen = 27; 	
 1771              		.loc 1 544 0
 1772 0244 1B23     		movs	r3, #27
 1773 0246 BB60     		str	r3, [r7, #8]
 545:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 546:App/STM32F4-Discovery/tcpCLI.c **** 
 547:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE; 	
 1774              		.loc 1 547 0
 1775 0248 0023     		movs	r3, #0
 1776 024a 31E1     		b	.L53
 1777              	.L41:
 548:App/STM32F4-Discovery/tcpCLI.c **** 				}	
 549:App/STM32F4-Discovery/tcpCLI.c **** 			}
 550:App/STM32F4-Discovery/tcpCLI.c **** 			else
 551:App/STM32F4-Discovery/tcpCLI.c **** 			{
 552:App/STM32F4-Discovery/tcpCLI.c **** 			
 553:App/STM32F4-Discovery/tcpCLI.c **** 				// send to Queue was unsuccsessful
 554:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 555:App/STM32F4-Discovery/tcpCLI.c **** 		
 556:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 1778              		.loc 1 556 0
 1779 024c FA68     		ldr	r2, [r7, #12]
 1780 024e 224B     		ldr	r3, .L54+64
 1781 0250 1446     		mov	r4, r2
 1782 0252 1D46     		mov	r5, r3
 1783 0254 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1784 0256 2060     		str	r0, [r4]	@ unaligned
 1785 0258 6160     		str	r1, [r4, #4]	@ unaligned
 1786 025a A260     		str	r2, [r4, #8]	@ unaligned
 1787 025c E360     		str	r3, [r4, #12]	@ unaligned
 1788 025e 2868     		ldr	r0, [r5]	@ unaligned
 1789 0260 2061     		str	r0, [r4, #16]	@ unaligned
 1790 0262 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1791 0264 AB79     		ldrb	r3, [r5, #6]
 1792 0266 A282     		strh	r2, [r4, #20]	@ unaligned
 1793 0268 A375     		strb	r3, [r4, #22]
 557:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 22; 	
 1794              		.loc 1 557 0
 1795 026a 1623     		movs	r3, #22
 1796 026c BB60     		str	r3, [r7, #8]
 558:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket, buf, len, 0);
 559:App/STM32F4-Discovery/tcpCLI.c **** 
 560:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 1797              		.loc 1 560 0
 1798 026e 0023     		movs	r3, #0
 1799 0270 1EE1     		b	.L53
 1800              	.L40:
 561:App/STM32F4-Discovery/tcpCLI.c **** 			}
 562:App/STM32F4-Discovery/tcpCLI.c **** 		
 563:App/STM32F4-Discovery/tcpCLI.c **** 		
 564:App/STM32F4-Discovery/tcpCLI.c **** 		}
 565:App/STM32F4-Discovery/tcpCLI.c **** 
 566:App/STM32F4-Discovery/tcpCLI.c **** 		
 567:App/STM32F4-Discovery/tcpCLI.c **** 		if ( handleVariable_get ( 
 1801              		.loc 1 567 0
 1802 0272 7B69     		ldr	r3, [r7, #20]
 1803 0274 0D4A     		ldr	r2, .L54+20
 1804 0276 1168     		ldr	r1, [r2]
 1805 0278 0D4A     		ldr	r2, .L54+24
 1806 027a 1268     		ldr	r2, [r2]
 1807 027c 0091     		str	r1, [sp]
 1808 027e 0192     		str	r2, [sp, #4]
 1809 0280 F868     		ldr	r0, [r7, #12]
 1810 0282 B968     		ldr	r1, [r7, #8]
 1811 0284 3A6A     		ldr	r2, [r7, #32]
 1812 0286 FFF7FEFF 		bl	handleVariable_get
 1813 028a 0346     		mov	r3, r0
 1814 028c 002B     		cmp	r3, #0
 1815 028e 01D0     		beq	.L44
 568:App/STM32F4-Discovery/tcpCLI.c **** 				        pcWriteBuffer, 
 569:App/STM32F4-Discovery/tcpCLI.c **** 					   xWriteBufferLen,
 570:App/STM32F4-Discovery/tcpCLI.c **** 	
 571:App/STM32F4-Discovery/tcpCLI.c **** 				           Param, 
 572:App/STM32F4-Discovery/tcpCLI.c **** 					   xParamLength, 
 573:App/STM32F4-Discovery/tcpCLI.c **** 					   QSpd_handle, 
 574:App/STM32F4-Discovery/tcpCLI.c **** 					   socket_0)) return pdPASS;
 1816              		.loc 1 574 0
 1817 0290 0123     		movs	r3, #1
 1818 0292 0DE1     		b	.L53
 1819              	.L44:
 575:App/STM32F4-Discovery/tcpCLI.c **** 		return pdFALSE;
 1820              		.loc 1 575 0
 1821 0294 0023     		movs	r3, #0
 1822 0296 0BE1     		b	.L53
 1823              	.L55:
 1824              		.align	2
 1825              	.L54:
 1826 0298 AC010000 		.word	.LC16
 1827 029c C4010000 		.word	.LC17
 1828 02a0 CC010000 		.word	.LC18
 1829 02a4 8C020000 		.word	.LC19
 1830 02a8 08000000 		.word	.LC1
 1831 02ac 00000000 		.word	QSpd_handle
 1832 02b0 00000000 		.word	socket_0
 1833 02b4 90020000 		.word	.LC20
 1834 02b8 00000000 		.word	telegramS
 1835 02bc 00000000 		.word	xDelay
 1836 02c0 00000000 		.word	telegramR
 1837 02c4 1F85EB51 		.word	1374389535
 1838 02c8 94010000 		.word	.LC15
 1839 02cc 94020000 		.word	.LC21
 1840 02d0 C8000000 		.word	.LC7
 1841 02d4 DC000000 		.word	.LC8
 1842 02d8 F8000000 		.word	.LC9
 1843              	.L39:
 576:App/STM32F4-Discovery/tcpCLI.c **** 
 577:App/STM32F4-Discovery/tcpCLI.c **** 
 578:App/STM32F4-Discovery/tcpCLI.c **** 	}
 579:App/STM32F4-Discovery/tcpCLI.c **** 		
 580:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 581:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND STOP 
 582:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 583:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "stop", 4))
 1844              		.loc 1 583 0
 1845 02dc 786A     		ldr	r0, [r7, #36]
 1846 02de 7749     		ldr	r1, .L56
 1847 02e0 0422     		movs	r2, #4
 1848 02e2 FFF7FEFF 		bl	strncmp
 1849 02e6 0346     		mov	r3, r0
 1850 02e8 002B     		cmp	r3, #0
 1851 02ea 69D1     		bne	.L45
 584:App/STM32F4-Discovery/tcpCLI.c **** 	{
 585:App/STM32F4-Discovery/tcpCLI.c **** 
 586:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = STOP; 
 1852              		.loc 1 586 0
 1853 02ec 744B     		ldr	r3, .L56+4
 1854 02ee 0522     		movs	r2, #5
 1855 02f0 1A70     		strb	r2, [r3]
 587:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5; 
 1856              		.loc 1 587 0
 1857 02f2 734B     		ldr	r3, .L56+4
 1858 02f4 0522     		movs	r2, #5
 1859 02f6 5A60     		str	r2, [r3, #4]
 588:App/STM32F4-Discovery/tcpCLI.c **** 			// send value to setSpeed_task via Queue 
 589:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) )
 1860              		.loc 1 589 0
 1861 02f8 724B     		ldr	r3, .L56+8
 1862 02fa 1A68     		ldr	r2, [r3]
 1863 02fc 724B     		ldr	r3, .L56+12
 1864 02fe 1B68     		ldr	r3, [r3]
 1865 0300 1046     		mov	r0, r2
 1866 0302 6F49     		ldr	r1, .L56+4
 1867 0304 1A46     		mov	r2, r3
 1868 0306 0023     		movs	r3, #0
 1869 0308 FFF7FEFF 		bl	xQueueGenericSend
 1870 030c 0346     		mov	r3, r0
 1871 030e 002B     		cmp	r3, #0
 1872 0310 43D0     		beq	.L46
 590:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 591:App/STM32F4-Discovery/tcpCLI.c **** 					
 592:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay)== pdPASS)
 1873              		.loc 1 592 0
 1874 0312 6C4B     		ldr	r3, .L56+8
 1875 0314 1A68     		ldr	r2, [r3]
 1876 0316 6C4B     		ldr	r3, .L56+12
 1877 0318 1B68     		ldr	r3, [r3]
 1878 031a 1046     		mov	r0, r2
 1879 031c 6B49     		ldr	r1, .L56+16
 1880 031e 1A46     		mov	r2, r3
 1881 0320 0023     		movs	r3, #0
 1882 0322 FFF7FEFF 		bl	xQueueGenericReceive
 1883 0326 0346     		mov	r3, r0
 1884 0328 012B     		cmp	r3, #1
 1885 032a 25D1     		bne	.L47
 593:App/STM32F4-Discovery/tcpCLI.c **** 			{
 594:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 1886              		.loc 1 594 0
 1887 032c 674B     		ldr	r3, .L56+16
 1888 032e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1889 0330 062B     		cmp	r3, #6
 1890 0332 12D1     		bne	.L48
 595:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 596:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer ,"Motor succsesfully stopped.\n\n");
 1891              		.loc 1 596 0
 1892 0334 FA68     		ldr	r2, [r7, #12]
 1893 0336 664B     		ldr	r3, .L56+20
 1894 0338 1546     		mov	r5, r2
 1895 033a 1C46     		mov	r4, r3
 1896 033c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1897 033e 2860     		str	r0, [r5]	@ unaligned
 1898 0340 6960     		str	r1, [r5, #4]	@ unaligned
 1899 0342 AA60     		str	r2, [r5, #8]	@ unaligned
 1900 0344 EB60     		str	r3, [r5, #12]	@ unaligned
 1901 0346 07CC     		ldmia	r4!, {r0, r1, r2}
 1902 0348 2861     		str	r0, [r5, #16]	@ unaligned
 1903 034a 6961     		str	r1, [r5, #20]	@ unaligned
 1904 034c AA61     		str	r2, [r5, #24]	@ unaligned
 1905 034e 2388     		ldrh	r3, [r4]	@ unaligned
 1906 0350 AB83     		strh	r3, [r5, #28]	@ unaligned
 597:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 29 ; 	
 1907              		.loc 1 597 0
 1908 0352 1D23     		movs	r3, #29
 1909 0354 BB60     		str	r3, [r7, #8]
 598:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 599:App/STM32F4-Discovery/tcpCLI.c **** 
 600:App/STM32F4-Discovery/tcpCLI.c **** 					
 601:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 1910              		.loc 1 601 0
 1911 0356 0123     		movs	r3, #1
 1912 0358 AAE0     		b	.L53
 1913              	.L48:
 602:App/STM32F4-Discovery/tcpCLI.c **** 
 603:App/STM32F4-Discovery/tcpCLI.c **** 				}
 604:App/STM32F4-Discovery/tcpCLI.c **** 				else
 605:App/STM32F4-Discovery/tcpCLI.c **** 				{
 606:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1914              		.loc 1 606 0
 1915 035a FA68     		ldr	r2, [r7, #12]
 1916 035c 5D4B     		ldr	r3, .L56+24
 1917 035e 1546     		mov	r5, r2
 1918 0360 1C46     		mov	r4, r3
 1919 0362 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1920 0364 2860     		str	r0, [r5]	@ unaligned
 1921 0366 6960     		str	r1, [r5, #4]	@ unaligned
 1922 0368 AA60     		str	r2, [r5, #8]	@ unaligned
 1923 036a EB60     		str	r3, [r5, #12]	@ unaligned
 1924 036c 2068     		ldr	r0, [r4]	@ unaligned
 1925 036e 2861     		str	r0, [r5, #16]	@ unaligned
 607:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 1926              		.loc 1 607 0
 1927 0370 1323     		movs	r3, #19
 1928 0372 BB60     		str	r3, [r7, #8]
 608:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 609:App/STM32F4-Discovery/tcpCLI.c **** 
 610:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 1929              		.loc 1 610 0
 1930 0374 0023     		movs	r3, #0
 1931 0376 9BE0     		b	.L53
 1932              	.L47:
 611:App/STM32F4-Discovery/tcpCLI.c **** 
 612:App/STM32F4-Discovery/tcpCLI.c **** 
 613:App/STM32F4-Discovery/tcpCLI.c **** 				}
 614:App/STM32F4-Discovery/tcpCLI.c **** 			}
 615:App/STM32F4-Discovery/tcpCLI.c **** 			else
 616:App/STM32F4-Discovery/tcpCLI.c **** 			{
 617:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 618:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 619:App/STM32F4-Discovery/tcpCLI.c **** 		
 620:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 1933              		.loc 1 620 0
 1934 0378 FA68     		ldr	r2, [r7, #12]
 1935 037a 574B     		ldr	r3, .L56+28
 1936 037c 1546     		mov	r5, r2
 1937 037e 1C46     		mov	r4, r3
 1938 0380 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1939 0382 2860     		str	r0, [r5]	@ unaligned
 1940 0384 6960     		str	r1, [r5, #4]	@ unaligned
 1941 0386 AA60     		str	r2, [r5, #8]	@ unaligned
 1942 0388 EB60     		str	r3, [r5, #12]	@ unaligned
 1943 038a 07CC     		ldmia	r4!, {r0, r1, r2}
 1944 038c 2861     		str	r0, [r5, #16]	@ unaligned
 1945 038e 6961     		str	r1, [r5, #20]	@ unaligned
 1946 0390 AA61     		str	r2, [r5, #24]	@ unaligned
 621:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 1947              		.loc 1 621 0
 1948 0392 1B23     		movs	r3, #27
 1949 0394 BB60     		str	r3, [r7, #8]
 622:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 623:App/STM32F4-Discovery/tcpCLI.c **** 
 624:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 1950              		.loc 1 624 0
 1951 0396 0023     		movs	r3, #0
 1952 0398 8AE0     		b	.L53
 1953              	.L46:
 625:App/STM32F4-Discovery/tcpCLI.c **** 			}
 626:App/STM32F4-Discovery/tcpCLI.c **** 		}
 627:App/STM32F4-Discovery/tcpCLI.c **** 		else
 628:App/STM32F4-Discovery/tcpCLI.c **** 		{
 629:App/STM32F4-Discovery/tcpCLI.c **** 			
 630:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 631:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 632:App/STM32F4-Discovery/tcpCLI.c **** 		
 633:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 1954              		.loc 1 633 0
 1955 039a FA68     		ldr	r2, [r7, #12]
 1956 039c 4F4B     		ldr	r3, .L56+32
 1957 039e 1446     		mov	r4, r2
 1958 03a0 1D46     		mov	r5, r3
 1959 03a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1960 03a4 2060     		str	r0, [r4]	@ unaligned
 1961 03a6 6160     		str	r1, [r4, #4]	@ unaligned
 1962 03a8 A260     		str	r2, [r4, #8]	@ unaligned
 1963 03aa E360     		str	r3, [r4, #12]	@ unaligned
 1964 03ac 2868     		ldr	r0, [r5]	@ unaligned
 1965 03ae 2061     		str	r0, [r4, #16]	@ unaligned
 1966 03b0 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1967 03b2 AB79     		ldrb	r3, [r5, #6]
 1968 03b4 A282     		strh	r2, [r4, #20]	@ unaligned
 1969 03b6 A375     		strb	r3, [r4, #22]
 634:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1970              		.loc 1 634 0
 1971 03b8 1623     		movs	r3, #22
 1972 03ba BB60     		str	r3, [r7, #8]
 635:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 636:App/STM32F4-Discovery/tcpCLI.c **** 
 637:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1973              		.loc 1 637 0
 1974 03bc 0023     		movs	r3, #0
 1975 03be 77E0     		b	.L53
 1976              	.L45:
 638:App/STM32F4-Discovery/tcpCLI.c **** 		}
 639:App/STM32F4-Discovery/tcpCLI.c **** 					
 640:App/STM32F4-Discovery/tcpCLI.c **** 	}
 641:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 642:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND START
 643:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 644:App/STM32F4-Discovery/tcpCLI.c **** 
 645:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "start", 5))
 1977              		.loc 1 645 0
 1978 03c0 786A     		ldr	r0, [r7, #36]
 1979 03c2 4749     		ldr	r1, .L56+36
 1980 03c4 0522     		movs	r2, #5
 1981 03c6 FFF7FEFF 		bl	strncmp
 1982 03ca 0346     		mov	r3, r0
 1983 03cc 002B     		cmp	r3, #0
 1984 03ce 69D1     		bne	.L49
 646:App/STM32F4-Discovery/tcpCLI.c **** 	{
 647:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = START; 
 1985              		.loc 1 647 0
 1986 03d0 3B4B     		ldr	r3, .L56+4
 1987 03d2 0422     		movs	r2, #4
 1988 03d4 1A70     		strb	r2, [r3]
 648:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5; 
 1989              		.loc 1 648 0
 1990 03d6 3A4B     		ldr	r3, .L56+4
 1991 03d8 0522     		movs	r2, #5
 1992 03da 5A60     		str	r2, [r3, #4]
 649:App/STM32F4-Discovery/tcpCLI.c **** 			// send value to setSpeed_task via Queue 
 650:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 1993              		.loc 1 650 0
 1994 03dc 394B     		ldr	r3, .L56+8
 1995 03de 1A68     		ldr	r2, [r3]
 1996 03e0 394B     		ldr	r3, .L56+12
 1997 03e2 1B68     		ldr	r3, [r3]
 1998 03e4 1046     		mov	r0, r2
 1999 03e6 3649     		ldr	r1, .L56+4
 2000 03e8 1A46     		mov	r2, r3
 2001 03ea 0023     		movs	r3, #0
 2002 03ec FFF7FEFF 		bl	xQueueGenericSend
 2003 03f0 0346     		mov	r3, r0
 2004 03f2 012B     		cmp	r3, #1
 2005 03f4 43D1     		bne	.L50
 651:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 652:App/STM32F4-Discovery/tcpCLI.c **** 		//	vTaskDelay(500/portTICK_RATE_MS);		
 653:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay) == pdPASS)
 2006              		.loc 1 653 0
 2007 03f6 334B     		ldr	r3, .L56+8
 2008 03f8 1A68     		ldr	r2, [r3]
 2009 03fa 334B     		ldr	r3, .L56+12
 2010 03fc 1B68     		ldr	r3, [r3]
 2011 03fe 1046     		mov	r0, r2
 2012 0400 3249     		ldr	r1, .L56+16
 2013 0402 1A46     		mov	r2, r3
 2014 0404 0023     		movs	r3, #0
 2015 0406 FFF7FEFF 		bl	xQueueGenericReceive
 2016 040a 0346     		mov	r3, r0
 2017 040c 012B     		cmp	r3, #1
 2018 040e 25D1     		bne	.L51
 654:App/STM32F4-Discovery/tcpCLI.c **** 			{
 655:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 2019              		.loc 1 655 0
 2020 0410 2E4B     		ldr	r3, .L56+16
 2021 0412 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2022 0414 062B     		cmp	r3, #6
 2023 0416 12D1     		bne	.L52
 656:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 657:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer , "Motor succsesfully started.\n\n");
 2024              		.loc 1 657 0
 2025 0418 FA68     		ldr	r2, [r7, #12]
 2026 041a 324B     		ldr	r3, .L56+40
 2027 041c 1546     		mov	r5, r2
 2028 041e 1C46     		mov	r4, r3
 2029 0420 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2030 0422 2860     		str	r0, [r5]	@ unaligned
 2031 0424 6960     		str	r1, [r5, #4]	@ unaligned
 2032 0426 AA60     		str	r2, [r5, #8]	@ unaligned
 2033 0428 EB60     		str	r3, [r5, #12]	@ unaligned
 2034 042a 07CC     		ldmia	r4!, {r0, r1, r2}
 2035 042c 2861     		str	r0, [r5, #16]	@ unaligned
 2036 042e 6961     		str	r1, [r5, #20]	@ unaligned
 2037 0430 AA61     		str	r2, [r5, #24]	@ unaligned
 2038 0432 2388     		ldrh	r3, [r4]	@ unaligned
 2039 0434 AB83     		strh	r3, [r5, #28]	@ unaligned
 658:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 29; 	
 2040              		.loc 1 658 0
 2041 0436 1D23     		movs	r3, #29
 2042 0438 BB60     		str	r3, [r7, #8]
 659:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 660:App/STM32F4-Discovery/tcpCLI.c **** 
 661:App/STM32F4-Discovery/tcpCLI.c **** 					
 662:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 2043              		.loc 1 662 0
 2044 043a 0123     		movs	r3, #1
 2045 043c 38E0     		b	.L53
 2046              	.L52:
 663:App/STM32F4-Discovery/tcpCLI.c **** 
 664:App/STM32F4-Discovery/tcpCLI.c **** 				}
 665:App/STM32F4-Discovery/tcpCLI.c **** 				else
 666:App/STM32F4-Discovery/tcpCLI.c **** 				{
 667:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 2047              		.loc 1 667 0
 2048 043e FA68     		ldr	r2, [r7, #12]
 2049 0440 244B     		ldr	r3, .L56+24
 2050 0442 1546     		mov	r5, r2
 2051 0444 1C46     		mov	r4, r3
 2052 0446 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2053 0448 2860     		str	r0, [r5]	@ unaligned
 2054 044a 6960     		str	r1, [r5, #4]	@ unaligned
 2055 044c AA60     		str	r2, [r5, #8]	@ unaligned
 2056 044e EB60     		str	r3, [r5, #12]	@ unaligned
 2057 0450 2068     		ldr	r0, [r4]	@ unaligned
 2058 0452 2861     		str	r0, [r5, #16]	@ unaligned
 668:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 2059              		.loc 1 668 0
 2060 0454 1323     		movs	r3, #19
 2061 0456 BB60     		str	r3, [r7, #8]
 669:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 670:App/STM32F4-Discovery/tcpCLI.c **** 
 671:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 2062              		.loc 1 671 0
 2063 0458 0023     		movs	r3, #0
 2064 045a 29E0     		b	.L53
 2065              	.L51:
 672:App/STM32F4-Discovery/tcpCLI.c **** 
 673:App/STM32F4-Discovery/tcpCLI.c **** 
 674:App/STM32F4-Discovery/tcpCLI.c **** 				}
 675:App/STM32F4-Discovery/tcpCLI.c **** 			}
 676:App/STM32F4-Discovery/tcpCLI.c **** 			else
 677:App/STM32F4-Discovery/tcpCLI.c **** 			{
 678:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 679:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 680:App/STM32F4-Discovery/tcpCLI.c **** 		
 681:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 2066              		.loc 1 681 0
 2067 045c FA68     		ldr	r2, [r7, #12]
 2068 045e 1E4B     		ldr	r3, .L56+28
 2069 0460 1546     		mov	r5, r2
 2070 0462 1C46     		mov	r4, r3
 2071 0464 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2072 0466 2860     		str	r0, [r5]	@ unaligned
 2073 0468 6960     		str	r1, [r5, #4]	@ unaligned
 2074 046a AA60     		str	r2, [r5, #8]	@ unaligned
 2075 046c EB60     		str	r3, [r5, #12]	@ unaligned
 2076 046e 07CC     		ldmia	r4!, {r0, r1, r2}
 2077 0470 2861     		str	r0, [r5, #16]	@ unaligned
 2078 0472 6961     		str	r1, [r5, #20]	@ unaligned
 2079 0474 AA61     		str	r2, [r5, #24]	@ unaligned
 682:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 2080              		.loc 1 682 0
 2081 0476 1B23     		movs	r3, #27
 2082 0478 BB60     		str	r3, [r7, #8]
 683:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 684:App/STM32F4-Discovery/tcpCLI.c **** 
 685:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 2083              		.loc 1 685 0
 2084 047a 0023     		movs	r3, #0
 2085 047c 18E0     		b	.L53
 2086              	.L50:
 686:App/STM32F4-Discovery/tcpCLI.c **** 			}
 687:App/STM32F4-Discovery/tcpCLI.c **** 		}
 688:App/STM32F4-Discovery/tcpCLI.c **** 		else
 689:App/STM32F4-Discovery/tcpCLI.c **** 		{
 690:App/STM32F4-Discovery/tcpCLI.c **** 			
 691:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 692:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 693:App/STM32F4-Discovery/tcpCLI.c **** 		
 694:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer,"Error sending Queue!\n\n");
 2087              		.loc 1 694 0
 2088 047e FA68     		ldr	r2, [r7, #12]
 2089 0480 164B     		ldr	r3, .L56+32
 2090 0482 1446     		mov	r4, r2
 2091 0484 1D46     		mov	r5, r3
 2092 0486 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 2093 0488 2060     		str	r0, [r4]	@ unaligned
 2094 048a 6160     		str	r1, [r4, #4]	@ unaligned
 2095 048c A260     		str	r2, [r4, #8]	@ unaligned
 2096 048e E360     		str	r3, [r4, #12]	@ unaligned
 2097 0490 2868     		ldr	r0, [r5]	@ unaligned
 2098 0492 2061     		str	r0, [r4, #16]	@ unaligned
 2099 0494 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 2100 0496 AB79     		ldrb	r3, [r5, #6]
 2101 0498 A282     		strh	r2, [r4, #20]	@ unaligned
 2102 049a A375     		strb	r3, [r4, #22]
 695:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 2103              		.loc 1 695 0
 2104 049c 1623     		movs	r3, #22
 2105 049e BB60     		str	r3, [r7, #8]
 696:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket_0, buf, len, 0);
 697:App/STM32F4-Discovery/tcpCLI.c **** 
 698:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 2106              		.loc 1 698 0
 2107 04a0 0023     		movs	r3, #0
 2108 04a2 05E0     		b	.L53
 2109              	.L49:
 699:App/STM32F4-Discovery/tcpCLI.c **** 		}
 700:App/STM32F4-Discovery/tcpCLI.c **** 
 701:App/STM32F4-Discovery/tcpCLI.c **** 
 702:App/STM32F4-Discovery/tcpCLI.c **** 	}
 703:App/STM32F4-Discovery/tcpCLI.c **** 
 704:App/STM32F4-Discovery/tcpCLI.c **** 
 705:App/STM32F4-Discovery/tcpCLI.c **** 	strcpy(pcWriteBuffer, xMotorCommand.pcHelpString);
 2110              		.loc 1 705 0
 2111 04a4 104B     		ldr	r3, .L56+44
 2112 04a6 F868     		ldr	r0, [r7, #12]
 2113 04a8 1946     		mov	r1, r3
 2114 04aa FFF7FEFF 		bl	strcpy
 706:App/STM32F4-Discovery/tcpCLI.c **** 		
 707:App/STM32F4-Discovery/tcpCLI.c **** 	return pdFALSE;
 2115              		.loc 1 707 0
 2116 04ae 0023     		movs	r3, #0
 2117              	.L53:
 708:App/STM32F4-Discovery/tcpCLI.c **** 
 709:App/STM32F4-Discovery/tcpCLI.c **** 
 710:App/STM32F4-Discovery/tcpCLI.c **** }
 2118              		.loc 1 710 0
 2119 04b0 1846     		mov	r0, r3
 2120 04b2 2837     		adds	r7, r7, #40
 2121 04b4 BD46     		mov	sp, r7
 2122              		@ sp needed
 2123 04b6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2124              	.L57:
 2125 04ba 00BF     		.align	2
 2126              	.L56:
 2127 04bc E0020000 		.word	.LC22
 2128 04c0 00000000 		.word	telegramS
 2129 04c4 00000000 		.word	QSpd_handle
 2130 04c8 00000000 		.word	xDelay
 2131 04cc 00000000 		.word	telegramR
 2132 04d0 E8020000 		.word	.LC23
 2133 04d4 C8000000 		.word	.LC7
 2134 04d8 DC000000 		.word	.LC8
 2135 04dc F8000000 		.word	.LC9
 2136 04e0 08030000 		.word	.LC24
 2137 04e4 10030000 		.word	.LC25
 2138 04e8 08000000 		.word	.LC1
 2139              		.cfi_endproc
 2140              	.LFE112:
 2142              		.section	.rodata
 2143 032e 0000     		.align	2
 2144              	.LC26:
 2145 0330 6B696C6C 		.ascii	"kill\000"
 2145      00
 2146 0335 000000   		.align	2
 2147              	.LC27:
 2148 0338 5461736B 		.ascii	"Task: motorHB succsessfully killed\012\000\000"
 2148      3A206D6F 
 2148      746F7248 
 2148      42207375 
 2148      63637365 
 2149 035d 000000   		.align	2
 2150              	.LC28:
 2151 0360 6D6F746F 		.ascii	"motorHB\000"
 2151      72484200 
 2152              		.align	2
 2153              	.LC29:
 2154 0368 5461736B 		.ascii	"Task: motorHB succsessfully started\012\000\000"
 2154      3A206D6F 
 2154      746F7248 
 2154      42207375 
 2154      63637365 
 2155 038e 0000     		.section	.text.prvTaskStatsCommand,"ax",%progbits
 2156              		.align	2
 2157              		.global	prvTaskStatsCommand
 2158              		.thumb
 2159              		.thumb_func
 2161              	prvTaskStatsCommand:
 2162              	.LFB113:
 711:App/STM32F4-Discovery/tcpCLI.c **** 
 712:App/STM32F4-Discovery/tcpCLI.c **** portBASE_TYPE prvTaskStatsCommand ( 	int8_t *pcWriteBuffer, 
 713:App/STM32F4-Discovery/tcpCLI.c **** 						size_t xWriteBufferLen, 
 714:App/STM32F4-Discovery/tcpCLI.c **** 						const int8_t *pcCommandString)
 715:App/STM32F4-Discovery/tcpCLI.c **** {
 2163              		.loc 1 715 0
 2164              		.cfi_startproc
 2165              		@ args = 0, pretend = 0, frame = 24
 2166              		@ frame_needed = 1, uses_anonymous_args = 0
 2167 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2168              	.LCFI9:
 2169              		.cfi_def_cfa_offset 24
 2170              		.cfi_offset 4, -24
 2171              		.cfi_offset 5, -20
 2172              		.cfi_offset 6, -16
 2173              		.cfi_offset 7, -12
 2174              		.cfi_offset 8, -8
 2175              		.cfi_offset 14, -4
 2176 0004 8AB0     		sub	sp, sp, #40
 2177              	.LCFI10:
 2178              		.cfi_def_cfa_offset 64
 2179 0006 04AF     		add	r7, sp, #16
 2180              	.LCFI11:
 2181              		.cfi_def_cfa 7, 48
 2182 0008 F860     		str	r0, [r7, #12]
 2183 000a B960     		str	r1, [r7, #8]
 2184 000c 7A60     		str	r2, [r7, #4]
 716:App/STM32F4-Discovery/tcpCLI.c **** 
 717:App/STM32F4-Discovery/tcpCLI.c **** 	int8_t *Option, *Param, *Value;
 718:App/STM32F4-Discovery/tcpCLI.c **** 	int xOptionLength, xParamLength, xValueLength; 
 719:App/STM32F4-Discovery/tcpCLI.c **** 	//QueueTelegram telegram; 
 720:App/STM32F4-Discovery/tcpCLI.c **** 	
 721:App/STM32F4-Discovery/tcpCLI.c **** 	// get option from command line 
 722:App/STM32F4-Discovery/tcpCLI.c **** 
 723:App/STM32F4-Discovery/tcpCLI.c **** 	Option = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 2185              		.loc 1 723 0
 2186 000e 07F11003 		add	r3, r7, #16
 2187 0012 7868     		ldr	r0, [r7, #4]
 2188 0014 0121     		movs	r1, #1
 2189 0016 1A46     		mov	r2, r3
 2190 0018 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 2191 001c 7861     		str	r0, [r7, #20]
 724:App/STM32F4-Discovery/tcpCLI.c **** 					  1,  		   // first parameter
 725:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xOptionLength // parameter string length
 726:App/STM32F4-Discovery/tcpCLI.c **** 					  
 727:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 728:App/STM32F4-Discovery/tcpCLI.c ****     	( void ) xWriteBufferLen;
 729:App/STM32F4-Discovery/tcpCLI.c **** 	if ( Option == NULL)
 2192              		.loc 1 729 0
 2193 001e 7B69     		ldr	r3, [r7, #20]
 2194 0020 002B     		cmp	r3, #0
 2195 0022 02D1     		bne	.L59
 730:App/STM32F4-Discovery/tcpCLI.c **** 	{
 731:App/STM32F4-Discovery/tcpCLI.c **** 		 vTaskList( pcWriteBuffer);
 2196              		.loc 1 731 0
 2197 0024 F868     		ldr	r0, [r7, #12]
 2198 0026 FFF7FEFF 		bl	vTaskList
 2199              	.L59:
 732:App/STM32F4-Discovery/tcpCLI.c **** 	}	
 733:App/STM32F4-Discovery/tcpCLI.c ****     /* For simplicity, this function assumes the output buffer is large enough
 734:App/STM32F4-Discovery/tcpCLI.c ****     to hold all the text generated by executing the vTaskList() API function,
 735:App/STM32F4-Discovery/tcpCLI.c ****     so the xWriteBufferLen parameter is not used. */
 736:App/STM32F4-Discovery/tcpCLI.c **** 
 737:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "kill", 7))
 2200              		.loc 1 737 0
 2201 002a 7869     		ldr	r0, [r7, #20]
 2202 002c 2D49     		ldr	r1, .L66
 2203 002e 0722     		movs	r2, #7
 2204 0030 FFF7FEFF 		bl	strncmp
 2205 0034 0346     		mov	r3, r0
 2206 0036 002B     		cmp	r3, #0
 2207 0038 1CD1     		bne	.L60
 738:App/STM32F4-Discovery/tcpCLI.c **** 	{
 739:App/STM32F4-Discovery/tcpCLI.c **** 	
 740:App/STM32F4-Discovery/tcpCLI.c **** 		vTaskDelete(motorHeartBeatHandle);
 2208              		.loc 1 740 0
 2209 003a 2B4B     		ldr	r3, .L66+4
 2210 003c 1B68     		ldr	r3, [r3]
 2211 003e 1846     		mov	r0, r3
 2212 0040 FFF7FEFF 		bl	vTaskDelete
 741:App/STM32F4-Discovery/tcpCLI.c **** 		strcpy ( pcWriteBuffer, "Task: motorHB succsessfully killed\n\0");
 2213              		.loc 1 741 0
 2214 0044 FB68     		ldr	r3, [r7, #12]
 2215 0046 294A     		ldr	r2, .L66+8
 2216 0048 1446     		mov	r4, r2
 2217 004a 1D46     		mov	r5, r3
 2218 004c 04F12008 		add	r8, r4, #32
 2219              	.L61:
 2220 0050 2E46     		mov	r6, r5
 2221 0052 A446     		mov	ip, r4
 2222 0054 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 2223 0058 3060     		str	r0, [r6]	@ unaligned
 2224 005a 7160     		str	r1, [r6, #4]	@ unaligned
 2225 005c B260     		str	r2, [r6, #8]	@ unaligned
 2226 005e F360     		str	r3, [r6, #12]	@ unaligned
 2227 0060 1034     		adds	r4, r4, #16
 2228 0062 1035     		adds	r5, r5, #16
 2229 0064 4445     		cmp	r4, r8
 2230 0066 F3D1     		bne	.L61
 2231 0068 2B46     		mov	r3, r5
 2232 006a 2246     		mov	r2, r4
 2233 006c 1068     		ldr	r0, [r2]	@ unaligned
 2234 006e 1860     		str	r0, [r3]	@ unaligned
 742:App/STM32F4-Discovery/tcpCLI.c **** 		return pdPASS;
 2235              		.loc 1 742 0
 2236 0070 0123     		movs	r3, #1
 2237 0072 31E0     		b	.L65
 2238              	.L60:
 743:App/STM32F4-Discovery/tcpCLI.c **** 	}
 744:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "start", 5))
 2239              		.loc 1 744 0
 2240 0074 7869     		ldr	r0, [r7, #20]
 2241 0076 1E49     		ldr	r1, .L66+12
 2242 0078 0522     		movs	r2, #5
 2243 007a FFF7FEFF 		bl	strncmp
 2244 007e 0346     		mov	r3, r0
 2245 0080 002B     		cmp	r3, #0
 2246 0082 28D1     		bne	.L63
 745:App/STM32F4-Discovery/tcpCLI.c **** 	{
 746:App/STM32F4-Discovery/tcpCLI.c **** 		// set motor task 
 747:App/STM32F4-Discovery/tcpCLI.c **** 		xTaskCreate(motorHeartBeat_task, "motorHB", configMINIMAL_STACK_SIZE * 8,		       				
 2247              		.loc 1 747 0
 2248 0084 0123     		movs	r3, #1
 2249 0086 0093     		str	r3, [sp]
 2250 0088 174B     		ldr	r3, .L66+4
 2251 008a 0193     		str	r3, [sp, #4]
 2252 008c 0023     		movs	r3, #0
 2253 008e 0293     		str	r3, [sp, #8]
 2254 0090 0023     		movs	r3, #0
 2255 0092 0393     		str	r3, [sp, #12]
 2256 0094 1748     		ldr	r0, .L66+16
 2257 0096 1849     		ldr	r1, .L66+20
 2258 0098 4FF40062 		mov	r2, #2048
 2259 009c 0023     		movs	r3, #0
 2260 009e FFF7FEFF 		bl	xTaskGenericCreate
 748:App/STM32F4-Discovery/tcpCLI.c **** 			NULL, 0x1/*mainFLASH_TASK_PRIORITY*/ , &motorHeartBeatHandle);
 749:App/STM32F4-Discovery/tcpCLI.c **** 
 750:App/STM32F4-Discovery/tcpCLI.c **** 		strcpy ( pcWriteBuffer, "Task: motorHB succsessfully started\n\0");
 2261              		.loc 1 750 0
 2262 00a2 FB68     		ldr	r3, [r7, #12]
 2263 00a4 154A     		ldr	r2, .L66+24
 2264 00a6 1446     		mov	r4, r2
 2265 00a8 1D46     		mov	r5, r3
 2266 00aa 04F12008 		add	r8, r4, #32
 2267              	.L64:
 2268 00ae 2E46     		mov	r6, r5
 2269 00b0 A446     		mov	ip, r4
 2270 00b2 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 2271 00b6 3060     		str	r0, [r6]	@ unaligned
 2272 00b8 7160     		str	r1, [r6, #4]	@ unaligned
 2273 00ba B260     		str	r2, [r6, #8]	@ unaligned
 2274 00bc F360     		str	r3, [r6, #12]	@ unaligned
 2275 00be 1034     		adds	r4, r4, #16
 2276 00c0 1035     		adds	r5, r5, #16
 2277 00c2 4445     		cmp	r4, r8
 2278 00c4 F3D1     		bne	.L64
 2279 00c6 2B46     		mov	r3, r5
 2280 00c8 2246     		mov	r2, r4
 2281 00ca 1068     		ldr	r0, [r2]	@ unaligned
 2282 00cc 1860     		str	r0, [r3]	@ unaligned
 2283 00ce 1279     		ldrb	r2, [r2, #4]
 2284 00d0 1A71     		strb	r2, [r3, #4]
 751:App/STM32F4-Discovery/tcpCLI.c **** 
 752:App/STM32F4-Discovery/tcpCLI.c **** 	
 753:App/STM32F4-Discovery/tcpCLI.c **** 		return pdPASS;	
 2285              		.loc 1 753 0
 2286 00d2 0123     		movs	r3, #1
 2287 00d4 00E0     		b	.L65
 2288              	.L63:
 754:App/STM32F4-Discovery/tcpCLI.c **** 	}
 755:App/STM32F4-Discovery/tcpCLI.c **** 
 756:App/STM32F4-Discovery/tcpCLI.c **** 
 757:App/STM32F4-Discovery/tcpCLI.c ****  
 758:App/STM32F4-Discovery/tcpCLI.c **** 
 759:App/STM32F4-Discovery/tcpCLI.c ****     /* The entire table was written directly to the output buffer.  Execution
 760:App/STM32F4-Discovery/tcpCLI.c ****     of this command is complete, so return pdFALSE. */
 761:App/STM32F4-Discovery/tcpCLI.c ****     return pdFALSE;
 2289              		.loc 1 761 0
 2290 00d6 0023     		movs	r3, #0
 2291              	.L65:
 762:App/STM32F4-Discovery/tcpCLI.c **** }
 2292              		.loc 1 762 0
 2293 00d8 1846     		mov	r0, r3
 2294 00da 1837     		adds	r7, r7, #24
 2295 00dc BD46     		mov	sp, r7
 2296              		@ sp needed
 2297 00de BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2298              	.L67:
 2299 00e2 00BF     		.align	2
 2300              	.L66:
 2301 00e4 30030000 		.word	.LC26
 2302 00e8 00000000 		.word	motorHeartBeatHandle
 2303 00ec 38030000 		.word	.LC27
 2304 00f0 08030000 		.word	.LC24
 2305 00f4 00000000 		.word	motorHeartBeat_task
 2306 00f8 60030000 		.word	.LC28
 2307 00fc 68030000 		.word	.LC29
 2308              		.cfi_endproc
 2309              	.LFE113:
 2311              		.text
 2312              	.Letext0:
 2313              		.file 2 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/lib/gcc/arm-none-eabi/4.8.4/include/std
 2314              		.file 3 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/machine/_default_
 2315              		.file 4 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/stdint.h"
 2316              		.file 5 "Source/portable/GCC/ARM_CM4F/portmacro.h"
 2317              		.file 6 "Source/include/task.h"
 2318              		.file 7 "Source/include/queue.h"
 2319              		.file 8 "Source/include/semphr.h"
 2320              		.file 9 "App/STM32F4-Discovery/main.h"
 2321              		.file 10 "Source/FreeRTOS-Plus-CLI/FreeRTOS_CLI.h"
 2322              		.file 11 "App/STM32F4-Discovery/modbus_mk.h"
 2323              		.file 12 "App/STM32F4-Discovery/tcpCLI.h"
 2324              		.file 13 "App/STM32F4-Discovery/Libraries/CMSIS/Include/core_cm4.h"
 2325              		.file 14 "App/STM32F4-Discovery/spi.h"
 2326              		.file 15 "App/STM32F4-Discovery/W5200.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 tcpCLI.c
                            *COM*:0000000000000004 xSemaphoreDMASPI
                            *COM*:0000000000000004 xSmphrUSART
                            *COM*:0000000000000004 xSemaphoreREADLEN
                            *COM*:0000000000000004 motorHeartBeatHandle
                            *COM*:0000000000000004 motorHBHandle
                            *COM*:0000000000000004 QSpd_handle
                            *COM*:0000000000000004 QTCP_handle
                            *COM*:0000000000000004 socket_0
                            *COM*:00000000000007d0 bufferTX
                            *COM*:00000000000007d0 bufferRX
                            *COM*:0000000000000004 bufferRXidx
                            *COM*:0000000000000004 bufferTXidx
                            *COM*:0000000000000004 dat_lengthRX
                            *COM*:0000000000000004 dat_lengthTX
                            *COM*:0000000000000004 set_macTaskHandle
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:35     .rodata.table_crc_hi:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:38     .rodata.table_crc_hi:0000000000000000 table_crc_hi
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:296    .rodata.table_crc_lo:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:299    .rodata.table_crc_lo:0000000000000000 table_crc_lo
                            *COM*:0000000000000004 fd
                            *COM*:0000000000000201 received_string
                            *COM*:0000000000000004 rx_length
                            *COM*:0000000000000014 input_Register
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:561    .rodata:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:569    .rodata.xMotorCommand:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:572    .rodata.xMotorCommand:0000000000000000 xMotorCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:1441   .text.prvMotorCommand:0000000000000000 prvMotorCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:586    .rodata.xTaskStatsCommand:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:589    .rodata.xTaskStatsCommand:0000000000000000 xTaskStatsCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:2161   .text.prvTaskStatsCommand:0000000000000000 prvTaskStatsCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:596    .data.xDelay:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:599    .data.xDelay:0000000000000000 xDelay
                            *COM*:000000000000001c telegramS
                            *COM*:000000000000001c telegramR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:640    .text.handleVariable_set:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:645    .text.handleVariable_set:0000000000000000 handleVariable_set
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:1066   .text.handleVariable_set:00000000000002a8 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:1082   .text.handleVariable_set:00000000000002e0 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:1200   .text.handleVariable_set:00000000000003a0 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:1215   .text.handleVariable_get:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:1220   .text.handleVariable_get:0000000000000000 handleVariable_get
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:1386   .text.handleVariable_get:0000000000000100 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:1436   .text.prvMotorCommand:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:1826   .text.prvMotorCommand:0000000000000298 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:1845   .text.prvMotorCommand:00000000000002dc $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:2127   .text.prvMotorCommand:00000000000004bc $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:2156   .text.prvTaskStatsCommand:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccaRQGfT.s:2301   .text.prvTaskStatsCommand:00000000000000e4 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
strncmp
atoi
sprintf
xQueueGenericSend
xQueueGenericReceive
FreeRTOS_CLIGetParameter
memcpy
strcpy
vTaskList
vTaskDelete
xTaskGenericCreate
motorHeartBeat_task
