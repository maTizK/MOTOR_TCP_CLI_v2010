   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"tcpCLI.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	xSemaphoreDMASPI,4,4
  20              		.section	.bss.xHigherPriorityTaskWoken,"aw",%nobits
  21              		.align	2
  24              	xHigherPriorityTaskWoken:
  25 0000 00000000 		.space	4
  26              		.comm	xSmphrUSART,4,4
  27              		.comm	motorHeartBeatHandle,4,4
  28              		.comm	motorHBHandle,4,4
  29              		.comm	QSpd_handle,4,4
  30              		.comm	QStatus_handle,4,4
  31              		.comm	socket_0,4,4
  32              		.comm	bufferTX,2000,4
  33              		.comm	bufferRX,2000,4
  34              		.comm	bufferRXidx,4,4
  35              		.comm	bufferTXidx,4,4
  36              		.comm	dat_lengthRX,4,4
  37              		.comm	dat_lengthTX,4,4
  38              		.comm	set_macTaskHandle,4,4
  39              		.section	.rodata.table_crc_hi,"a",%progbits
  40              		.align	2
  43              	table_crc_hi:
  44 0000 00       		.byte	0
  45 0001 C1       		.byte	-63
  46 0002 81       		.byte	-127
  47 0003 40       		.byte	64
  48 0004 01       		.byte	1
  49 0005 C0       		.byte	-64
  50 0006 80       		.byte	-128
  51 0007 41       		.byte	65
  52 0008 01       		.byte	1
  53 0009 C0       		.byte	-64
  54 000a 80       		.byte	-128
  55 000b 41       		.byte	65
  56 000c 00       		.byte	0
  57 000d C1       		.byte	-63
  58 000e 81       		.byte	-127
  59 000f 40       		.byte	64
  60 0010 01       		.byte	1
  61 0011 C0       		.byte	-64
  62 0012 80       		.byte	-128
  63 0013 41       		.byte	65
  64 0014 00       		.byte	0
  65 0015 C1       		.byte	-63
  66 0016 81       		.byte	-127
  67 0017 40       		.byte	64
  68 0018 00       		.byte	0
  69 0019 C1       		.byte	-63
  70 001a 81       		.byte	-127
  71 001b 40       		.byte	64
  72 001c 01       		.byte	1
  73 001d C0       		.byte	-64
  74 001e 80       		.byte	-128
  75 001f 41       		.byte	65
  76 0020 01       		.byte	1
  77 0021 C0       		.byte	-64
  78 0022 80       		.byte	-128
  79 0023 41       		.byte	65
  80 0024 00       		.byte	0
  81 0025 C1       		.byte	-63
  82 0026 81       		.byte	-127
  83 0027 40       		.byte	64
  84 0028 00       		.byte	0
  85 0029 C1       		.byte	-63
  86 002a 81       		.byte	-127
  87 002b 40       		.byte	64
  88 002c 01       		.byte	1
  89 002d C0       		.byte	-64
  90 002e 80       		.byte	-128
  91 002f 41       		.byte	65
  92 0030 00       		.byte	0
  93 0031 C1       		.byte	-63
  94 0032 81       		.byte	-127
  95 0033 40       		.byte	64
  96 0034 01       		.byte	1
  97 0035 C0       		.byte	-64
  98 0036 80       		.byte	-128
  99 0037 41       		.byte	65
 100 0038 01       		.byte	1
 101 0039 C0       		.byte	-64
 102 003a 80       		.byte	-128
 103 003b 41       		.byte	65
 104 003c 00       		.byte	0
 105 003d C1       		.byte	-63
 106 003e 81       		.byte	-127
 107 003f 40       		.byte	64
 108 0040 01       		.byte	1
 109 0041 C0       		.byte	-64
 110 0042 80       		.byte	-128
 111 0043 41       		.byte	65
 112 0044 00       		.byte	0
 113 0045 C1       		.byte	-63
 114 0046 81       		.byte	-127
 115 0047 40       		.byte	64
 116 0048 00       		.byte	0
 117 0049 C1       		.byte	-63
 118 004a 81       		.byte	-127
 119 004b 40       		.byte	64
 120 004c 01       		.byte	1
 121 004d C0       		.byte	-64
 122 004e 80       		.byte	-128
 123 004f 41       		.byte	65
 124 0050 00       		.byte	0
 125 0051 C1       		.byte	-63
 126 0052 81       		.byte	-127
 127 0053 40       		.byte	64
 128 0054 01       		.byte	1
 129 0055 C0       		.byte	-64
 130 0056 80       		.byte	-128
 131 0057 41       		.byte	65
 132 0058 01       		.byte	1
 133 0059 C0       		.byte	-64
 134 005a 80       		.byte	-128
 135 005b 41       		.byte	65
 136 005c 00       		.byte	0
 137 005d C1       		.byte	-63
 138 005e 81       		.byte	-127
 139 005f 40       		.byte	64
 140 0060 00       		.byte	0
 141 0061 C1       		.byte	-63
 142 0062 81       		.byte	-127
 143 0063 40       		.byte	64
 144 0064 01       		.byte	1
 145 0065 C0       		.byte	-64
 146 0066 80       		.byte	-128
 147 0067 41       		.byte	65
 148 0068 01       		.byte	1
 149 0069 C0       		.byte	-64
 150 006a 80       		.byte	-128
 151 006b 41       		.byte	65
 152 006c 00       		.byte	0
 153 006d C1       		.byte	-63
 154 006e 81       		.byte	-127
 155 006f 40       		.byte	64
 156 0070 01       		.byte	1
 157 0071 C0       		.byte	-64
 158 0072 80       		.byte	-128
 159 0073 41       		.byte	65
 160 0074 00       		.byte	0
 161 0075 C1       		.byte	-63
 162 0076 81       		.byte	-127
 163 0077 40       		.byte	64
 164 0078 00       		.byte	0
 165 0079 C1       		.byte	-63
 166 007a 81       		.byte	-127
 167 007b 40       		.byte	64
 168 007c 01       		.byte	1
 169 007d C0       		.byte	-64
 170 007e 80       		.byte	-128
 171 007f 41       		.byte	65
 172 0080 01       		.byte	1
 173 0081 C0       		.byte	-64
 174 0082 80       		.byte	-128
 175 0083 41       		.byte	65
 176 0084 00       		.byte	0
 177 0085 C1       		.byte	-63
 178 0086 81       		.byte	-127
 179 0087 40       		.byte	64
 180 0088 00       		.byte	0
 181 0089 C1       		.byte	-63
 182 008a 81       		.byte	-127
 183 008b 40       		.byte	64
 184 008c 01       		.byte	1
 185 008d C0       		.byte	-64
 186 008e 80       		.byte	-128
 187 008f 41       		.byte	65
 188 0090 00       		.byte	0
 189 0091 C1       		.byte	-63
 190 0092 81       		.byte	-127
 191 0093 40       		.byte	64
 192 0094 01       		.byte	1
 193 0095 C0       		.byte	-64
 194 0096 80       		.byte	-128
 195 0097 41       		.byte	65
 196 0098 01       		.byte	1
 197 0099 C0       		.byte	-64
 198 009a 80       		.byte	-128
 199 009b 41       		.byte	65
 200 009c 00       		.byte	0
 201 009d C1       		.byte	-63
 202 009e 81       		.byte	-127
 203 009f 40       		.byte	64
 204 00a0 00       		.byte	0
 205 00a1 C1       		.byte	-63
 206 00a2 81       		.byte	-127
 207 00a3 40       		.byte	64
 208 00a4 01       		.byte	1
 209 00a5 C0       		.byte	-64
 210 00a6 80       		.byte	-128
 211 00a7 41       		.byte	65
 212 00a8 01       		.byte	1
 213 00a9 C0       		.byte	-64
 214 00aa 80       		.byte	-128
 215 00ab 41       		.byte	65
 216 00ac 00       		.byte	0
 217 00ad C1       		.byte	-63
 218 00ae 81       		.byte	-127
 219 00af 40       		.byte	64
 220 00b0 01       		.byte	1
 221 00b1 C0       		.byte	-64
 222 00b2 80       		.byte	-128
 223 00b3 41       		.byte	65
 224 00b4 00       		.byte	0
 225 00b5 C1       		.byte	-63
 226 00b6 81       		.byte	-127
 227 00b7 40       		.byte	64
 228 00b8 00       		.byte	0
 229 00b9 C1       		.byte	-63
 230 00ba 81       		.byte	-127
 231 00bb 40       		.byte	64
 232 00bc 01       		.byte	1
 233 00bd C0       		.byte	-64
 234 00be 80       		.byte	-128
 235 00bf 41       		.byte	65
 236 00c0 00       		.byte	0
 237 00c1 C1       		.byte	-63
 238 00c2 81       		.byte	-127
 239 00c3 40       		.byte	64
 240 00c4 01       		.byte	1
 241 00c5 C0       		.byte	-64
 242 00c6 80       		.byte	-128
 243 00c7 41       		.byte	65
 244 00c8 01       		.byte	1
 245 00c9 C0       		.byte	-64
 246 00ca 80       		.byte	-128
 247 00cb 41       		.byte	65
 248 00cc 00       		.byte	0
 249 00cd C1       		.byte	-63
 250 00ce 81       		.byte	-127
 251 00cf 40       		.byte	64
 252 00d0 01       		.byte	1
 253 00d1 C0       		.byte	-64
 254 00d2 80       		.byte	-128
 255 00d3 41       		.byte	65
 256 00d4 00       		.byte	0
 257 00d5 C1       		.byte	-63
 258 00d6 81       		.byte	-127
 259 00d7 40       		.byte	64
 260 00d8 00       		.byte	0
 261 00d9 C1       		.byte	-63
 262 00da 81       		.byte	-127
 263 00db 40       		.byte	64
 264 00dc 01       		.byte	1
 265 00dd C0       		.byte	-64
 266 00de 80       		.byte	-128
 267 00df 41       		.byte	65
 268 00e0 01       		.byte	1
 269 00e1 C0       		.byte	-64
 270 00e2 80       		.byte	-128
 271 00e3 41       		.byte	65
 272 00e4 00       		.byte	0
 273 00e5 C1       		.byte	-63
 274 00e6 81       		.byte	-127
 275 00e7 40       		.byte	64
 276 00e8 00       		.byte	0
 277 00e9 C1       		.byte	-63
 278 00ea 81       		.byte	-127
 279 00eb 40       		.byte	64
 280 00ec 01       		.byte	1
 281 00ed C0       		.byte	-64
 282 00ee 80       		.byte	-128
 283 00ef 41       		.byte	65
 284 00f0 00       		.byte	0
 285 00f1 C1       		.byte	-63
 286 00f2 81       		.byte	-127
 287 00f3 40       		.byte	64
 288 00f4 01       		.byte	1
 289 00f5 C0       		.byte	-64
 290 00f6 80       		.byte	-128
 291 00f7 41       		.byte	65
 292 00f8 01       		.byte	1
 293 00f9 C0       		.byte	-64
 294 00fa 80       		.byte	-128
 295 00fb 41       		.byte	65
 296 00fc 00       		.byte	0
 297 00fd C1       		.byte	-63
 298 00fe 81       		.byte	-127
 299 00ff 40       		.byte	64
 300              		.section	.rodata.table_crc_lo,"a",%progbits
 301              		.align	2
 304              	table_crc_lo:
 305 0000 00       		.byte	0
 306 0001 C0       		.byte	-64
 307 0002 C1       		.byte	-63
 308 0003 01       		.byte	1
 309 0004 C3       		.byte	-61
 310 0005 03       		.byte	3
 311 0006 02       		.byte	2
 312 0007 C2       		.byte	-62
 313 0008 C6       		.byte	-58
 314 0009 06       		.byte	6
 315 000a 07       		.byte	7
 316 000b C7       		.byte	-57
 317 000c 05       		.byte	5
 318 000d C5       		.byte	-59
 319 000e C4       		.byte	-60
 320 000f 04       		.byte	4
 321 0010 CC       		.byte	-52
 322 0011 0C       		.byte	12
 323 0012 0D       		.byte	13
 324 0013 CD       		.byte	-51
 325 0014 0F       		.byte	15
 326 0015 CF       		.byte	-49
 327 0016 CE       		.byte	-50
 328 0017 0E       		.byte	14
 329 0018 0A       		.byte	10
 330 0019 CA       		.byte	-54
 331 001a CB       		.byte	-53
 332 001b 0B       		.byte	11
 333 001c C9       		.byte	-55
 334 001d 09       		.byte	9
 335 001e 08       		.byte	8
 336 001f C8       		.byte	-56
 337 0020 D8       		.byte	-40
 338 0021 18       		.byte	24
 339 0022 19       		.byte	25
 340 0023 D9       		.byte	-39
 341 0024 1B       		.byte	27
 342 0025 DB       		.byte	-37
 343 0026 DA       		.byte	-38
 344 0027 1A       		.byte	26
 345 0028 1E       		.byte	30
 346 0029 DE       		.byte	-34
 347 002a DF       		.byte	-33
 348 002b 1F       		.byte	31
 349 002c DD       		.byte	-35
 350 002d 1D       		.byte	29
 351 002e 1C       		.byte	28
 352 002f DC       		.byte	-36
 353 0030 14       		.byte	20
 354 0031 D4       		.byte	-44
 355 0032 D5       		.byte	-43
 356 0033 15       		.byte	21
 357 0034 D7       		.byte	-41
 358 0035 17       		.byte	23
 359 0036 16       		.byte	22
 360 0037 D6       		.byte	-42
 361 0038 D2       		.byte	-46
 362 0039 12       		.byte	18
 363 003a 13       		.byte	19
 364 003b D3       		.byte	-45
 365 003c 11       		.byte	17
 366 003d D1       		.byte	-47
 367 003e D0       		.byte	-48
 368 003f 10       		.byte	16
 369 0040 F0       		.byte	-16
 370 0041 30       		.byte	48
 371 0042 31       		.byte	49
 372 0043 F1       		.byte	-15
 373 0044 33       		.byte	51
 374 0045 F3       		.byte	-13
 375 0046 F2       		.byte	-14
 376 0047 32       		.byte	50
 377 0048 36       		.byte	54
 378 0049 F6       		.byte	-10
 379 004a F7       		.byte	-9
 380 004b 37       		.byte	55
 381 004c F5       		.byte	-11
 382 004d 35       		.byte	53
 383 004e 34       		.byte	52
 384 004f F4       		.byte	-12
 385 0050 3C       		.byte	60
 386 0051 FC       		.byte	-4
 387 0052 FD       		.byte	-3
 388 0053 3D       		.byte	61
 389 0054 FF       		.byte	-1
 390 0055 3F       		.byte	63
 391 0056 3E       		.byte	62
 392 0057 FE       		.byte	-2
 393 0058 FA       		.byte	-6
 394 0059 3A       		.byte	58
 395 005a 3B       		.byte	59
 396 005b FB       		.byte	-5
 397 005c 39       		.byte	57
 398 005d F9       		.byte	-7
 399 005e F8       		.byte	-8
 400 005f 38       		.byte	56
 401 0060 28       		.byte	40
 402 0061 E8       		.byte	-24
 403 0062 E9       		.byte	-23
 404 0063 29       		.byte	41
 405 0064 EB       		.byte	-21
 406 0065 2B       		.byte	43
 407 0066 2A       		.byte	42
 408 0067 EA       		.byte	-22
 409 0068 EE       		.byte	-18
 410 0069 2E       		.byte	46
 411 006a 2F       		.byte	47
 412 006b EF       		.byte	-17
 413 006c 2D       		.byte	45
 414 006d ED       		.byte	-19
 415 006e EC       		.byte	-20
 416 006f 2C       		.byte	44
 417 0070 E4       		.byte	-28
 418 0071 24       		.byte	36
 419 0072 25       		.byte	37
 420 0073 E5       		.byte	-27
 421 0074 27       		.byte	39
 422 0075 E7       		.byte	-25
 423 0076 E6       		.byte	-26
 424 0077 26       		.byte	38
 425 0078 22       		.byte	34
 426 0079 E2       		.byte	-30
 427 007a E3       		.byte	-29
 428 007b 23       		.byte	35
 429 007c E1       		.byte	-31
 430 007d 21       		.byte	33
 431 007e 20       		.byte	32
 432 007f E0       		.byte	-32
 433 0080 A0       		.byte	-96
 434 0081 60       		.byte	96
 435 0082 61       		.byte	97
 436 0083 A1       		.byte	-95
 437 0084 63       		.byte	99
 438 0085 A3       		.byte	-93
 439 0086 A2       		.byte	-94
 440 0087 62       		.byte	98
 441 0088 66       		.byte	102
 442 0089 A6       		.byte	-90
 443 008a A7       		.byte	-89
 444 008b 67       		.byte	103
 445 008c A5       		.byte	-91
 446 008d 65       		.byte	101
 447 008e 64       		.byte	100
 448 008f A4       		.byte	-92
 449 0090 6C       		.byte	108
 450 0091 AC       		.byte	-84
 451 0092 AD       		.byte	-83
 452 0093 6D       		.byte	109
 453 0094 AF       		.byte	-81
 454 0095 6F       		.byte	111
 455 0096 6E       		.byte	110
 456 0097 AE       		.byte	-82
 457 0098 AA       		.byte	-86
 458 0099 6A       		.byte	106
 459 009a 6B       		.byte	107
 460 009b AB       		.byte	-85
 461 009c 69       		.byte	105
 462 009d A9       		.byte	-87
 463 009e A8       		.byte	-88
 464 009f 68       		.byte	104
 465 00a0 78       		.byte	120
 466 00a1 B8       		.byte	-72
 467 00a2 B9       		.byte	-71
 468 00a3 79       		.byte	121
 469 00a4 BB       		.byte	-69
 470 00a5 7B       		.byte	123
 471 00a6 7A       		.byte	122
 472 00a7 BA       		.byte	-70
 473 00a8 BE       		.byte	-66
 474 00a9 7E       		.byte	126
 475 00aa 7F       		.byte	127
 476 00ab BF       		.byte	-65
 477 00ac 7D       		.byte	125
 478 00ad BD       		.byte	-67
 479 00ae BC       		.byte	-68
 480 00af 7C       		.byte	124
 481 00b0 B4       		.byte	-76
 482 00b1 74       		.byte	116
 483 00b2 75       		.byte	117
 484 00b3 B5       		.byte	-75
 485 00b4 77       		.byte	119
 486 00b5 B7       		.byte	-73
 487 00b6 B6       		.byte	-74
 488 00b7 76       		.byte	118
 489 00b8 72       		.byte	114
 490 00b9 B2       		.byte	-78
 491 00ba B3       		.byte	-77
 492 00bb 73       		.byte	115
 493 00bc B1       		.byte	-79
 494 00bd 71       		.byte	113
 495 00be 70       		.byte	112
 496 00bf B0       		.byte	-80
 497 00c0 50       		.byte	80
 498 00c1 90       		.byte	-112
 499 00c2 91       		.byte	-111
 500 00c3 51       		.byte	81
 501 00c4 93       		.byte	-109
 502 00c5 53       		.byte	83
 503 00c6 52       		.byte	82
 504 00c7 92       		.byte	-110
 505 00c8 96       		.byte	-106
 506 00c9 56       		.byte	86
 507 00ca 57       		.byte	87
 508 00cb 97       		.byte	-105
 509 00cc 55       		.byte	85
 510 00cd 95       		.byte	-107
 511 00ce 94       		.byte	-108
 512 00cf 54       		.byte	84
 513 00d0 9C       		.byte	-100
 514 00d1 5C       		.byte	92
 515 00d2 5D       		.byte	93
 516 00d3 9D       		.byte	-99
 517 00d4 5F       		.byte	95
 518 00d5 9F       		.byte	-97
 519 00d6 9E       		.byte	-98
 520 00d7 5E       		.byte	94
 521 00d8 5A       		.byte	90
 522 00d9 9A       		.byte	-102
 523 00da 9B       		.byte	-101
 524 00db 5B       		.byte	91
 525 00dc 99       		.byte	-103
 526 00dd 59       		.byte	89
 527 00de 58       		.byte	88
 528 00df 98       		.byte	-104
 529 00e0 88       		.byte	-120
 530 00e1 48       		.byte	72
 531 00e2 49       		.byte	73
 532 00e3 89       		.byte	-119
 533 00e4 4B       		.byte	75
 534 00e5 8B       		.byte	-117
 535 00e6 8A       		.byte	-118
 536 00e7 4A       		.byte	74
 537 00e8 4E       		.byte	78
 538 00e9 8E       		.byte	-114
 539 00ea 8F       		.byte	-113
 540 00eb 4F       		.byte	79
 541 00ec 8D       		.byte	-115
 542 00ed 4D       		.byte	77
 543 00ee 4C       		.byte	76
 544 00ef 8C       		.byte	-116
 545 00f0 44       		.byte	68
 546 00f1 84       		.byte	-124
 547 00f2 85       		.byte	-123
 548 00f3 45       		.byte	69
 549 00f4 87       		.byte	-121
 550 00f5 47       		.byte	71
 551 00f6 46       		.byte	70
 552 00f7 86       		.byte	-122
 553 00f8 82       		.byte	-126
 554 00f9 42       		.byte	66
 555 00fa 43       		.byte	67
 556 00fb 83       		.byte	-125
 557 00fc 41       		.byte	65
 558 00fd 81       		.byte	-127
 559 00fe 80       		.byte	-128
 560 00ff 40       		.byte	64
 561              		.comm	fd,4,4
 562              		.comm	received_string,513,4
 563              		.comm	rx_length,4,4
 564              		.section	.bss.xHigherPriorityTaskWoken_usart,"aw",%nobits
 565              		.align	2
 568              	xHigherPriorityTaskWoken_usart:
 569 0000 00000000 		.space	4
 570              		.comm	input_Register,20,4
 571              		.section	.rodata
 572              		.align	2
 573              	.LC0:
 574 0000 6D6F746F 		.ascii	"motor\000"
 574      7200
 575 0006 0000     		.align	2
 576              	.LC1:
 577 0008 6D6F746F 		.ascii	"motor  [options]\302\240[parameters]\302\240- Type "
 577      7220205B 
 577      6F707469 
 577      6F6E735D 
 577      C2A05B70 
 578 002f 6D6F746F 		.ascii	"motor help for more help\015\012\012\000\000"
 578      72206865 
 578      6C702066 
 578      6F72206D 
 578      6F726520 
 579              		.section	.rodata.xMotorCommand,"a",%progbits
 580              		.align	2
 583              	xMotorCommand:
 584 0000 00000000 		.word	.LC0
 585 0004 08000000 		.word	.LC1
 586 0008 00000000 		.word	prvMotorCommand
 587 000c FF       		.byte	-1
 588 000d 000000   		.space	3
 589              		.section	.rodata
 590              		.align	2
 591              	.LC2:
 592 004c 7461736B 		.ascii	"task\000"
 592      00
 593 0051 000000   		.align	2
 594              	.LC3:
 595 0054 7461736B 		.ascii	"task - return tasks list\015\012\012\000\000"
 595      202D2072 
 595      65747572 
 595      6E207461 
 595      736B7320 
 596              		.section	.rodata.xTaskStatsCommand,"a",%progbits
 597              		.align	2
 600              	xTaskStatsCommand:
 601 0000 4C000000 		.word	.LC2
 602 0004 54000000 		.word	.LC3
 603 0008 00000000 		.word	prvTaskStatsCommand
 604 000c FF       		.byte	-1
 605 000d 000000   		.space	3
 606              		.section	.data.xDelay,"aw",%progbits
 607              		.align	2
 610              	xDelay:
 611 0000 FFFFFFFF 		.word	-1
 612              		.comm	telegramS,28,4
 613              		.comm	telegramR,28,4
 614              		.section	.rodata
 615 0071 000000   		.align	2
 616              	.LC4:
 617 0074 73706565 		.ascii	"speed\000"
 617      6400
 618 007a 0000     		.align	2
 619              	.LC5:
 620 007c 4572726F 		.ascii	"Error: speed is out of range [1,100]p : %d\012\012\000"
 620      723A2073 
 620      70656564 
 620      20697320 
 620      6F757420 
 621 00a9 00       		.ascii	"\000"
 622 00aa 0000     		.align	2
 623              	.LC6:
 624 00ac 53706565 		.ascii	"Speed succsesfully set.\012\012\000"
 624      64207375 
 624      63637365 
 624      7366756C 
 624      6C792073 
 625 00c6 0000     		.align	2
 626              	.LC7:
 627 00c8 4D4F4442 		.ascii	"MODBUS ERROR !!!.\012\012\000"
 627      55532045 
 627      52524F52 
 627      20212121 
 627      2E0A0A00 
 628              		.align	2
 629              	.LC8:
 630 00dc 4572726F 		.ascii	"Error recieving response!\012\012\000"
 630      72207265 
 630      63696576 
 630      696E6720 
 630      72657370 
 631              		.align	2
 632              	.LC9:
 633 00f8 4572726F 		.ascii	"Error sending Queue!\012\012\000"
 633      72207365 
 633      6E64696E 
 633      67205175 
 633      65756521 
 634 010f 00       		.align	2
 635              	.LC10:
 636 0110 75707261 		.ascii	"upramp\000"
 636      6D7000
 637 0117 00       		.align	2
 638              	.LC11:
 639 0118 4572726F 		.ascii	"Error: speed is out of range [15,300]p : %d\012\012"
 639      723A2073 
 639      70656564 
 639      20697320 
 639      6F757420 
 640 0145 0000     		.ascii	"\000\000"
 641 0147 00       		.align	2
 642              	.LC12:
 643 0148 55702072 		.ascii	"Up ramp succsesfully set.\012\012\000"
 643      616D7020 
 643      73756363 
 643      73657366 
 643      756C6C79 
 644              		.align	2
 645              	.LC13:
 646 0164 646F776E 		.ascii	"downramp\000"
 646      72616D70 
 646      00
 647              		.section	.text.handleVariable_set,"ax",%progbits
 648              		.align	2
 649              		.global	handleVariable_set
 650              		.thumb
 651              		.thumb_func
 653              	handleVariable_set:
 654              	.LFB110:
 655              		.file 1 "App/STM32F4-Discovery/tcpCLI.c"
   1:App/STM32F4-Discovery/tcpCLI.c **** #include "tcpCLI.h"
   2:App/STM32F4-Discovery/tcpCLI.c **** 
   3:App/STM32F4-Discovery/tcpCLI.c **** 
   4:App/STM32F4-Discovery/tcpCLI.c **** static 	portTickType xDelay = portMAX_DELAY;//3000 / portTICK_RATE_MS;
   5:App/STM32F4-Discovery/tcpCLI.c **** 
   6:App/STM32F4-Discovery/tcpCLI.c **** QueueTelegram telegramS, telegramR; 
   7:App/STM32F4-Discovery/tcpCLI.c **** 
   8:App/STM32F4-Discovery/tcpCLI.c **** /* default telegram */
   9:App/STM32F4-Discovery/tcpCLI.c **** /*
  10:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[0] = 1000;
  11:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[1] = 0;	
  12:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[2] = 2250;
  13:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[3] = 10;	
  14:App/STM32F4-Discovery/tcpCLI.c **** telegram.data[4] = 10;	
  15:App/STM32F4-Discovery/tcpCLI.c **** telegram.size = 5;
  16:App/STM32F4-Discovery/tcpCLI.c **** telegram.Qcmd = SETDATA;		
  17:App/STM32F4-Discovery/tcpCLI.c **** */
  18:App/STM32F4-Discovery/tcpCLI.c **** 
  19:App/STM32F4-Discovery/tcpCLI.c **** 
  20:App/STM32F4-Discovery/tcpCLI.c **** 
  21:App/STM32F4-Discovery/tcpCLI.c **** int handleVariable_set (	
  22:App/STM32F4-Discovery/tcpCLI.c **** 				int8_t *pcWriteBuffer, 
  23:App/STM32F4-Discovery/tcpCLI.c **** 				size_t xWriteBufferLen,
  24:App/STM32F4-Discovery/tcpCLI.c **** 				uint8_t * Param, 
  25:App/STM32F4-Discovery/tcpCLI.c **** 				int xParamLength,
  26:App/STM32F4-Discovery/tcpCLI.c **** 				xQueueHandle Qhandle,
  27:App/STM32F4-Discovery/tcpCLI.c **** 				uint8_t * Value,
  28:App/STM32F4-Discovery/tcpCLI.c **** 				int xValueLength,
  29:App/STM32F4-Discovery/tcpCLI.c **** 				int socket )
  30:App/STM32F4-Discovery/tcpCLI.c **** {
 656              		.loc 1 30 0
 657              		.cfi_startproc
 658              		@ args = 16, pretend = 0, frame = 32
 659              		@ frame_needed = 1, uses_anonymous_args = 0
 660 0000 B0B5     		push	{r4, r5, r7, lr}
 661              	.LCFI0:
 662              		.cfi_def_cfa_offset 16
 663              		.cfi_offset 4, -16
 664              		.cfi_offset 5, -12
 665              		.cfi_offset 7, -8
 666              		.cfi_offset 14, -4
 667 0002 88B0     		sub	sp, sp, #32
 668              	.LCFI1:
 669              		.cfi_def_cfa_offset 48
 670 0004 00AF     		add	r7, sp, #0
 671              	.LCFI2:
 672              		.cfi_def_cfa_register 7
 673 0006 F860     		str	r0, [r7, #12]
 674 0008 B960     		str	r1, [r7, #8]
 675 000a 7A60     		str	r2, [r7, #4]
 676 000c 3B60     		str	r3, [r7]
  31:App/STM32F4-Discovery/tcpCLI.c **** 
  32:App/STM32F4-Discovery/tcpCLI.c **** 
  33:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
  34:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER speed [value]
  35:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
  36:App/STM32F4-Discovery/tcpCLI.c **** 
  37:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "speed", 5))
 677              		.loc 1 37 0
 678 000e 7868     		ldr	r0, [r7, #4]
 679 0010 9A49     		ldr	r1, .L15
 680 0012 0522     		movs	r2, #5
 681 0014 FFF7FEFF 		bl	strncmp
 682 0018 0346     		mov	r3, r0
 683 001a 002B     		cmp	r3, #0
 684 001c 40F0A280 		bne	.L2
 685              	.LBB2:
  38:App/STM32F4-Discovery/tcpCLI.c **** 	{	
  39:App/STM32F4-Discovery/tcpCLI.c **** 	
  40:App/STM32F4-Discovery/tcpCLI.c **** 	
  41:App/STM32F4-Discovery/tcpCLI.c **** 		
  42:App/STM32F4-Discovery/tcpCLI.c **** 		// now convert parameter to proper value and check if it is in range 
  43:App/STM32F4-Discovery/tcpCLI.c ****         	Value[xValueLength] = '\0'; 	
 686              		.loc 1 43 0
 687 0020 BB6B     		ldr	r3, [r7, #56]
 688 0022 7A6B     		ldr	r2, [r7, #52]
 689 0024 1344     		add	r3, r3, r2
 690 0026 0022     		movs	r2, #0
 691 0028 1A70     		strb	r2, [r3]
  44:App/STM32F4-Discovery/tcpCLI.c **** 		uint16_t s1 = atoi ( Value ); 
 692              		.loc 1 44 0
 693 002a 786B     		ldr	r0, [r7, #52]
 694 002c FFF7FEFF 		bl	atoi
 695 0030 0346     		mov	r3, r0
 696 0032 FB83     		strh	r3, [r7, #30]	@ movhi
  45:App/STM32F4-Discovery/tcpCLI.c **** 		// if speed is in range
  46:App/STM32F4-Discovery/tcpCLI.c **** 		if(s1 < 1 ||  s1 > 100 )
 697              		.loc 1 46 0
 698 0034 FB8B     		ldrh	r3, [r7, #30]
 699 0036 002B     		cmp	r3, #0
 700 0038 02D0     		beq	.L3
 701              		.loc 1 46 0 is_stmt 0 discriminator 1
 702 003a FB8B     		ldrh	r3, [r7, #30]
 703 003c 642B     		cmp	r3, #100
 704 003e 07D9     		bls	.L4
 705              	.L3:
  47:App/STM32F4-Discovery/tcpCLI.c **** 		{
  48:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP
  49:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error: speed is out of range [1,100]p : %d\n\n\0", s1);
 706              		.loc 1 49 0 is_stmt 1
 707 0040 FB8B     		ldrh	r3, [r7, #30]
 708 0042 F868     		ldr	r0, [r7, #12]
 709 0044 8E49     		ldr	r1, .L15+4
 710 0046 1A46     		mov	r2, r3
 711 0048 FFF7FEFF 		bl	sprintf
  50:App/STM32F4-Discovery/tcpCLI.c **** 		//	pcWriteBuffer[11+ 3] = "\0"; 
  51:App/STM32F4-Discovery/tcpCLI.c **** 			
  52:App/STM32F4-Discovery/tcpCLI.c **** 			////send( socket_0, buf, 11+3, 0);
  53:App/STM32F4-Discovery/tcpCLI.c **** 
  54:App/STM32F4-Discovery/tcpCLI.c **** 	       		return pdFALSE; 	
 712              		.loc 1 54 0
 713 004c 0023     		movs	r3, #0
 714 004e 10E1     		b	.L1
 715              	.L4:
  55:App/STM32F4-Discovery/tcpCLI.c **** 		}	
  56:App/STM32F4-Discovery/tcpCLI.c **** 	
  57:App/STM32F4-Discovery/tcpCLI.c **** 		// convert to correct value ( * 100 ) 
  58:App/STM32F4-Discovery/tcpCLI.c **** 		s1 *= 100; 
 716              		.loc 1 58 0
 717 0050 FB8B     		ldrh	r3, [r7, #30]	@ movhi
 718 0052 1A46     		mov	r2, r3	@ movhi
 719 0054 9200     		lsls	r2, r2, #2
 720 0056 1344     		add	r3, r3, r2
 721 0058 1A46     		mov	r2, r3	@ movhi
 722 005a 9100     		lsls	r1, r2, #2
 723 005c 1A46     		mov	r2, r3	@ movhi
 724 005e 0B46     		mov	r3, r1	@ movhi
 725 0060 1344     		add	r3, r3, r2
 726 0062 9B00     		lsls	r3, r3, #2
 727 0064 FB83     		strh	r3, [r7, #30]	@ movhi
  59:App/STM32F4-Discovery/tcpCLI.c **** 		
  60:App/STM32F4-Discovery/tcpCLI.c **** 		// test i
  61:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[1] = 0;	
 728              		.loc 1 61 0
 729 0066 874B     		ldr	r3, .L15+8
 730 0068 0022     		movs	r2, #0
 731 006a 5A81     		strh	r2, [r3, #10]	@ movhi
  62:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[2] = 2250;
 732              		.loc 1 62 0
 733 006c 854B     		ldr	r3, .L15+8
 734 006e 40F6CA02 		movw	r2, #2250
 735 0072 9A81     		strh	r2, [r3, #12]	@ movhi
  63:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[3] = 10;	
 736              		.loc 1 63 0
 737 0074 834B     		ldr	r3, .L15+8
 738 0076 0A22     		movs	r2, #10
 739 0078 DA81     		strh	r2, [r3, #14]	@ movhi
  64:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[4] = 10;	
 740              		.loc 1 64 0
 741 007a 824B     		ldr	r3, .L15+8
 742 007c 0A22     		movs	r2, #10
 743 007e 1A82     		strh	r2, [r3, #16]	@ movhi
  65:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5;
 744              		.loc 1 65 0
 745 0080 804B     		ldr	r3, .L15+8
 746 0082 0522     		movs	r2, #5
 747 0084 5A60     		str	r2, [r3, #4]
  66:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = SETDATA;	
 748              		.loc 1 66 0
 749 0086 7F4B     		ldr	r3, .L15+8
 750 0088 0022     		movs	r2, #0
 751 008a 1A70     		strb	r2, [r3]
  67:App/STM32F4-Discovery/tcpCLI.c **** 		// test /
  68:App/STM32F4-Discovery/tcpCLI.c **** 		// setup telegram 
  69:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = SETDATA;
 752              		.loc 1 69 0
 753 008c 7D4B     		ldr	r3, .L15+8
 754 008e 0022     		movs	r2, #0
 755 0090 1A70     		strb	r2, [r3]
  70:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5;
 756              		.loc 1 70 0
 757 0092 7C4B     		ldr	r3, .L15+8
 758 0094 0522     		movs	r2, #5
 759 0096 5A60     		str	r2, [r3, #4]
  71:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[0] = s1;
 760              		.loc 1 71 0
 761 0098 7A4B     		ldr	r3, .L15+8
 762 009a FA8B     		ldrh	r2, [r7, #30]	@ movhi
 763 009c 1A81     		strh	r2, [r3, #8]	@ movhi
  72:App/STM32F4-Discovery/tcpCLI.c **** 		
  73:App/STM32F4-Discovery/tcpCLI.c **** 	
  74:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
  75:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 764              		.loc 1 75 0
 765 009e 7A4B     		ldr	r3, .L15+12
 766 00a0 1A68     		ldr	r2, [r3]
 767 00a2 7A4B     		ldr	r3, .L15+16
 768 00a4 1B68     		ldr	r3, [r3]
 769 00a6 1046     		mov	r0, r2
 770 00a8 7649     		ldr	r1, .L15+8
 771 00aa 1A46     		mov	r2, r3
 772 00ac 0023     		movs	r3, #0
 773 00ae FFF7FEFF 		bl	xQueueGenericSend
 774 00b2 0346     		mov	r3, r0
 775 00b4 012B     		cmp	r3, #1
 776 00b6 42D1     		bne	.L6
  76:App/STM32F4-Discovery/tcpCLI.c **** 		{	
  77:App/STM32F4-Discovery/tcpCLI.c **** 					
  78:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay)== pdPASS)
 777              		.loc 1 78 0
 778 00b8 734B     		ldr	r3, .L15+12
 779 00ba 1A68     		ldr	r2, [r3]
 780 00bc 734B     		ldr	r3, .L15+16
 781 00be 1B68     		ldr	r3, [r3]
 782 00c0 1046     		mov	r0, r2
 783 00c2 7349     		ldr	r1, .L15+20
 784 00c4 1A46     		mov	r2, r3
 785 00c6 0023     		movs	r3, #0
 786 00c8 FFF7FEFF 		bl	xQueueGenericReceive
 787 00cc 0346     		mov	r3, r0
 788 00ce 012B     		cmp	r3, #1
 789 00d0 24D1     		bne	.L7
  79:App/STM32F4-Discovery/tcpCLI.c **** 			{
  80:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 790              		.loc 1 80 0
 791 00d2 6F4B     		ldr	r3, .L15+20
 792 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 793 00d6 062B     		cmp	r3, #6
 794 00d8 11D1     		bne	.L8
  81:App/STM32F4-Discovery/tcpCLI.c **** 				{	
  82:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed succsesfully set.\n\n");
 795              		.loc 1 82 0
 796 00da FA68     		ldr	r2, [r7, #12]
 797 00dc 6D4B     		ldr	r3, .L15+24
 798 00de 1546     		mov	r5, r2
 799 00e0 1C46     		mov	r4, r3
 800 00e2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 801 00e4 2860     		str	r0, [r5]	@ unaligned
 802 00e6 6960     		str	r1, [r5, #4]	@ unaligned
 803 00e8 AA60     		str	r2, [r5, #8]	@ unaligned
 804 00ea EB60     		str	r3, [r5, #12]	@ unaligned
 805 00ec 03CC     		ldmia	r4!, {r0, r1}
 806 00ee 2861     		str	r0, [r5, #16]	@ unaligned
 807 00f0 6961     		str	r1, [r5, #20]	@ unaligned
 808 00f2 2388     		ldrh	r3, [r4]	@ unaligned
 809 00f4 2B83     		strh	r3, [r5, #24]	@ unaligned
  83:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 25; 	
 810              		.loc 1 83 0
 811 00f6 1923     		movs	r3, #25
 812 00f8 BB61     		str	r3, [r7, #24]
  84:App/STM32F4-Discovery/tcpCLI.c **** 				//	//send( socket, buf, len, 0);
  85:App/STM32F4-Discovery/tcpCLI.c **** 
  86:App/STM32F4-Discovery/tcpCLI.c **** 
  87:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 813              		.loc 1 87 0
 814 00fa 0123     		movs	r3, #1
 815 00fc B9E0     		b	.L1
 816              	.L8:
  88:App/STM32F4-Discovery/tcpCLI.c **** 
  89:App/STM32F4-Discovery/tcpCLI.c **** 				}
  90:App/STM32F4-Discovery/tcpCLI.c **** 				else
  91:App/STM32F4-Discovery/tcpCLI.c **** 				{
  92:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 817              		.loc 1 92 0
 818 00fe FA68     		ldr	r2, [r7, #12]
 819 0100 654B     		ldr	r3, .L15+28
 820 0102 1546     		mov	r5, r2
 821 0104 1C46     		mov	r4, r3
 822 0106 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 823 0108 2860     		str	r0, [r5]	@ unaligned
 824 010a 6960     		str	r1, [r5, #4]	@ unaligned
 825 010c AA60     		str	r2, [r5, #8]	@ unaligned
 826 010e EB60     		str	r3, [r5, #12]	@ unaligned
 827 0110 2068     		ldr	r0, [r4]	@ unaligned
 828 0112 2861     		str	r0, [r5, #16]	@ unaligned
  93:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 829              		.loc 1 93 0
 830 0114 1323     		movs	r3, #19
 831 0116 BB61     		str	r3, [r7, #24]
  94:App/STM32F4-Discovery/tcpCLI.c **** //					//send( socket, buf, len, 0);
  95:App/STM32F4-Discovery/tcpCLI.c **** 
  96:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 832              		.loc 1 96 0
 833 0118 0023     		movs	r3, #0
 834 011a AAE0     		b	.L1
 835              	.L7:
  97:App/STM32F4-Discovery/tcpCLI.c **** 
  98:App/STM32F4-Discovery/tcpCLI.c **** 
  99:App/STM32F4-Discovery/tcpCLI.c **** 				}
 100:App/STM32F4-Discovery/tcpCLI.c **** 						
 101:App/STM32F4-Discovery/tcpCLI.c **** 			}
 102:App/STM32F4-Discovery/tcpCLI.c **** 			else
 103:App/STM32F4-Discovery/tcpCLI.c **** 			{
 104:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 105:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 106:App/STM32F4-Discovery/tcpCLI.c **** 		
 107:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 836              		.loc 1 107 0
 837 011c FA68     		ldr	r2, [r7, #12]
 838 011e 5F4B     		ldr	r3, .L15+32
 839 0120 1546     		mov	r5, r2
 840 0122 1C46     		mov	r4, r3
 841 0124 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 842 0126 2860     		str	r0, [r5]	@ unaligned
 843 0128 6960     		str	r1, [r5, #4]	@ unaligned
 844 012a AA60     		str	r2, [r5, #8]	@ unaligned
 845 012c EB60     		str	r3, [r5, #12]	@ unaligned
 846 012e 07CC     		ldmia	r4!, {r0, r1, r2}
 847 0130 2861     		str	r0, [r5, #16]	@ unaligned
 848 0132 6961     		str	r1, [r5, #20]	@ unaligned
 849 0134 AA61     		str	r2, [r5, #24]	@ unaligned
 108:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 850              		.loc 1 108 0
 851 0136 1B23     		movs	r3, #27
 852 0138 BB61     		str	r3, [r7, #24]
 109:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 110:App/STM32F4-Discovery/tcpCLI.c **** 
 111:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 853              		.loc 1 111 0
 854 013a 0023     		movs	r3, #0
 855 013c 99E0     		b	.L1
 856              	.L6:
 112:App/STM32F4-Discovery/tcpCLI.c **** 			}
 113:App/STM32F4-Discovery/tcpCLI.c **** 
 114:App/STM32F4-Discovery/tcpCLI.c **** 
 115:App/STM32F4-Discovery/tcpCLI.c **** 		}
 116:App/STM32F4-Discovery/tcpCLI.c **** 		else
 117:App/STM32F4-Discovery/tcpCLI.c **** 		{
 118:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 119:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 120:App/STM32F4-Discovery/tcpCLI.c **** 		
 121:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 857              		.loc 1 121 0
 858 013e FA68     		ldr	r2, [r7, #12]
 859 0140 574B     		ldr	r3, .L15+36
 860 0142 1446     		mov	r4, r2
 861 0144 1D46     		mov	r5, r3
 862 0146 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 863 0148 2060     		str	r0, [r4]	@ unaligned
 864 014a 6160     		str	r1, [r4, #4]	@ unaligned
 865 014c A260     		str	r2, [r4, #8]	@ unaligned
 866 014e E360     		str	r3, [r4, #12]	@ unaligned
 867 0150 2868     		ldr	r0, [r5]	@ unaligned
 868 0152 2061     		str	r0, [r4, #16]	@ unaligned
 869 0154 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 870 0156 AB79     		ldrb	r3, [r5, #6]
 871 0158 A282     		strh	r2, [r4, #20]	@ unaligned
 872 015a A375     		strb	r3, [r4, #22]
 122:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 873              		.loc 1 122 0
 874 015c 1623     		movs	r3, #22
 875 015e BB61     		str	r3, [r7, #24]
 123:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 124:App/STM32F4-Discovery/tcpCLI.c **** 
 125:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 876              		.loc 1 125 0
 877 0160 0023     		movs	r3, #0
 878 0162 86E0     		b	.L1
 879              	.L2:
 880              	.LBE2:
 126:App/STM32F4-Discovery/tcpCLI.c **** 		}
 127:App/STM32F4-Discovery/tcpCLI.c **** 	}
 128:App/STM32F4-Discovery/tcpCLI.c **** 	
 129:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 130:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER upramp [value]
 131:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 132:App/STM32F4-Discovery/tcpCLI.c **** 
 133:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "upramp", 6))
 881              		.loc 1 133 0
 882 0164 7868     		ldr	r0, [r7, #4]
 883 0166 4F49     		ldr	r1, .L15+40
 884 0168 0622     		movs	r2, #6
 885 016a FFF7FEFF 		bl	strncmp
 886 016e 0346     		mov	r3, r0
 887 0170 002B     		cmp	r3, #0
 888 0172 74D1     		bne	.L9
 889              	.LBB3:
 134:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 135:App/STM32F4-Discovery/tcpCLI.c **** 	
 136:App/STM32F4-Discovery/tcpCLI.c **** 	
 137:App/STM32F4-Discovery/tcpCLI.c **** 		
 138:App/STM32F4-Discovery/tcpCLI.c **** 		// now convert parameter to proper value and check if it is in range 
 139:App/STM32F4-Discovery/tcpCLI.c ****         	Value[xValueLength] = '\0'; 	
 890              		.loc 1 139 0
 891 0174 BB6B     		ldr	r3, [r7, #56]
 892 0176 7A6B     		ldr	r2, [r7, #52]
 893 0178 1344     		add	r3, r3, r2
 894 017a 0022     		movs	r2, #0
 895 017c 1A70     		strb	r2, [r3]
 140:App/STM32F4-Discovery/tcpCLI.c **** 		uint16_t s1 = atoi ( Value ); 
 896              		.loc 1 140 0
 897 017e 786B     		ldr	r0, [r7, #52]
 898 0180 FFF7FEFF 		bl	atoi
 899 0184 0346     		mov	r3, r0
 900 0186 FB82     		strh	r3, [r7, #22]	@ movhi
 141:App/STM32F4-Discovery/tcpCLI.c **** 		// if speed is in range
 142:App/STM32F4-Discovery/tcpCLI.c **** 		if(s1 < 15 ||  s1 > 300 )
 901              		.loc 1 142 0
 902 0188 FB8A     		ldrh	r3, [r7, #22]
 903 018a 0E2B     		cmp	r3, #14
 904 018c 03D9     		bls	.L10
 905              		.loc 1 142 0 is_stmt 0 discriminator 1
 906 018e FB8A     		ldrh	r3, [r7, #22]
 907 0190 B3F5967F 		cmp	r3, #300
 908 0194 09D9     		bls	.L11
 909              	.L10:
 143:App/STM32F4-Discovery/tcpCLI.c **** 		{
 144:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP
 145:App/STM32F4-Discovery/tcpCLI.c **** 			//
 146:App/STM32F4-Discovery/tcpCLI.c **** 			xWriteBufferLen = 100; 
 910              		.loc 1 146 0 is_stmt 1
 911 0196 6423     		movs	r3, #100
 912 0198 BB61     		str	r3, [r7, #24]
 147:App/STM32F4-Discovery/tcpCLI.c **** 		//	uint8_t buf [len]; //= "Error: speed is out of range!\n\n");
 148:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error: speed is out of range [15,300]p : %d\n\n\0", s1);
 913              		.loc 1 148 0
 914 019a FB8A     		ldrh	r3, [r7, #22]
 915 019c F868     		ldr	r0, [r7, #12]
 916 019e 4249     		ldr	r1, .L15+44
 917 01a0 1A46     		mov	r2, r3
 918 01a2 FFF7FEFF 		bl	sprintf
 149:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket_0, buf, len, 0);
 150:App/STM32F4-Discovery/tcpCLI.c **** 
 151:App/STM32F4-Discovery/tcpCLI.c **** 	       		return pdFALSE; 	
 919              		.loc 1 151 0
 920 01a6 0023     		movs	r3, #0
 921 01a8 63E0     		b	.L1
 922              	.L11:
 152:App/STM32F4-Discovery/tcpCLI.c **** 		}	
 153:App/STM32F4-Discovery/tcpCLI.c **** 	
 154:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.data[3] = s1; 
 923              		.loc 1 154 0
 924 01aa 364B     		ldr	r3, .L15+8
 925 01ac FA8A     		ldrh	r2, [r7, #22]	@ movhi
 926 01ae DA81     		strh	r2, [r3, #14]	@ movhi
 155:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5; 
 927              		.loc 1 155 0
 928 01b0 344B     		ldr	r3, .L15+8
 929 01b2 0522     		movs	r2, #5
 930 01b4 5A60     		str	r2, [r3, #4]
 156:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = SETDATA;
 931              		.loc 1 156 0
 932 01b6 334B     		ldr	r3, .L15+8
 933 01b8 0022     		movs	r2, #0
 934 01ba 1A70     		strb	r2, [r3]
 157:App/STM32F4-Discovery/tcpCLI.c **** 		
 158:App/STM32F4-Discovery/tcpCLI.c **** 	
 159:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 160:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 935              		.loc 1 160 0
 936 01bc 324B     		ldr	r3, .L15+12
 937 01be 1A68     		ldr	r2, [r3]
 938 01c0 324B     		ldr	r3, .L15+16
 939 01c2 1B68     		ldr	r3, [r3]
 940 01c4 1046     		mov	r0, r2
 941 01c6 2F49     		ldr	r1, .L15+8
 942 01c8 1A46     		mov	r2, r3
 943 01ca 0023     		movs	r3, #0
 944 01cc FFF7FEFF 		bl	xQueueGenericSend
 945 01d0 0346     		mov	r3, r0
 946 01d2 012B     		cmp	r3, #1
 947 01d4 30D1     		bne	.L12
 161:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 162:App/STM32F4-Discovery/tcpCLI.c **** 					
 163:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay))
 948              		.loc 1 163 0
 949 01d6 2C4B     		ldr	r3, .L15+12
 950 01d8 1A68     		ldr	r2, [r3]
 951 01da 2C4B     		ldr	r3, .L15+16
 952 01dc 1B68     		ldr	r3, [r3]
 953 01de 1046     		mov	r0, r2
 954 01e0 2B49     		ldr	r1, .L15+20
 955 01e2 1A46     		mov	r2, r3
 956 01e4 0023     		movs	r3, #0
 957 01e6 FFF7FEFF 		bl	xQueueGenericReceive
 958 01ea 0346     		mov	r3, r0
 959 01ec 002B     		cmp	r3, #0
 960 01ee 36D0     		beq	.L9
 164:App/STM32F4-Discovery/tcpCLI.c **** 			{
 165:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 961              		.loc 1 165 0
 962 01f0 274B     		ldr	r3, .L15+20
 963 01f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 964 01f4 062B     		cmp	r3, #6
 965 01f6 10D1     		bne	.L13
 166:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 167:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Up ramp succsesfully set.\n\n");
 966              		.loc 1 167 0
 967 01f8 FA68     		ldr	r2, [r7, #12]
 968 01fa 2C4B     		ldr	r3, .L15+48
 969 01fc 1546     		mov	r5, r2
 970 01fe 1C46     		mov	r4, r3
 971 0200 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 972 0202 2860     		str	r0, [r5]	@ unaligned
 973 0204 6960     		str	r1, [r5, #4]	@ unaligned
 974 0206 AA60     		str	r2, [r5, #8]	@ unaligned
 975 0208 EB60     		str	r3, [r5, #12]	@ unaligned
 976 020a 07CC     		ldmia	r4!, {r0, r1, r2}
 977 020c 2861     		str	r0, [r5, #16]	@ unaligned
 978 020e 6961     		str	r1, [r5, #20]	@ unaligned
 979 0210 AA61     		str	r2, [r5, #24]	@ unaligned
 168:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 27; 	
 980              		.loc 1 168 0
 981 0212 1B23     		movs	r3, #27
 982 0214 BB61     		str	r3, [r7, #24]
 169:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 170:App/STM32F4-Discovery/tcpCLI.c **** 
 171:App/STM32F4-Discovery/tcpCLI.c **** 
 172:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 983              		.loc 1 172 0
 984 0216 0123     		movs	r3, #1
 985 0218 2BE0     		b	.L1
 986              	.L13:
 173:App/STM32F4-Discovery/tcpCLI.c **** 
 174:App/STM32F4-Discovery/tcpCLI.c **** 				}
 175:App/STM32F4-Discovery/tcpCLI.c **** 				else
 176:App/STM32F4-Discovery/tcpCLI.c **** 				{
 177:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 987              		.loc 1 177 0
 988 021a FA68     		ldr	r2, [r7, #12]
 989 021c 1E4B     		ldr	r3, .L15+28
 990 021e 1546     		mov	r5, r2
 991 0220 1C46     		mov	r4, r3
 992 0222 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 993 0224 2860     		str	r0, [r5]	@ unaligned
 994 0226 6960     		str	r1, [r5, #4]	@ unaligned
 995 0228 AA60     		str	r2, [r5, #8]	@ unaligned
 996 022a EB60     		str	r3, [r5, #12]	@ unaligned
 997 022c 2068     		ldr	r0, [r4]	@ unaligned
 998 022e 2861     		str	r0, [r5, #16]	@ unaligned
 178:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 999              		.loc 1 178 0
 1000 0230 1323     		movs	r3, #19
 1001 0232 BB61     		str	r3, [r7, #24]
 179:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 180:App/STM32F4-Discovery/tcpCLI.c **** 
 181:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 1002              		.loc 1 181 0
 1003 0234 0023     		movs	r3, #0
 1004 0236 1CE0     		b	.L1
 1005              	.L12:
 182:App/STM32F4-Discovery/tcpCLI.c **** 
 183:App/STM32F4-Discovery/tcpCLI.c **** 
 184:App/STM32F4-Discovery/tcpCLI.c **** 				}
 185:App/STM32F4-Discovery/tcpCLI.c **** 						
 186:App/STM32F4-Discovery/tcpCLI.c **** 			}
 187:App/STM32F4-Discovery/tcpCLI.c **** 
 188:App/STM32F4-Discovery/tcpCLI.c **** 		}
 189:App/STM32F4-Discovery/tcpCLI.c **** 		else
 190:App/STM32F4-Discovery/tcpCLI.c **** 		{
 191:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 192:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 193:App/STM32F4-Discovery/tcpCLI.c **** 		
 194:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 1006              		.loc 1 194 0
 1007 0238 FA68     		ldr	r2, [r7, #12]
 1008 023a 194B     		ldr	r3, .L15+36
 1009 023c 1446     		mov	r4, r2
 1010 023e 1D46     		mov	r5, r3
 1011 0240 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1012 0242 2060     		str	r0, [r4]	@ unaligned
 1013 0244 6160     		str	r1, [r4, #4]	@ unaligned
 1014 0246 A260     		str	r2, [r4, #8]	@ unaligned
 1015 0248 E360     		str	r3, [r4, #12]	@ unaligned
 1016 024a 2868     		ldr	r0, [r5]	@ unaligned
 1017 024c 2061     		str	r0, [r4, #16]	@ unaligned
 1018 024e AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1019 0250 AB79     		ldrb	r3, [r5, #6]
 1020 0252 A282     		strh	r2, [r4, #20]	@ unaligned
 1021 0254 A375     		strb	r3, [r4, #22]
 195:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1022              		.loc 1 195 0
 1023 0256 1623     		movs	r3, #22
 1024 0258 BB61     		str	r3, [r7, #24]
 196:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 197:App/STM32F4-Discovery/tcpCLI.c **** 
 198:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1025              		.loc 1 198 0
 1026 025a 0023     		movs	r3, #0
 1027 025c 09E0     		b	.L1
 1028              	.L9:
 1029              	.LBE3:
 199:App/STM32F4-Discovery/tcpCLI.c **** 		}
 200:App/STM32F4-Discovery/tcpCLI.c **** 	}
 201:App/STM32F4-Discovery/tcpCLI.c **** 
 202:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 203:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER downramp [value]
 204:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 205:App/STM32F4-Discovery/tcpCLI.c **** 
 206:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "downramp", 8))
 1030              		.loc 1 206 0
 1031 025e 7868     		ldr	r0, [r7, #4]
 1032 0260 1349     		ldr	r1, .L15+52
 1033 0262 0822     		movs	r2, #8
 1034 0264 FFF7FEFF 		bl	strncmp
 1035 0268 0346     		mov	r3, r0
 1036 026a 002B     		cmp	r3, #0
 1037 026c 01D1     		bne	.L14
 207:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 208:App/STM32F4-Discovery/tcpCLI.c **** 	
 209:App/STM32F4-Discovery/tcpCLI.c **** 	
 210:App/STM32F4-Discovery/tcpCLI.c **** 		
 211:App/STM32F4-Discovery/tcpCLI.c **** 				return 0; 
 1038              		.loc 1 211 0
 1039 026e 0023     		movs	r3, #0
 1040 0270 FFE7     		b	.L1
 1041              	.L14:
 1042              	.L1:
 212:App/STM32F4-Discovery/tcpCLI.c **** 
 213:App/STM32F4-Discovery/tcpCLI.c **** 	}
 214:App/STM32F4-Discovery/tcpCLI.c **** 			
 215:App/STM32F4-Discovery/tcpCLI.c **** }
 1043              		.loc 1 215 0
 1044 0272 1846     		mov	r0, r3
 1045 0274 2037     		adds	r7, r7, #32
 1046 0276 BD46     		mov	sp, r7
 1047              		@ sp needed
 1048 0278 B0BD     		pop	{r4, r5, r7, pc}
 1049              	.L16:
 1050 027a 00BF     		.align	2
 1051              	.L15:
 1052 027c 74000000 		.word	.LC4
 1053 0280 7C000000 		.word	.LC5
 1054 0284 00000000 		.word	telegramS
 1055 0288 00000000 		.word	QSpd_handle
 1056 028c 00000000 		.word	xDelay
 1057 0290 00000000 		.word	telegramR
 1058 0294 AC000000 		.word	.LC6
 1059 0298 C8000000 		.word	.LC7
 1060 029c DC000000 		.word	.LC8
 1061 02a0 F8000000 		.word	.LC9
 1062 02a4 10010000 		.word	.LC10
 1063 02a8 18010000 		.word	.LC11
 1064 02ac 48010000 		.word	.LC12
 1065 02b0 64010000 		.word	.LC13
 1066              		.cfi_endproc
 1067              	.LFE110:
 1069              		.section	.rodata
 1070 016d 000000   		.align	2
 1071              	.LC14:
 1072 0170 53706565 		.ascii	"Speed is  %2d.%2dp \012\012\000\000"
 1072      64206973 
 1072      20202532 
 1072      642E2532 
 1072      6470200A 
 1073 0187 00       		.align	2
 1074              	.LC15:
 1075 0188 55702072 		.ascii	"Up ramp is %d seconds\012\012\000\000"
 1075      616D7020 
 1075      69732025 
 1075      64207365 
 1075      636F6E64 
 1076              		.section	.text.handleVariable_get,"ax",%progbits
 1077              		.align	2
 1078              		.global	handleVariable_get
 1079              		.thumb
 1080              		.thumb_func
 1082              	handleVariable_get:
 1083              	.LFB111:
 216:App/STM32F4-Discovery/tcpCLI.c **** //=======================================================================================//
 217:App/STM32F4-Discovery/tcpCLI.c **** //=======================================================================================//
 218:App/STM32F4-Discovery/tcpCLI.c **** //		GET PARAMETETERS 
 219:App/STM32F4-Discovery/tcpCLI.c **** //=======================================================================================//
 220:App/STM32F4-Discovery/tcpCLI.c **** //=======================================================================================//
 221:App/STM32F4-Discovery/tcpCLI.c **** int handleVariable_get (	
 222:App/STM32F4-Discovery/tcpCLI.c **** 				int8_t *pcWriteBuffer, 
 223:App/STM32F4-Discovery/tcpCLI.c **** 				size_t xWriteBufferLen,
 224:App/STM32F4-Discovery/tcpCLI.c **** 				uint8_t * Param, 
 225:App/STM32F4-Discovery/tcpCLI.c **** 				int xParamLength,
 226:App/STM32F4-Discovery/tcpCLI.c **** 				xQueueHandle Qhandle,
 227:App/STM32F4-Discovery/tcpCLI.c **** 				int socket )
 228:App/STM32F4-Discovery/tcpCLI.c **** {
 1084              		.loc 1 228 0
 1085              		.cfi_startproc
 1086              		@ args = 8, pretend = 0, frame = 24
 1087              		@ frame_needed = 1, uses_anonymous_args = 0
 1088 0000 B0B5     		push	{r4, r5, r7, lr}
 1089              	.LCFI3:
 1090              		.cfi_def_cfa_offset 16
 1091              		.cfi_offset 4, -16
 1092              		.cfi_offset 5, -12
 1093              		.cfi_offset 7, -8
 1094              		.cfi_offset 14, -4
 1095 0002 86B0     		sub	sp, sp, #24
 1096              	.LCFI4:
 1097              		.cfi_def_cfa_offset 40
 1098 0004 00AF     		add	r7, sp, #0
 1099              	.LCFI5:
 1100              		.cfi_def_cfa_register 7
 1101 0006 F860     		str	r0, [r7, #12]
 1102 0008 B960     		str	r1, [r7, #8]
 1103 000a 7A60     		str	r2, [r7, #4]
 1104 000c 3B60     		str	r3, [r7]
 229:App/STM32F4-Discovery/tcpCLI.c **** 
 230:App/STM32F4-Discovery/tcpCLI.c **** 
 231:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 232:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER speed [value]
 233:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 234:App/STM32F4-Discovery/tcpCLI.c **** 
 235:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "speed", 5))
 1105              		.loc 1 235 0
 1106 000e 7868     		ldr	r0, [r7, #4]
 1107 0010 6B49     		ldr	r1, .L27
 1108 0012 0522     		movs	r2, #5
 1109 0014 FFF7FEFF 		bl	strncmp
 1110 0018 0346     		mov	r3, r0
 1111 001a 002B     		cmp	r3, #0
 1112 001c 6CD1     		bne	.L18
 236:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 237:App/STM32F4-Discovery/tcpCLI.c **** 	
 238:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = GETDATA; 
 1113              		.loc 1 238 0
 1114 001e 694B     		ldr	r3, .L27+4
 1115 0020 0122     		movs	r2, #1
 1116 0022 1A70     		strb	r2, [r3]
 239:App/STM32F4-Discovery/tcpCLI.c **** 		
 240:App/STM32F4-Discovery/tcpCLI.c **** 	
 241:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 242:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 1117              		.loc 1 242 0
 1118 0024 684B     		ldr	r3, .L27+8
 1119 0026 1A68     		ldr	r2, [r3]
 1120 0028 684B     		ldr	r3, .L27+12
 1121 002a 1B68     		ldr	r3, [r3]
 1122 002c 1046     		mov	r0, r2
 1123 002e 6549     		ldr	r1, .L27+4
 1124 0030 1A46     		mov	r2, r3
 1125 0032 0023     		movs	r3, #0
 1126 0034 FFF7FEFF 		bl	xQueueGenericSend
 1127 0038 0346     		mov	r3, r0
 1128 003a 012B     		cmp	r3, #1
 1129 003c 49D1     		bne	.L19
 243:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 244:App/STM32F4-Discovery/tcpCLI.c **** 					
 245:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay)== pdPASS)
 1130              		.loc 1 245 0
 1131 003e 624B     		ldr	r3, .L27+8
 1132 0040 1A68     		ldr	r2, [r3]
 1133 0042 624B     		ldr	r3, .L27+12
 1134 0044 1B68     		ldr	r3, [r3]
 1135 0046 1046     		mov	r0, r2
 1136 0048 6149     		ldr	r1, .L27+16
 1137 004a 1A46     		mov	r2, r3
 1138 004c 0023     		movs	r3, #0
 1139 004e FFF7FEFF 		bl	xQueueGenericReceive
 1140 0052 0346     		mov	r3, r0
 1141 0054 012B     		cmp	r3, #1
 1142 0056 2BD1     		bne	.L20
 246:App/STM32F4-Discovery/tcpCLI.c **** 			{
 247:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 1143              		.loc 1 247 0
 1144 0058 5D4B     		ldr	r3, .L27+16
 1145 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1146 005c 062B     		cmp	r3, #6
 1147 005e 18D1     		bne	.L21
 248:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 249:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 250:App/STM32F4-Discovery/tcpCLI.c **** 					telegramR.data[3]/100,
 1148              		.loc 1 250 0
 1149 0060 5B4B     		ldr	r3, .L27+16
 1150 0062 DA89     		ldrh	r2, [r3, #14]
 249:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 1151              		.loc 1 249 0
 1152 0064 5B4B     		ldr	r3, .L27+20
 1153 0066 A3FB0203 		umull	r0, r3, r3, r2
 1154 006a 5B09     		lsrs	r3, r3, #5
 1155 006c 9BB2     		uxth	r3, r3
 1156 006e 1A46     		mov	r2, r3
 251:App/STM32F4-Discovery/tcpCLI.c **** 					telegramR.data[3] % 100);
 1157              		.loc 1 251 0
 1158 0070 574B     		ldr	r3, .L27+16
 1159 0072 DB89     		ldrh	r3, [r3, #14]
 249:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 1160              		.loc 1 249 0
 1161 0074 5749     		ldr	r1, .L27+20
 1162 0076 A1FB0301 		umull	r0, r1, r1, r3
 1163 007a 4909     		lsrs	r1, r1, #5
 1164 007c 6420     		movs	r0, #100
 1165 007e 00FB01F1 		mul	r1, r0, r1
 1166 0082 5B1A     		subs	r3, r3, r1
 1167 0084 9BB2     		uxth	r3, r3
 1168 0086 F868     		ldr	r0, [r7, #12]
 1169 0088 5349     		ldr	r1, .L27+24
 1170 008a FFF7FEFF 		bl	sprintf
 252:App/STM32F4-Discovery/tcpCLI.c **** 				
 253:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 254:App/STM32F4-Discovery/tcpCLI.c **** 
 255:App/STM32F4-Discovery/tcpCLI.c **** 
 256:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 1171              		.loc 1 256 0
 1172 008e 0123     		movs	r3, #1
 1173 0090 92E0     		b	.L17
 1174              	.L21:
 257:App/STM32F4-Discovery/tcpCLI.c **** 
 258:App/STM32F4-Discovery/tcpCLI.c **** 				}
 259:App/STM32F4-Discovery/tcpCLI.c **** 				else
 260:App/STM32F4-Discovery/tcpCLI.c **** 				{
 261:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1175              		.loc 1 261 0
 1176 0092 FA68     		ldr	r2, [r7, #12]
 1177 0094 514B     		ldr	r3, .L27+28
 1178 0096 1546     		mov	r5, r2
 1179 0098 1C46     		mov	r4, r3
 1180 009a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1181 009c 2860     		str	r0, [r5]	@ unaligned
 1182 009e 6960     		str	r1, [r5, #4]	@ unaligned
 1183 00a0 AA60     		str	r2, [r5, #8]	@ unaligned
 1184 00a2 EB60     		str	r3, [r5, #12]	@ unaligned
 1185 00a4 2068     		ldr	r0, [r4]	@ unaligned
 1186 00a6 2861     		str	r0, [r5, #16]	@ unaligned
 262:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 1187              		.loc 1 262 0
 1188 00a8 1323     		movs	r3, #19
 1189 00aa 7B61     		str	r3, [r7, #20]
 263:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 264:App/STM32F4-Discovery/tcpCLI.c **** 
 265:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 1190              		.loc 1 265 0
 1191 00ac 0023     		movs	r3, #0
 1192 00ae 83E0     		b	.L17
 1193              	.L20:
 266:App/STM32F4-Discovery/tcpCLI.c **** 
 267:App/STM32F4-Discovery/tcpCLI.c **** 
 268:App/STM32F4-Discovery/tcpCLI.c **** 				}
 269:App/STM32F4-Discovery/tcpCLI.c **** 						
 270:App/STM32F4-Discovery/tcpCLI.c **** 			}
 271:App/STM32F4-Discovery/tcpCLI.c **** 			else
 272:App/STM32F4-Discovery/tcpCLI.c **** 			{
 273:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 274:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 275:App/STM32F4-Discovery/tcpCLI.c **** 		
 276:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 1194              		.loc 1 276 0
 1195 00b0 FA68     		ldr	r2, [r7, #12]
 1196 00b2 4B4B     		ldr	r3, .L27+32
 1197 00b4 1546     		mov	r5, r2
 1198 00b6 1C46     		mov	r4, r3
 1199 00b8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1200 00ba 2860     		str	r0, [r5]	@ unaligned
 1201 00bc 6960     		str	r1, [r5, #4]	@ unaligned
 1202 00be AA60     		str	r2, [r5, #8]	@ unaligned
 1203 00c0 EB60     		str	r3, [r5, #12]	@ unaligned
 1204 00c2 07CC     		ldmia	r4!, {r0, r1, r2}
 1205 00c4 2861     		str	r0, [r5, #16]	@ unaligned
 1206 00c6 6961     		str	r1, [r5, #20]	@ unaligned
 1207 00c8 AA61     		str	r2, [r5, #24]	@ unaligned
 277:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 1208              		.loc 1 277 0
 1209 00ca 1B23     		movs	r3, #27
 1210 00cc 7B61     		str	r3, [r7, #20]
 278:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 279:App/STM32F4-Discovery/tcpCLI.c **** 
 280:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 1211              		.loc 1 280 0
 1212 00ce 0023     		movs	r3, #0
 1213 00d0 72E0     		b	.L17
 1214              	.L19:
 281:App/STM32F4-Discovery/tcpCLI.c **** 			}
 282:App/STM32F4-Discovery/tcpCLI.c **** 
 283:App/STM32F4-Discovery/tcpCLI.c **** 
 284:App/STM32F4-Discovery/tcpCLI.c **** 		}
 285:App/STM32F4-Discovery/tcpCLI.c **** 		else
 286:App/STM32F4-Discovery/tcpCLI.c **** 		{
 287:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 288:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 289:App/STM32F4-Discovery/tcpCLI.c **** 		
 290:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 1215              		.loc 1 290 0
 1216 00d2 FA68     		ldr	r2, [r7, #12]
 1217 00d4 434B     		ldr	r3, .L27+36
 1218 00d6 1446     		mov	r4, r2
 1219 00d8 1D46     		mov	r5, r3
 1220 00da 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1221 00dc 2060     		str	r0, [r4]	@ unaligned
 1222 00de 6160     		str	r1, [r4, #4]	@ unaligned
 1223 00e0 A260     		str	r2, [r4, #8]	@ unaligned
 1224 00e2 E360     		str	r3, [r4, #12]	@ unaligned
 1225 00e4 2868     		ldr	r0, [r5]	@ unaligned
 1226 00e6 2061     		str	r0, [r4, #16]	@ unaligned
 1227 00e8 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1228 00ea AB79     		ldrb	r3, [r5, #6]
 1229 00ec A282     		strh	r2, [r4, #20]	@ unaligned
 1230 00ee A375     		strb	r3, [r4, #22]
 291:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1231              		.loc 1 291 0
 1232 00f0 1623     		movs	r3, #22
 1233 00f2 7B61     		str	r3, [r7, #20]
 292:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 293:App/STM32F4-Discovery/tcpCLI.c **** 
 294:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1234              		.loc 1 294 0
 1235 00f4 0023     		movs	r3, #0
 1236 00f6 5FE0     		b	.L17
 1237              	.L18:
 295:App/STM32F4-Discovery/tcpCLI.c **** 		}
 296:App/STM32F4-Discovery/tcpCLI.c **** 	}
 297:App/STM32F4-Discovery/tcpCLI.c **** 	
 298:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 299:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER upramp [value]
 300:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 301:App/STM32F4-Discovery/tcpCLI.c **** 
 302:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "upramp", 6))
 1238              		.loc 1 302 0
 1239 00f8 7868     		ldr	r0, [r7, #4]
 1240 00fa 3B49     		ldr	r1, .L27+40
 1241 00fc 0622     		movs	r2, #6
 1242 00fe FFF7FEFF 		bl	strncmp
 1243 0102 0346     		mov	r3, r0
 1244 0104 002B     		cmp	r3, #0
 1245 0106 4DD1     		bne	.L23
 303:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 304:App/STM32F4-Discovery/tcpCLI.c **** 	
 305:App/STM32F4-Discovery/tcpCLI.c **** 	
 306:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = GETDATA;
 1246              		.loc 1 306 0
 1247 0108 2E4B     		ldr	r3, .L27+4
 1248 010a 0122     		movs	r2, #1
 1249 010c 1A70     		strb	r2, [r3]
 307:App/STM32F4-Discovery/tcpCLI.c **** 			
 308:App/STM32F4-Discovery/tcpCLI.c **** 	
 309:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 310:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 1250              		.loc 1 310 0
 1251 010e 2E4B     		ldr	r3, .L27+8
 1252 0110 1A68     		ldr	r2, [r3]
 1253 0112 2E4B     		ldr	r3, .L27+12
 1254 0114 1B68     		ldr	r3, [r3]
 1255 0116 1046     		mov	r0, r2
 1256 0118 2A49     		ldr	r1, .L27+4
 1257 011a 1A46     		mov	r2, r3
 1258 011c 0023     		movs	r3, #0
 1259 011e FFF7FEFF 		bl	xQueueGenericSend
 1260 0122 0346     		mov	r3, r0
 1261 0124 012B     		cmp	r3, #1
 1262 0126 2AD1     		bne	.L24
 311:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 312:App/STM32F4-Discovery/tcpCLI.c **** 					
 313:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay))
 1263              		.loc 1 313 0
 1264 0128 274B     		ldr	r3, .L27+8
 1265 012a 1A68     		ldr	r2, [r3]
 1266 012c 274B     		ldr	r3, .L27+12
 1267 012e 1B68     		ldr	r3, [r3]
 1268 0130 1046     		mov	r0, r2
 1269 0132 2749     		ldr	r1, .L27+16
 1270 0134 1A46     		mov	r2, r3
 1271 0136 0023     		movs	r3, #0
 1272 0138 FFF7FEFF 		bl	xQueueGenericReceive
 1273 013c 0346     		mov	r3, r0
 1274 013e 002B     		cmp	r3, #0
 1275 0140 30D0     		beq	.L23
 314:App/STM32F4-Discovery/tcpCLI.c **** 			{
 315:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 1276              		.loc 1 315 0
 1277 0142 234B     		ldr	r3, .L27+16
 1278 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1279 0146 062B     		cmp	r3, #6
 1280 0148 0AD1     		bne	.L25
 316:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 317:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Up ramp is %d seconds\n\n\0", 
 318:App/STM32F4-Discovery/tcpCLI.c **** 							telegramR.data[3]);
 1281              		.loc 1 318 0
 1282 014a 214B     		ldr	r3, .L27+16
 1283 014c DB89     		ldrh	r3, [r3, #14]
 317:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Up ramp is %d seconds\n\n\0", 
 1284              		.loc 1 317 0
 1285 014e F868     		ldr	r0, [r7, #12]
 1286 0150 2649     		ldr	r1, .L27+44
 1287 0152 1A46     		mov	r2, r3
 1288 0154 FFF7FEFF 		bl	sprintf
 319:App/STM32F4-Discovery/tcpCLI.c **** 					
 320:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 25; 	
 1289              		.loc 1 320 0
 1290 0158 1923     		movs	r3, #25
 1291 015a 7B61     		str	r3, [r7, #20]
 321:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 322:App/STM32F4-Discovery/tcpCLI.c **** 
 323:App/STM32F4-Discovery/tcpCLI.c **** 
 324:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 1292              		.loc 1 324 0
 1293 015c 0123     		movs	r3, #1
 1294 015e 2BE0     		b	.L17
 1295              	.L25:
 325:App/STM32F4-Discovery/tcpCLI.c **** 
 326:App/STM32F4-Discovery/tcpCLI.c **** 				}
 327:App/STM32F4-Discovery/tcpCLI.c **** 				else
 328:App/STM32F4-Discovery/tcpCLI.c **** 				{
 329:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1296              		.loc 1 329 0
 1297 0160 FA68     		ldr	r2, [r7, #12]
 1298 0162 1E4B     		ldr	r3, .L27+28
 1299 0164 1546     		mov	r5, r2
 1300 0166 1C46     		mov	r4, r3
 1301 0168 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1302 016a 2860     		str	r0, [r5]	@ unaligned
 1303 016c 6960     		str	r1, [r5, #4]	@ unaligned
 1304 016e AA60     		str	r2, [r5, #8]	@ unaligned
 1305 0170 EB60     		str	r3, [r5, #12]	@ unaligned
 1306 0172 2068     		ldr	r0, [r4]	@ unaligned
 1307 0174 2861     		str	r0, [r5, #16]	@ unaligned
 330:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 1308              		.loc 1 330 0
 1309 0176 1323     		movs	r3, #19
 1310 0178 7B61     		str	r3, [r7, #20]
 331:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 332:App/STM32F4-Discovery/tcpCLI.c **** 
 333:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 1311              		.loc 1 333 0
 1312 017a 0023     		movs	r3, #0
 1313 017c 1CE0     		b	.L17
 1314              	.L24:
 334:App/STM32F4-Discovery/tcpCLI.c **** 
 335:App/STM32F4-Discovery/tcpCLI.c **** 
 336:App/STM32F4-Discovery/tcpCLI.c **** 				}
 337:App/STM32F4-Discovery/tcpCLI.c **** 						
 338:App/STM32F4-Discovery/tcpCLI.c **** 			}
 339:App/STM32F4-Discovery/tcpCLI.c **** 
 340:App/STM32F4-Discovery/tcpCLI.c **** 		}
 341:App/STM32F4-Discovery/tcpCLI.c **** 		else
 342:App/STM32F4-Discovery/tcpCLI.c **** 		{
 343:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 344:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 345:App/STM32F4-Discovery/tcpCLI.c **** 		
 346:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 1315              		.loc 1 346 0
 1316 017e FA68     		ldr	r2, [r7, #12]
 1317 0180 184B     		ldr	r3, .L27+36
 1318 0182 1446     		mov	r4, r2
 1319 0184 1D46     		mov	r5, r3
 1320 0186 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1321 0188 2060     		str	r0, [r4]	@ unaligned
 1322 018a 6160     		str	r1, [r4, #4]	@ unaligned
 1323 018c A260     		str	r2, [r4, #8]	@ unaligned
 1324 018e E360     		str	r3, [r4, #12]	@ unaligned
 1325 0190 2868     		ldr	r0, [r5]	@ unaligned
 1326 0192 2061     		str	r0, [r4, #16]	@ unaligned
 1327 0194 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1328 0196 AB79     		ldrb	r3, [r5, #6]
 1329 0198 A282     		strh	r2, [r4, #20]	@ unaligned
 1330 019a A375     		strb	r3, [r4, #22]
 347:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1331              		.loc 1 347 0
 1332 019c 1623     		movs	r3, #22
 1333 019e 7B61     		str	r3, [r7, #20]
 348:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 349:App/STM32F4-Discovery/tcpCLI.c **** 
 350:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1334              		.loc 1 350 0
 1335 01a0 0023     		movs	r3, #0
 1336 01a2 09E0     		b	.L17
 1337              	.L23:
 351:App/STM32F4-Discovery/tcpCLI.c **** 		}
 352:App/STM32F4-Discovery/tcpCLI.c **** 	}
 353:App/STM32F4-Discovery/tcpCLI.c **** 
 354:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 355:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER downramp [value]
 356:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 357:App/STM32F4-Discovery/tcpCLI.c **** 
 358:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "downramp", 8))
 1338              		.loc 1 358 0
 1339 01a4 7868     		ldr	r0, [r7, #4]
 1340 01a6 1249     		ldr	r1, .L27+48
 1341 01a8 0822     		movs	r2, #8
 1342 01aa FFF7FEFF 		bl	strncmp
 1343 01ae 0346     		mov	r3, r0
 1344 01b0 002B     		cmp	r3, #0
 1345 01b2 01D1     		bne	.L26
 359:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 360:App/STM32F4-Discovery/tcpCLI.c **** 	
 361:App/STM32F4-Discovery/tcpCLI.c **** 	
 362:App/STM32F4-Discovery/tcpCLI.c **** 				
 363:App/STM32F4-Discovery/tcpCLI.c **** 	
 364:App/STM32F4-Discovery/tcpCLI.c **** 	
 365:App/STM32F4-Discovery/tcpCLI.c **** 
 366:App/STM32F4-Discovery/tcpCLI.c **** 			return 0; 
 1346              		.loc 1 366 0
 1347 01b4 0023     		movs	r3, #0
 1348 01b6 FFE7     		b	.L17
 1349              	.L26:
 1350              	.L17:
 367:App/STM32F4-Discovery/tcpCLI.c **** 
 368:App/STM32F4-Discovery/tcpCLI.c **** 	}
 369:App/STM32F4-Discovery/tcpCLI.c **** 
 370:App/STM32F4-Discovery/tcpCLI.c **** 
 371:App/STM32F4-Discovery/tcpCLI.c **** 
 372:App/STM32F4-Discovery/tcpCLI.c **** 
 373:App/STM32F4-Discovery/tcpCLI.c **** }
 1351              		.loc 1 373 0
 1352 01b8 1846     		mov	r0, r3
 1353 01ba 1837     		adds	r7, r7, #24
 1354 01bc BD46     		mov	sp, r7
 1355              		@ sp needed
 1356 01be B0BD     		pop	{r4, r5, r7, pc}
 1357              	.L28:
 1358              		.align	2
 1359              	.L27:
 1360 01c0 74000000 		.word	.LC4
 1361 01c4 00000000 		.word	telegramS
 1362 01c8 00000000 		.word	QSpd_handle
 1363 01cc 00000000 		.word	xDelay
 1364 01d0 00000000 		.word	telegramR
 1365 01d4 1F85EB51 		.word	1374389535
 1366 01d8 70010000 		.word	.LC14
 1367 01dc C8000000 		.word	.LC7
 1368 01e0 DC000000 		.word	.LC8
 1369 01e4 F8000000 		.word	.LC9
 1370 01e8 10010000 		.word	.LC10
 1371 01ec 88010000 		.word	.LC15
 1372 01f0 64010000 		.word	.LC13
 1373              		.cfi_endproc
 1374              	.LFE111:
 1376              		.section	.rodata
 1377 01a1 000000   		.align	2
 1378              	.LC16:
 1379 01a4 546F2066 		.ascii	"To few arguments. \012\012\000\000"
 1379      65772061 
 1379      7267756D 
 1379      656E7473 
 1379      2E200A0A 
 1380 01ba 0000     		.align	2
 1381              	.LC17:
 1382 01bc 68656C70 		.ascii	"help\000"
 1382      00
 1383 01c1 000000   		.align	2
 1384              	.LC18:
 1385 01c4 55736167 		.ascii	"Usage and parameters\012options:\012\011get - get m"
 1385      6520616E 
 1385      64207061 
 1385      72616D65 
 1385      74657273 
 1386 01ee 6F746F72 		.ascii	"otor parameter value\012\011set - set motor paramet"
 1386      20706172 
 1386      616D6574 
 1386      65722076 
 1386      616C7565 
 1387 021b 65722076 		.ascii	"er value\012\011start - starts motor\012\011stop - "
 1387      616C7565 
 1387      0A097374 
 1387      61727420 
 1387      2D207374 
 1388 0242 73746F70 		.ascii	"stops motor\012parametrs:\012\011speed - sets speed"
 1388      73206D6F 
 1388      746F720A 
 1388      70617261 
 1388      6D657472 
 1389 026c 0A097570 		.ascii	"\012\011upramp\012\011downramp\012\000\000"
 1389      72616D70 
 1389      0A09646F 
 1389      776E7261 
 1389      6D700A00 
 1390 0281 000000   		.align	2
 1391              	.LC19:
 1392 0284 73657400 		.ascii	"set\000"
 1393              		.align	2
 1394              	.LC20:
 1395 0288 67657400 		.ascii	"get\000"
 1396              		.align	2
 1397              	.LC21:
 1398 028c 73746F70 		.ascii	"stop\000"
 1398      00
 1399 0291 000000   		.align	2
 1400              	.LC22:
 1401 0294 4D6F746F 		.ascii	"Motor succsesfully stopped.\012\012\000"
 1401      72207375 
 1401      63637365 
 1401      7366756C 
 1401      6C792073 
 1402 02b2 0000     		.align	2
 1403              	.LC23:
 1404 02b4 73746172 		.ascii	"start\000"
 1404      7400
 1405 02ba 0000     		.align	2
 1406              	.LC24:
 1407 02bc 4D6F746F 		.ascii	"Motor succsesfully started.\012\012\000"
 1407      72207375 
 1407      63637365 
 1407      7366756C 
 1407      6C792073 
 1408              		.section	.text.prvMotorCommand,"ax",%progbits
 1409              		.align	2
 1410              		.global	prvMotorCommand
 1411              		.thumb
 1412              		.thumb_func
 1414              	prvMotorCommand:
 1415              	.LFB112:
 374:App/STM32F4-Discovery/tcpCLI.c **** 
 375:App/STM32F4-Discovery/tcpCLI.c **** 
 376:App/STM32F4-Discovery/tcpCLI.c **** 
 377:App/STM32F4-Discovery/tcpCLI.c **** 
 378:App/STM32F4-Discovery/tcpCLI.c **** 
 379:App/STM32F4-Discovery/tcpCLI.c **** 
 380:App/STM32F4-Discovery/tcpCLI.c **** /* ================================================================================================
 381:App/STM32F4-Discovery/tcpCLI.c ****  * ================================================================================================
 382:App/STM32F4-Discovery/tcpCLI.c ****  * 		prvMotorCommand 
 383:App/STM32F4-Discovery/tcpCLI.c ****  * ================================================================================================
 384:App/STM32F4-Discovery/tcpCLI.c ****  * ==============================================================================================*/
 385:App/STM32F4-Discovery/tcpCLI.c **** 
 386:App/STM32F4-Discovery/tcpCLI.c **** portBASE_TYPE prvMotorCommand ( 	int8_t *pcWriteBuffer, 
 387:App/STM32F4-Discovery/tcpCLI.c **** 						size_t xWriteBufferLen, 
 388:App/STM32F4-Discovery/tcpCLI.c **** 						const int8_t *pcCommandString)
 389:App/STM32F4-Discovery/tcpCLI.c **** {
 1416              		.loc 1 389 0
 1417              		.cfi_startproc
 1418              		@ args = 0, pretend = 0, frame = 40
 1419              		@ frame_needed = 1, uses_anonymous_args = 0
 1420 0000 B0B5     		push	{r4, r5, r7, lr}
 1421              	.LCFI6:
 1422              		.cfi_def_cfa_offset 16
 1423              		.cfi_offset 4, -16
 1424              		.cfi_offset 5, -12
 1425              		.cfi_offset 7, -8
 1426              		.cfi_offset 14, -4
 1427 0002 8EB0     		sub	sp, sp, #56
 1428              	.LCFI7:
 1429              		.cfi_def_cfa_offset 72
 1430 0004 04AF     		add	r7, sp, #16
 1431              	.LCFI8:
 1432              		.cfi_def_cfa 7, 56
 1433 0006 F860     		str	r0, [r7, #12]
 1434 0008 B960     		str	r1, [r7, #8]
 1435 000a 7A60     		str	r2, [r7, #4]
 390:App/STM32F4-Discovery/tcpCLI.c **** 	/* globals: 
 391:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	socket 
 392:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	setSpeedHandle
 393:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	QSpd_Handle
 394:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	QStatus_handle
 395:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	
 396:App/STM32F4-Discovery/tcpCLI.c **** 	 **/
 397:App/STM32F4-Discovery/tcpCLI.c **** 
 398:App/STM32F4-Discovery/tcpCLI.c **** 	int8_t *Option, *Param, *Value;
 399:App/STM32F4-Discovery/tcpCLI.c **** 	int xOptionLength, xParamLength, xValueLength; 
 400:App/STM32F4-Discovery/tcpCLI.c **** 	//QueueTelegram telegram; 
 401:App/STM32F4-Discovery/tcpCLI.c **** 	
 402:App/STM32F4-Discovery/tcpCLI.c **** 	// get option from command line 
 403:App/STM32F4-Discovery/tcpCLI.c **** 
 404:App/STM32F4-Discovery/tcpCLI.c **** 	Option = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1436              		.loc 1 404 0
 1437 000c 07F11803 		add	r3, r7, #24
 1438 0010 7868     		ldr	r0, [r7, #4]
 1439 0012 0121     		movs	r1, #1
 1440 0014 1A46     		mov	r2, r3
 1441 0016 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1442 001a 7862     		str	r0, [r7, #36]
 405:App/STM32F4-Discovery/tcpCLI.c **** 					  1,  		   // first parameter
 406:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xOptionLength // parameter string length
 407:App/STM32F4-Discovery/tcpCLI.c **** 					  
 408:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 409:App/STM32F4-Discovery/tcpCLI.c **** 
 410:App/STM32F4-Discovery/tcpCLI.c **** 	if ( Option == NULL)
 1443              		.loc 1 410 0
 1444 001c 7B6A     		ldr	r3, [r7, #36]
 1445 001e 002B     		cmp	r3, #0
 1446 0020 0ED1     		bne	.L30
 411:App/STM32F4-Discovery/tcpCLI.c **** 	{
 412:App/STM32F4-Discovery/tcpCLI.c **** 		sprintf(pcWriteBuffer, "To few arguments. \n\n\0");
 1447              		.loc 1 412 0
 1448 0022 FA68     		ldr	r2, [r7, #12]
 1449 0024 9F4B     		ldr	r3, .L50
 1450 0026 1546     		mov	r5, r2
 1451 0028 1C46     		mov	r4, r3
 1452 002a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1453 002c 2860     		str	r0, [r5]	@ unaligned
 1454 002e 6960     		str	r1, [r5, #4]	@ unaligned
 1455 0030 AA60     		str	r2, [r5, #8]	@ unaligned
 1456 0032 EB60     		str	r3, [r5, #12]	@ unaligned
 1457 0034 2068     		ldr	r0, [r4]	@ unaligned
 1458 0036 2861     		str	r0, [r5, #16]	@ unaligned
 1459 0038 2379     		ldrb	r3, [r4, #4]
 1460 003a 2B75     		strb	r3, [r5, #20]
 413:App/STM32F4-Discovery/tcpCLI.c **** 		return pdFALSE;
 1461              		.loc 1 413 0
 1462 003c 0023     		movs	r3, #0
 1463 003e 8EE1     		b	.L49
 1464              	.L30:
 414:App/STM32F4-Discovery/tcpCLI.c **** 	}
 415:App/STM32F4-Discovery/tcpCLI.c **** 
 416:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp(Option, "help", 4))
 1465              		.loc 1 416 0
 1466 0040 786A     		ldr	r0, [r7, #36]
 1467 0042 9949     		ldr	r1, .L50+4
 1468 0044 0422     		movs	r2, #4
 1469 0046 FFF7FEFF 		bl	strncmp
 1470 004a 0346     		mov	r3, r0
 1471 004c 002B     		cmp	r3, #0
 1472 004e 0BD1     		bne	.L32
 417:App/STM32F4-Discovery/tcpCLI.c **** 	{
 418:App/STM32F4-Discovery/tcpCLI.c **** 		strcpy(pcWriteBuffer, 
 1473              		.loc 1 418 0
 1474 0050 FA68     		ldr	r2, [r7, #12]
 1475 0052 964B     		ldr	r3, .L50+8
 1476 0054 1146     		mov	r1, r2
 1477 0056 1A46     		mov	r2, r3
 1478 0058 BC23     		movs	r3, #188
 1479 005a 0846     		mov	r0, r1
 1480 005c 1146     		mov	r1, r2
 1481 005e 1A46     		mov	r2, r3
 1482 0060 FFF7FEFF 		bl	memcpy
 419:App/STM32F4-Discovery/tcpCLI.c **** 			"Usage and parameters\n"
 420:App/STM32F4-Discovery/tcpCLI.c **** 			"options:\n"
 421:App/STM32F4-Discovery/tcpCLI.c **** 			"\tget - get motor parameter value\n"
 422:App/STM32F4-Discovery/tcpCLI.c **** 			"\tset - set motor parameter value\n"
 423:App/STM32F4-Discovery/tcpCLI.c **** 			"\tstart - starts motor\n"
 424:App/STM32F4-Discovery/tcpCLI.c **** 			"\tstop - stops motor\n"
 425:App/STM32F4-Discovery/tcpCLI.c **** 			"parametrs:\n"
 426:App/STM32F4-Discovery/tcpCLI.c **** 			"\tspeed - sets speed\n"
 427:App/STM32F4-Discovery/tcpCLI.c **** 			"\tupramp\n"
 428:App/STM32F4-Discovery/tcpCLI.c **** 			"\tdownramp\n"
 429:App/STM32F4-Discovery/tcpCLI.c **** 
 430:App/STM32F4-Discovery/tcpCLI.c **** 			
 431:App/STM32F4-Discovery/tcpCLI.c **** 			"\0"
 432:App/STM32F4-Discovery/tcpCLI.c **** 
 433:App/STM32F4-Discovery/tcpCLI.c **** 		      );
 434:App/STM32F4-Discovery/tcpCLI.c **** 
 435:App/STM32F4-Discovery/tcpCLI.c **** 		return pdPASS;
 1483              		.loc 1 435 0
 1484 0064 0123     		movs	r3, #1
 1485 0066 7AE1     		b	.L49
 1486              	.L32:
 436:App/STM32F4-Discovery/tcpCLI.c **** 	}
 437:App/STM32F4-Discovery/tcpCLI.c **** 
 438:App/STM32F4-Discovery/tcpCLI.c **** 
 439:App/STM32F4-Discovery/tcpCLI.c ****     //	vTaskResume(motorHBHandle);
 440:App/STM32F4-Discovery/tcpCLI.c **** 
 441:App/STM32F4-Discovery/tcpCLI.c **** 
 442:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 443:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND SET [parameter name] [value]
 444:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 445:App/STM32F4-Discovery/tcpCLI.c **** 
 446:App/STM32F4-Discovery/tcpCLI.c **** 	if( !strncmp( Option, "set", 3) ) 
 1487              		.loc 1 446 0
 1488 0068 786A     		ldr	r0, [r7, #36]
 1489 006a 9149     		ldr	r1, .L50+12
 1490 006c 0322     		movs	r2, #3
 1491 006e FFF7FEFF 		bl	strncmp
 1492 0072 0346     		mov	r3, r0
 1493 0074 002B     		cmp	r3, #0
 1494 0076 33D1     		bne	.L33
 447:App/STM32F4-Discovery/tcpCLI.c **** 	{
 448:App/STM32F4-Discovery/tcpCLI.c **** 
 449:App/STM32F4-Discovery/tcpCLI.c **** 		// get parameter from command line 
 450:App/STM32F4-Discovery/tcpCLI.c **** 	
 451:App/STM32F4-Discovery/tcpCLI.c **** 		Param = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1495              		.loc 1 451 0
 1496 0078 07F11403 		add	r3, r7, #20
 1497 007c 7868     		ldr	r0, [r7, #4]
 1498 007e 0221     		movs	r1, #2
 1499 0080 1A46     		mov	r2, r3
 1500 0082 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1501 0086 3862     		str	r0, [r7, #32]
 452:App/STM32F4-Discovery/tcpCLI.c **** 					  2,  		   // 2nd parameter
 453:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xParamLength // parameter string length
 454:App/STM32F4-Discovery/tcpCLI.c **** 					  
 455:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 456:App/STM32F4-Discovery/tcpCLI.c **** 		Value = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1502              		.loc 1 456 0
 1503 0088 07F11003 		add	r3, r7, #16
 1504 008c 7868     		ldr	r0, [r7, #4]
 1505 008e 0321     		movs	r1, #3
 1506 0090 1A46     		mov	r2, r3
 1507 0092 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1508 0096 F861     		str	r0, [r7, #28]
 457:App/STM32F4-Discovery/tcpCLI.c **** 					  3,  		   // 2nd parameter
 458:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xValueLength // parameter string length
 459:App/STM32F4-Discovery/tcpCLI.c **** 					  
 460:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 461:App/STM32F4-Discovery/tcpCLI.c **** 		
 462:App/STM32F4-Discovery/tcpCLI.c **** 		// return pdFALSE if there is no 3rd parameter 
 463:App/STM32F4-Discovery/tcpCLI.c **** 
 464:App/STM32F4-Discovery/tcpCLI.c **** 		if (Value==NULL||Param==NULL)
 1509              		.loc 1 464 0
 1510 0098 FB69     		ldr	r3, [r7, #28]
 1511 009a 002B     		cmp	r3, #0
 1512 009c 02D0     		beq	.L34
 1513              		.loc 1 464 0 is_stmt 0 discriminator 1
 1514 009e 3B6A     		ldr	r3, [r7, #32]
 1515 00a0 002B     		cmp	r3, #0
 1516 00a2 06D1     		bne	.L35
 1517              	.L34:
 465:App/STM32F4-Discovery/tcpCLI.c **** 		{
 466:App/STM32F4-Discovery/tcpCLI.c **** 			strcpy(pcWriteBuffer, xMotorCommand.pcHelpString);
 1518              		.loc 1 466 0 is_stmt 1
 1519 00a4 834B     		ldr	r3, .L50+16
 1520 00a6 F868     		ldr	r0, [r7, #12]
 1521 00a8 1946     		mov	r1, r3
 1522 00aa FFF7FEFF 		bl	strcpy
 467:App/STM32F4-Discovery/tcpCLI.c **** 
 468:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 
 1523              		.loc 1 468 0
 1524 00ae 0023     		movs	r3, #0
 1525 00b0 55E1     		b	.L49
 1526              	.L35:
 469:App/STM32F4-Discovery/tcpCLI.c **** 
 470:App/STM32F4-Discovery/tcpCLI.c **** 		}
 471:App/STM32F4-Discovery/tcpCLI.c **** 
 472:App/STM32F4-Discovery/tcpCLI.c **** 		
 473:App/STM32F4-Discovery/tcpCLI.c **** 		if ( handleVariable_set ( 
 1527              		.loc 1 473 0
 1528 00b2 7B69     		ldr	r3, [r7, #20]
 1529 00b4 804A     		ldr	r2, .L50+20
 1530 00b6 1068     		ldr	r0, [r2]
 1531 00b8 3969     		ldr	r1, [r7, #16]
 1532 00ba 804A     		ldr	r2, .L50+24
 1533 00bc 1268     		ldr	r2, [r2]
 1534 00be 0090     		str	r0, [sp]
 1535 00c0 F869     		ldr	r0, [r7, #28]
 1536 00c2 0190     		str	r0, [sp, #4]
 1537 00c4 0291     		str	r1, [sp, #8]
 1538 00c6 0392     		str	r2, [sp, #12]
 1539 00c8 F868     		ldr	r0, [r7, #12]
 1540 00ca B968     		ldr	r1, [r7, #8]
 1541 00cc 3A6A     		ldr	r2, [r7, #32]
 1542 00ce FFF7FEFF 		bl	handleVariable_set
 1543 00d2 0346     		mov	r3, r0
 1544 00d4 002B     		cmp	r3, #0
 1545 00d6 01D0     		beq	.L36
 474:App/STM32F4-Discovery/tcpCLI.c **** 				           pcWriteBuffer, 
 475:App/STM32F4-Discovery/tcpCLI.c **** 					   xWriteBufferLen,
 476:App/STM32F4-Discovery/tcpCLI.c **** 					   Param, 
 477:App/STM32F4-Discovery/tcpCLI.c **** 					   xParamLength, 
 478:App/STM32F4-Discovery/tcpCLI.c **** 					   QSpd_handle, 
 479:App/STM32F4-Discovery/tcpCLI.c **** 					   Value,
 480:App/STM32F4-Discovery/tcpCLI.c **** 					   xValueLength,  
 481:App/STM32F4-Discovery/tcpCLI.c **** 					   socket_0)) return pdPASS;
 1546              		.loc 1 481 0
 1547 00d8 0123     		movs	r3, #1
 1548 00da 40E1     		b	.L49
 1549              	.L36:
 482:App/STM32F4-Discovery/tcpCLI.c **** 
 483:App/STM32F4-Discovery/tcpCLI.c **** 		
 484:App/STM32F4-Discovery/tcpCLI.c **** 			
 485:App/STM32F4-Discovery/tcpCLI.c **** 		return pdFALSE;
 1550              		.loc 1 485 0
 1551 00dc 0023     		movs	r3, #0
 1552 00de 3EE1     		b	.L49
 1553              	.L33:
 486:App/STM32F4-Discovery/tcpCLI.c **** 
 487:App/STM32F4-Discovery/tcpCLI.c **** 	}
 488:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 489:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND GET [parameter name] [value]
 490:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 491:App/STM32F4-Discovery/tcpCLI.c **** 
 492:App/STM32F4-Discovery/tcpCLI.c **** 
 493:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "get", 3))
 1554              		.loc 1 493 0
 1555 00e0 786A     		ldr	r0, [r7, #36]
 1556 00e2 7749     		ldr	r1, .L50+28
 1557 00e4 0322     		movs	r2, #3
 1558 00e6 FFF7FEFF 		bl	strncmp
 1559 00ea 0346     		mov	r3, r0
 1560 00ec 002B     		cmp	r3, #0
 1561 00ee 27D1     		bne	.L37
 494:App/STM32F4-Discovery/tcpCLI.c **** 	{
 495:App/STM32F4-Discovery/tcpCLI.c **** 		// get parameter from command line 
 496:App/STM32F4-Discovery/tcpCLI.c **** 	
 497:App/STM32F4-Discovery/tcpCLI.c **** 		Param = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1562              		.loc 1 497 0
 1563 00f0 07F11403 		add	r3, r7, #20
 1564 00f4 7868     		ldr	r0, [r7, #4]
 1565 00f6 0221     		movs	r1, #2
 1566 00f8 1A46     		mov	r2, r3
 1567 00fa FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1568 00fe 3862     		str	r0, [r7, #32]
 498:App/STM32F4-Discovery/tcpCLI.c **** 					  2,  		   // 2nd parameter
 499:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xParamLength // parameter string length
 500:App/STM32F4-Discovery/tcpCLI.c **** 					  
 501:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 502:App/STM32F4-Discovery/tcpCLI.c **** 			
 503:App/STM32F4-Discovery/tcpCLI.c **** 		// return pdFALSE if there is no 3rd parameter 
 504:App/STM32F4-Discovery/tcpCLI.c **** 
 505:App/STM32F4-Discovery/tcpCLI.c **** 		if(Value==NULL||Param==NULL)
 1569              		.loc 1 505 0
 1570 0100 FB69     		ldr	r3, [r7, #28]
 1571 0102 002B     		cmp	r3, #0
 1572 0104 02D0     		beq	.L38
 1573              		.loc 1 505 0 is_stmt 0 discriminator 1
 1574 0106 3B6A     		ldr	r3, [r7, #32]
 1575 0108 002B     		cmp	r3, #0
 1576 010a 06D1     		bne	.L39
 1577              	.L38:
 506:App/STM32F4-Discovery/tcpCLI.c **** 		{
 507:App/STM32F4-Discovery/tcpCLI.c **** 			strcpy(pcWriteBuffer, xMotorCommand.pcHelpString);
 1578              		.loc 1 507 0 is_stmt 1
 1579 010c 694B     		ldr	r3, .L50+16
 1580 010e F868     		ldr	r0, [r7, #12]
 1581 0110 1946     		mov	r1, r3
 1582 0112 FFF7FEFF 		bl	strcpy
 508:App/STM32F4-Discovery/tcpCLI.c **** 
 509:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 
 1583              		.loc 1 509 0
 1584 0116 0023     		movs	r3, #0
 1585 0118 21E1     		b	.L49
 1586              	.L39:
 510:App/STM32F4-Discovery/tcpCLI.c **** 
 511:App/STM32F4-Discovery/tcpCLI.c **** 		}
 512:App/STM32F4-Discovery/tcpCLI.c **** 
 513:App/STM32F4-Discovery/tcpCLI.c **** 		
 514:App/STM32F4-Discovery/tcpCLI.c **** 		if ( handleVariable_get ( 
 1587              		.loc 1 514 0
 1588 011a 7B69     		ldr	r3, [r7, #20]
 1589 011c 664A     		ldr	r2, .L50+20
 1590 011e 1168     		ldr	r1, [r2]
 1591 0120 664A     		ldr	r2, .L50+24
 1592 0122 1268     		ldr	r2, [r2]
 1593 0124 0091     		str	r1, [sp]
 1594 0126 0192     		str	r2, [sp, #4]
 1595 0128 F868     		ldr	r0, [r7, #12]
 1596 012a B968     		ldr	r1, [r7, #8]
 1597 012c 3A6A     		ldr	r2, [r7, #32]
 1598 012e FFF7FEFF 		bl	handleVariable_get
 1599 0132 0346     		mov	r3, r0
 1600 0134 002B     		cmp	r3, #0
 1601 0136 01D0     		beq	.L40
 515:App/STM32F4-Discovery/tcpCLI.c **** 				        pcWriteBuffer, 
 516:App/STM32F4-Discovery/tcpCLI.c **** 					   xWriteBufferLen,
 517:App/STM32F4-Discovery/tcpCLI.c **** 	
 518:App/STM32F4-Discovery/tcpCLI.c **** 				           Param, 
 519:App/STM32F4-Discovery/tcpCLI.c **** 					   xParamLength, 
 520:App/STM32F4-Discovery/tcpCLI.c **** 					   QSpd_handle, 
 521:App/STM32F4-Discovery/tcpCLI.c **** 					   socket_0)) return pdPASS;
 1602              		.loc 1 521 0
 1603 0138 0123     		movs	r3, #1
 1604 013a 10E1     		b	.L49
 1605              	.L40:
 522:App/STM32F4-Discovery/tcpCLI.c **** 		return pdFALSE;
 1606              		.loc 1 522 0
 1607 013c 0023     		movs	r3, #0
 1608 013e 0EE1     		b	.L49
 1609              	.L37:
 523:App/STM32F4-Discovery/tcpCLI.c **** 
 524:App/STM32F4-Discovery/tcpCLI.c **** 
 525:App/STM32F4-Discovery/tcpCLI.c **** 	}
 526:App/STM32F4-Discovery/tcpCLI.c **** 		
 527:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 528:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND STOP 
 529:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 530:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "stop", 4))
 1610              		.loc 1 530 0
 1611 0140 786A     		ldr	r0, [r7, #36]
 1612 0142 6049     		ldr	r1, .L50+32
 1613 0144 0422     		movs	r2, #4
 1614 0146 FFF7FEFF 		bl	strncmp
 1615 014a 0346     		mov	r3, r0
 1616 014c 002B     		cmp	r3, #0
 1617 014e 69D1     		bne	.L41
 531:App/STM32F4-Discovery/tcpCLI.c **** 	{
 532:App/STM32F4-Discovery/tcpCLI.c **** 
 533:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = STOP; 
 1618              		.loc 1 533 0
 1619 0150 5D4B     		ldr	r3, .L50+36
 1620 0152 0522     		movs	r2, #5
 1621 0154 1A70     		strb	r2, [r3]
 534:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5; 
 1622              		.loc 1 534 0
 1623 0156 5C4B     		ldr	r3, .L50+36
 1624 0158 0522     		movs	r2, #5
 1625 015a 5A60     		str	r2, [r3, #4]
 535:App/STM32F4-Discovery/tcpCLI.c **** 			// send value to setSpeed_task via Queue 
 536:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) )
 1626              		.loc 1 536 0
 1627 015c 564B     		ldr	r3, .L50+20
 1628 015e 1A68     		ldr	r2, [r3]
 1629 0160 5A4B     		ldr	r3, .L50+40
 1630 0162 1B68     		ldr	r3, [r3]
 1631 0164 1046     		mov	r0, r2
 1632 0166 5849     		ldr	r1, .L50+36
 1633 0168 1A46     		mov	r2, r3
 1634 016a 0023     		movs	r3, #0
 1635 016c FFF7FEFF 		bl	xQueueGenericSend
 1636 0170 0346     		mov	r3, r0
 1637 0172 002B     		cmp	r3, #0
 1638 0174 43D0     		beq	.L42
 537:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 538:App/STM32F4-Discovery/tcpCLI.c **** 					
 539:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay)== pdPASS)
 1639              		.loc 1 539 0
 1640 0176 504B     		ldr	r3, .L50+20
 1641 0178 1A68     		ldr	r2, [r3]
 1642 017a 544B     		ldr	r3, .L50+40
 1643 017c 1B68     		ldr	r3, [r3]
 1644 017e 1046     		mov	r0, r2
 1645 0180 5349     		ldr	r1, .L50+44
 1646 0182 1A46     		mov	r2, r3
 1647 0184 0023     		movs	r3, #0
 1648 0186 FFF7FEFF 		bl	xQueueGenericReceive
 1649 018a 0346     		mov	r3, r0
 1650 018c 012B     		cmp	r3, #1
 1651 018e 25D1     		bne	.L43
 540:App/STM32F4-Discovery/tcpCLI.c **** 			{
 541:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 1652              		.loc 1 541 0
 1653 0190 4F4B     		ldr	r3, .L50+44
 1654 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1655 0194 062B     		cmp	r3, #6
 1656 0196 12D1     		bne	.L44
 542:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 543:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer ,"Motor succsesfully stopped.\n\n");
 1657              		.loc 1 543 0
 1658 0198 FA68     		ldr	r2, [r7, #12]
 1659 019a 4E4B     		ldr	r3, .L50+48
 1660 019c 1546     		mov	r5, r2
 1661 019e 1C46     		mov	r4, r3
 1662 01a0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1663 01a2 2860     		str	r0, [r5]	@ unaligned
 1664 01a4 6960     		str	r1, [r5, #4]	@ unaligned
 1665 01a6 AA60     		str	r2, [r5, #8]	@ unaligned
 1666 01a8 EB60     		str	r3, [r5, #12]	@ unaligned
 1667 01aa 07CC     		ldmia	r4!, {r0, r1, r2}
 1668 01ac 2861     		str	r0, [r5, #16]	@ unaligned
 1669 01ae 6961     		str	r1, [r5, #20]	@ unaligned
 1670 01b0 AA61     		str	r2, [r5, #24]	@ unaligned
 1671 01b2 2388     		ldrh	r3, [r4]	@ unaligned
 1672 01b4 AB83     		strh	r3, [r5, #28]	@ unaligned
 544:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 29 ; 	
 1673              		.loc 1 544 0
 1674 01b6 1D23     		movs	r3, #29
 1675 01b8 BB60     		str	r3, [r7, #8]
 545:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 546:App/STM32F4-Discovery/tcpCLI.c **** 
 547:App/STM32F4-Discovery/tcpCLI.c **** 					
 548:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 1676              		.loc 1 548 0
 1677 01ba 0123     		movs	r3, #1
 1678 01bc CFE0     		b	.L49
 1679              	.L44:
 549:App/STM32F4-Discovery/tcpCLI.c **** 
 550:App/STM32F4-Discovery/tcpCLI.c **** 				}
 551:App/STM32F4-Discovery/tcpCLI.c **** 				else
 552:App/STM32F4-Discovery/tcpCLI.c **** 				{
 553:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1680              		.loc 1 553 0
 1681 01be FA68     		ldr	r2, [r7, #12]
 1682 01c0 454B     		ldr	r3, .L50+52
 1683 01c2 1546     		mov	r5, r2
 1684 01c4 1C46     		mov	r4, r3
 1685 01c6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1686 01c8 2860     		str	r0, [r5]	@ unaligned
 1687 01ca 6960     		str	r1, [r5, #4]	@ unaligned
 1688 01cc AA60     		str	r2, [r5, #8]	@ unaligned
 1689 01ce EB60     		str	r3, [r5, #12]	@ unaligned
 1690 01d0 2068     		ldr	r0, [r4]	@ unaligned
 1691 01d2 2861     		str	r0, [r5, #16]	@ unaligned
 554:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 1692              		.loc 1 554 0
 1693 01d4 1323     		movs	r3, #19
 1694 01d6 BB60     		str	r3, [r7, #8]
 555:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 556:App/STM32F4-Discovery/tcpCLI.c **** 
 557:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 1695              		.loc 1 557 0
 1696 01d8 0023     		movs	r3, #0
 1697 01da C0E0     		b	.L49
 1698              	.L43:
 558:App/STM32F4-Discovery/tcpCLI.c **** 
 559:App/STM32F4-Discovery/tcpCLI.c **** 
 560:App/STM32F4-Discovery/tcpCLI.c **** 				}
 561:App/STM32F4-Discovery/tcpCLI.c **** 			}
 562:App/STM32F4-Discovery/tcpCLI.c **** 			else
 563:App/STM32F4-Discovery/tcpCLI.c **** 			{
 564:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 565:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 566:App/STM32F4-Discovery/tcpCLI.c **** 		
 567:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 1699              		.loc 1 567 0
 1700 01dc FA68     		ldr	r2, [r7, #12]
 1701 01de 3F4B     		ldr	r3, .L50+56
 1702 01e0 1546     		mov	r5, r2
 1703 01e2 1C46     		mov	r4, r3
 1704 01e4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1705 01e6 2860     		str	r0, [r5]	@ unaligned
 1706 01e8 6960     		str	r1, [r5, #4]	@ unaligned
 1707 01ea AA60     		str	r2, [r5, #8]	@ unaligned
 1708 01ec EB60     		str	r3, [r5, #12]	@ unaligned
 1709 01ee 07CC     		ldmia	r4!, {r0, r1, r2}
 1710 01f0 2861     		str	r0, [r5, #16]	@ unaligned
 1711 01f2 6961     		str	r1, [r5, #20]	@ unaligned
 1712 01f4 AA61     		str	r2, [r5, #24]	@ unaligned
 568:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 1713              		.loc 1 568 0
 1714 01f6 1B23     		movs	r3, #27
 1715 01f8 BB60     		str	r3, [r7, #8]
 569:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 570:App/STM32F4-Discovery/tcpCLI.c **** 
 571:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 1716              		.loc 1 571 0
 1717 01fa 0023     		movs	r3, #0
 1718 01fc AFE0     		b	.L49
 1719              	.L42:
 572:App/STM32F4-Discovery/tcpCLI.c **** 			}
 573:App/STM32F4-Discovery/tcpCLI.c **** 		}
 574:App/STM32F4-Discovery/tcpCLI.c **** 		else
 575:App/STM32F4-Discovery/tcpCLI.c **** 		{
 576:App/STM32F4-Discovery/tcpCLI.c **** 			
 577:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 578:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 579:App/STM32F4-Discovery/tcpCLI.c **** 		
 580:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 1720              		.loc 1 580 0
 1721 01fe FA68     		ldr	r2, [r7, #12]
 1722 0200 374B     		ldr	r3, .L50+60
 1723 0202 1446     		mov	r4, r2
 1724 0204 1D46     		mov	r5, r3
 1725 0206 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1726 0208 2060     		str	r0, [r4]	@ unaligned
 1727 020a 6160     		str	r1, [r4, #4]	@ unaligned
 1728 020c A260     		str	r2, [r4, #8]	@ unaligned
 1729 020e E360     		str	r3, [r4, #12]	@ unaligned
 1730 0210 2868     		ldr	r0, [r5]	@ unaligned
 1731 0212 2061     		str	r0, [r4, #16]	@ unaligned
 1732 0214 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1733 0216 AB79     		ldrb	r3, [r5, #6]
 1734 0218 A282     		strh	r2, [r4, #20]	@ unaligned
 1735 021a A375     		strb	r3, [r4, #22]
 581:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1736              		.loc 1 581 0
 1737 021c 1623     		movs	r3, #22
 1738 021e BB60     		str	r3, [r7, #8]
 582:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 583:App/STM32F4-Discovery/tcpCLI.c **** 
 584:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1739              		.loc 1 584 0
 1740 0220 0023     		movs	r3, #0
 1741 0222 9CE0     		b	.L49
 1742              	.L41:
 585:App/STM32F4-Discovery/tcpCLI.c **** 		}
 586:App/STM32F4-Discovery/tcpCLI.c **** 					
 587:App/STM32F4-Discovery/tcpCLI.c **** 	}
 588:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 589:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND START
 590:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 591:App/STM32F4-Discovery/tcpCLI.c **** 
 592:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "start", 5))
 1743              		.loc 1 592 0
 1744 0224 786A     		ldr	r0, [r7, #36]
 1745 0226 2F49     		ldr	r1, .L50+64
 1746 0228 0522     		movs	r2, #5
 1747 022a FFF7FEFF 		bl	strncmp
 1748 022e 0346     		mov	r3, r0
 1749 0230 002B     		cmp	r3, #0
 1750 0232 40F08E80 		bne	.L45
 593:App/STM32F4-Discovery/tcpCLI.c **** 	{
 594:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.Qcmd = START; 
 1751              		.loc 1 594 0
 1752 0236 244B     		ldr	r3, .L50+36
 1753 0238 0422     		movs	r2, #4
 1754 023a 1A70     		strb	r2, [r3]
 595:App/STM32F4-Discovery/tcpCLI.c **** 		telegramS.size = 5; 
 1755              		.loc 1 595 0
 1756 023c 224B     		ldr	r3, .L50+36
 1757 023e 0522     		movs	r2, #5
 1758 0240 5A60     		str	r2, [r3, #4]
 596:App/STM32F4-Discovery/tcpCLI.c **** 			// send value to setSpeed_task via Queue 
 597:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegramS, xDelay ) == pdPASS )
 1759              		.loc 1 597 0
 1760 0242 1D4B     		ldr	r3, .L50+20
 1761 0244 1A68     		ldr	r2, [r3]
 1762 0246 214B     		ldr	r3, .L50+40
 1763 0248 1B68     		ldr	r3, [r3]
 1764 024a 1046     		mov	r0, r2
 1765 024c 1E49     		ldr	r1, .L50+36
 1766 024e 1A46     		mov	r2, r3
 1767 0250 0023     		movs	r3, #0
 1768 0252 FFF7FEFF 		bl	xQueueGenericSend
 1769 0256 0346     		mov	r3, r0
 1770 0258 012B     		cmp	r3, #1
 1771 025a 67D1     		bne	.L46
 598:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 599:App/STM32F4-Discovery/tcpCLI.c **** 		//	vTaskDelay(500/portTICK_RATE_MS);		
 600:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegramR, xDelay) == pdPASS)
 1772              		.loc 1 600 0
 1773 025c 164B     		ldr	r3, .L50+20
 1774 025e 1A68     		ldr	r2, [r3]
 1775 0260 1A4B     		ldr	r3, .L50+40
 1776 0262 1B68     		ldr	r3, [r3]
 1777 0264 1046     		mov	r0, r2
 1778 0266 1A49     		ldr	r1, .L50+44
 1779 0268 1A46     		mov	r2, r3
 1780 026a 0023     		movs	r3, #0
 1781 026c FFF7FEFF 		bl	xQueueGenericReceive
 1782 0270 0346     		mov	r3, r0
 1783 0272 012B     		cmp	r3, #1
 1784 0274 49D1     		bne	.L47
 601:App/STM32F4-Discovery/tcpCLI.c **** 			{
 602:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegramR.Qcmd == SUCCSESS) 
 1785              		.loc 1 602 0
 1786 0276 164B     		ldr	r3, .L50+44
 1787 0278 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1788 027a 062B     		cmp	r3, #6
 1789 027c 36D1     		bne	.L48
 603:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 604:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer , "Motor succsesfully started.\n\n");
 1790              		.loc 1 604 0
 1791 027e FA68     		ldr	r2, [r7, #12]
 1792 0280 194B     		ldr	r3, .L50+68
 1793 0282 1546     		mov	r5, r2
 1794 0284 1C46     		mov	r4, r3
 1795 0286 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1796 0288 2860     		str	r0, [r5]	@ unaligned
 1797 028a 6960     		str	r1, [r5, #4]	@ unaligned
 1798 028c AA60     		str	r2, [r5, #8]	@ unaligned
 1799 028e EB60     		str	r3, [r5, #12]	@ unaligned
 1800 0290 07CC     		ldmia	r4!, {r0, r1, r2}
 1801 0292 2861     		str	r0, [r5, #16]	@ unaligned
 1802 0294 6961     		str	r1, [r5, #20]	@ unaligned
 1803 0296 AA61     		str	r2, [r5, #24]	@ unaligned
 1804 0298 2388     		ldrh	r3, [r4]	@ unaligned
 1805 029a AB83     		strh	r3, [r5, #28]	@ unaligned
 605:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 29; 	
 1806              		.loc 1 605 0
 1807 029c 1D23     		movs	r3, #29
 1808 029e BB60     		str	r3, [r7, #8]
 606:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 607:App/STM32F4-Discovery/tcpCLI.c **** 
 608:App/STM32F4-Discovery/tcpCLI.c **** 					
 609:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 1809              		.loc 1 609 0
 1810 02a0 0123     		movs	r3, #1
 1811 02a2 5CE0     		b	.L49
 1812              	.L51:
 1813              		.align	2
 1814              	.L50:
 1815 02a4 A4010000 		.word	.LC16
 1816 02a8 BC010000 		.word	.LC17
 1817 02ac C4010000 		.word	.LC18
 1818 02b0 84020000 		.word	.LC19
 1819 02b4 08000000 		.word	.LC1
 1820 02b8 00000000 		.word	QSpd_handle
 1821 02bc 00000000 		.word	socket_0
 1822 02c0 88020000 		.word	.LC20
 1823 02c4 8C020000 		.word	.LC21
 1824 02c8 00000000 		.word	telegramS
 1825 02cc 00000000 		.word	xDelay
 1826 02d0 00000000 		.word	telegramR
 1827 02d4 94020000 		.word	.LC22
 1828 02d8 C8000000 		.word	.LC7
 1829 02dc DC000000 		.word	.LC8
 1830 02e0 F8000000 		.word	.LC9
 1831 02e4 B4020000 		.word	.LC23
 1832 02e8 BC020000 		.word	.LC24
 1833              	.L48:
 610:App/STM32F4-Discovery/tcpCLI.c **** 
 611:App/STM32F4-Discovery/tcpCLI.c **** 				}
 612:App/STM32F4-Discovery/tcpCLI.c **** 				else
 613:App/STM32F4-Discovery/tcpCLI.c **** 				{
 614:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 1834              		.loc 1 614 0
 1835 02ec FA68     		ldr	r2, [r7, #12]
 1836 02ee 1E4B     		ldr	r3, .L52
 1837 02f0 1546     		mov	r5, r2
 1838 02f2 1C46     		mov	r4, r3
 1839 02f4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1840 02f6 2860     		str	r0, [r5]	@ unaligned
 1841 02f8 6960     		str	r1, [r5, #4]	@ unaligned
 1842 02fa AA60     		str	r2, [r5, #8]	@ unaligned
 1843 02fc EB60     		str	r3, [r5, #12]	@ unaligned
 1844 02fe 2068     		ldr	r0, [r4]	@ unaligned
 1845 0300 2861     		str	r0, [r5, #16]	@ unaligned
 615:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 1846              		.loc 1 615 0
 1847 0302 1323     		movs	r3, #19
 1848 0304 BB60     		str	r3, [r7, #8]
 616:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 617:App/STM32F4-Discovery/tcpCLI.c **** 
 618:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 1849              		.loc 1 618 0
 1850 0306 0023     		movs	r3, #0
 1851 0308 29E0     		b	.L49
 1852              	.L47:
 619:App/STM32F4-Discovery/tcpCLI.c **** 
 620:App/STM32F4-Discovery/tcpCLI.c **** 
 621:App/STM32F4-Discovery/tcpCLI.c **** 				}
 622:App/STM32F4-Discovery/tcpCLI.c **** 			}
 623:App/STM32F4-Discovery/tcpCLI.c **** 			else
 624:App/STM32F4-Discovery/tcpCLI.c **** 			{
 625:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 626:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 627:App/STM32F4-Discovery/tcpCLI.c **** 		
 628:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 1853              		.loc 1 628 0
 1854 030a FA68     		ldr	r2, [r7, #12]
 1855 030c 174B     		ldr	r3, .L52+4
 1856 030e 1546     		mov	r5, r2
 1857 0310 1C46     		mov	r4, r3
 1858 0312 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1859 0314 2860     		str	r0, [r5]	@ unaligned
 1860 0316 6960     		str	r1, [r5, #4]	@ unaligned
 1861 0318 AA60     		str	r2, [r5, #8]	@ unaligned
 1862 031a EB60     		str	r3, [r5, #12]	@ unaligned
 1863 031c 07CC     		ldmia	r4!, {r0, r1, r2}
 1864 031e 2861     		str	r0, [r5, #16]	@ unaligned
 1865 0320 6961     		str	r1, [r5, #20]	@ unaligned
 1866 0322 AA61     		str	r2, [r5, #24]	@ unaligned
 629:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 1867              		.loc 1 629 0
 1868 0324 1B23     		movs	r3, #27
 1869 0326 BB60     		str	r3, [r7, #8]
 630:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 631:App/STM32F4-Discovery/tcpCLI.c **** 
 632:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 1870              		.loc 1 632 0
 1871 0328 0023     		movs	r3, #0
 1872 032a 18E0     		b	.L49
 1873              	.L46:
 633:App/STM32F4-Discovery/tcpCLI.c **** 			}
 634:App/STM32F4-Discovery/tcpCLI.c **** 		}
 635:App/STM32F4-Discovery/tcpCLI.c **** 		else
 636:App/STM32F4-Discovery/tcpCLI.c **** 		{
 637:App/STM32F4-Discovery/tcpCLI.c **** 			
 638:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 639:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 640:App/STM32F4-Discovery/tcpCLI.c **** 		
 641:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer,"Error sending Queue!\n\n");
 1874              		.loc 1 641 0
 1875 032c FA68     		ldr	r2, [r7, #12]
 1876 032e 104B     		ldr	r3, .L52+8
 1877 0330 1446     		mov	r4, r2
 1878 0332 1D46     		mov	r5, r3
 1879 0334 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1880 0336 2060     		str	r0, [r4]	@ unaligned
 1881 0338 6160     		str	r1, [r4, #4]	@ unaligned
 1882 033a A260     		str	r2, [r4, #8]	@ unaligned
 1883 033c E360     		str	r3, [r4, #12]	@ unaligned
 1884 033e 2868     		ldr	r0, [r5]	@ unaligned
 1885 0340 2061     		str	r0, [r4, #16]	@ unaligned
 1886 0342 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1887 0344 AB79     		ldrb	r3, [r5, #6]
 1888 0346 A282     		strh	r2, [r4, #20]	@ unaligned
 1889 0348 A375     		strb	r3, [r4, #22]
 642:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1890              		.loc 1 642 0
 1891 034a 1623     		movs	r3, #22
 1892 034c BB60     		str	r3, [r7, #8]
 643:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket_0, buf, len, 0);
 644:App/STM32F4-Discovery/tcpCLI.c **** 
 645:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1893              		.loc 1 645 0
 1894 034e 0023     		movs	r3, #0
 1895 0350 05E0     		b	.L49
 1896              	.L45:
 646:App/STM32F4-Discovery/tcpCLI.c **** 		}
 647:App/STM32F4-Discovery/tcpCLI.c **** 
 648:App/STM32F4-Discovery/tcpCLI.c **** 
 649:App/STM32F4-Discovery/tcpCLI.c **** 	}
 650:App/STM32F4-Discovery/tcpCLI.c **** 
 651:App/STM32F4-Discovery/tcpCLI.c **** 
 652:App/STM32F4-Discovery/tcpCLI.c **** 	strcpy(pcWriteBuffer, xMotorCommand.pcHelpString);
 1897              		.loc 1 652 0
 1898 0352 084B     		ldr	r3, .L52+12
 1899 0354 F868     		ldr	r0, [r7, #12]
 1900 0356 1946     		mov	r1, r3
 1901 0358 FFF7FEFF 		bl	strcpy
 653:App/STM32F4-Discovery/tcpCLI.c **** 		
 654:App/STM32F4-Discovery/tcpCLI.c **** 	return pdFALSE;
 1902              		.loc 1 654 0
 1903 035c 0023     		movs	r3, #0
 1904              	.L49:
 655:App/STM32F4-Discovery/tcpCLI.c **** 
 656:App/STM32F4-Discovery/tcpCLI.c **** 
 657:App/STM32F4-Discovery/tcpCLI.c **** }
 1905              		.loc 1 657 0
 1906 035e 1846     		mov	r0, r3
 1907 0360 2837     		adds	r7, r7, #40
 1908 0362 BD46     		mov	sp, r7
 1909              		@ sp needed
 1910 0364 B0BD     		pop	{r4, r5, r7, pc}
 1911              	.L53:
 1912 0366 00BF     		.align	2
 1913              	.L52:
 1914 0368 C8000000 		.word	.LC7
 1915 036c DC000000 		.word	.LC8
 1916 0370 F8000000 		.word	.LC9
 1917 0374 08000000 		.word	.LC1
 1918              		.cfi_endproc
 1919              	.LFE112:
 1921              		.section	.rodata
 1922 02da 0000     		.align	2
 1923              	.LC25:
 1924 02dc 6B696C6C 		.ascii	"kill\000"
 1924      00
 1925 02e1 000000   		.align	2
 1926              	.LC26:
 1927 02e4 5461736B 		.ascii	"Task: motorHB succsessfully killed\012\000\000"
 1927      3A206D6F 
 1927      746F7248 
 1927      42207375 
 1927      63637365 
 1928 0309 000000   		.align	2
 1929              	.LC27:
 1930 030c 6D6F746F 		.ascii	"motorHB\000"
 1930      72484200 
 1931              		.align	2
 1932              	.LC28:
 1933 0314 5461736B 		.ascii	"Task: motorHB succsessfully started\012\000\000"
 1933      3A206D6F 
 1933      746F7248 
 1933      42207375 
 1933      63637365 
 1934 033a 0000     		.section	.text.prvTaskStatsCommand,"ax",%progbits
 1935              		.align	2
 1936              		.global	prvTaskStatsCommand
 1937              		.thumb
 1938              		.thumb_func
 1940              	prvTaskStatsCommand:
 1941              	.LFB113:
 658:App/STM32F4-Discovery/tcpCLI.c **** 
 659:App/STM32F4-Discovery/tcpCLI.c **** portBASE_TYPE prvTaskStatsCommand ( 	int8_t *pcWriteBuffer, 
 660:App/STM32F4-Discovery/tcpCLI.c **** 						size_t xWriteBufferLen, 
 661:App/STM32F4-Discovery/tcpCLI.c **** 						const int8_t *pcCommandString)
 662:App/STM32F4-Discovery/tcpCLI.c **** {
 1942              		.loc 1 662 0
 1943              		.cfi_startproc
 1944              		@ args = 0, pretend = 0, frame = 24
 1945              		@ frame_needed = 1, uses_anonymous_args = 0
 1946 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1947              	.LCFI9:
 1948              		.cfi_def_cfa_offset 24
 1949              		.cfi_offset 4, -24
 1950              		.cfi_offset 5, -20
 1951              		.cfi_offset 6, -16
 1952              		.cfi_offset 7, -12
 1953              		.cfi_offset 8, -8
 1954              		.cfi_offset 14, -4
 1955 0004 8AB0     		sub	sp, sp, #40
 1956              	.LCFI10:
 1957              		.cfi_def_cfa_offset 64
 1958 0006 04AF     		add	r7, sp, #16
 1959              	.LCFI11:
 1960              		.cfi_def_cfa 7, 48
 1961 0008 F860     		str	r0, [r7, #12]
 1962 000a B960     		str	r1, [r7, #8]
 1963 000c 7A60     		str	r2, [r7, #4]
 663:App/STM32F4-Discovery/tcpCLI.c **** 
 664:App/STM32F4-Discovery/tcpCLI.c **** 	int8_t *Option, *Param, *Value;
 665:App/STM32F4-Discovery/tcpCLI.c **** 	int xOptionLength, xParamLength, xValueLength; 
 666:App/STM32F4-Discovery/tcpCLI.c **** 	//QueueTelegram telegram; 
 667:App/STM32F4-Discovery/tcpCLI.c **** 	
 668:App/STM32F4-Discovery/tcpCLI.c **** 	// get option from command line 
 669:App/STM32F4-Discovery/tcpCLI.c **** 
 670:App/STM32F4-Discovery/tcpCLI.c **** 	Option = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1964              		.loc 1 670 0
 1965 000e 07F11003 		add	r3, r7, #16
 1966 0012 7868     		ldr	r0, [r7, #4]
 1967 0014 0121     		movs	r1, #1
 1968 0016 1A46     		mov	r2, r3
 1969 0018 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1970 001c 7861     		str	r0, [r7, #20]
 671:App/STM32F4-Discovery/tcpCLI.c **** 					  1,  		   // first parameter
 672:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xOptionLength // parameter string length
 673:App/STM32F4-Discovery/tcpCLI.c **** 					  
 674:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 675:App/STM32F4-Discovery/tcpCLI.c ****     	( void ) xWriteBufferLen;
 676:App/STM32F4-Discovery/tcpCLI.c **** 	if ( Option == NULL)
 1971              		.loc 1 676 0
 1972 001e 7B69     		ldr	r3, [r7, #20]
 1973 0020 002B     		cmp	r3, #0
 1974 0022 02D1     		bne	.L55
 677:App/STM32F4-Discovery/tcpCLI.c **** 	{
 678:App/STM32F4-Discovery/tcpCLI.c **** 		 vTaskList( pcWriteBuffer);
 1975              		.loc 1 678 0
 1976 0024 F868     		ldr	r0, [r7, #12]
 1977 0026 FFF7FEFF 		bl	vTaskList
 1978              	.L55:
 679:App/STM32F4-Discovery/tcpCLI.c **** 	}	
 680:App/STM32F4-Discovery/tcpCLI.c ****     /* For simplicity, this function assumes the output buffer is large enough
 681:App/STM32F4-Discovery/tcpCLI.c ****     to hold all the text generated by executing the vTaskList() API function,
 682:App/STM32F4-Discovery/tcpCLI.c ****     so the xWriteBufferLen parameter is not used. */
 683:App/STM32F4-Discovery/tcpCLI.c **** 
 684:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "kill", 7))
 1979              		.loc 1 684 0
 1980 002a 7869     		ldr	r0, [r7, #20]
 1981 002c 2D49     		ldr	r1, .L62
 1982 002e 0722     		movs	r2, #7
 1983 0030 FFF7FEFF 		bl	strncmp
 1984 0034 0346     		mov	r3, r0
 1985 0036 002B     		cmp	r3, #0
 1986 0038 1CD1     		bne	.L56
 685:App/STM32F4-Discovery/tcpCLI.c **** 	{
 686:App/STM32F4-Discovery/tcpCLI.c **** 	
 687:App/STM32F4-Discovery/tcpCLI.c **** 		vTaskDelete(motorHeartBeatHandle);
 1987              		.loc 1 687 0
 1988 003a 2B4B     		ldr	r3, .L62+4
 1989 003c 1B68     		ldr	r3, [r3]
 1990 003e 1846     		mov	r0, r3
 1991 0040 FFF7FEFF 		bl	vTaskDelete
 688:App/STM32F4-Discovery/tcpCLI.c **** 		strcpy ( pcWriteBuffer, "Task: motorHB succsessfully killed\n\0");
 1992              		.loc 1 688 0
 1993 0044 FB68     		ldr	r3, [r7, #12]
 1994 0046 294A     		ldr	r2, .L62+8
 1995 0048 1446     		mov	r4, r2
 1996 004a 1D46     		mov	r5, r3
 1997 004c 04F12008 		add	r8, r4, #32
 1998              	.L57:
 1999 0050 2E46     		mov	r6, r5
 2000 0052 A446     		mov	ip, r4
 2001 0054 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 2002 0058 3060     		str	r0, [r6]	@ unaligned
 2003 005a 7160     		str	r1, [r6, #4]	@ unaligned
 2004 005c B260     		str	r2, [r6, #8]	@ unaligned
 2005 005e F360     		str	r3, [r6, #12]	@ unaligned
 2006 0060 1034     		adds	r4, r4, #16
 2007 0062 1035     		adds	r5, r5, #16
 2008 0064 4445     		cmp	r4, r8
 2009 0066 F3D1     		bne	.L57
 2010 0068 2B46     		mov	r3, r5
 2011 006a 2246     		mov	r2, r4
 2012 006c 1068     		ldr	r0, [r2]	@ unaligned
 2013 006e 1860     		str	r0, [r3]	@ unaligned
 689:App/STM32F4-Discovery/tcpCLI.c **** 		return pdPASS;
 2014              		.loc 1 689 0
 2015 0070 0123     		movs	r3, #1
 2016 0072 31E0     		b	.L61
 2017              	.L56:
 690:App/STM32F4-Discovery/tcpCLI.c **** 	}
 691:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "start", 5))
 2018              		.loc 1 691 0
 2019 0074 7869     		ldr	r0, [r7, #20]
 2020 0076 1E49     		ldr	r1, .L62+12
 2021 0078 0522     		movs	r2, #5
 2022 007a FFF7FEFF 		bl	strncmp
 2023 007e 0346     		mov	r3, r0
 2024 0080 002B     		cmp	r3, #0
 2025 0082 28D1     		bne	.L59
 692:App/STM32F4-Discovery/tcpCLI.c **** 	{
 693:App/STM32F4-Discovery/tcpCLI.c **** 		// set motor task 
 694:App/STM32F4-Discovery/tcpCLI.c **** 		xTaskCreate(motorHeartBeat_task, "motorHB", configMINIMAL_STACK_SIZE * 8,		       				
 2026              		.loc 1 694 0
 2027 0084 0123     		movs	r3, #1
 2028 0086 0093     		str	r3, [sp]
 2029 0088 174B     		ldr	r3, .L62+4
 2030 008a 0193     		str	r3, [sp, #4]
 2031 008c 0023     		movs	r3, #0
 2032 008e 0293     		str	r3, [sp, #8]
 2033 0090 0023     		movs	r3, #0
 2034 0092 0393     		str	r3, [sp, #12]
 2035 0094 1748     		ldr	r0, .L62+16
 2036 0096 1849     		ldr	r1, .L62+20
 2037 0098 4FF40062 		mov	r2, #2048
 2038 009c 0023     		movs	r3, #0
 2039 009e FFF7FEFF 		bl	xTaskGenericCreate
 695:App/STM32F4-Discovery/tcpCLI.c **** 			NULL, 0x1/*mainFLASH_TASK_PRIORITY*/ , &motorHeartBeatHandle);
 696:App/STM32F4-Discovery/tcpCLI.c **** 
 697:App/STM32F4-Discovery/tcpCLI.c **** 		strcpy ( pcWriteBuffer, "Task: motorHB succsessfully started\n\0");
 2040              		.loc 1 697 0
 2041 00a2 FB68     		ldr	r3, [r7, #12]
 2042 00a4 154A     		ldr	r2, .L62+24
 2043 00a6 1446     		mov	r4, r2
 2044 00a8 1D46     		mov	r5, r3
 2045 00aa 04F12008 		add	r8, r4, #32
 2046              	.L60:
 2047 00ae 2E46     		mov	r6, r5
 2048 00b0 A446     		mov	ip, r4
 2049 00b2 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 2050 00b6 3060     		str	r0, [r6]	@ unaligned
 2051 00b8 7160     		str	r1, [r6, #4]	@ unaligned
 2052 00ba B260     		str	r2, [r6, #8]	@ unaligned
 2053 00bc F360     		str	r3, [r6, #12]	@ unaligned
 2054 00be 1034     		adds	r4, r4, #16
 2055 00c0 1035     		adds	r5, r5, #16
 2056 00c2 4445     		cmp	r4, r8
 2057 00c4 F3D1     		bne	.L60
 2058 00c6 2B46     		mov	r3, r5
 2059 00c8 2246     		mov	r2, r4
 2060 00ca 1068     		ldr	r0, [r2]	@ unaligned
 2061 00cc 1860     		str	r0, [r3]	@ unaligned
 2062 00ce 1279     		ldrb	r2, [r2, #4]
 2063 00d0 1A71     		strb	r2, [r3, #4]
 698:App/STM32F4-Discovery/tcpCLI.c **** 
 699:App/STM32F4-Discovery/tcpCLI.c **** 	
 700:App/STM32F4-Discovery/tcpCLI.c **** 		return pdPASS;	
 2064              		.loc 1 700 0
 2065 00d2 0123     		movs	r3, #1
 2066 00d4 00E0     		b	.L61
 2067              	.L59:
 701:App/STM32F4-Discovery/tcpCLI.c **** 	}
 702:App/STM32F4-Discovery/tcpCLI.c **** 
 703:App/STM32F4-Discovery/tcpCLI.c **** 
 704:App/STM32F4-Discovery/tcpCLI.c ****  
 705:App/STM32F4-Discovery/tcpCLI.c **** 
 706:App/STM32F4-Discovery/tcpCLI.c ****     /* The entire table was written directly to the output buffer.  Execution
 707:App/STM32F4-Discovery/tcpCLI.c ****     of this command is complete, so return pdFALSE. */
 708:App/STM32F4-Discovery/tcpCLI.c ****     return pdFALSE;
 2068              		.loc 1 708 0
 2069 00d6 0023     		movs	r3, #0
 2070              	.L61:
 709:App/STM32F4-Discovery/tcpCLI.c **** }
 2071              		.loc 1 709 0
 2072 00d8 1846     		mov	r0, r3
 2073 00da 1837     		adds	r7, r7, #24
 2074 00dc BD46     		mov	sp, r7
 2075              		@ sp needed
 2076 00de BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2077              	.L63:
 2078 00e2 00BF     		.align	2
 2079              	.L62:
 2080 00e4 DC020000 		.word	.LC25
 2081 00e8 00000000 		.word	motorHeartBeatHandle
 2082 00ec E4020000 		.word	.LC26
 2083 00f0 B4020000 		.word	.LC23
 2084 00f4 00000000 		.word	motorHeartBeat_task
 2085 00f8 0C030000 		.word	.LC27
 2086 00fc 14030000 		.word	.LC28
 2087              		.cfi_endproc
 2088              	.LFE113:
 2090              		.text
 2091              	.Letext0:
 2092              		.file 2 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/lib/gcc/arm-none-eabi/4.8.4/include/std
 2093              		.file 3 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/machine/_default_
 2094              		.file 4 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/stdint.h"
 2095              		.file 5 "Source/portable/GCC/ARM_CM4F/portmacro.h"
 2096              		.file 6 "Source/include/task.h"
 2097              		.file 7 "Source/include/queue.h"
 2098              		.file 8 "Source/include/semphr.h"
 2099              		.file 9 "Source/FreeRTOS-Plus-CLI/FreeRTOS_CLI.h"
 2100              		.file 10 "App/STM32F4-Discovery/tcpCLI.h"
 2101              		.file 11 "App/STM32F4-Discovery/main.h"
 2102              		.file 12 "App/STM32F4-Discovery/modbus_mk.h"
 2103              		.file 13 "App/STM32F4-Discovery/Libraries/CMSIS/Include/core_cm4.h"
 2104              		.file 14 "App/STM32F4-Discovery/spi.h"
 2105              		.file 15 "App/STM32F4-Discovery/W5200.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 tcpCLI.c
                            *COM*:0000000000000004 xSemaphoreDMASPI
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:21     .bss.xHigherPriorityTaskWoken:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:24     .bss.xHigherPriorityTaskWoken:0000000000000000 xHigherPriorityTaskWoken
                            *COM*:0000000000000004 xSmphrUSART
                            *COM*:0000000000000004 motorHeartBeatHandle
                            *COM*:0000000000000004 motorHBHandle
                            *COM*:0000000000000004 QSpd_handle
                            *COM*:0000000000000004 QStatus_handle
                            *COM*:0000000000000004 socket_0
                            *COM*:00000000000007d0 bufferTX
                            *COM*:00000000000007d0 bufferRX
                            *COM*:0000000000000004 bufferRXidx
                            *COM*:0000000000000004 bufferTXidx
                            *COM*:0000000000000004 dat_lengthRX
                            *COM*:0000000000000004 dat_lengthTX
                            *COM*:0000000000000004 set_macTaskHandle
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:40     .rodata.table_crc_hi:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:43     .rodata.table_crc_hi:0000000000000000 table_crc_hi
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:301    .rodata.table_crc_lo:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:304    .rodata.table_crc_lo:0000000000000000 table_crc_lo
                            *COM*:0000000000000004 fd
                            *COM*:0000000000000201 received_string
                            *COM*:0000000000000004 rx_length
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:565    .bss.xHigherPriorityTaskWoken_usart:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:568    .bss.xHigherPriorityTaskWoken_usart:0000000000000000 xHigherPriorityTaskWoken_usart
                            *COM*:0000000000000014 input_Register
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:572    .rodata:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:580    .rodata.xMotorCommand:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:583    .rodata.xMotorCommand:0000000000000000 xMotorCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:1414   .text.prvMotorCommand:0000000000000000 prvMotorCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:597    .rodata.xTaskStatsCommand:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:600    .rodata.xTaskStatsCommand:0000000000000000 xTaskStatsCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:1940   .text.prvTaskStatsCommand:0000000000000000 prvTaskStatsCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:607    .data.xDelay:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:610    .data.xDelay:0000000000000000 xDelay
                            *COM*:000000000000001c telegramS
                            *COM*:000000000000001c telegramR
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:648    .text.handleVariable_set:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:653    .text.handleVariable_set:0000000000000000 handleVariable_set
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:1052   .text.handleVariable_set:000000000000027c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:1077   .text.handleVariable_get:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:1082   .text.handleVariable_get:0000000000000000 handleVariable_get
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:1360   .text.handleVariable_get:00000000000001c0 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:1409   .text.prvMotorCommand:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:1815   .text.prvMotorCommand:00000000000002a4 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:1835   .text.prvMotorCommand:00000000000002ec $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:1914   .text.prvMotorCommand:0000000000000368 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:1935   .text.prvTaskStatsCommand:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccnF8eWH.s:2080   .text.prvTaskStatsCommand:00000000000000e4 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
strncmp
atoi
sprintf
xQueueGenericSend
xQueueGenericReceive
FreeRTOS_CLIGetParameter
memcpy
strcpy
vTaskList
vTaskDelete
xTaskGenericCreate
motorHeartBeat_task
