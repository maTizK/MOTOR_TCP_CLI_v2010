   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"tcpCLI.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	xSemaphoreDMASPI,4,4
  20              		.section	.bss.xHigherPriorityTaskWoken,"aw",%nobits
  21              		.align	2
  24              	xHigherPriorityTaskWoken:
  25 0000 00000000 		.space	4
  26              		.comm	xSmphrUSART,4,4
  27              		.comm	motorHeartBeatHandle,4,4
  28              		.comm	motorHBHandle,4,4
  29              		.comm	QSpd_handle,4,4
  30              		.comm	QStatus_handle,4,4
  31              		.comm	socket_0,4,4
  32              		.comm	bufferTX,2000,4
  33              		.comm	bufferRX,2000,4
  34              		.comm	bufferRXidx,4,4
  35              		.comm	bufferTXidx,4,4
  36              		.comm	dat_lengthRX,4,4
  37              		.comm	dat_lengthTX,4,4
  38              		.comm	set_macTaskHandle,4,4
  39              		.section	.rodata
  40              		.align	2
  41              	.LC0:
  42 0000 6D6F746F 		.ascii	"motor\000"
  42      7200
  43 0006 0000     		.align	2
  44              	.LC1:
  45 0008 6D6F746F 		.ascii	"motor  [options]\302\240[parameters]\302\240: Contr"
  45      7220205B 
  45      6F707469 
  45      6F6E735D 
  45      C2A05B70 
  46 002f 6F6C7320 		.ascii	"ols motor speed, rpm, etc., .. \015\012\012\000\000"
  46      6D6F746F 
  46      72207370 
  46      6565642C 
  46      2072706D 
  47              		.section	.rodata.xMotorCommand,"a",%progbits
  48              		.align	2
  51              	xMotorCommand:
  52 0000 00000000 		.word	.LC0
  53 0004 08000000 		.word	.LC1
  54 0008 00000000 		.word	prvMotorCommand
  55 000c FF       		.byte	-1
  56 000d 000000   		.space	3
  57              		.section	.data.xDelay,"aw",%progbits
  58              		.align	2
  61              	xDelay:
  62 0000 64000000 		.word	100
  63              		.section	.rodata
  64 0053 00       		.align	2
  65              	.LC2:
  66 0054 73706565 		.ascii	"speed\000"
  66      6400
  67 005a 0000     		.align	2
  68              	.LC3:
  69 005c 4572726F 		.ascii	"Error: speed is out of range [1,100]p : %d\012\012\000"
  69      723A2073 
  69      70656564 
  69      20697320 
  69      6F757420 
  70 0089 00       		.ascii	"\000"
  71 008a 0000     		.align	2
  72              	.LC4:
  73 008c 53706565 		.ascii	"Speed succsesfully set.\012\012\000"
  73      64207375 
  73      63637365 
  73      7366756C 
  73      6C792073 
  74 00a6 0000     		.align	2
  75              	.LC5:
  76 00a8 4572726F 		.ascii	"Error recieving response!\012\012\000"
  76      72207265 
  76      63696576 
  76      696E6720 
  76      72657370 
  77              		.align	2
  78              	.LC6:
  79 00c4 4572726F 		.ascii	"Error sending Queue!\012\012\000"
  79      72207365 
  79      6E64696E 
  79      67205175 
  79      65756521 
  80 00db 00       		.align	2
  81              	.LC7:
  82 00dc 75707261 		.ascii	"upramp\000"
  82      6D7000
  83 00e3 00       		.align	2
  84              	.LC8:
  85 00e4 646F776E 		.ascii	"downramp\000"
  85      72616D70 
  85      00
  86 00ed 000000   		.align	2
  87              	.LC9:
  88 00f0 45727272 		.ascii	"Errror : %d\012\012\000"
  88      6F72203A 
  88      2025640A 
  88      0A00
  89 00fe 0000     		.align	2
  90              	.LC10:
  91 0100 0000     		.ascii	"\000\000"
  92              		.section	.text.handleVariable_set,"ax",%progbits
  93              		.align	2
  94              		.global	handleVariable_set
  95              		.thumb
  96              		.thumb_func
  98              	handleVariable_set:
  99              	.LFB110:
 100              		.file 1 "App/STM32F4-Discovery/tcpCLI.c"
   1:App/STM32F4-Discovery/tcpCLI.c **** #include "tcpCLI.h"
   2:App/STM32F4-Discovery/tcpCLI.c **** 
   3:App/STM32F4-Discovery/tcpCLI.c **** 
   4:App/STM32F4-Discovery/tcpCLI.c **** static 	portTickType xDelay = 100 / portTICK_RATE_MS;
   5:App/STM32F4-Discovery/tcpCLI.c **** 
   6:App/STM32F4-Discovery/tcpCLI.c **** 
   7:App/STM32F4-Discovery/tcpCLI.c **** 
   8:App/STM32F4-Discovery/tcpCLI.c **** 
   9:App/STM32F4-Discovery/tcpCLI.c **** 
  10:App/STM32F4-Discovery/tcpCLI.c **** 
  11:App/STM32F4-Discovery/tcpCLI.c **** int handleVariable_set (	QueueTelegram telegram,
  12:App/STM32F4-Discovery/tcpCLI.c **** 				int8_t *pcWriteBuffer, 
  13:App/STM32F4-Discovery/tcpCLI.c **** 				size_t xWriteBufferLen,
  14:App/STM32F4-Discovery/tcpCLI.c **** 				uint8_t * Param, 
  15:App/STM32F4-Discovery/tcpCLI.c **** 				int xParamLength,
  16:App/STM32F4-Discovery/tcpCLI.c **** 				xQueueHandle Qhandle,
  17:App/STM32F4-Discovery/tcpCLI.c **** 				uint8_t * Value,
  18:App/STM32F4-Discovery/tcpCLI.c **** 				int xValueLength,
  19:App/STM32F4-Discovery/tcpCLI.c **** 				int socket )
  20:App/STM32F4-Discovery/tcpCLI.c **** {
 101              		.loc 1 20 0
 102              		.cfi_startproc
 103              		@ args = 60, pretend = 16, frame = 16
 104              		@ frame_needed = 1, uses_anonymous_args = 0
 105 0000 84B0     		sub	sp, sp, #16
 106              	.LCFI0:
 107              		.cfi_def_cfa_offset 16
 108 0002 B0B5     		push	{r4, r5, r7, lr}
 109              	.LCFI1:
 110              		.cfi_def_cfa_offset 32
 111              		.cfi_offset 4, -32
 112              		.cfi_offset 5, -28
 113              		.cfi_offset 7, -24
 114              		.cfi_offset 14, -20
 115 0004 84B0     		sub	sp, sp, #16
 116              	.LCFI2:
 117              		.cfi_def_cfa_offset 48
 118 0006 00AF     		add	r7, sp, #0
 119              	.LCFI3:
 120              		.cfi_def_cfa_register 7
 121 0008 07F1200C 		add	ip, r7, #32
 122 000c 8CE80F00 		stmia	ip, {r0, r1, r2, r3}
  21:App/STM32F4-Discovery/tcpCLI.c **** 
  22:App/STM32F4-Discovery/tcpCLI.c **** 
  23:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
  24:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER speed [value]
  25:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
  26:App/STM32F4-Discovery/tcpCLI.c **** 
  27:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "speed", 5))
 123              		.loc 1 27 0
 124 0010 786C     		ldr	r0, [r7, #68]
 125 0012 9B49     		ldr	r1, .L16
 126 0014 0522     		movs	r2, #5
 127 0016 FFF7FEFF 		bl	strncmp
 128 001a 0346     		mov	r3, r0
 129 001c 002B     		cmp	r3, #0
 130 001e 40F08980 		bne	.L2
 131              	.LBB2:
  28:App/STM32F4-Discovery/tcpCLI.c **** 	{	
  29:App/STM32F4-Discovery/tcpCLI.c **** 	
  30:App/STM32F4-Discovery/tcpCLI.c **** 	
  31:App/STM32F4-Discovery/tcpCLI.c **** 		
  32:App/STM32F4-Discovery/tcpCLI.c **** 		// now convert parameter to proper value and check if it is in range 
  33:App/STM32F4-Discovery/tcpCLI.c ****         	Value[xValueLength-2] = '\0'; 	
 132              		.loc 1 33 0
 133 0022 7B6D     		ldr	r3, [r7, #84]
 134 0024 023B     		subs	r3, r3, #2
 135 0026 3A6D     		ldr	r2, [r7, #80]
 136 0028 1344     		add	r3, r3, r2
 137 002a 0022     		movs	r2, #0
 138 002c 1A70     		strb	r2, [r3]
  34:App/STM32F4-Discovery/tcpCLI.c **** 		uint16_t s1 = atoi ( Value ); 
 139              		.loc 1 34 0
 140 002e 386D     		ldr	r0, [r7, #80]
 141 0030 FFF7FEFF 		bl	atoi
 142 0034 0346     		mov	r3, r0
 143 0036 FB81     		strh	r3, [r7, #14]	@ movhi
  35:App/STM32F4-Discovery/tcpCLI.c **** 		// if speed is in range
  36:App/STM32F4-Discovery/tcpCLI.c **** 		if(s1 < 10 ||  s1 > 100 )
 144              		.loc 1 36 0
 145 0038 FB89     		ldrh	r3, [r7, #14]
 146 003a 092B     		cmp	r3, #9
 147 003c 02D9     		bls	.L3
 148              		.loc 1 36 0 is_stmt 0 discriminator 1
 149 003e FB89     		ldrh	r3, [r7, #14]
 150 0040 642B     		cmp	r3, #100
 151 0042 07D9     		bls	.L4
 152              	.L3:
  37:App/STM32F4-Discovery/tcpCLI.c **** 		{
  38:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP
  39:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error: speed is out of range [1,100]p : %d\n\n\0", s1);
 153              		.loc 1 39 0 is_stmt 1
 154 0044 FB89     		ldrh	r3, [r7, #14]
 155 0046 F86B     		ldr	r0, [r7, #60]
 156 0048 8E49     		ldr	r1, .L16+4
 157 004a 1A46     		mov	r2, r3
 158 004c FFF7FEFF 		bl	sprintf
  40:App/STM32F4-Discovery/tcpCLI.c **** 		//	pcWriteBuffer[11+ 3] = "\0"; 
  41:App/STM32F4-Discovery/tcpCLI.c **** 			
  42:App/STM32F4-Discovery/tcpCLI.c **** 			////send( socket_0, buf, 11+3, 0);
  43:App/STM32F4-Discovery/tcpCLI.c **** 
  44:App/STM32F4-Discovery/tcpCLI.c **** 	       		return pdFALSE; 	
 159              		.loc 1 44 0
 160 0050 0023     		movs	r3, #0
 161 0052 87E1     		b	.L5
 162              	.L4:
  45:App/STM32F4-Discovery/tcpCLI.c **** 		}	
  46:App/STM32F4-Discovery/tcpCLI.c **** 	
  47:App/STM32F4-Discovery/tcpCLI.c **** 		// convert to correct value ( * 100 ) 
  48:App/STM32F4-Discovery/tcpCLI.c **** 		s1 *= 100; 
 163              		.loc 1 48 0
 164 0054 FB89     		ldrh	r3, [r7, #14]	@ movhi
 165 0056 1A46     		mov	r2, r3	@ movhi
 166 0058 9200     		lsls	r2, r2, #2
 167 005a 1344     		add	r3, r3, r2
 168 005c 1A46     		mov	r2, r3	@ movhi
 169 005e 9100     		lsls	r1, r2, #2
 170 0060 1A46     		mov	r2, r3	@ movhi
 171 0062 0B46     		mov	r3, r1	@ movhi
 172 0064 1344     		add	r3, r3, r2
 173 0066 9B00     		lsls	r3, r3, #2
 174 0068 FB81     		strh	r3, [r7, #14]	@ movhi
  49:App/STM32F4-Discovery/tcpCLI.c **** 		
  50:App/STM32F4-Discovery/tcpCLI.c **** 		
  51:App/STM32F4-Discovery/tcpCLI.c **** 		// setup telegram 
  52:App/STM32F4-Discovery/tcpCLI.c **** 		
  53:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.data[0] = s1;
 175              		.loc 1 53 0
 176 006a FB89     		ldrh	r3, [r7, #14]	@ movhi
 177 006c 3B85     		strh	r3, [r7, #40]	@ movhi
  54:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.data[1] = 0;	
 178              		.loc 1 54 0
 179 006e 0023     		movs	r3, #0
 180 0070 7B85     		strh	r3, [r7, #42]	@ movhi
  55:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.data[2] = 2250;
 181              		.loc 1 55 0
 182 0072 40F6CA03 		movw	r3, #2250
 183 0076 BB85     		strh	r3, [r7, #44]	@ movhi
  56:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.data[3] = 10;	
 184              		.loc 1 56 0
 185 0078 0A23     		movs	r3, #10
 186 007a FB85     		strh	r3, [r7, #46]	@ movhi
  57:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.data[4] = 10;	
 187              		.loc 1 57 0
 188 007c 0A23     		movs	r3, #10
 189 007e 3B86     		strh	r3, [r7, #48]	@ movhi
  58:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.size = 5;
 190              		.loc 1 58 0
 191 0080 0523     		movs	r3, #5
 192 0082 7B62     		str	r3, [r7, #36]
  59:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.Qcmd = SETDATA;
 193              		.loc 1 59 0
 194 0084 0023     		movs	r3, #0
 195 0086 87F82030 		strb	r3, [r7, #32]
  60:App/STM32F4-Discovery/tcpCLI.c **** 		
  61:App/STM32F4-Discovery/tcpCLI.c **** 	
  62:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
  63:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegram, xDelay ) == pdPASS )
 196              		.loc 1 63 0
 197 008a 7F4B     		ldr	r3, .L16+8
 198 008c 1A68     		ldr	r2, [r3]
 199 008e 7F4B     		ldr	r3, .L16+12
 200 0090 1B68     		ldr	r3, [r3]
 201 0092 1046     		mov	r0, r2
 202 0094 07F12001 		add	r1, r7, #32
 203 0098 1A46     		mov	r2, r3
 204 009a 0023     		movs	r3, #0
 205 009c FFF7FEFF 		bl	xQueueGenericSend
 206 00a0 0346     		mov	r3, r0
 207 00a2 012B     		cmp	r3, #1
 208 00a4 33D1     		bne	.L6
  64:App/STM32F4-Discovery/tcpCLI.c **** 		{	
  65:App/STM32F4-Discovery/tcpCLI.c **** 					
  66:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegram, xDelay)== pdPASS)
 209              		.loc 1 66 0
 210 00a6 784B     		ldr	r3, .L16+8
 211 00a8 1A68     		ldr	r2, [r3]
 212 00aa 784B     		ldr	r3, .L16+12
 213 00ac 1B68     		ldr	r3, [r3]
 214 00ae 1046     		mov	r0, r2
 215 00b0 07F12001 		add	r1, r7, #32
 216 00b4 1A46     		mov	r2, r3
 217 00b6 0023     		movs	r3, #0
 218 00b8 FFF7FEFF 		bl	xQueueGenericReceive
 219 00bc 0346     		mov	r3, r0
 220 00be 012B     		cmp	r3, #1
 221 00c0 14D1     		bne	.L7
  67:App/STM32F4-Discovery/tcpCLI.c **** 			{
  68:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegram.Qcmd = SUCCSESS) 
 222              		.loc 1 68 0
 223 00c2 0623     		movs	r3, #6
 224 00c4 87F82030 		strb	r3, [r7, #32]
  69:App/STM32F4-Discovery/tcpCLI.c **** 				{	
  70:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed succsesfully set.\n\n");
 225              		.loc 1 70 0
 226 00c8 FA6B     		ldr	r2, [r7, #60]
 227 00ca 714B     		ldr	r3, .L16+16
 228 00cc 1546     		mov	r5, r2
 229 00ce 1C46     		mov	r4, r3
 230 00d0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 231 00d2 2860     		str	r0, [r5]	@ unaligned
 232 00d4 6960     		str	r1, [r5, #4]	@ unaligned
 233 00d6 AA60     		str	r2, [r5, #8]	@ unaligned
 234 00d8 EB60     		str	r3, [r5, #12]	@ unaligned
 235 00da 03CC     		ldmia	r4!, {r0, r1}
 236 00dc 2861     		str	r0, [r5, #16]	@ unaligned
 237 00de 6961     		str	r1, [r5, #20]	@ unaligned
 238 00e0 2388     		ldrh	r3, [r4]	@ unaligned
 239 00e2 2B83     		strh	r3, [r5, #24]	@ unaligned
  71:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 25; 	
 240              		.loc 1 71 0
 241 00e4 1923     		movs	r3, #25
 242 00e6 BB60     		str	r3, [r7, #8]
  72:App/STM32F4-Discovery/tcpCLI.c **** 				//	//send( socket, buf, len, 0);
  73:App/STM32F4-Discovery/tcpCLI.c **** 
  74:App/STM32F4-Discovery/tcpCLI.c **** 
  75:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 243              		.loc 1 75 0
 244 00e8 0123     		movs	r3, #1
 245 00ea 3BE1     		b	.L5
 246              	.L7:
  76:App/STM32F4-Discovery/tcpCLI.c **** 
  77:App/STM32F4-Discovery/tcpCLI.c **** 				}
  78:App/STM32F4-Discovery/tcpCLI.c **** 				else
  79:App/STM32F4-Discovery/tcpCLI.c **** 				{
  80:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
  81:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
  82:App/STM32F4-Discovery/tcpCLI.c **** //					//send( socket, buf, len, 0);
  83:App/STM32F4-Discovery/tcpCLI.c **** 
  84:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
  85:App/STM32F4-Discovery/tcpCLI.c **** 
  86:App/STM32F4-Discovery/tcpCLI.c **** 
  87:App/STM32F4-Discovery/tcpCLI.c **** 				}
  88:App/STM32F4-Discovery/tcpCLI.c **** 						
  89:App/STM32F4-Discovery/tcpCLI.c **** 			}
  90:App/STM32F4-Discovery/tcpCLI.c **** 			else
  91:App/STM32F4-Discovery/tcpCLI.c **** 			{
  92:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
  93:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
  94:App/STM32F4-Discovery/tcpCLI.c **** 		
  95:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 247              		.loc 1 95 0
 248 00ec FA6B     		ldr	r2, [r7, #60]
 249 00ee 694B     		ldr	r3, .L16+20
 250 00f0 1546     		mov	r5, r2
 251 00f2 1C46     		mov	r4, r3
 252 00f4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 253 00f6 2860     		str	r0, [r5]	@ unaligned
 254 00f8 6960     		str	r1, [r5, #4]	@ unaligned
 255 00fa AA60     		str	r2, [r5, #8]	@ unaligned
 256 00fc EB60     		str	r3, [r5, #12]	@ unaligned
 257 00fe 07CC     		ldmia	r4!, {r0, r1, r2}
 258 0100 2861     		str	r0, [r5, #16]	@ unaligned
 259 0102 6961     		str	r1, [r5, #20]	@ unaligned
 260 0104 AA61     		str	r2, [r5, #24]	@ unaligned
  96:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 261              		.loc 1 96 0
 262 0106 1B23     		movs	r3, #27
 263 0108 BB60     		str	r3, [r7, #8]
  97:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
  98:App/STM32F4-Discovery/tcpCLI.c **** 
  99:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 264              		.loc 1 99 0
 265 010a 0023     		movs	r3, #0
 266 010c 2AE1     		b	.L5
 267              	.L6:
 100:App/STM32F4-Discovery/tcpCLI.c **** 			}
 101:App/STM32F4-Discovery/tcpCLI.c **** 
 102:App/STM32F4-Discovery/tcpCLI.c **** 
 103:App/STM32F4-Discovery/tcpCLI.c **** 		}
 104:App/STM32F4-Discovery/tcpCLI.c **** 		else
 105:App/STM32F4-Discovery/tcpCLI.c **** 		{
 106:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 107:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 108:App/STM32F4-Discovery/tcpCLI.c **** 		
 109:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 268              		.loc 1 109 0
 269 010e FA6B     		ldr	r2, [r7, #60]
 270 0110 614B     		ldr	r3, .L16+24
 271 0112 1446     		mov	r4, r2
 272 0114 1D46     		mov	r5, r3
 273 0116 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 274 0118 2060     		str	r0, [r4]	@ unaligned
 275 011a 6160     		str	r1, [r4, #4]	@ unaligned
 276 011c A260     		str	r2, [r4, #8]	@ unaligned
 277 011e E360     		str	r3, [r4, #12]	@ unaligned
 278 0120 2868     		ldr	r0, [r5]	@ unaligned
 279 0122 2061     		str	r0, [r4, #16]	@ unaligned
 280 0124 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 281 0126 AB79     		ldrb	r3, [r5, #6]
 282 0128 A282     		strh	r2, [r4, #20]	@ unaligned
 283 012a A375     		strb	r3, [r4, #22]
 110:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 284              		.loc 1 110 0
 285 012c 1623     		movs	r3, #22
 286 012e BB60     		str	r3, [r7, #8]
 111:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 112:App/STM32F4-Discovery/tcpCLI.c **** 
 113:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 287              		.loc 1 113 0
 288 0130 0023     		movs	r3, #0
 289 0132 17E1     		b	.L5
 290              	.L2:
 291              	.LBE2:
 114:App/STM32F4-Discovery/tcpCLI.c **** 		}
 115:App/STM32F4-Discovery/tcpCLI.c **** 	}
 116:App/STM32F4-Discovery/tcpCLI.c **** 	
 117:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 118:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER upramp [value]
 119:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 120:App/STM32F4-Discovery/tcpCLI.c **** 
 121:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "upramp", 6))
 292              		.loc 1 121 0
 293 0134 786C     		ldr	r0, [r7, #68]
 294 0136 5949     		ldr	r1, .L16+28
 295 0138 0622     		movs	r2, #6
 296 013a FFF7FEFF 		bl	strncmp
 297 013e 0346     		mov	r3, r0
 298 0140 002B     		cmp	r3, #0
 299 0142 70D1     		bne	.L8
 300              	.LBB3:
 122:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 123:App/STM32F4-Discovery/tcpCLI.c **** 	
 124:App/STM32F4-Discovery/tcpCLI.c **** 	
 125:App/STM32F4-Discovery/tcpCLI.c **** 		
 126:App/STM32F4-Discovery/tcpCLI.c **** 		// now convert parameter to proper value and check if it is in range 
 127:App/STM32F4-Discovery/tcpCLI.c ****         	Value[xValueLength-2] = '\0'; 	
 301              		.loc 1 127 0
 302 0144 7B6D     		ldr	r3, [r7, #84]
 303 0146 023B     		subs	r3, r3, #2
 304 0148 3A6D     		ldr	r2, [r7, #80]
 305 014a 1344     		add	r3, r3, r2
 306 014c 0022     		movs	r2, #0
 307 014e 1A70     		strb	r2, [r3]
 128:App/STM32F4-Discovery/tcpCLI.c **** 		uint16_t s1 = atoi ( Value ); 
 308              		.loc 1 128 0
 309 0150 386D     		ldr	r0, [r7, #80]
 310 0152 FFF7FEFF 		bl	atoi
 311 0156 0346     		mov	r3, r0
 312 0158 FB80     		strh	r3, [r7, #6]	@ movhi
 129:App/STM32F4-Discovery/tcpCLI.c **** 		// if speed is in range
 130:App/STM32F4-Discovery/tcpCLI.c **** 		if(s1 < 10 ||  s1 > 100 )
 313              		.loc 1 130 0
 314 015a FB88     		ldrh	r3, [r7, #6]
 315 015c 092B     		cmp	r3, #9
 316 015e 02D9     		bls	.L9
 317              		.loc 1 130 0 is_stmt 0 discriminator 1
 318 0160 FB88     		ldrh	r3, [r7, #6]
 319 0162 642B     		cmp	r3, #100
 320 0164 09D9     		bls	.L10
 321              	.L9:
 131:App/STM32F4-Discovery/tcpCLI.c **** 		{
 132:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP
 133:App/STM32F4-Discovery/tcpCLI.c **** 			//
 134:App/STM32F4-Discovery/tcpCLI.c **** 			xWriteBufferLen = 100; 
 322              		.loc 1 134 0 is_stmt 1
 323 0166 6423     		movs	r3, #100
 324 0168 BB60     		str	r3, [r7, #8]
 135:App/STM32F4-Discovery/tcpCLI.c **** 		//	uint8_t buf [len]; //= "Error: speed is out of range!\n\n");
 136:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error: speed is out of range [1,100]p : %d\n\n\0", s1);
 325              		.loc 1 136 0
 326 016a FB88     		ldrh	r3, [r7, #6]
 327 016c F86B     		ldr	r0, [r7, #60]
 328 016e 4549     		ldr	r1, .L16+4
 329 0170 1A46     		mov	r2, r3
 330 0172 FFF7FEFF 		bl	sprintf
 137:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket_0, buf, len, 0);
 138:App/STM32F4-Discovery/tcpCLI.c **** 
 139:App/STM32F4-Discovery/tcpCLI.c **** 	       		return pdFALSE; 	
 331              		.loc 1 139 0
 332 0176 0023     		movs	r3, #0
 333 0178 F4E0     		b	.L5
 334              	.L10:
 140:App/STM32F4-Discovery/tcpCLI.c **** 		}	
 141:App/STM32F4-Discovery/tcpCLI.c **** 	
 142:App/STM32F4-Discovery/tcpCLI.c **** 		// convert to correct value ( * 100 ) 
 143:App/STM32F4-Discovery/tcpCLI.c **** 		s1 *= 100; 
 335              		.loc 1 143 0
 336 017a FB88     		ldrh	r3, [r7, #6]	@ movhi
 337 017c 1A46     		mov	r2, r3	@ movhi
 338 017e 9200     		lsls	r2, r2, #2
 339 0180 1344     		add	r3, r3, r2
 340 0182 1A46     		mov	r2, r3	@ movhi
 341 0184 9100     		lsls	r1, r2, #2
 342 0186 1A46     		mov	r2, r3	@ movhi
 343 0188 0B46     		mov	r3, r1	@ movhi
 344 018a 1344     		add	r3, r3, r2
 345 018c 9B00     		lsls	r3, r3, #2
 346 018e FB80     		strh	r3, [r7, #6]	@ movhi
 144:App/STM32F4-Discovery/tcpCLI.c **** 		
 145:App/STM32F4-Discovery/tcpCLI.c **** 		
 146:App/STM32F4-Discovery/tcpCLI.c **** 		// setup telegram 
 147:App/STM32F4-Discovery/tcpCLI.c **** 		
 148:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.data[0] = s1; 
 347              		.loc 1 148 0
 348 0190 FB88     		ldrh	r3, [r7, #6]	@ movhi
 349 0192 3B85     		strh	r3, [r7, #40]	@ movhi
 149:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.size = 1; 
 350              		.loc 1 149 0
 351 0194 0123     		movs	r3, #1
 352 0196 7B62     		str	r3, [r7, #36]
 150:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.Qcmd = SETDATA;
 353              		.loc 1 150 0
 354 0198 0023     		movs	r3, #0
 355 019a 87F82030 		strb	r3, [r7, #32]
 151:App/STM32F4-Discovery/tcpCLI.c **** 		
 152:App/STM32F4-Discovery/tcpCLI.c **** 	
 153:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 154:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegram, xDelay ) == pdPASS )
 356              		.loc 1 154 0
 357 019e 3A4B     		ldr	r3, .L16+8
 358 01a0 1A68     		ldr	r2, [r3]
 359 01a2 3A4B     		ldr	r3, .L16+12
 360 01a4 1B68     		ldr	r3, [r3]
 361 01a6 1046     		mov	r0, r2
 362 01a8 07F12001 		add	r1, r7, #32
 363 01ac 1A46     		mov	r2, r3
 364 01ae 0023     		movs	r3, #0
 365 01b0 FFF7FEFF 		bl	xQueueGenericSend
 366 01b4 0346     		mov	r3, r0
 367 01b6 012B     		cmp	r3, #1
 368 01b8 22D1     		bne	.L11
 155:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 156:App/STM32F4-Discovery/tcpCLI.c **** 					
 157:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegram, xDelay))
 369              		.loc 1 157 0
 370 01ba 334B     		ldr	r3, .L16+8
 371 01bc 1A68     		ldr	r2, [r3]
 372 01be 334B     		ldr	r3, .L16+12
 373 01c0 1B68     		ldr	r3, [r3]
 374 01c2 1046     		mov	r0, r2
 375 01c4 07F12001 		add	r1, r7, #32
 376 01c8 1A46     		mov	r2, r3
 377 01ca 0023     		movs	r3, #0
 378 01cc FFF7FEFF 		bl	xQueueGenericReceive
 379 01d0 0346     		mov	r3, r0
 380 01d2 002B     		cmp	r3, #0
 381 01d4 27D0     		beq	.L8
 158:App/STM32F4-Discovery/tcpCLI.c **** 			{
 159:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegram.Qcmd = SUCCSESS) 
 382              		.loc 1 159 0
 383 01d6 0623     		movs	r3, #6
 384 01d8 87F82030 		strb	r3, [r7, #32]
 160:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 161:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed succsesfully set.\n\n");
 385              		.loc 1 161 0
 386 01dc FA6B     		ldr	r2, [r7, #60]
 387 01de 2C4B     		ldr	r3, .L16+16
 388 01e0 1546     		mov	r5, r2
 389 01e2 1C46     		mov	r4, r3
 390 01e4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 391 01e6 2860     		str	r0, [r5]	@ unaligned
 392 01e8 6960     		str	r1, [r5, #4]	@ unaligned
 393 01ea AA60     		str	r2, [r5, #8]	@ unaligned
 394 01ec EB60     		str	r3, [r5, #12]	@ unaligned
 395 01ee 03CC     		ldmia	r4!, {r0, r1}
 396 01f0 2861     		str	r0, [r5, #16]	@ unaligned
 397 01f2 6961     		str	r1, [r5, #20]	@ unaligned
 398 01f4 2388     		ldrh	r3, [r4]	@ unaligned
 399 01f6 2B83     		strh	r3, [r5, #24]	@ unaligned
 162:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 25; 	
 400              		.loc 1 162 0
 401 01f8 1923     		movs	r3, #25
 402 01fa BB60     		str	r3, [r7, #8]
 163:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 164:App/STM32F4-Discovery/tcpCLI.c **** 
 165:App/STM32F4-Discovery/tcpCLI.c **** 
 166:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 403              		.loc 1 166 0
 404 01fc 0123     		movs	r3, #1
 405 01fe B1E0     		b	.L5
 406              	.L11:
 167:App/STM32F4-Discovery/tcpCLI.c **** 
 168:App/STM32F4-Discovery/tcpCLI.c **** 				}
 169:App/STM32F4-Discovery/tcpCLI.c **** 				else
 170:App/STM32F4-Discovery/tcpCLI.c **** 				{
 171:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 172:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 173:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 174:App/STM32F4-Discovery/tcpCLI.c **** 
 175:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 176:App/STM32F4-Discovery/tcpCLI.c **** 
 177:App/STM32F4-Discovery/tcpCLI.c **** 
 178:App/STM32F4-Discovery/tcpCLI.c **** 				}
 179:App/STM32F4-Discovery/tcpCLI.c **** 						
 180:App/STM32F4-Discovery/tcpCLI.c **** 			}
 181:App/STM32F4-Discovery/tcpCLI.c **** 
 182:App/STM32F4-Discovery/tcpCLI.c **** 		}
 183:App/STM32F4-Discovery/tcpCLI.c **** 		else
 184:App/STM32F4-Discovery/tcpCLI.c **** 		{
 185:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 186:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 187:App/STM32F4-Discovery/tcpCLI.c **** 		
 188:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 407              		.loc 1 188 0
 408 0200 FA6B     		ldr	r2, [r7, #60]
 409 0202 254B     		ldr	r3, .L16+24
 410 0204 1446     		mov	r4, r2
 411 0206 1D46     		mov	r5, r3
 412 0208 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 413 020a 2060     		str	r0, [r4]	@ unaligned
 414 020c 6160     		str	r1, [r4, #4]	@ unaligned
 415 020e A260     		str	r2, [r4, #8]	@ unaligned
 416 0210 E360     		str	r3, [r4, #12]	@ unaligned
 417 0212 2868     		ldr	r0, [r5]	@ unaligned
 418 0214 2061     		str	r0, [r4, #16]	@ unaligned
 419 0216 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 420 0218 AB79     		ldrb	r3, [r5, #6]
 421 021a A282     		strh	r2, [r4, #20]	@ unaligned
 422 021c A375     		strb	r3, [r4, #22]
 189:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 423              		.loc 1 189 0
 424 021e 1623     		movs	r3, #22
 425 0220 BB60     		str	r3, [r7, #8]
 190:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 191:App/STM32F4-Discovery/tcpCLI.c **** 
 192:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 426              		.loc 1 192 0
 427 0222 0023     		movs	r3, #0
 428 0224 9EE0     		b	.L5
 429              	.L8:
 430              	.LBE3:
 193:App/STM32F4-Discovery/tcpCLI.c **** 		}
 194:App/STM32F4-Discovery/tcpCLI.c **** 	}
 195:App/STM32F4-Discovery/tcpCLI.c **** 
 196:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 197:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER downramp [value]
 198:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 199:App/STM32F4-Discovery/tcpCLI.c **** 
 200:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "downramp", 8))
 431              		.loc 1 200 0
 432 0226 786C     		ldr	r0, [r7, #68]
 433 0228 1D49     		ldr	r1, .L16+32
 434 022a 0822     		movs	r2, #8
 435 022c FFF7FEFF 		bl	strncmp
 436 0230 0346     		mov	r3, r0
 437 0232 002B     		cmp	r3, #0
 438 0234 40F09080 		bne	.L12
 439              	.LBB4:
 201:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 202:App/STM32F4-Discovery/tcpCLI.c **** 	
 203:App/STM32F4-Discovery/tcpCLI.c **** 	
 204:App/STM32F4-Discovery/tcpCLI.c **** 		
 205:App/STM32F4-Discovery/tcpCLI.c **** 		// now convert parameter to proper value and check if it is in range 
 206:App/STM32F4-Discovery/tcpCLI.c ****         	Value[xValueLength-2] = '\0'; 	
 440              		.loc 1 206 0
 441 0238 7B6D     		ldr	r3, [r7, #84]
 442 023a 023B     		subs	r3, r3, #2
 443 023c 3A6D     		ldr	r2, [r7, #80]
 444 023e 1344     		add	r3, r3, r2
 445 0240 0022     		movs	r2, #0
 446 0242 1A70     		strb	r2, [r3]
 207:App/STM32F4-Discovery/tcpCLI.c **** 		uint16_t s1 = atoi ( Value ); 
 447              		.loc 1 207 0
 448 0244 386D     		ldr	r0, [r7, #80]
 449 0246 FFF7FEFF 		bl	atoi
 450 024a 0346     		mov	r3, r0
 451 024c BB80     		strh	r3, [r7, #4]	@ movhi
 208:App/STM32F4-Discovery/tcpCLI.c **** 		// if speed is in range
 209:App/STM32F4-Discovery/tcpCLI.c **** 		if(s1 < 10 ||  s1 > 100 )
 452              		.loc 1 209 0
 453 024e BB88     		ldrh	r3, [r7, #4]
 454 0250 092B     		cmp	r3, #9
 455 0252 02D9     		bls	.L13
 456              		.loc 1 209 0 is_stmt 0 discriminator 1
 457 0254 BB88     		ldrh	r3, [r7, #4]
 458 0256 642B     		cmp	r3, #100
 459 0258 28D9     		bls	.L14
 460              	.L13:
 210:App/STM32F4-Discovery/tcpCLI.c **** 		{
 211:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP
 212:App/STM32F4-Discovery/tcpCLI.c **** 			//
 213:App/STM32F4-Discovery/tcpCLI.c **** 			xWriteBufferLen = strlen ( Value ) + 11 ; 
 461              		.loc 1 213 0 is_stmt 1
 462 025a 386D     		ldr	r0, [r7, #80]
 463 025c FFF7FEFF 		bl	strlen
 464 0260 0346     		mov	r3, r0
 465 0262 0B33     		adds	r3, r3, #11
 466 0264 BB60     		str	r3, [r7, #8]
 214:App/STM32F4-Discovery/tcpCLI.c **** 			//uint8_t buf [len]; //= "Error: speed is out of range!\n\n");
 215:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Errror : %d\n\n", s1);
 467              		.loc 1 215 0
 468 0266 BB88     		ldrh	r3, [r7, #4]
 469 0268 F86B     		ldr	r0, [r7, #60]
 470 026a 0E49     		ldr	r1, .L16+36
 471 026c 1A46     		mov	r2, r3
 472 026e FFF7FEFF 		bl	sprintf
 216:App/STM32F4-Discovery/tcpCLI.c **** 			pcWriteBuffer[11+ 3] = "\0"; 
 473              		.loc 1 216 0
 474 0272 FB6B     		ldr	r3, [r7, #60]
 475 0274 0E33     		adds	r3, r3, #14
 476 0276 0C4A     		ldr	r2, .L16+40
 477 0278 D2B2     		uxtb	r2, r2
 478 027a 1A70     		strb	r2, [r3]
 217:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket_0, buf, len, 0);
 218:App/STM32F4-Discovery/tcpCLI.c **** 
 219:App/STM32F4-Discovery/tcpCLI.c **** 	       		return pdFALSE; 	
 479              		.loc 1 219 0
 480 027c 0023     		movs	r3, #0
 481 027e 71E0     		b	.L5
 482              	.L17:
 483              		.align	2
 484              	.L16:
 485 0280 54000000 		.word	.LC2
 486 0284 5C000000 		.word	.LC3
 487 0288 00000000 		.word	QSpd_handle
 488 028c 00000000 		.word	xDelay
 489 0290 8C000000 		.word	.LC4
 490 0294 A8000000 		.word	.LC5
 491 0298 C4000000 		.word	.LC6
 492 029c DC000000 		.word	.LC7
 493 02a0 E4000000 		.word	.LC8
 494 02a4 F0000000 		.word	.LC9
 495 02a8 00010000 		.word	.LC10
 496              	.L14:
 220:App/STM32F4-Discovery/tcpCLI.c **** 		}	
 221:App/STM32F4-Discovery/tcpCLI.c **** 	
 222:App/STM32F4-Discovery/tcpCLI.c **** 		// convert to correct value ( * 100 ) 
 223:App/STM32F4-Discovery/tcpCLI.c **** 		s1 *= 100; 
 497              		.loc 1 223 0
 498 02ac BB88     		ldrh	r3, [r7, #4]	@ movhi
 499 02ae 1A46     		mov	r2, r3	@ movhi
 500 02b0 9200     		lsls	r2, r2, #2
 501 02b2 1344     		add	r3, r3, r2
 502 02b4 1A46     		mov	r2, r3	@ movhi
 503 02b6 9100     		lsls	r1, r2, #2
 504 02b8 1A46     		mov	r2, r3	@ movhi
 505 02ba 0B46     		mov	r3, r1	@ movhi
 506 02bc 1344     		add	r3, r3, r2
 507 02be 9B00     		lsls	r3, r3, #2
 508 02c0 BB80     		strh	r3, [r7, #4]	@ movhi
 224:App/STM32F4-Discovery/tcpCLI.c **** 		
 225:App/STM32F4-Discovery/tcpCLI.c **** 		
 226:App/STM32F4-Discovery/tcpCLI.c **** 		// setup telegram 
 227:App/STM32F4-Discovery/tcpCLI.c **** 		
 228:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.data[0] = s1; 
 509              		.loc 1 228 0
 510 02c2 BB88     		ldrh	r3, [r7, #4]	@ movhi
 511 02c4 3B85     		strh	r3, [r7, #40]	@ movhi
 229:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.size = 1; 
 512              		.loc 1 229 0
 513 02c6 0123     		movs	r3, #1
 514 02c8 7B62     		str	r3, [r7, #36]
 230:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.Qcmd = SETDATA;
 515              		.loc 1 230 0
 516 02ca 0023     		movs	r3, #0
 517 02cc 87F82030 		strb	r3, [r7, #32]
 231:App/STM32F4-Discovery/tcpCLI.c **** 		
 232:App/STM32F4-Discovery/tcpCLI.c **** 	
 233:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 234:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegram, xDelay ) == pdPASS )
 518              		.loc 1 234 0
 519 02d0 284B     		ldr	r3, .L18
 520 02d2 1A68     		ldr	r2, [r3]
 521 02d4 284B     		ldr	r3, .L18+4
 522 02d6 1B68     		ldr	r3, [r3]
 523 02d8 1046     		mov	r0, r2
 524 02da 07F12001 		add	r1, r7, #32
 525 02de 1A46     		mov	r2, r3
 526 02e0 0023     		movs	r3, #0
 527 02e2 FFF7FEFF 		bl	xQueueGenericSend
 528 02e6 0346     		mov	r3, r0
 529 02e8 012B     		cmp	r3, #1
 530 02ea 22D1     		bne	.L15
 235:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 236:App/STM32F4-Discovery/tcpCLI.c **** 					
 237:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegram, xDelay))
 531              		.loc 1 237 0
 532 02ec 214B     		ldr	r3, .L18
 533 02ee 1A68     		ldr	r2, [r3]
 534 02f0 214B     		ldr	r3, .L18+4
 535 02f2 1B68     		ldr	r3, [r3]
 536 02f4 1046     		mov	r0, r2
 537 02f6 07F12001 		add	r1, r7, #32
 538 02fa 1A46     		mov	r2, r3
 539 02fc 0023     		movs	r3, #0
 540 02fe FFF7FEFF 		bl	xQueueGenericReceive
 541 0302 0346     		mov	r3, r0
 542 0304 002B     		cmp	r3, #0
 543 0306 27D0     		beq	.L12
 238:App/STM32F4-Discovery/tcpCLI.c **** 			{
 239:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegram.Qcmd = SUCCSESS) 
 544              		.loc 1 239 0
 545 0308 0623     		movs	r3, #6
 546 030a 87F82030 		strb	r3, [r7, #32]
 240:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 241:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed succsesfully set.\n\n");
 547              		.loc 1 241 0
 548 030e FA6B     		ldr	r2, [r7, #60]
 549 0310 1A4B     		ldr	r3, .L18+8
 550 0312 1546     		mov	r5, r2
 551 0314 1C46     		mov	r4, r3
 552 0316 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 553 0318 2860     		str	r0, [r5]	@ unaligned
 554 031a 6960     		str	r1, [r5, #4]	@ unaligned
 555 031c AA60     		str	r2, [r5, #8]	@ unaligned
 556 031e EB60     		str	r3, [r5, #12]	@ unaligned
 557 0320 03CC     		ldmia	r4!, {r0, r1}
 558 0322 2861     		str	r0, [r5, #16]	@ unaligned
 559 0324 6961     		str	r1, [r5, #20]	@ unaligned
 560 0326 2388     		ldrh	r3, [r4]	@ unaligned
 561 0328 2B83     		strh	r3, [r5, #24]	@ unaligned
 242:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 25; 	
 562              		.loc 1 242 0
 563 032a 1923     		movs	r3, #25
 564 032c BB60     		str	r3, [r7, #8]
 243:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 244:App/STM32F4-Discovery/tcpCLI.c **** 
 245:App/STM32F4-Discovery/tcpCLI.c **** 
 246:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 565              		.loc 1 246 0
 566 032e 0123     		movs	r3, #1
 567 0330 18E0     		b	.L5
 568              	.L15:
 247:App/STM32F4-Discovery/tcpCLI.c **** 
 248:App/STM32F4-Discovery/tcpCLI.c **** 				}
 249:App/STM32F4-Discovery/tcpCLI.c **** 				else
 250:App/STM32F4-Discovery/tcpCLI.c **** 				{
 251:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 252:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 253:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 254:App/STM32F4-Discovery/tcpCLI.c **** 
 255:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 256:App/STM32F4-Discovery/tcpCLI.c **** 
 257:App/STM32F4-Discovery/tcpCLI.c **** 
 258:App/STM32F4-Discovery/tcpCLI.c **** 				}
 259:App/STM32F4-Discovery/tcpCLI.c **** 						
 260:App/STM32F4-Discovery/tcpCLI.c **** 			}
 261:App/STM32F4-Discovery/tcpCLI.c **** 
 262:App/STM32F4-Discovery/tcpCLI.c **** 		}
 263:App/STM32F4-Discovery/tcpCLI.c **** 		else
 264:App/STM32F4-Discovery/tcpCLI.c **** 		{
 265:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 266:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 267:App/STM32F4-Discovery/tcpCLI.c **** 		
 268:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 569              		.loc 1 268 0
 570 0332 FA6B     		ldr	r2, [r7, #60]
 571 0334 124B     		ldr	r3, .L18+12
 572 0336 1446     		mov	r4, r2
 573 0338 1D46     		mov	r5, r3
 574 033a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 575 033c 2060     		str	r0, [r4]	@ unaligned
 576 033e 6160     		str	r1, [r4, #4]	@ unaligned
 577 0340 A260     		str	r2, [r4, #8]	@ unaligned
 578 0342 E360     		str	r3, [r4, #12]	@ unaligned
 579 0344 2868     		ldr	r0, [r5]	@ unaligned
 580 0346 2061     		str	r0, [r4, #16]	@ unaligned
 581 0348 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 582 034a AB79     		ldrb	r3, [r5, #6]
 583 034c A282     		strh	r2, [r4, #20]	@ unaligned
 584 034e A375     		strb	r3, [r4, #22]
 269:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 585              		.loc 1 269 0
 586 0350 1623     		movs	r3, #22
 587 0352 BB60     		str	r3, [r7, #8]
 270:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 271:App/STM32F4-Discovery/tcpCLI.c **** 
 272:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 588              		.loc 1 272 0
 589 0354 0023     		movs	r3, #0
 590 0356 05E0     		b	.L5
 591              	.L12:
 592              	.LBE4:
 273:App/STM32F4-Discovery/tcpCLI.c **** 		}
 274:App/STM32F4-Discovery/tcpCLI.c **** 	}
 275:App/STM32F4-Discovery/tcpCLI.c **** 
 276:App/STM32F4-Discovery/tcpCLI.c **** 	strcpy(pcWriteBuffer, xMotorCommand.pcHelpString);
 593              		.loc 1 276 0
 594 0358 0A4B     		ldr	r3, .L18+16
 595 035a F86B     		ldr	r0, [r7, #60]
 596 035c 1946     		mov	r1, r3
 597 035e FFF7FEFF 		bl	strcpy
 277:App/STM32F4-Discovery/tcpCLI.c **** 
 278:App/STM32F4-Discovery/tcpCLI.c **** 			return 0; 
 598              		.loc 1 278 0
 599 0362 0023     		movs	r3, #0
 600              	.L5:
 279:App/STM32F4-Discovery/tcpCLI.c **** 
 280:App/STM32F4-Discovery/tcpCLI.c **** }
 601              		.loc 1 280 0
 602 0364 1846     		mov	r0, r3
 603 0366 1037     		adds	r7, r7, #16
 604 0368 BD46     		mov	sp, r7
 605              		@ sp needed
 606 036a BDE8B040 		pop	{r4, r5, r7, lr}
 607 036e 04B0     		add	sp, sp, #16
 608 0370 7047     		bx	lr
 609              	.L19:
 610 0372 00BF     		.align	2
 611              	.L18:
 612 0374 00000000 		.word	QSpd_handle
 613 0378 00000000 		.word	xDelay
 614 037c 8C000000 		.word	.LC4
 615 0380 C4000000 		.word	.LC6
 616 0384 08000000 		.word	.LC1
 617              		.cfi_endproc
 618              	.LFE110:
 620              		.section	.rodata
 621 0102 0000     		.align	2
 622              	.LC11:
 623 0104 53706565 		.ascii	"Speed is  %2d.%2dp \012\012\000\000"
 623      64206973 
 623      20202532 
 623      642E2532 
 623      6470200A 
 624              		.section	.text.handleVariable_get,"ax",%progbits
 625              		.align	2
 626              		.global	handleVariable_get
 627              		.thumb
 628              		.thumb_func
 630              	handleVariable_get:
 631              	.LFB111:
 281:App/STM32F4-Discovery/tcpCLI.c **** 			
 282:App/STM32F4-Discovery/tcpCLI.c **** 
 283:App/STM32F4-Discovery/tcpCLI.c **** 
 284:App/STM32F4-Discovery/tcpCLI.c **** int handleVariable_get (	QueueTelegram telegram,
 285:App/STM32F4-Discovery/tcpCLI.c **** 				int8_t *pcWriteBuffer, 
 286:App/STM32F4-Discovery/tcpCLI.c **** 				size_t xWriteBufferLen,
 287:App/STM32F4-Discovery/tcpCLI.c **** 				uint8_t * Param, 
 288:App/STM32F4-Discovery/tcpCLI.c **** 				int xParamLength,
 289:App/STM32F4-Discovery/tcpCLI.c **** 				xQueueHandle Qhandle,
 290:App/STM32F4-Discovery/tcpCLI.c **** 				int socket )
 291:App/STM32F4-Discovery/tcpCLI.c **** {
 632              		.loc 1 291 0
 633              		.cfi_startproc
 634              		@ args = 52, pretend = 16, frame = 8
 635              		@ frame_needed = 1, uses_anonymous_args = 0
 636 0000 84B0     		sub	sp, sp, #16
 637              	.LCFI4:
 638              		.cfi_def_cfa_offset 16
 639 0002 B0B5     		push	{r4, r5, r7, lr}
 640              	.LCFI5:
 641              		.cfi_def_cfa_offset 32
 642              		.cfi_offset 4, -32
 643              		.cfi_offset 5, -28
 644              		.cfi_offset 7, -24
 645              		.cfi_offset 14, -20
 646 0004 82B0     		sub	sp, sp, #8
 647              	.LCFI6:
 648              		.cfi_def_cfa_offset 40
 649 0006 00AF     		add	r7, sp, #0
 650              	.LCFI7:
 651              		.cfi_def_cfa_register 7
 652 0008 07F1180C 		add	ip, r7, #24
 653 000c 8CE80F00 		stmia	ip, {r0, r1, r2, r3}
 292:App/STM32F4-Discovery/tcpCLI.c **** 
 293:App/STM32F4-Discovery/tcpCLI.c **** 
 294:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 295:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER speed [value]
 296:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 297:App/STM32F4-Discovery/tcpCLI.c **** 
 298:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "speed", 5))
 654              		.loc 1 298 0
 655 0010 F86B     		ldr	r0, [r7, #60]
 656 0012 8249     		ldr	r1, .L29
 657 0014 0522     		movs	r2, #5
 658 0016 FFF7FEFF 		bl	strncmp
 659 001a 0346     		mov	r3, r0
 660 001c 002B     		cmp	r3, #0
 661 001e 5AD1     		bne	.L21
 299:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 300:App/STM32F4-Discovery/tcpCLI.c **** 	
 301:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.Qcmd = GETDATA; 
 662              		.loc 1 301 0
 663 0020 0123     		movs	r3, #1
 664 0022 3B76     		strb	r3, [r7, #24]
 302:App/STM32F4-Discovery/tcpCLI.c **** 		
 303:App/STM32F4-Discovery/tcpCLI.c **** 	
 304:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 305:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegram, xDelay ) == pdPASS )
 665              		.loc 1 305 0
 666 0024 7E4B     		ldr	r3, .L29+4
 667 0026 1A68     		ldr	r2, [r3]
 668 0028 7E4B     		ldr	r3, .L29+8
 669 002a 1B68     		ldr	r3, [r3]
 670 002c 1046     		mov	r0, r2
 671 002e 07F11801 		add	r1, r7, #24
 672 0032 1A46     		mov	r2, r3
 673 0034 0023     		movs	r3, #0
 674 0036 FFF7FEFF 		bl	xQueueGenericSend
 675 003a 0346     		mov	r3, r0
 676 003c 012B     		cmp	r3, #1
 677 003e 37D1     		bne	.L22
 306:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 307:App/STM32F4-Discovery/tcpCLI.c **** 					
 308:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegram, xDelay)== pdPASS)
 678              		.loc 1 308 0
 679 0040 774B     		ldr	r3, .L29+4
 680 0042 1A68     		ldr	r2, [r3]
 681 0044 774B     		ldr	r3, .L29+8
 682 0046 1B68     		ldr	r3, [r3]
 683 0048 1046     		mov	r0, r2
 684 004a 07F11801 		add	r1, r7, #24
 685 004e 1A46     		mov	r2, r3
 686 0050 0023     		movs	r3, #0
 687 0052 FFF7FEFF 		bl	xQueueGenericReceive
 688 0056 0346     		mov	r3, r0
 689 0058 012B     		cmp	r3, #1
 690 005a 18D1     		bne	.L23
 309:App/STM32F4-Discovery/tcpCLI.c **** 			{
 310:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegram.Qcmd = SUCCSESS) 
 691              		.loc 1 310 0
 692 005c 0623     		movs	r3, #6
 693 005e 3B76     		strb	r3, [r7, #24]
 311:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 312:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 313:App/STM32F4-Discovery/tcpCLI.c **** 					telegram.data[3]/100,
 694              		.loc 1 313 0
 695 0060 FA8C     		ldrh	r2, [r7, #38]
 312:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 696              		.loc 1 312 0
 697 0062 714B     		ldr	r3, .L29+12
 698 0064 A3FB0203 		umull	r0, r3, r3, r2
 699 0068 5B09     		lsrs	r3, r3, #5
 700 006a 9BB2     		uxth	r3, r3
 701 006c 1A46     		mov	r2, r3
 314:App/STM32F4-Discovery/tcpCLI.c **** 					telegram.data[3] % 100);
 702              		.loc 1 314 0
 703 006e FB8C     		ldrh	r3, [r7, #38]
 312:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed is  %2d.%2dp \n\n\0", 
 704              		.loc 1 312 0
 705 0070 6D49     		ldr	r1, .L29+12
 706 0072 A1FB03C1 		umull	ip, r1, r1, r3
 707 0076 4909     		lsrs	r1, r1, #5
 708 0078 6420     		movs	r0, #100
 709 007a 00FB01F1 		mul	r1, r0, r1
 710 007e 5B1A     		subs	r3, r3, r1
 711 0080 9BB2     		uxth	r3, r3
 712 0082 786B     		ldr	r0, [r7, #52]
 713 0084 6949     		ldr	r1, .L29+16
 714 0086 FFF7FEFF 		bl	sprintf
 315:App/STM32F4-Discovery/tcpCLI.c **** 				
 316:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 317:App/STM32F4-Discovery/tcpCLI.c **** 
 318:App/STM32F4-Discovery/tcpCLI.c **** 
 319:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 715              		.loc 1 319 0
 716 008a 0123     		movs	r3, #1
 717 008c BFE0     		b	.L24
 718              	.L23:
 320:App/STM32F4-Discovery/tcpCLI.c **** 
 321:App/STM32F4-Discovery/tcpCLI.c **** 				}
 322:App/STM32F4-Discovery/tcpCLI.c **** 				else
 323:App/STM32F4-Discovery/tcpCLI.c **** 				{
 324:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 325:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 326:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 327:App/STM32F4-Discovery/tcpCLI.c **** 
 328:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 329:App/STM32F4-Discovery/tcpCLI.c **** 
 330:App/STM32F4-Discovery/tcpCLI.c **** 
 331:App/STM32F4-Discovery/tcpCLI.c **** 				}
 332:App/STM32F4-Discovery/tcpCLI.c **** 						
 333:App/STM32F4-Discovery/tcpCLI.c **** 			}
 334:App/STM32F4-Discovery/tcpCLI.c **** 			else
 335:App/STM32F4-Discovery/tcpCLI.c **** 			{
 336:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 337:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 338:App/STM32F4-Discovery/tcpCLI.c **** 		
 339:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 719              		.loc 1 339 0
 720 008e 7A6B     		ldr	r2, [r7, #52]
 721 0090 674B     		ldr	r3, .L29+20
 722 0092 1546     		mov	r5, r2
 723 0094 1C46     		mov	r4, r3
 724 0096 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 725 0098 2860     		str	r0, [r5]	@ unaligned
 726 009a 6960     		str	r1, [r5, #4]	@ unaligned
 727 009c AA60     		str	r2, [r5, #8]	@ unaligned
 728 009e EB60     		str	r3, [r5, #12]	@ unaligned
 729 00a0 07CC     		ldmia	r4!, {r0, r1, r2}
 730 00a2 2861     		str	r0, [r5, #16]	@ unaligned
 731 00a4 6961     		str	r1, [r5, #20]	@ unaligned
 732 00a6 AA61     		str	r2, [r5, #24]	@ unaligned
 340:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 733              		.loc 1 340 0
 734 00a8 1B23     		movs	r3, #27
 735 00aa 7B60     		str	r3, [r7, #4]
 341:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 342:App/STM32F4-Discovery/tcpCLI.c **** 
 343:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 736              		.loc 1 343 0
 737 00ac 0023     		movs	r3, #0
 738 00ae AEE0     		b	.L24
 739              	.L22:
 344:App/STM32F4-Discovery/tcpCLI.c **** 			}
 345:App/STM32F4-Discovery/tcpCLI.c **** 
 346:App/STM32F4-Discovery/tcpCLI.c **** 
 347:App/STM32F4-Discovery/tcpCLI.c **** 		}
 348:App/STM32F4-Discovery/tcpCLI.c **** 		else
 349:App/STM32F4-Discovery/tcpCLI.c **** 		{
 350:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 351:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 352:App/STM32F4-Discovery/tcpCLI.c **** 		
 353:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 740              		.loc 1 353 0
 741 00b0 7A6B     		ldr	r2, [r7, #52]
 742 00b2 604B     		ldr	r3, .L29+24
 743 00b4 1446     		mov	r4, r2
 744 00b6 1D46     		mov	r5, r3
 745 00b8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 746 00ba 2060     		str	r0, [r4]	@ unaligned
 747 00bc 6160     		str	r1, [r4, #4]	@ unaligned
 748 00be A260     		str	r2, [r4, #8]	@ unaligned
 749 00c0 E360     		str	r3, [r4, #12]	@ unaligned
 750 00c2 2868     		ldr	r0, [r5]	@ unaligned
 751 00c4 2061     		str	r0, [r4, #16]	@ unaligned
 752 00c6 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 753 00c8 AB79     		ldrb	r3, [r5, #6]
 754 00ca A282     		strh	r2, [r4, #20]	@ unaligned
 755 00cc A375     		strb	r3, [r4, #22]
 354:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 756              		.loc 1 354 0
 757 00ce 1623     		movs	r3, #22
 758 00d0 7B60     		str	r3, [r7, #4]
 355:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 356:App/STM32F4-Discovery/tcpCLI.c **** 
 357:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 759              		.loc 1 357 0
 760 00d2 0023     		movs	r3, #0
 761 00d4 9BE0     		b	.L24
 762              	.L21:
 358:App/STM32F4-Discovery/tcpCLI.c **** 		}
 359:App/STM32F4-Discovery/tcpCLI.c **** 	}
 360:App/STM32F4-Discovery/tcpCLI.c **** 	
 361:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 362:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER upramp [value]
 363:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 364:App/STM32F4-Discovery/tcpCLI.c **** 
 365:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "upramp", 6))
 763              		.loc 1 365 0
 764 00d6 F86B     		ldr	r0, [r7, #60]
 765 00d8 5749     		ldr	r1, .L29+28
 766 00da 0622     		movs	r2, #6
 767 00dc FFF7FEFF 		bl	strncmp
 768 00e0 0346     		mov	r3, r0
 769 00e2 002B     		cmp	r3, #0
 770 00e4 42D1     		bne	.L25
 366:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 367:App/STM32F4-Discovery/tcpCLI.c **** 	
 368:App/STM32F4-Discovery/tcpCLI.c **** 	
 369:App/STM32F4-Discovery/tcpCLI.c **** 		
 370:App/STM32F4-Discovery/tcpCLI.c **** 			
 371:App/STM32F4-Discovery/tcpCLI.c **** 	
 372:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 373:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegram, xDelay ) == pdPASS )
 771              		.loc 1 373 0
 772 00e6 4E4B     		ldr	r3, .L29+4
 773 00e8 1A68     		ldr	r2, [r3]
 774 00ea 4E4B     		ldr	r3, .L29+8
 775 00ec 1B68     		ldr	r3, [r3]
 776 00ee 1046     		mov	r0, r2
 777 00f0 07F11801 		add	r1, r7, #24
 778 00f4 1A46     		mov	r2, r3
 779 00f6 0023     		movs	r3, #0
 780 00f8 FFF7FEFF 		bl	xQueueGenericSend
 781 00fc 0346     		mov	r3, r0
 782 00fe 012B     		cmp	r3, #1
 783 0100 21D1     		bne	.L26
 374:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 375:App/STM32F4-Discovery/tcpCLI.c **** 					
 376:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegram, xDelay))
 784              		.loc 1 376 0
 785 0102 474B     		ldr	r3, .L29+4
 786 0104 1A68     		ldr	r2, [r3]
 787 0106 474B     		ldr	r3, .L29+8
 788 0108 1B68     		ldr	r3, [r3]
 789 010a 1046     		mov	r0, r2
 790 010c 07F11801 		add	r1, r7, #24
 791 0110 1A46     		mov	r2, r3
 792 0112 0023     		movs	r3, #0
 793 0114 FFF7FEFF 		bl	xQueueGenericReceive
 794 0118 0346     		mov	r3, r0
 795 011a 002B     		cmp	r3, #0
 796 011c 26D0     		beq	.L25
 377:App/STM32F4-Discovery/tcpCLI.c **** 			{
 378:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegram.Qcmd = SUCCSESS) 
 797              		.loc 1 378 0
 798 011e 0623     		movs	r3, #6
 799 0120 3B76     		strb	r3, [r7, #24]
 379:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 380:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed succsesfully set.\n\n");
 800              		.loc 1 380 0
 801 0122 7A6B     		ldr	r2, [r7, #52]
 802 0124 454B     		ldr	r3, .L29+32
 803 0126 1546     		mov	r5, r2
 804 0128 1C46     		mov	r4, r3
 805 012a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 806 012c 2860     		str	r0, [r5]	@ unaligned
 807 012e 6960     		str	r1, [r5, #4]	@ unaligned
 808 0130 AA60     		str	r2, [r5, #8]	@ unaligned
 809 0132 EB60     		str	r3, [r5, #12]	@ unaligned
 810 0134 03CC     		ldmia	r4!, {r0, r1}
 811 0136 2861     		str	r0, [r5, #16]	@ unaligned
 812 0138 6961     		str	r1, [r5, #20]	@ unaligned
 813 013a 2388     		ldrh	r3, [r4]	@ unaligned
 814 013c 2B83     		strh	r3, [r5, #24]	@ unaligned
 381:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 25; 	
 815              		.loc 1 381 0
 816 013e 1923     		movs	r3, #25
 817 0140 7B60     		str	r3, [r7, #4]
 382:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 383:App/STM32F4-Discovery/tcpCLI.c **** 
 384:App/STM32F4-Discovery/tcpCLI.c **** 
 385:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 818              		.loc 1 385 0
 819 0142 0123     		movs	r3, #1
 820 0144 63E0     		b	.L24
 821              	.L26:
 386:App/STM32F4-Discovery/tcpCLI.c **** 
 387:App/STM32F4-Discovery/tcpCLI.c **** 				}
 388:App/STM32F4-Discovery/tcpCLI.c **** 				else
 389:App/STM32F4-Discovery/tcpCLI.c **** 				{
 390:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 391:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 392:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 393:App/STM32F4-Discovery/tcpCLI.c **** 
 394:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 395:App/STM32F4-Discovery/tcpCLI.c **** 
 396:App/STM32F4-Discovery/tcpCLI.c **** 
 397:App/STM32F4-Discovery/tcpCLI.c **** 				}
 398:App/STM32F4-Discovery/tcpCLI.c **** 						
 399:App/STM32F4-Discovery/tcpCLI.c **** 			}
 400:App/STM32F4-Discovery/tcpCLI.c **** 
 401:App/STM32F4-Discovery/tcpCLI.c **** 		}
 402:App/STM32F4-Discovery/tcpCLI.c **** 		else
 403:App/STM32F4-Discovery/tcpCLI.c **** 		{
 404:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 405:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 406:App/STM32F4-Discovery/tcpCLI.c **** 		
 407:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 822              		.loc 1 407 0
 823 0146 7A6B     		ldr	r2, [r7, #52]
 824 0148 3A4B     		ldr	r3, .L29+24
 825 014a 1446     		mov	r4, r2
 826 014c 1D46     		mov	r5, r3
 827 014e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 828 0150 2060     		str	r0, [r4]	@ unaligned
 829 0152 6160     		str	r1, [r4, #4]	@ unaligned
 830 0154 A260     		str	r2, [r4, #8]	@ unaligned
 831 0156 E360     		str	r3, [r4, #12]	@ unaligned
 832 0158 2868     		ldr	r0, [r5]	@ unaligned
 833 015a 2061     		str	r0, [r4, #16]	@ unaligned
 834 015c AA88     		ldrh	r2, [r5, #4]	@ unaligned
 835 015e AB79     		ldrb	r3, [r5, #6]
 836 0160 A282     		strh	r2, [r4, #20]	@ unaligned
 837 0162 A375     		strb	r3, [r4, #22]
 408:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 838              		.loc 1 408 0
 839 0164 1623     		movs	r3, #22
 840 0166 7B60     		str	r3, [r7, #4]
 409:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 410:App/STM32F4-Discovery/tcpCLI.c **** 
 411:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 841              		.loc 1 411 0
 842 0168 0023     		movs	r3, #0
 843 016a 50E0     		b	.L24
 844              	.L25:
 412:App/STM32F4-Discovery/tcpCLI.c **** 		}
 413:App/STM32F4-Discovery/tcpCLI.c **** 	}
 414:App/STM32F4-Discovery/tcpCLI.c **** 
 415:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 416:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE PARAMETER downramp [value]
 417:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 418:App/STM32F4-Discovery/tcpCLI.c **** 
 419:App/STM32F4-Discovery/tcpCLI.c **** 	if ( !strncmp ( Param, "downramp", 8))
 845              		.loc 1 419 0
 846 016c F86B     		ldr	r0, [r7, #60]
 847 016e 3449     		ldr	r1, .L29+36
 848 0170 0822     		movs	r2, #8
 849 0172 FFF7FEFF 		bl	strncmp
 850 0176 0346     		mov	r3, r0
 851 0178 002B     		cmp	r3, #0
 852 017a 42D1     		bne	.L27
 420:App/STM32F4-Discovery/tcpCLI.c **** 	{	
 421:App/STM32F4-Discovery/tcpCLI.c **** 	
 422:App/STM32F4-Discovery/tcpCLI.c **** 	
 423:App/STM32F4-Discovery/tcpCLI.c **** 				
 424:App/STM32F4-Discovery/tcpCLI.c **** 	
 425:App/STM32F4-Discovery/tcpCLI.c **** 		// send value to setSpeed_task via Queue 
 426:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegram, xDelay ) == pdPASS )
 853              		.loc 1 426 0
 854 017c 284B     		ldr	r3, .L29+4
 855 017e 1A68     		ldr	r2, [r3]
 856 0180 284B     		ldr	r3, .L29+8
 857 0182 1B68     		ldr	r3, [r3]
 858 0184 1046     		mov	r0, r2
 859 0186 07F11801 		add	r1, r7, #24
 860 018a 1A46     		mov	r2, r3
 861 018c 0023     		movs	r3, #0
 862 018e FFF7FEFF 		bl	xQueueGenericSend
 863 0192 0346     		mov	r3, r0
 864 0194 012B     		cmp	r3, #1
 865 0196 21D1     		bne	.L28
 427:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 428:App/STM32F4-Discovery/tcpCLI.c **** 					
 429:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegram, xDelay))
 866              		.loc 1 429 0
 867 0198 214B     		ldr	r3, .L29+4
 868 019a 1A68     		ldr	r2, [r3]
 869 019c 214B     		ldr	r3, .L29+8
 870 019e 1B68     		ldr	r3, [r3]
 871 01a0 1046     		mov	r0, r2
 872 01a2 07F11801 		add	r1, r7, #24
 873 01a6 1A46     		mov	r2, r3
 874 01a8 0023     		movs	r3, #0
 875 01aa FFF7FEFF 		bl	xQueueGenericReceive
 876 01ae 0346     		mov	r3, r0
 877 01b0 002B     		cmp	r3, #0
 878 01b2 26D0     		beq	.L27
 430:App/STM32F4-Discovery/tcpCLI.c **** 			{
 431:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegram.Qcmd = SUCCSESS) 
 879              		.loc 1 431 0
 880 01b4 0623     		movs	r3, #6
 881 01b6 3B76     		strb	r3, [r7, #24]
 432:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 433:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "Speed succsesfully set.\n\n");
 882              		.loc 1 433 0
 883 01b8 7A6B     		ldr	r2, [r7, #52]
 884 01ba 204B     		ldr	r3, .L29+32
 885 01bc 1546     		mov	r5, r2
 886 01be 1C46     		mov	r4, r3
 887 01c0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 888 01c2 2860     		str	r0, [r5]	@ unaligned
 889 01c4 6960     		str	r1, [r5, #4]	@ unaligned
 890 01c6 AA60     		str	r2, [r5, #8]	@ unaligned
 891 01c8 EB60     		str	r3, [r5, #12]	@ unaligned
 892 01ca 03CC     		ldmia	r4!, {r0, r1}
 893 01cc 2861     		str	r0, [r5, #16]	@ unaligned
 894 01ce 6961     		str	r1, [r5, #20]	@ unaligned
 895 01d0 2388     		ldrh	r3, [r4]	@ unaligned
 896 01d2 2B83     		strh	r3, [r5, #24]	@ unaligned
 434:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 25; 	
 897              		.loc 1 434 0
 898 01d4 1923     		movs	r3, #25
 899 01d6 7B60     		str	r3, [r7, #4]
 435:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 436:App/STM32F4-Discovery/tcpCLI.c **** 
 437:App/STM32F4-Discovery/tcpCLI.c **** 
 438:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 900              		.loc 1 438 0
 901 01d8 0123     		movs	r3, #1
 902 01da 18E0     		b	.L24
 903              	.L28:
 439:App/STM32F4-Discovery/tcpCLI.c **** 
 440:App/STM32F4-Discovery/tcpCLI.c **** 				}
 441:App/STM32F4-Discovery/tcpCLI.c **** 				else
 442:App/STM32F4-Discovery/tcpCLI.c **** 				{
 443:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 444:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 445:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket, buf, len, 0);
 446:App/STM32F4-Discovery/tcpCLI.c **** 
 447:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 448:App/STM32F4-Discovery/tcpCLI.c **** 
 449:App/STM32F4-Discovery/tcpCLI.c **** 
 450:App/STM32F4-Discovery/tcpCLI.c **** 				}
 451:App/STM32F4-Discovery/tcpCLI.c **** 						
 452:App/STM32F4-Discovery/tcpCLI.c **** 			}
 453:App/STM32F4-Discovery/tcpCLI.c **** 
 454:App/STM32F4-Discovery/tcpCLI.c **** 		}
 455:App/STM32F4-Discovery/tcpCLI.c **** 		else
 456:App/STM32F4-Discovery/tcpCLI.c **** 		{
 457:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 458:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 459:App/STM32F4-Discovery/tcpCLI.c **** 		
 460:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 904              		.loc 1 460 0
 905 01dc 7A6B     		ldr	r2, [r7, #52]
 906 01de 154B     		ldr	r3, .L29+24
 907 01e0 1446     		mov	r4, r2
 908 01e2 1D46     		mov	r5, r3
 909 01e4 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 910 01e6 2060     		str	r0, [r4]	@ unaligned
 911 01e8 6160     		str	r1, [r4, #4]	@ unaligned
 912 01ea A260     		str	r2, [r4, #8]	@ unaligned
 913 01ec E360     		str	r3, [r4, #12]	@ unaligned
 914 01ee 2868     		ldr	r0, [r5]	@ unaligned
 915 01f0 2061     		str	r0, [r4, #16]	@ unaligned
 916 01f2 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 917 01f4 AB79     		ldrb	r3, [r5, #6]
 918 01f6 A282     		strh	r2, [r4, #20]	@ unaligned
 919 01f8 A375     		strb	r3, [r4, #22]
 461:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 920              		.loc 1 461 0
 921 01fa 1623     		movs	r3, #22
 922 01fc 7B60     		str	r3, [r7, #4]
 462:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 463:App/STM32F4-Discovery/tcpCLI.c **** 
 464:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 923              		.loc 1 464 0
 924 01fe 0023     		movs	r3, #0
 925 0200 05E0     		b	.L24
 926              	.L27:
 465:App/STM32F4-Discovery/tcpCLI.c **** 		}
 466:App/STM32F4-Discovery/tcpCLI.c **** 	}
 467:App/STM32F4-Discovery/tcpCLI.c **** 
 468:App/STM32F4-Discovery/tcpCLI.c **** 
 469:App/STM32F4-Discovery/tcpCLI.c **** 	strcpy(pcWriteBuffer, xMotorCommand.pcHelpString);
 927              		.loc 1 469 0
 928 0202 104B     		ldr	r3, .L29+40
 929 0204 786B     		ldr	r0, [r7, #52]
 930 0206 1946     		mov	r1, r3
 931 0208 FFF7FEFF 		bl	strcpy
 470:App/STM32F4-Discovery/tcpCLI.c **** 
 471:App/STM32F4-Discovery/tcpCLI.c **** 
 472:App/STM32F4-Discovery/tcpCLI.c **** 			return 0; 
 932              		.loc 1 472 0
 933 020c 0023     		movs	r3, #0
 934              	.L24:
 473:App/STM32F4-Discovery/tcpCLI.c **** 
 474:App/STM32F4-Discovery/tcpCLI.c **** }
 935              		.loc 1 474 0
 936 020e 1846     		mov	r0, r3
 937 0210 0837     		adds	r7, r7, #8
 938 0212 BD46     		mov	sp, r7
 939              		@ sp needed
 940 0214 BDE8B040 		pop	{r4, r5, r7, lr}
 941 0218 04B0     		add	sp, sp, #16
 942 021a 7047     		bx	lr
 943              	.L30:
 944              		.align	2
 945              	.L29:
 946 021c 54000000 		.word	.LC2
 947 0220 00000000 		.word	QSpd_handle
 948 0224 00000000 		.word	xDelay
 949 0228 1F85EB51 		.word	1374389535
 950 022c 04010000 		.word	.LC11
 951 0230 A8000000 		.word	.LC5
 952 0234 C4000000 		.word	.LC6
 953 0238 DC000000 		.word	.LC7
 954 023c 8C000000 		.word	.LC4
 955 0240 E4000000 		.word	.LC8
 956 0244 08000000 		.word	.LC1
 957              		.cfi_endproc
 958              	.LFE111:
 960              		.section	.rodata
 961 011b 00       		.align	2
 962              	.LC12:
 963 011c 546F2066 		.ascii	"To few arguments. \012\012\000\000"
 963      65772061 
 963      7267756D 
 963      656E7473 
 963      2E200A0A 
 964 0132 0000     		.align	2
 965              	.LC13:
 966 0134 73657400 		.ascii	"set\000"
 967              		.align	2
 968              	.LC14:
 969 0138 67657400 		.ascii	"get\000"
 970              		.align	2
 971              	.LC15:
 972 013c 73746F70 		.ascii	"stop\000"
 972      00
 973 0141 000000   		.align	2
 974              	.LC16:
 975 0144 4D6F746F 		.ascii	"Motor succsesfully stopped.\012\012\000"
 975      72207375 
 975      63637365 
 975      7366756C 
 975      6C792073 
 976 0162 0000     		.align	2
 977              	.LC17:
 978 0164 73746172 		.ascii	"start\000"
 978      7400
 979 016a 0000     		.align	2
 980              	.LC18:
 981 016c 4D6F746F 		.ascii	"Motor succsesfully started.\012\012\000"
 981      72207375 
 981      63637365 
 981      7366756C 
 981      6C792073 
 982 018a 0000     		.section	.text.prvMotorCommand,"ax",%progbits
 983              		.align	2
 984              		.global	prvMotorCommand
 985              		.thumb
 986              		.thumb_func
 988              	prvMotorCommand:
 989              	.LFB112:
 475:App/STM32F4-Discovery/tcpCLI.c **** 
 476:App/STM32F4-Discovery/tcpCLI.c **** 
 477:App/STM32F4-Discovery/tcpCLI.c **** 
 478:App/STM32F4-Discovery/tcpCLI.c **** 
 479:App/STM32F4-Discovery/tcpCLI.c **** 
 480:App/STM32F4-Discovery/tcpCLI.c **** 
 481:App/STM32F4-Discovery/tcpCLI.c **** 
 482:App/STM32F4-Discovery/tcpCLI.c **** 
 483:App/STM32F4-Discovery/tcpCLI.c **** 
 484:App/STM32F4-Discovery/tcpCLI.c **** 
 485:App/STM32F4-Discovery/tcpCLI.c **** 
 486:App/STM32F4-Discovery/tcpCLI.c **** // prototypes of CLI functions 
 487:App/STM32F4-Discovery/tcpCLI.c **** 
 488:App/STM32F4-Discovery/tcpCLI.c **** portBASE_TYPE prvMotorCommand ( 	int8_t *pcWriteBuffer, 
 489:App/STM32F4-Discovery/tcpCLI.c **** 						size_t xWriteBufferLen, 
 490:App/STM32F4-Discovery/tcpCLI.c **** 						const int8_t *pcCommandString)
 491:App/STM32F4-Discovery/tcpCLI.c **** {
 990              		.loc 1 491 0
 991              		.cfi_startproc
 992              		@ args = 0, pretend = 0, frame = 72
 993              		@ frame_needed = 1, uses_anonymous_args = 0
 994 0000 B0B5     		push	{r4, r5, r7, lr}
 995              	.LCFI8:
 996              		.cfi_def_cfa_offset 16
 997              		.cfi_offset 4, -16
 998              		.cfi_offset 5, -12
 999              		.cfi_offset 7, -8
 1000              		.cfi_offset 14, -4
 1001 0002 9EB0     		sub	sp, sp, #120
 1002              	.LCFI9:
 1003              		.cfi_def_cfa_offset 136
 1004 0004 0CAF     		add	r7, sp, #48
 1005              	.LCFI10:
 1006              		.cfi_def_cfa 7, 88
 1007 0006 F860     		str	r0, [r7, #12]
 1008 0008 B960     		str	r1, [r7, #8]
 1009 000a 7A60     		str	r2, [r7, #4]
 492:App/STM32F4-Discovery/tcpCLI.c **** 	/* globals: 
 493:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	socket 
 494:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	setSpeedHandle
 495:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	QSpd_Handle
 496:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	QStatus_handle
 497:App/STM32F4-Discovery/tcpCLI.c **** 	 * 	
 498:App/STM32F4-Discovery/tcpCLI.c **** 	 **/
 499:App/STM32F4-Discovery/tcpCLI.c **** 
 500:App/STM32F4-Discovery/tcpCLI.c **** 	int8_t *Option, *Param, *Value;
 501:App/STM32F4-Discovery/tcpCLI.c **** 	int xOptionLength, xParamLength, xValueLength; 
 502:App/STM32F4-Discovery/tcpCLI.c **** 	QueueTelegram telegram; 
 503:App/STM32F4-Discovery/tcpCLI.c **** 	
 504:App/STM32F4-Discovery/tcpCLI.c **** 	// get option from command line 
 505:App/STM32F4-Discovery/tcpCLI.c **** 
 506:App/STM32F4-Discovery/tcpCLI.c **** 	Option = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1010              		.loc 1 506 0
 1011 000c 07F13803 		add	r3, r7, #56
 1012 0010 7868     		ldr	r0, [r7, #4]
 1013 0012 0121     		movs	r1, #1
 1014 0014 1A46     		mov	r2, r3
 1015 0016 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1016 001a 7864     		str	r0, [r7, #68]
 507:App/STM32F4-Discovery/tcpCLI.c **** 					  1,  		   // first parameter
 508:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xOptionLength // parameter string length
 509:App/STM32F4-Discovery/tcpCLI.c **** 					  
 510:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 511:App/STM32F4-Discovery/tcpCLI.c **** 
 512:App/STM32F4-Discovery/tcpCLI.c **** 	if ( Option == NULL)
 1017              		.loc 1 512 0
 1018 001c 7B6C     		ldr	r3, [r7, #68]
 1019 001e 002B     		cmp	r3, #0
 1020 0020 0ED1     		bne	.L32
 513:App/STM32F4-Discovery/tcpCLI.c **** 	{
 514:App/STM32F4-Discovery/tcpCLI.c **** 		sprintf(pcWriteBuffer, "To few arguments. \n\n\0");
 1021              		.loc 1 514 0
 1022 0022 FA68     		ldr	r2, [r7, #12]
 1023 0024 A74B     		ldr	r3, .L47
 1024 0026 1546     		mov	r5, r2
 1025 0028 1C46     		mov	r4, r3
 1026 002a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1027 002c 2860     		str	r0, [r5]	@ unaligned
 1028 002e 6960     		str	r1, [r5, #4]	@ unaligned
 1029 0030 AA60     		str	r2, [r5, #8]	@ unaligned
 1030 0032 EB60     		str	r3, [r5, #12]	@ unaligned
 1031 0034 2068     		ldr	r0, [r4]	@ unaligned
 1032 0036 2861     		str	r0, [r5, #16]	@ unaligned
 1033 0038 2379     		ldrb	r3, [r4, #4]
 1034 003a 2B75     		strb	r3, [r5, #20]
 515:App/STM32F4-Discovery/tcpCLI.c **** 		return pdFALSE;
 1035              		.loc 1 515 0
 1036 003c 0023     		movs	r3, #0
 1037 003e 61E1     		b	.L46
 1038              	.L32:
 516:App/STM32F4-Discovery/tcpCLI.c **** 	}
 517:App/STM32F4-Discovery/tcpCLI.c **** 
 518:App/STM32F4-Discovery/tcpCLI.c **** 
 519:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 520:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND SET [parameter name] [value]
 521:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 522:App/STM32F4-Discovery/tcpCLI.c **** 
 523:App/STM32F4-Discovery/tcpCLI.c **** 	if( !strncmp( Option, "set", 3) ) 
 1039              		.loc 1 523 0
 1040 0040 786C     		ldr	r0, [r7, #68]
 1041 0042 A149     		ldr	r1, .L47+4
 1042 0044 0322     		movs	r2, #3
 1043 0046 FFF7FEFF 		bl	strncmp
 1044 004a 0346     		mov	r3, r0
 1045 004c 002B     		cmp	r3, #0
 1046 004e 3DD1     		bne	.L34
 524:App/STM32F4-Discovery/tcpCLI.c **** 	{
 525:App/STM32F4-Discovery/tcpCLI.c **** 
 526:App/STM32F4-Discovery/tcpCLI.c **** 		// get parameter from command line 
 527:App/STM32F4-Discovery/tcpCLI.c **** 	
 528:App/STM32F4-Discovery/tcpCLI.c **** 		Param = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1047              		.loc 1 528 0
 1048 0050 07F13403 		add	r3, r7, #52
 1049 0054 7868     		ldr	r0, [r7, #4]
 1050 0056 0221     		movs	r1, #2
 1051 0058 1A46     		mov	r2, r3
 1052 005a FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1053 005e 3864     		str	r0, [r7, #64]
 529:App/STM32F4-Discovery/tcpCLI.c **** 					  2,  		   // 2nd parameter
 530:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xParamLength // parameter string length
 531:App/STM32F4-Discovery/tcpCLI.c **** 					  
 532:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 533:App/STM32F4-Discovery/tcpCLI.c **** 		Value = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1054              		.loc 1 533 0
 1055 0060 07F13003 		add	r3, r7, #48
 1056 0064 7868     		ldr	r0, [r7, #4]
 1057 0066 0321     		movs	r1, #3
 1058 0068 1A46     		mov	r2, r3
 1059 006a FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1060 006e F863     		str	r0, [r7, #60]
 534:App/STM32F4-Discovery/tcpCLI.c **** 					  3,  		   // 2nd parameter
 535:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xValueLength // parameter string length
 536:App/STM32F4-Discovery/tcpCLI.c **** 					  
 537:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 538:App/STM32F4-Discovery/tcpCLI.c **** 		
 539:App/STM32F4-Discovery/tcpCLI.c **** 		// return pdFALSE if there is no 3rd parameter 
 540:App/STM32F4-Discovery/tcpCLI.c **** 
 541:App/STM32F4-Discovery/tcpCLI.c **** 		if (Value == NULL)
 1061              		.loc 1 541 0
 1062 0070 FB6B     		ldr	r3, [r7, #60]
 1063 0072 002B     		cmp	r3, #0
 1064 0074 06D1     		bne	.L35
 542:App/STM32F4-Discovery/tcpCLI.c **** 		{
 543:App/STM32F4-Discovery/tcpCLI.c **** 			strcpy(pcWriteBuffer, xMotorCommand.pcHelpString);
 1065              		.loc 1 543 0
 1066 0076 954B     		ldr	r3, .L47+8
 1067 0078 F868     		ldr	r0, [r7, #12]
 1068 007a 1946     		mov	r1, r3
 1069 007c FFF7FEFF 		bl	strcpy
 544:App/STM32F4-Discovery/tcpCLI.c **** 
 545:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 
 1070              		.loc 1 545 0
 1071 0080 0023     		movs	r3, #0
 1072 0082 3FE1     		b	.L46
 1073              	.L35:
 546:App/STM32F4-Discovery/tcpCLI.c **** 
 547:App/STM32F4-Discovery/tcpCLI.c **** 		}
 548:App/STM32F4-Discovery/tcpCLI.c **** 		
 549:App/STM32F4-Discovery/tcpCLI.c **** 		if ( handleVariable_set ( telegram, 
 1074              		.loc 1 549 0
 1075 0084 786B     		ldr	r0, [r7, #52]
 1076 0086 924B     		ldr	r3, .L47+12
 1077 0088 1968     		ldr	r1, [r3]
 1078 008a 3A6B     		ldr	r2, [r7, #48]
 1079 008c 914B     		ldr	r3, .L47+16
 1080 008e 1B68     		ldr	r3, [r3]
 1081 0090 FC68     		ldr	r4, [r7, #12]
 1082 0092 0394     		str	r4, [sp, #12]
 1083 0094 BC68     		ldr	r4, [r7, #8]
 1084 0096 0494     		str	r4, [sp, #16]
 1085 0098 3C6C     		ldr	r4, [r7, #64]
 1086 009a 0594     		str	r4, [sp, #20]
 1087 009c 0690     		str	r0, [sp, #24]
 1088 009e 0791     		str	r1, [sp, #28]
 1089 00a0 F96B     		ldr	r1, [r7, #60]
 1090 00a2 0891     		str	r1, [sp, #32]
 1091 00a4 0992     		str	r2, [sp, #36]
 1092 00a6 0A93     		str	r3, [sp, #40]
 1093 00a8 6B46     		mov	r3, sp
 1094 00aa 07F12402 		add	r2, r7, #36
 1095 00ae 07CA     		ldmia	r2, {r0, r1, r2}
 1096 00b0 83E80700 		stmia	r3, {r0, r1, r2}
 1097 00b4 07F11403 		add	r3, r7, #20
 1098 00b8 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1099 00ba FFF7FEFF 		bl	handleVariable_set
 1100 00be 0346     		mov	r3, r0
 1101 00c0 002B     		cmp	r3, #0
 1102 00c2 01D0     		beq	.L36
 550:App/STM32F4-Discovery/tcpCLI.c **** 				           pcWriteBuffer, 
 551:App/STM32F4-Discovery/tcpCLI.c **** 					   xWriteBufferLen,
 552:App/STM32F4-Discovery/tcpCLI.c **** 					   Param, 
 553:App/STM32F4-Discovery/tcpCLI.c **** 					   xParamLength, 
 554:App/STM32F4-Discovery/tcpCLI.c **** 					   QSpd_handle, 
 555:App/STM32F4-Discovery/tcpCLI.c **** 					   Value,
 556:App/STM32F4-Discovery/tcpCLI.c **** 					   xValueLength,  
 557:App/STM32F4-Discovery/tcpCLI.c **** 					   socket_0)) return pdPASS;
 1103              		.loc 1 557 0
 1104 00c4 0123     		movs	r3, #1
 1105 00c6 1DE1     		b	.L46
 1106              	.L36:
 558:App/STM32F4-Discovery/tcpCLI.c **** 
 559:App/STM32F4-Discovery/tcpCLI.c **** 		
 560:App/STM32F4-Discovery/tcpCLI.c **** 			
 561:App/STM32F4-Discovery/tcpCLI.c **** 		return pdFALSE;
 1107              		.loc 1 561 0
 1108 00c8 0023     		movs	r3, #0
 1109 00ca 1BE1     		b	.L46
 1110              	.L34:
 562:App/STM32F4-Discovery/tcpCLI.c **** 
 563:App/STM32F4-Discovery/tcpCLI.c **** 	}
 564:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 565:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND GET [parameter name] [value]
 566:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 567:App/STM32F4-Discovery/tcpCLI.c **** 
 568:App/STM32F4-Discovery/tcpCLI.c **** 
 569:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "get", 3))
 1111              		.loc 1 569 0
 1112 00cc 786C     		ldr	r0, [r7, #68]
 1113 00ce 8249     		ldr	r1, .L47+20
 1114 00d0 0322     		movs	r2, #3
 1115 00d2 FFF7FEFF 		bl	strncmp
 1116 00d6 0346     		mov	r3, r0
 1117 00d8 002B     		cmp	r3, #0
 1118 00da 2CD1     		bne	.L37
 570:App/STM32F4-Discovery/tcpCLI.c **** 	{
 571:App/STM32F4-Discovery/tcpCLI.c **** 		// get parameter from command line 
 572:App/STM32F4-Discovery/tcpCLI.c **** 	
 573:App/STM32F4-Discovery/tcpCLI.c **** 		Param = FreeRTOS_CLIGetParameter( pcCommandString, // command string 
 1119              		.loc 1 573 0
 1120 00dc 07F13403 		add	r3, r7, #52
 1121 00e0 7868     		ldr	r0, [r7, #4]
 1122 00e2 0221     		movs	r1, #2
 1123 00e4 1A46     		mov	r2, r3
 1124 00e6 FFF7FEFF 		bl	FreeRTOS_CLIGetParameter
 1125 00ea 3864     		str	r0, [r7, #64]
 574:App/STM32F4-Discovery/tcpCLI.c **** 					  2,  		   // 2nd parameter
 575:App/STM32F4-Discovery/tcpCLI.c **** 				  	  &xParamLength // parameter string length
 576:App/STM32F4-Discovery/tcpCLI.c **** 					  
 577:App/STM32F4-Discovery/tcpCLI.c **** 					 );
 578:App/STM32F4-Discovery/tcpCLI.c **** 			
 579:App/STM32F4-Discovery/tcpCLI.c **** 		// return pdFALSE if there is no 3rd parameter 
 580:App/STM32F4-Discovery/tcpCLI.c **** 
 581:App/STM32F4-Discovery/tcpCLI.c **** 		if (Param == NULL) return pdFALSE; 
 1126              		.loc 1 581 0
 1127 00ec 3B6C     		ldr	r3, [r7, #64]
 1128 00ee 002B     		cmp	r3, #0
 1129 00f0 01D1     		bne	.L38
 1130              		.loc 1 581 0 is_stmt 0 discriminator 1
 1131 00f2 0023     		movs	r3, #0
 1132 00f4 06E1     		b	.L46
 1133              	.L38:
 582:App/STM32F4-Discovery/tcpCLI.c **** 
 583:App/STM32F4-Discovery/tcpCLI.c **** 		
 584:App/STM32F4-Discovery/tcpCLI.c **** 		if ( handleVariable_get ( telegram,
 1134              		.loc 1 584 0 is_stmt 1
 1135 00f6 796B     		ldr	r1, [r7, #52]
 1136 00f8 754B     		ldr	r3, .L47+12
 1137 00fa 1A68     		ldr	r2, [r3]
 1138 00fc 754B     		ldr	r3, .L47+16
 1139 00fe 1B68     		ldr	r3, [r3]
 1140 0100 F868     		ldr	r0, [r7, #12]
 1141 0102 0390     		str	r0, [sp, #12]
 1142 0104 B868     		ldr	r0, [r7, #8]
 1143 0106 0490     		str	r0, [sp, #16]
 1144 0108 386C     		ldr	r0, [r7, #64]
 1145 010a 0590     		str	r0, [sp, #20]
 1146 010c 0691     		str	r1, [sp, #24]
 1147 010e 0792     		str	r2, [sp, #28]
 1148 0110 0893     		str	r3, [sp, #32]
 1149 0112 6B46     		mov	r3, sp
 1150 0114 07F12402 		add	r2, r7, #36
 1151 0118 07CA     		ldmia	r2, {r0, r1, r2}
 1152 011a 83E80700 		stmia	r3, {r0, r1, r2}
 1153 011e 07F11403 		add	r3, r7, #20
 1154 0122 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 1155 0124 FFF7FEFF 		bl	handleVariable_get
 1156 0128 0346     		mov	r3, r0
 1157 012a 002B     		cmp	r3, #0
 1158 012c 01D0     		beq	.L39
 585:App/STM32F4-Discovery/tcpCLI.c **** 				        pcWriteBuffer, 
 586:App/STM32F4-Discovery/tcpCLI.c **** 					   xWriteBufferLen,
 587:App/STM32F4-Discovery/tcpCLI.c **** 	
 588:App/STM32F4-Discovery/tcpCLI.c **** 				           Param, 
 589:App/STM32F4-Discovery/tcpCLI.c **** 					   xParamLength, 
 590:App/STM32F4-Discovery/tcpCLI.c **** 					   QSpd_handle, 
 591:App/STM32F4-Discovery/tcpCLI.c **** 					   socket_0)) return pdPASS;
 1159              		.loc 1 591 0
 1160 012e 0123     		movs	r3, #1
 1161 0130 E8E0     		b	.L46
 1162              	.L39:
 592:App/STM32F4-Discovery/tcpCLI.c **** 		return pdFALSE;
 1163              		.loc 1 592 0
 1164 0132 0023     		movs	r3, #0
 1165 0134 E6E0     		b	.L46
 1166              	.L37:
 593:App/STM32F4-Discovery/tcpCLI.c **** 
 594:App/STM32F4-Discovery/tcpCLI.c **** 
 595:App/STM32F4-Discovery/tcpCLI.c **** 	}
 596:App/STM32F4-Discovery/tcpCLI.c **** 		
 597:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 598:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND STOP 
 599:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 600:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "stop", 4))
 1167              		.loc 1 600 0
 1168 0136 786C     		ldr	r0, [r7, #68]
 1169 0138 6849     		ldr	r1, .L47+24
 1170 013a 0422     		movs	r2, #4
 1171 013c FFF7FEFF 		bl	strncmp
 1172 0140 0346     		mov	r3, r0
 1173 0142 002B     		cmp	r3, #0
 1174 0144 5AD1     		bne	.L40
 601:App/STM32F4-Discovery/tcpCLI.c **** 	{
 602:App/STM32F4-Discovery/tcpCLI.c **** 
 603:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.Qcmd = STOP; 
 1175              		.loc 1 603 0
 1176 0146 0523     		movs	r3, #5
 1177 0148 3B75     		strb	r3, [r7, #20]
 604:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.size = 0; 
 1178              		.loc 1 604 0
 1179 014a 0023     		movs	r3, #0
 1180 014c BB61     		str	r3, [r7, #24]
 605:App/STM32F4-Discovery/tcpCLI.c **** 			// send value to setSpeed_task via Queue 
 606:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegram, xDelay ) )
 1181              		.loc 1 606 0
 1182 014e 604B     		ldr	r3, .L47+12
 1183 0150 1968     		ldr	r1, [r3]
 1184 0152 634B     		ldr	r3, .L47+28
 1185 0154 1B68     		ldr	r3, [r3]
 1186 0156 07F11402 		add	r2, r7, #20
 1187 015a 0846     		mov	r0, r1
 1188 015c 1146     		mov	r1, r2
 1189 015e 1A46     		mov	r2, r3
 1190 0160 0023     		movs	r3, #0
 1191 0162 FFF7FEFF 		bl	xQueueGenericSend
 1192 0166 0346     		mov	r3, r0
 1193 0168 002B     		cmp	r3, #0
 1194 016a 34D0     		beq	.L41
 607:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 608:App/STM32F4-Discovery/tcpCLI.c **** 					
 609:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegram, xDelay))
 1195              		.loc 1 609 0
 1196 016c 584B     		ldr	r3, .L47+12
 1197 016e 1968     		ldr	r1, [r3]
 1198 0170 5B4B     		ldr	r3, .L47+28
 1199 0172 1B68     		ldr	r3, [r3]
 1200 0174 07F11402 		add	r2, r7, #20
 1201 0178 0846     		mov	r0, r1
 1202 017a 1146     		mov	r1, r2
 1203 017c 1A46     		mov	r2, r3
 1204 017e 0023     		movs	r3, #0
 1205 0180 FFF7FEFF 		bl	xQueueGenericReceive
 1206 0184 0346     		mov	r3, r0
 1207 0186 002B     		cmp	r3, #0
 1208 0188 14D0     		beq	.L42
 610:App/STM32F4-Discovery/tcpCLI.c **** 			{
 611:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegram.Qcmd = SUCCSESS) 
 1209              		.loc 1 611 0
 1210 018a 0623     		movs	r3, #6
 1211 018c 3B75     		strb	r3, [r7, #20]
 612:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 613:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer ,"Motor succsesfully stopped.\n\n");
 1212              		.loc 1 613 0
 1213 018e FA68     		ldr	r2, [r7, #12]
 1214 0190 544B     		ldr	r3, .L47+32
 1215 0192 1546     		mov	r5, r2
 1216 0194 1C46     		mov	r4, r3
 1217 0196 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1218 0198 2860     		str	r0, [r5]	@ unaligned
 1219 019a 6960     		str	r1, [r5, #4]	@ unaligned
 1220 019c AA60     		str	r2, [r5, #8]	@ unaligned
 1221 019e EB60     		str	r3, [r5, #12]	@ unaligned
 1222 01a0 07CC     		ldmia	r4!, {r0, r1, r2}
 1223 01a2 2861     		str	r0, [r5, #16]	@ unaligned
 1224 01a4 6961     		str	r1, [r5, #20]	@ unaligned
 1225 01a6 AA61     		str	r2, [r5, #24]	@ unaligned
 1226 01a8 2388     		ldrh	r3, [r4]	@ unaligned
 1227 01aa AB83     		strh	r3, [r5, #28]	@ unaligned
 614:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 29; 	
 1228              		.loc 1 614 0
 1229 01ac 1D23     		movs	r3, #29
 1230 01ae BB60     		str	r3, [r7, #8]
 615:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 616:App/STM32F4-Discovery/tcpCLI.c **** 
 617:App/STM32F4-Discovery/tcpCLI.c **** 					
 618:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 1231              		.loc 1 618 0
 1232 01b0 0123     		movs	r3, #1
 1233 01b2 A7E0     		b	.L46
 1234              	.L42:
 619:App/STM32F4-Discovery/tcpCLI.c **** 
 620:App/STM32F4-Discovery/tcpCLI.c **** 				}
 621:App/STM32F4-Discovery/tcpCLI.c **** 				else
 622:App/STM32F4-Discovery/tcpCLI.c **** 				{
 623:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 624:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 625:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 626:App/STM32F4-Discovery/tcpCLI.c **** 
 627:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 628:App/STM32F4-Discovery/tcpCLI.c **** 
 629:App/STM32F4-Discovery/tcpCLI.c **** 
 630:App/STM32F4-Discovery/tcpCLI.c **** 				}
 631:App/STM32F4-Discovery/tcpCLI.c **** 			}
 632:App/STM32F4-Discovery/tcpCLI.c **** 			else
 633:App/STM32F4-Discovery/tcpCLI.c **** 			{
 634:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 635:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 636:App/STM32F4-Discovery/tcpCLI.c **** 		
 637:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 1235              		.loc 1 637 0
 1236 01b4 FA68     		ldr	r2, [r7, #12]
 1237 01b6 4C4B     		ldr	r3, .L47+36
 1238 01b8 1546     		mov	r5, r2
 1239 01ba 1C46     		mov	r4, r3
 1240 01bc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1241 01be 2860     		str	r0, [r5]	@ unaligned
 1242 01c0 6960     		str	r1, [r5, #4]	@ unaligned
 1243 01c2 AA60     		str	r2, [r5, #8]	@ unaligned
 1244 01c4 EB60     		str	r3, [r5, #12]	@ unaligned
 1245 01c6 07CC     		ldmia	r4!, {r0, r1, r2}
 1246 01c8 2861     		str	r0, [r5, #16]	@ unaligned
 1247 01ca 6961     		str	r1, [r5, #20]	@ unaligned
 1248 01cc AA61     		str	r2, [r5, #24]	@ unaligned
 638:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 1249              		.loc 1 638 0
 1250 01ce 1B23     		movs	r3, #27
 1251 01d0 BB60     		str	r3, [r7, #8]
 639:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 640:App/STM32F4-Discovery/tcpCLI.c **** 
 641:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 1252              		.loc 1 641 0
 1253 01d2 0023     		movs	r3, #0
 1254 01d4 96E0     		b	.L46
 1255              	.L41:
 642:App/STM32F4-Discovery/tcpCLI.c **** 			}
 643:App/STM32F4-Discovery/tcpCLI.c **** 		}
 644:App/STM32F4-Discovery/tcpCLI.c **** 		else
 645:App/STM32F4-Discovery/tcpCLI.c **** 		{
 646:App/STM32F4-Discovery/tcpCLI.c **** 			
 647:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 648:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 649:App/STM32F4-Discovery/tcpCLI.c **** 		
 650:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer, "Error sending Queue!\n\n");
 1256              		.loc 1 650 0
 1257 01d6 FA68     		ldr	r2, [r7, #12]
 1258 01d8 444B     		ldr	r3, .L47+40
 1259 01da 1446     		mov	r4, r2
 1260 01dc 1D46     		mov	r5, r3
 1261 01de 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1262 01e0 2060     		str	r0, [r4]	@ unaligned
 1263 01e2 6160     		str	r1, [r4, #4]	@ unaligned
 1264 01e4 A260     		str	r2, [r4, #8]	@ unaligned
 1265 01e6 E360     		str	r3, [r4, #12]	@ unaligned
 1266 01e8 2868     		ldr	r0, [r5]	@ unaligned
 1267 01ea 2061     		str	r0, [r4, #16]	@ unaligned
 1268 01ec AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1269 01ee AB79     		ldrb	r3, [r5, #6]
 1270 01f0 A282     		strh	r2, [r4, #20]	@ unaligned
 1271 01f2 A375     		strb	r3, [r4, #22]
 651:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1272              		.loc 1 651 0
 1273 01f4 1623     		movs	r3, #22
 1274 01f6 BB60     		str	r3, [r7, #8]
 652:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket, buf, len, 0);
 653:App/STM32F4-Discovery/tcpCLI.c **** 
 654:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1275              		.loc 1 654 0
 1276 01f8 0023     		movs	r3, #0
 1277 01fa 83E0     		b	.L46
 1278              	.L40:
 655:App/STM32F4-Discovery/tcpCLI.c **** 		}
 656:App/STM32F4-Discovery/tcpCLI.c **** 					
 657:App/STM32F4-Discovery/tcpCLI.c **** 	}
 658:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 659:App/STM32F4-Discovery/tcpCLI.c **** 	//		CASE COMMAND START
 660:App/STM32F4-Discovery/tcpCLI.c **** 	//================================================================================//
 661:App/STM32F4-Discovery/tcpCLI.c **** 
 662:App/STM32F4-Discovery/tcpCLI.c **** 	if (!strncmp ( Option, "start", 5))
 1279              		.loc 1 662 0
 1280 01fc 786C     		ldr	r0, [r7, #68]
 1281 01fe 3C49     		ldr	r1, .L47+44
 1282 0200 0522     		movs	r2, #5
 1283 0202 FFF7FEFF 		bl	strncmp
 1284 0206 0346     		mov	r3, r0
 1285 0208 002B     		cmp	r3, #0
 1286 020a 75D1     		bne	.L43
 663:App/STM32F4-Discovery/tcpCLI.c **** 	{
 664:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.Qcmd = START; 
 1287              		.loc 1 664 0
 1288 020c 0423     		movs	r3, #4
 1289 020e 3B75     		strb	r3, [r7, #20]
 665:App/STM32F4-Discovery/tcpCLI.c **** 		telegram.size = 0; 
 1290              		.loc 1 665 0
 1291 0210 0023     		movs	r3, #0
 1292 0212 BB61     		str	r3, [r7, #24]
 666:App/STM32F4-Discovery/tcpCLI.c **** 			// send value to setSpeed_task via Queue 
 667:App/STM32F4-Discovery/tcpCLI.c **** 		if ( xQueueSend ( QSpd_handle, (void *)&telegram, xDelay ) == pdPASS )
 1293              		.loc 1 667 0
 1294 0214 2E4B     		ldr	r3, .L47+12
 1295 0216 1968     		ldr	r1, [r3]
 1296 0218 314B     		ldr	r3, .L47+28
 1297 021a 1B68     		ldr	r3, [r3]
 1298 021c 07F11402 		add	r2, r7, #20
 1299 0220 0846     		mov	r0, r1
 1300 0222 1146     		mov	r1, r2
 1301 0224 1A46     		mov	r2, r3
 1302 0226 0023     		movs	r3, #0
 1303 0228 FFF7FEFF 		bl	xQueueGenericSend
 1304 022c 0346     		mov	r3, r0
 1305 022e 012B     		cmp	r3, #1
 1306 0230 34D1     		bne	.L44
 668:App/STM32F4-Discovery/tcpCLI.c **** 		{	
 669:App/STM32F4-Discovery/tcpCLI.c **** 					
 670:App/STM32F4-Discovery/tcpCLI.c **** 			if (  xQueueReceive ( QSpd_handle, &telegram, xDelay) == pdPASS)
 1307              		.loc 1 670 0
 1308 0232 274B     		ldr	r3, .L47+12
 1309 0234 1968     		ldr	r1, [r3]
 1310 0236 2A4B     		ldr	r3, .L47+28
 1311 0238 1B68     		ldr	r3, [r3]
 1312 023a 07F11402 		add	r2, r7, #20
 1313 023e 0846     		mov	r0, r1
 1314 0240 1146     		mov	r1, r2
 1315 0242 1A46     		mov	r2, r3
 1316 0244 0023     		movs	r3, #0
 1317 0246 FFF7FEFF 		bl	xQueueGenericReceive
 1318 024a 0346     		mov	r3, r0
 1319 024c 012B     		cmp	r3, #1
 1320 024e 14D1     		bne	.L45
 671:App/STM32F4-Discovery/tcpCLI.c **** 			{
 672:App/STM32F4-Discovery/tcpCLI.c **** 				if ( telegram.Qcmd = SUCCSESS) 
 1321              		.loc 1 672 0
 1322 0250 0623     		movs	r3, #6
 1323 0252 3B75     		strb	r3, [r7, #20]
 673:App/STM32F4-Discovery/tcpCLI.c **** 				{	
 674:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer , "Motor succsesfully started.\n\n");
 1324              		.loc 1 674 0
 1325 0254 FA68     		ldr	r2, [r7, #12]
 1326 0256 274B     		ldr	r3, .L47+48
 1327 0258 1546     		mov	r5, r2
 1328 025a 1C46     		mov	r4, r3
 1329 025c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1330 025e 2860     		str	r0, [r5]	@ unaligned
 1331 0260 6960     		str	r1, [r5, #4]	@ unaligned
 1332 0262 AA60     		str	r2, [r5, #8]	@ unaligned
 1333 0264 EB60     		str	r3, [r5, #12]	@ unaligned
 1334 0266 07CC     		ldmia	r4!, {r0, r1, r2}
 1335 0268 2861     		str	r0, [r5, #16]	@ unaligned
 1336 026a 6961     		str	r1, [r5, #20]	@ unaligned
 1337 026c AA61     		str	r2, [r5, #24]	@ unaligned
 1338 026e 2388     		ldrh	r3, [r4]	@ unaligned
 1339 0270 AB83     		strh	r3, [r5, #28]	@ unaligned
 675:App/STM32F4-Discovery/tcpCLI.c **** 					xWriteBufferLen = 29; 	
 1340              		.loc 1 675 0
 1341 0272 1D23     		movs	r3, #29
 1342 0274 BB60     		str	r3, [r7, #8]
 676:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 677:App/STM32F4-Discovery/tcpCLI.c **** 
 678:App/STM32F4-Discovery/tcpCLI.c **** 					
 679:App/STM32F4-Discovery/tcpCLI.c **** 					return pdPASS;
 1343              		.loc 1 679 0
 1344 0276 0123     		movs	r3, #1
 1345 0278 44E0     		b	.L46
 1346              	.L45:
 680:App/STM32F4-Discovery/tcpCLI.c **** 
 681:App/STM32F4-Discovery/tcpCLI.c **** 				}
 682:App/STM32F4-Discovery/tcpCLI.c **** 				else
 683:App/STM32F4-Discovery/tcpCLI.c **** 				{
 684:App/STM32F4-Discovery/tcpCLI.c **** 					sprintf(pcWriteBuffer, "MODBUS ERROR !!!.\n\n");
 685:App/STM32F4-Discovery/tcpCLI.c **** 			       		xWriteBufferLen = 19; 	
 686:App/STM32F4-Discovery/tcpCLI.c **** 					//send( socket_0, buf, len, 0);
 687:App/STM32F4-Discovery/tcpCLI.c **** 
 688:App/STM32F4-Discovery/tcpCLI.c **** 					return pdFALSE;
 689:App/STM32F4-Discovery/tcpCLI.c **** 
 690:App/STM32F4-Discovery/tcpCLI.c **** 
 691:App/STM32F4-Discovery/tcpCLI.c **** 				}
 692:App/STM32F4-Discovery/tcpCLI.c **** 			}
 693:App/STM32F4-Discovery/tcpCLI.c **** 			else
 694:App/STM32F4-Discovery/tcpCLI.c **** 			{
 695:App/STM32F4-Discovery/tcpCLI.c **** 					// send to Queue was unsuccsessful
 696:App/STM32F4-Discovery/tcpCLI.c **** 				// send error via TCP 
 697:App/STM32F4-Discovery/tcpCLI.c **** 		
 698:App/STM32F4-Discovery/tcpCLI.c **** 				sprintf(pcWriteBuffer, "Error recieving response!\n\n");
 1347              		.loc 1 698 0
 1348 027a FA68     		ldr	r2, [r7, #12]
 1349 027c 1A4B     		ldr	r3, .L47+36
 1350 027e 1546     		mov	r5, r2
 1351 0280 1C46     		mov	r4, r3
 1352 0282 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1353 0284 2860     		str	r0, [r5]	@ unaligned
 1354 0286 6960     		str	r1, [r5, #4]	@ unaligned
 1355 0288 AA60     		str	r2, [r5, #8]	@ unaligned
 1356 028a EB60     		str	r3, [r5, #12]	@ unaligned
 1357 028c 07CC     		ldmia	r4!, {r0, r1, r2}
 1358 028e 2861     		str	r0, [r5, #16]	@ unaligned
 1359 0290 6961     		str	r1, [r5, #20]	@ unaligned
 1360 0292 AA61     		str	r2, [r5, #24]	@ unaligned
 699:App/STM32F4-Discovery/tcpCLI.c **** 	 			xWriteBufferLen = 27; 	
 1361              		.loc 1 699 0
 1362 0294 1B23     		movs	r3, #27
 1363 0296 BB60     		str	r3, [r7, #8]
 700:App/STM32F4-Discovery/tcpCLI.c **** 				//send( socket_0, buf, len, 0);
 701:App/STM32F4-Discovery/tcpCLI.c **** 
 702:App/STM32F4-Discovery/tcpCLI.c **** 				return pdFALSE; 	
 1364              		.loc 1 702 0
 1365 0298 0023     		movs	r3, #0
 1366 029a 33E0     		b	.L46
 1367              	.L44:
 703:App/STM32F4-Discovery/tcpCLI.c **** 			}
 704:App/STM32F4-Discovery/tcpCLI.c **** 		}
 705:App/STM32F4-Discovery/tcpCLI.c **** 		else
 706:App/STM32F4-Discovery/tcpCLI.c **** 		{
 707:App/STM32F4-Discovery/tcpCLI.c **** 			
 708:App/STM32F4-Discovery/tcpCLI.c **** 			// send to Queue was unsuccsessful
 709:App/STM32F4-Discovery/tcpCLI.c **** 			// send error via TCP 
 710:App/STM32F4-Discovery/tcpCLI.c **** 		
 711:App/STM32F4-Discovery/tcpCLI.c **** 			sprintf(pcWriteBuffer,"Error sending Queue!\n\n");
 1368              		.loc 1 711 0
 1369 029c FA68     		ldr	r2, [r7, #12]
 1370 029e 134B     		ldr	r3, .L47+40
 1371 02a0 1446     		mov	r4, r2
 1372 02a2 1D46     		mov	r5, r3
 1373 02a4 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1374 02a6 2060     		str	r0, [r4]	@ unaligned
 1375 02a8 6160     		str	r1, [r4, #4]	@ unaligned
 1376 02aa A260     		str	r2, [r4, #8]	@ unaligned
 1377 02ac E360     		str	r3, [r4, #12]	@ unaligned
 1378 02ae 2868     		ldr	r0, [r5]	@ unaligned
 1379 02b0 2061     		str	r0, [r4, #16]	@ unaligned
 1380 02b2 AA88     		ldrh	r2, [r5, #4]	@ unaligned
 1381 02b4 AB79     		ldrb	r3, [r5, #6]
 1382 02b6 A282     		strh	r2, [r4, #20]	@ unaligned
 1383 02b8 A375     		strb	r3, [r4, #22]
 712:App/STM32F4-Discovery/tcpCLI.c **** 	 		xWriteBufferLen = 22; 	
 1384              		.loc 1 712 0
 1385 02ba 1623     		movs	r3, #22
 1386 02bc BB60     		str	r3, [r7, #8]
 713:App/STM32F4-Discovery/tcpCLI.c **** 			//send( socket_0, buf, len, 0);
 714:App/STM32F4-Discovery/tcpCLI.c **** 
 715:App/STM32F4-Discovery/tcpCLI.c **** 			return pdFALSE; 	
 1387              		.loc 1 715 0
 1388 02be 0023     		movs	r3, #0
 1389 02c0 20E0     		b	.L46
 1390              	.L48:
 1391 02c2 00BF     		.align	2
 1392              	.L47:
 1393 02c4 1C010000 		.word	.LC12
 1394 02c8 34010000 		.word	.LC13
 1395 02cc 08000000 		.word	.LC1
 1396 02d0 00000000 		.word	QSpd_handle
 1397 02d4 00000000 		.word	socket_0
 1398 02d8 38010000 		.word	.LC14
 1399 02dc 3C010000 		.word	.LC15
 1400 02e0 00000000 		.word	xDelay
 1401 02e4 44010000 		.word	.LC16
 1402 02e8 A8000000 		.word	.LC5
 1403 02ec C4000000 		.word	.LC6
 1404 02f0 64010000 		.word	.LC17
 1405 02f4 6C010000 		.word	.LC18
 1406              	.L43:
 716:App/STM32F4-Discovery/tcpCLI.c **** 		}
 717:App/STM32F4-Discovery/tcpCLI.c **** 
 718:App/STM32F4-Discovery/tcpCLI.c **** 
 719:App/STM32F4-Discovery/tcpCLI.c **** 	}
 720:App/STM32F4-Discovery/tcpCLI.c **** 
 721:App/STM32F4-Discovery/tcpCLI.c **** 
 722:App/STM32F4-Discovery/tcpCLI.c **** 	strcpy(pcWriteBuffer, xMotorCommand.pcHelpString);
 1407              		.loc 1 722 0
 1408 02f8 044B     		ldr	r3, .L49
 1409 02fa F868     		ldr	r0, [r7, #12]
 1410 02fc 1946     		mov	r1, r3
 1411 02fe FFF7FEFF 		bl	strcpy
 723:App/STM32F4-Discovery/tcpCLI.c **** 		
 724:App/STM32F4-Discovery/tcpCLI.c **** 	return pdFALSE;
 1412              		.loc 1 724 0
 1413 0302 0023     		movs	r3, #0
 1414              	.L46:
 725:App/STM32F4-Discovery/tcpCLI.c **** 
 726:App/STM32F4-Discovery/tcpCLI.c **** 
 727:App/STM32F4-Discovery/tcpCLI.c **** }
 1415              		.loc 1 727 0
 1416 0304 1846     		mov	r0, r3
 1417 0306 4837     		adds	r7, r7, #72
 1418 0308 BD46     		mov	sp, r7
 1419              		@ sp needed
 1420 030a B0BD     		pop	{r4, r5, r7, pc}
 1421              	.L50:
 1422              		.align	2
 1423              	.L49:
 1424 030c 08000000 		.word	.LC1
 1425              		.cfi_endproc
 1426              	.LFE112:
 1428              		.text
 1429              	.Letext0:
 1430              		.file 2 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/lib/gcc/arm-none-eabi/4.8.4/include/std
 1431              		.file 3 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/machine/_default_
 1432              		.file 4 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/arm-none-eabi/include/stdint.h"
 1433              		.file 5 "Source/portable/GCC/ARM_CM4F/portmacro.h"
 1434              		.file 6 "Source/include/task.h"
 1435              		.file 7 "Source/include/queue.h"
 1436              		.file 8 "Source/include/semphr.h"
 1437              		.file 9 "Source/FreeRTOS-Plus-CLI/FreeRTOS_CLI.h"
 1438              		.file 10 "App/STM32F4-Discovery/tcpCLI.h"
 1439              		.file 11 "App/STM32F4-Discovery/main.h"
 1440              		.file 12 "App/STM32F4-Discovery/Libraries/CMSIS/Include/core_cm4.h"
 1441              		.file 13 "App/STM32F4-Discovery/spi.h"
 1442              		.file 14 "App/STM32F4-Discovery/W5200.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 tcpCLI.c
                            *COM*:0000000000000004 xSemaphoreDMASPI
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccAR2P9d.s:21     .bss.xHigherPriorityTaskWoken:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccAR2P9d.s:24     .bss.xHigherPriorityTaskWoken:0000000000000000 xHigherPriorityTaskWoken
                            *COM*:0000000000000004 xSmphrUSART
                            *COM*:0000000000000004 motorHeartBeatHandle
                            *COM*:0000000000000004 motorHBHandle
                            *COM*:0000000000000004 QSpd_handle
                            *COM*:0000000000000004 QStatus_handle
                            *COM*:0000000000000004 socket_0
                            *COM*:00000000000007d0 bufferTX
                            *COM*:00000000000007d0 bufferRX
                            *COM*:0000000000000004 bufferRXidx
                            *COM*:0000000000000004 bufferTXidx
                            *COM*:0000000000000004 dat_lengthRX
                            *COM*:0000000000000004 dat_lengthTX
                            *COM*:0000000000000004 set_macTaskHandle
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccAR2P9d.s:40     .rodata:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccAR2P9d.s:48     .rodata.xMotorCommand:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccAR2P9d.s:51     .rodata.xMotorCommand:0000000000000000 xMotorCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccAR2P9d.s:988    .text.prvMotorCommand:0000000000000000 prvMotorCommand
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccAR2P9d.s:58     .data.xDelay:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccAR2P9d.s:61     .data.xDelay:0000000000000000 xDelay
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccAR2P9d.s:93     .text.handleVariable_set:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccAR2P9d.s:98     .text.handleVariable_set:0000000000000000 handleVariable_set
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccAR2P9d.s:485    .text.handleVariable_set:0000000000000280 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccAR2P9d.s:498    .text.handleVariable_set:00000000000002ac $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccAR2P9d.s:612    .text.handleVariable_set:0000000000000374 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccAR2P9d.s:625    .text.handleVariable_get:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccAR2P9d.s:630    .text.handleVariable_get:0000000000000000 handleVariable_get
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccAR2P9d.s:946    .text.handleVariable_get:000000000000021c $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccAR2P9d.s:983    .text.prvMotorCommand:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccAR2P9d.s:1393   .text.prvMotorCommand:00000000000002c4 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccAR2P9d.s:1408   .text.prvMotorCommand:00000000000002f8 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccAR2P9d.s:1424   .text.prvMotorCommand:000000000000030c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
strncmp
atoi
sprintf
xQueueGenericSend
xQueueGenericReceive
strlen
strcpy
FreeRTOS_CLIGetParameter
