   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"printf_my.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.printchar,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	printchar:
  25              	.LFB0:
  26              		.file 1 "App/STM32F4-Discovery/printf_my.c"
   1:App/STM32F4-Discovery/printf_my.c **** /*******************************************************************************
   2:App/STM32F4-Discovery/printf_my.c ****  Copyright 2001, 2002 Georges Menie (<URL snipped>)
   3:App/STM32F4-Discovery/printf_my.c ****   This program is free software; you can redistribute it and/or modify
   4:App/STM32F4-Discovery/printf_my.c ****   it under the terms of the GNU Lesser General Public License as published by
   5:App/STM32F4-Discovery/printf_my.c ****   the Free Software Foundation; either version 2 of the License, or
   6:App/STM32F4-Discovery/printf_my.c ****   (at your option) any later version.
   7:App/STM32F4-Discovery/printf_my.c ****   This program is distributed in the hope that it will be useful,
   8:App/STM32F4-Discovery/printf_my.c ****   but WITHOUT ANY WARRANTY; without even the implied warranty of
   9:App/STM32F4-Discovery/printf_my.c ****   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  10:App/STM32F4-Discovery/printf_my.c ****   GNU Lesser General Public License for more details.
  11:App/STM32F4-Discovery/printf_my.c ****   You should have received a copy of the GNU Lesser General Public License
  12:App/STM32F4-Discovery/printf_my.c ****   along with this program; if not, write to the Free Software
  13:App/STM32F4-Discovery/printf_my.c ****   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  14:App/STM32F4-Discovery/printf_my.c ****  */
  15:App/STM32F4-Discovery/printf_my.c **** 
  16:App/STM32F4-Discovery/printf_my.c **** /*******************************************************************************
  17:App/STM32F4-Discovery/printf_my.c ****  putchar is the only external dependency for this file, 
  18:App/STM32F4-Discovery/printf_my.c ****  if you have a working putchar, just remove the following
  19:App/STM32F4-Discovery/printf_my.c ****  define. If the function should be called something else,
  20:App/STM32F4-Discovery/printf_my.c ****  replace outbyte(c) by your own function call.
  21:App/STM32F4-Discovery/printf_my.c ****  */
  22:App/STM32F4-Discovery/printf_my.c **** //*******************************************************************************
  23:App/STM32F4-Discovery/printf_my.c **** //  Updated by Daniel D Miller.  Changes to the original Menie code are
  24:App/STM32F4-Discovery/printf_my.c **** //  Copyright 2009-2013 Daniel D Miller
  25:App/STM32F4-Discovery/printf_my.c **** //  All such changes are distributed under the same license as the original,
  26:App/STM32F4-Discovery/printf_my.c **** //  as described above.
  27:App/STM32F4-Discovery/printf_my.c **** //  11/06/09 - adding floating-point support
  28:App/STM32F4-Discovery/printf_my.c **** //  03/19/10 - pad fractional portion of floating-point number with 0s
  29:App/STM32F4-Discovery/printf_my.c **** //  03/30/10 - document the \% bug
  30:App/STM32F4-Discovery/printf_my.c **** //  07/20/10 - Fix a round-off bug in floating-point conversions
  31:App/STM32F4-Discovery/printf_my.c **** //             ( 0.99 with %.1f did not round to 1.0 )
  32:App/STM32F4-Discovery/printf_my.c **** //  10/25/11 - Add support for %+ format (always show + on positive numbers)
  33:App/STM32F4-Discovery/printf_my.c **** //  05/10/13 - Add stringfn() function, which takes a maximum-output-buffer
  34:App/STM32F4-Discovery/printf_my.c **** //             length as an argument.  Similar to snprintf()
  35:App/STM32F4-Discovery/printf_my.c **** //*******************************************************************************
  36:App/STM32F4-Discovery/printf_my.c **** //  BUGS
  37:App/STM32F4-Discovery/printf_my.c **** //  If '%' is included in a format string, in the form \% with the intent
  38:App/STM32F4-Discovery/printf_my.c **** //  of including the percent sign in the output string, this function will
  39:App/STM32F4-Discovery/printf_my.c **** //  mis-handle the data entirely!!  
  40:App/STM32F4-Discovery/printf_my.c **** //  Essentially, it will just discard the character following the percent sign.  
  41:App/STM32F4-Discovery/printf_my.c **** //  This bug is not easy to fix in the existing code; 
  42:App/STM32F4-Discovery/printf_my.c **** //  for now, I'll just try to remember to use %% instead of \% ...
  43:App/STM32F4-Discovery/printf_my.c **** //*******************************************************************************
  44:App/STM32F4-Discovery/printf_my.c **** //  compile command for stand-alone mode (TEST_PRINTF)
  45:App/STM32F4-Discovery/printf_my.c **** //  gcc -Wall -O2 -DTEST_PRINTF -s printf2.c -o printf2.exe
  46:App/STM32F4-Discovery/printf_my.c **** //*******************************************************************************
  47:App/STM32F4-Discovery/printf_my.c **** //*******************************************************************************
  48:App/STM32F4-Discovery/printf_my.c **** //  Updated by SpinDance Inc.  Changes to the original Menie code are
  49:App/STM32F4-Discovery/printf_my.c **** //  Copyright 2013-2014 SpinDance Inc.
  50:App/STM32F4-Discovery/printf_my.c **** //  All such changes are distributed under the same license as the original,
  51:App/STM32F4-Discovery/printf_my.c **** //  as described above.
  52:App/STM32F4-Discovery/printf_my.c **** //  09/07/13 - Removed references to USE_INTERNALS.
  53:App/STM32F4-Discovery/printf_my.c **** //  09/07/13 - Use a standard strlen.
  54:App/STM32F4-Discovery/printf_my.c **** //  09/18/13 - Added stringfnp().
  55:App/STM32F4-Discovery/printf_my.c **** //  01/28/14 - Fixed bug where %s strings overflowed buffer with final '\0'.
  56:App/STM32F4-Discovery/printf_my.c **** //  01/28/14 - Fixed linux i686 gcc double stack alignment bug.
  57:App/STM32F4-Discovery/printf_my.c **** //  01/28/14 - Improved testing support.
  58:App/STM32F4-Discovery/printf_my.c **** //  01/28/14 - Uses stdarg.h - runs optimized with arm-none-eabi-gcc.
  59:App/STM32F4-Discovery/printf_my.c **** //  08/17/14 - Add support for nanopb streams.
  60:App/STM32F4-Discovery/printf_my.c **** //*******************************************************************************
  61:App/STM32F4-Discovery/printf_my.c **** 
  62:App/STM32F4-Discovery/printf_my.c **** //lint -esym(752, debug_output)
  63:App/STM32F4-Discovery/printf_my.c **** //lint -esym(766, stdio.h)
  64:App/STM32F4-Discovery/printf_my.c **** 
  65:App/STM32F4-Discovery/printf_my.c ****  //#define  TEST_PRINTF    0
  66:App/STM32F4-Discovery/printf_my.c **** 
  67:App/STM32F4-Discovery/printf_my.c **** #include "printf_my.h"
  68:App/STM32F4-Discovery/printf_my.c **** 
  69:App/STM32F4-Discovery/printf_my.c **** //#include <string.h>
  70:App/STM32F4-Discovery/printf_my.c **** #include <stdarg.h>
  71:App/STM32F4-Discovery/printf_my.c **** #include <limits.h>
  72:App/STM32F4-Discovery/printf_my.c **** 
  73:App/STM32F4-Discovery/printf_my.c **** #define putchar(c) c
  74:App/STM32F4-Discovery/printf_my.c **** 
  75:App/STM32F4-Discovery/printf_my.c **** #ifdef TEST_PRINTF
  76:App/STM32F4-Discovery/printf_my.c **** 	#include <stdio.h>
  77:App/STM32F4-Discovery/printf_my.c **** 	#ifndef TEST_EMBEDDED
  78:App/STM32F4-Discovery/printf_my.c **** 		extern int putchar (int c);
  79:App/STM32F4-Discovery/printf_my.c **** 	#endif
  80:App/STM32F4-Discovery/printf_my.c **** 
  81:App/STM32F4-Discovery/printf_my.c **** 	#if defined TEST_EXPECTED_OUTPUT || defined TEST_EMBEDDED
  82:App/STM32F4-Discovery/printf_my.c **** 		#include <assert.h>
  83:App/STM32F4-Discovery/printf_my.c **** 	#endif
  84:App/STM32F4-Discovery/printf_my.c **** 
  85:App/STM32F4-Discovery/printf_my.c **** 	#if defined TEST_EMBEDDED
  86:App/STM32F4-Discovery/printf_my.c **** 		#include "printf2/printf2Config.h"
  87:App/STM32F4-Discovery/printf_my.c **** 	#endif
  88:App/STM32F4-Discovery/printf_my.c **** #endif
  89:App/STM32F4-Discovery/printf_my.c **** 
  90:App/STM32F4-Discovery/printf_my.c **** #if USE_FLOATING_POINT
  91:App/STM32F4-Discovery/printf_my.c **** 	#define FLOAT_OR_DOUBLE float
  92:App/STM32F4-Discovery/printf_my.c **** #else
  93:App/STM32F4-Discovery/printf_my.c **** 	#define FLOAT_OR_DOUBLE double
  94:App/STM32F4-Discovery/printf_my.c **** #endif
  95:App/STM32F4-Discovery/printf_my.c **** 
  96:App/STM32F4-Discovery/printf_my.c **** #if defined TEST_PRINTF && !defined TEST_EMBEDDED
  97:App/STM32F4-Discovery/printf_my.c **** 	#define TEST_NON_EMBEDDED 1
  98:App/STM32F4-Discovery/printf_my.c **** #else
  99:App/STM32F4-Discovery/printf_my.c **** 	#define TEST_NON_EMBEDDED 0
 100:App/STM32F4-Discovery/printf_my.c **** #endif
 101:App/STM32F4-Discovery/printf_my.c **** 
 102:App/STM32F4-Discovery/printf_my.c **** //lint -e534  Ignoring return value of function 
 103:App/STM32F4-Discovery/printf_my.c **** //lint -e539  Did not expect positive indentation from line ...
 104:App/STM32F4-Discovery/printf_my.c **** //lint -e525  Negative indentation from line ...
 105:App/STM32F4-Discovery/printf_my.c **** 
 106:App/STM32F4-Discovery/printf_my.c **** typedef  unsigned char  u8 ;
 107:App/STM32F4-Discovery/printf_my.c **** typedef  unsigned int   uint ;
 108:App/STM32F4-Discovery/printf_my.c **** 
 109:App/STM32F4-Discovery/printf_my.c **** 
 110:App/STM32F4-Discovery/printf_my.c **** 
 111:App/STM32F4-Discovery/printf_my.c **** //****************************************************************************
 112:App/STM32F4-Discovery/printf_my.c **** static int printchar (
 113:App/STM32F4-Discovery/printf_my.c ****     #if USE_OSTREAM
 114:App/STM32F4-Discovery/printf_my.c ****         pb_ostream_t *stream,
 115:App/STM32F4-Discovery/printf_my.c ****     #else
 116:App/STM32F4-Discovery/printf_my.c ****         char **str,
 117:App/STM32F4-Discovery/printf_my.c ****     #endif
 118:App/STM32F4-Discovery/printf_my.c ****     int c,
 119:App/STM32F4-Discovery/printf_my.c ****     unsigned int max_output_len,
 120:App/STM32F4-Discovery/printf_my.c ****     int *cur_output_char_p)
 121:App/STM32F4-Discovery/printf_my.c **** {
  27              		.loc 1 121 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 85B0     		sub	sp, sp, #20
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 F860     		str	r0, [r7, #12]
  43 0008 B960     		str	r1, [r7, #8]
  44 000a 7A60     		str	r2, [r7, #4]
  45 000c 3B60     		str	r3, [r7]
 122:App/STM32F4-Discovery/printf_my.c ****     if (max_output_len >= 0  &&  *cur_output_char_p >= max_output_len)
  46              		.loc 1 122 0
  47 000e 3B68     		ldr	r3, [r7]
  48 0010 1B68     		ldr	r3, [r3]
  49 0012 1A46     		mov	r2, r3
  50 0014 7B68     		ldr	r3, [r7, #4]
  51 0016 9A42     		cmp	r2, r3
  52 0018 01D3     		bcc	.L2
 123:App/STM32F4-Discovery/printf_my.c ****         return PRINTF2_OK;
  53              		.loc 1 123 0
  54 001a 0023     		movs	r3, #0
  55 001c 15E0     		b	.L3
  56              	.L2:
 124:App/STM32F4-Discovery/printf_my.c **** 
 125:App/STM32F4-Discovery/printf_my.c ****     #if USE_OSTREAM
 126:App/STM32F4-Discovery/printf_my.c ****     if (stream) {
 127:App/STM32F4-Discovery/printf_my.c ****         unsigned char charToWrite = c;
 128:App/STM32F4-Discovery/printf_my.c ****         bool success = pb_write(stream, &charToWrite, 1);
 129:App/STM32F4-Discovery/printf_my.c ****         if (!success)
 130:App/STM32F4-Discovery/printf_my.c ****             return PRINTF2_WRITE_ERR;
 131:App/STM32F4-Discovery/printf_my.c ****         (*cur_output_char_p)++ ;
 132:App/STM32F4-Discovery/printf_my.c ****     }
 133:App/STM32F4-Discovery/printf_my.c ****     #else
 134:App/STM32F4-Discovery/printf_my.c ****     if (str) {
  57              		.loc 1 134 0
  58 001e FB68     		ldr	r3, [r7, #12]
  59 0020 002B     		cmp	r3, #0
  60 0022 10D0     		beq	.L4
 135:App/STM32F4-Discovery/printf_my.c ****         **str = (char) c;
  61              		.loc 1 135 0
  62 0024 FB68     		ldr	r3, [r7, #12]
  63 0026 1B68     		ldr	r3, [r3]
  64 0028 BA68     		ldr	r2, [r7, #8]
  65 002a D2B2     		uxtb	r2, r2
  66 002c 1A70     		strb	r2, [r3]
 136:App/STM32F4-Discovery/printf_my.c ****         ++(*str);
  67              		.loc 1 136 0
  68 002e FB68     		ldr	r3, [r7, #12]
  69 0030 1B68     		ldr	r3, [r3]
  70 0032 5A1C     		adds	r2, r3, #1
  71 0034 FB68     		ldr	r3, [r7, #12]
  72 0036 1A60     		str	r2, [r3]
 137:App/STM32F4-Discovery/printf_my.c ****         (*cur_output_char_p)++ ;
  73              		.loc 1 137 0
  74 0038 3B68     		ldr	r3, [r7]
  75 003a 1B68     		ldr	r3, [r3]
  76 003c 5A1C     		adds	r2, r3, #1
  77 003e 3B68     		ldr	r3, [r7]
  78 0040 1A60     		str	r2, [r3]
 138:App/STM32F4-Discovery/printf_my.c ****     }
 139:App/STM32F4-Discovery/printf_my.c ****     #endif
 140:App/STM32F4-Discovery/printf_my.c **** 
 141:App/STM32F4-Discovery/printf_my.c **** #if TEST_NON_EMBEDDED
 142:App/STM32F4-Discovery/printf_my.c ****     else if (TEST_NON_EMBEDDED) {
 143:App/STM32F4-Discovery/printf_my.c ****         (*cur_output_char_p)++ ;
 144:App/STM32F4-Discovery/printf_my.c ****         (void) putchar (c);
 145:App/STM32F4-Discovery/printf_my.c ****     }
 146:App/STM32F4-Discovery/printf_my.c **** #endif
 147:App/STM32F4-Discovery/printf_my.c ****     else return PRINTF2_NULL_PTR;
 148:App/STM32F4-Discovery/printf_my.c **** 
 149:App/STM32F4-Discovery/printf_my.c ****     return PRINTF2_OK;
  79              		.loc 1 149 0
  80 0042 0023     		movs	r3, #0
  81 0044 01E0     		b	.L3
  82              	.L4:
 147:App/STM32F4-Discovery/printf_my.c ****     else return PRINTF2_NULL_PTR;
  83              		.loc 1 147 0
  84 0046 6FF00103 		mvn	r3, #1
  85              	.L3:
 150:App/STM32F4-Discovery/printf_my.c **** }
  86              		.loc 1 150 0
  87 004a 1846     		mov	r0, r3
  88 004c 1437     		adds	r7, r7, #20
  89 004e BD46     		mov	sp, r7
  90              		@ sp needed
  91 0050 5DF8047B 		ldr	r7, [sp], #4
  92 0054 7047     		bx	lr
  93              		.cfi_endproc
  94              	.LFE0:
  96 0056 00BF     		.section	.rodata.round_nums,"a",%progbits
  97              		.align	3
 100              	round_nums:
 101 0000 00000000 		.word	0
 102 0004 0000E03F 		.word	1071644672
 103 0008 000000A0 		.word	2684354560
 104 000c 9999A93F 		.word	1068079513
 105 0010 00000040 		.word	1073741824
 106 0014 E17A743F 		.word	1064598241
 107 0018 000000E0 		.word	3758096384
 108 001c 4D62403F 		.word	1061184077
 109 0020 000000E0 		.word	3758096384
 110 0024 E2360A3F 		.word	1057634018
 111 0028 00000080 		.word	2147483648
 112 002c B5F8D43E 		.word	1054144693
 113 0030 000000A0 		.word	2684354560
 114 0034 F7C6A03E 		.word	1050724087
 115 0038 000000A0 		.word	2684354560
 116 003c F2D76A3E 		.word	1047189490
 117              		.global	__aeabi_dcmplt
 118              		.global	__aeabi_dadd
 119              		.global	__aeabi_d2uiz
 120              		.global	__aeabi_ui2d
 121              		.global	__aeabi_dsub
 122              		.global	__aeabi_dmul
 123              		.section	.text.fltordbl2stri,"ax",%progbits
 124              		.align	2
 125              		.thumb
 126              		.thumb_func
 128              	fltordbl2stri:
 129              	.LFB1:
 151:App/STM32F4-Discovery/printf_my.c **** 
 152:App/STM32F4-Discovery/printf_my.c **** //****************************************************************************
 153:App/STM32F4-Discovery/printf_my.c **** //  This version returns the length of the output string.
 154:App/STM32F4-Discovery/printf_my.c **** //  It is more useful when implementing a walking-string function.
 155:App/STM32F4-Discovery/printf_my.c **** //****************************************************************************
 156:App/STM32F4-Discovery/printf_my.c **** //lint -esym(728, round_nums)
 157:App/STM32F4-Discovery/printf_my.c **** static const FLOAT_OR_DOUBLE round_nums[8] = {
 158:App/STM32F4-Discovery/printf_my.c ****         0.5,
 159:App/STM32F4-Discovery/printf_my.c ****         0.05,
 160:App/STM32F4-Discovery/printf_my.c ****         0.005,
 161:App/STM32F4-Discovery/printf_my.c ****         0.0005,
 162:App/STM32F4-Discovery/printf_my.c ****         0.00005,
 163:App/STM32F4-Discovery/printf_my.c ****         0.000005,
 164:App/STM32F4-Discovery/printf_my.c ****         0.0000005,
 165:App/STM32F4-Discovery/printf_my.c ****         0.00000005
 166:App/STM32F4-Discovery/printf_my.c **** } ;
 167:App/STM32F4-Discovery/printf_my.c **** 
 168:App/STM32F4-Discovery/printf_my.c **** static unsigned fltordbl2stri(char *outbfr, FLOAT_OR_DOUBLE flt_or_dbl, unsigned dec_digits, int us
 169:App/STM32F4-Discovery/printf_my.c **** {
 130              		.loc 1 169 0
 131              		.cfi_startproc
 132              		@ args = 8, pretend = 0, frame = 80
 133              		@ frame_needed = 1, uses_anonymous_args = 0
 134 0000 B0B5     		push	{r4, r5, r7, lr}
 135              	.LCFI3:
 136              		.cfi_def_cfa_offset 16
 137              		.cfi_offset 4, -16
 138              		.cfi_offset 5, -12
 139              		.cfi_offset 7, -8
 140              		.cfi_offset 14, -4
 141 0002 94B0     		sub	sp, sp, #80
 142              	.LCFI4:
 143              		.cfi_def_cfa_offset 96
 144 0004 00AF     		add	r7, sp, #0
 145              	.LCFI5:
 146              		.cfi_def_cfa_register 7
 147 0006 F860     		str	r0, [r7, #12]
 148 0008 C7E90023 		strd	r2, [r7]
 170:App/STM32F4-Discovery/printf_my.c ****     static char local_bfr[128] ;
 171:App/STM32F4-Discovery/printf_my.c ****     char *output = (outbfr == 0) ? local_bfr : outbfr ;
 149              		.loc 1 171 0
 150 000c FB68     		ldr	r3, [r7, #12]
 151 000e 002B     		cmp	r3, #0
 152 0010 01D0     		beq	.L7
 153              		.loc 1 171 0 is_stmt 0 discriminator 1
 154 0012 FB68     		ldr	r3, [r7, #12]
 155 0014 00E0     		b	.L8
 156              	.L7:
 157              		.loc 1 171 0 discriminator 2
 158 0016 844B     		ldr	r3, .L34
 159              	.L8:
 160              		.loc 1 171 0 discriminator 3
 161 0018 FB64     		str	r3, [r7, #76]
 172:App/STM32F4-Discovery/printf_my.c **** 
 173:App/STM32F4-Discovery/printf_my.c ****     //*******************************************
 174:App/STM32F4-Discovery/printf_my.c ****     //  extract negative info
 175:App/STM32F4-Discovery/printf_my.c ****     //*******************************************
 176:App/STM32F4-Discovery/printf_my.c ****     if (flt_or_dbl < 0.0) {
 162              		.loc 1 176 0 is_stmt 1 discriminator 3
 163 001a D7E90001 		ldrd	r0, [r7]
 164 001e 4FF00002 		mov	r2, #0
 165 0022 4FF00003 		mov	r3, #0
 166 0026 FFF7FEFF 		bl	__aeabi_dcmplt
 167 002a 0346     		mov	r3, r0
 168 002c 002B     		cmp	r3, #0
 169 002e 0BD0     		beq	.L33
 177:App/STM32F4-Discovery/printf_my.c ****         *output++ = '-' ;
 170              		.loc 1 177 0
 171 0030 FB6C     		ldr	r3, [r7, #76]
 172 0032 5A1C     		adds	r2, r3, #1
 173 0034 FA64     		str	r2, [r7, #76]
 174 0036 2D22     		movs	r2, #45
 175 0038 1A70     		strb	r2, [r3]
 178:App/STM32F4-Discovery/printf_my.c ****         flt_or_dbl *= -1.0 ;
 176              		.loc 1 178 0
 177 003a 3B68     		ldr	r3, [r7]
 178 003c 3B60     		str	r3, [r7]
 179 003e 7B68     		ldr	r3, [r7, #4]
 180 0040 83F00043 		eor	r3, r3, #-2147483648
 181 0044 7B60     		str	r3, [r7, #4]
 182 0046 07E0     		b	.L11
 183              	.L33:
 179:App/STM32F4-Discovery/printf_my.c ****     } else {
 180:App/STM32F4-Discovery/printf_my.c ****         if (use_leading_plus) {
 184              		.loc 1 180 0
 185 0048 7B6E     		ldr	r3, [r7, #100]
 186 004a 002B     		cmp	r3, #0
 187 004c 04D0     		beq	.L11
 181:App/STM32F4-Discovery/printf_my.c ****             *output++ = '+' ;
 188              		.loc 1 181 0
 189 004e FB6C     		ldr	r3, [r7, #76]
 190 0050 5A1C     		adds	r2, r3, #1
 191 0052 FA64     		str	r2, [r7, #76]
 192 0054 2B22     		movs	r2, #43
 193 0056 1A70     		strb	r2, [r3]
 194              	.L11:
 182:App/STM32F4-Discovery/printf_my.c ****         }
 183:App/STM32F4-Discovery/printf_my.c **** 
 184:App/STM32F4-Discovery/printf_my.c ****     }
 185:App/STM32F4-Discovery/printf_my.c **** 
 186:App/STM32F4-Discovery/printf_my.c ****     //  handling rounding by adding .5LSB to the floating-point data
 187:App/STM32F4-Discovery/printf_my.c ****     if (dec_digits < 8) {
 195              		.loc 1 187 0
 196 0058 3B6E     		ldr	r3, [r7, #96]
 197 005a 072B     		cmp	r3, #7
 198 005c 0DD8     		bhi	.L12
 188:App/STM32F4-Discovery/printf_my.c ****         flt_or_dbl += round_nums[dec_digits] ;
 199              		.loc 1 188 0
 200 005e 734A     		ldr	r2, .L34+4
 201 0060 3B6E     		ldr	r3, [r7, #96]
 202 0062 DB00     		lsls	r3, r3, #3
 203 0064 1344     		add	r3, r3, r2
 204 0066 D3E90023 		ldrd	r2, [r3]
 205 006a D7E90001 		ldrd	r0, [r7]
 206 006e FFF7FEFF 		bl	__aeabi_dadd
 207 0072 0246     		mov	r2, r0
 208 0074 0B46     		mov	r3, r1
 209 0076 C7E90023 		strd	r2, [r7]
 210              	.L12:
 189:App/STM32F4-Discovery/printf_my.c ****     }
 190:App/STM32F4-Discovery/printf_my.c **** 
 191:App/STM32F4-Discovery/printf_my.c ****     //**************************************************************************
 192:App/STM32F4-Discovery/printf_my.c ****     //  construct fractional multiplier for specified number of digits.
 193:App/STM32F4-Discovery/printf_my.c ****     //**************************************************************************
 194:App/STM32F4-Discovery/printf_my.c ****     uint mult = 1 ;
 211              		.loc 1 194 0
 212 007a 0123     		movs	r3, #1
 213 007c BB64     		str	r3, [r7, #72]
 195:App/STM32F4-Discovery/printf_my.c ****     uint idx ;
 196:App/STM32F4-Discovery/printf_my.c ****     for (idx=0; idx < dec_digits; idx++)
 214              		.loc 1 196 0
 215 007e 0023     		movs	r3, #0
 216 0080 7B64     		str	r3, [r7, #68]
 217 0082 08E0     		b	.L13
 218              	.L14:
 197:App/STM32F4-Discovery/printf_my.c ****         mult *= 10 ;
 219              		.loc 1 197 0 discriminator 2
 220 0084 BA6C     		ldr	r2, [r7, #72]
 221 0086 1346     		mov	r3, r2
 222 0088 9B00     		lsls	r3, r3, #2
 223 008a 1344     		add	r3, r3, r2
 224 008c 5B00     		lsls	r3, r3, #1
 225 008e BB64     		str	r3, [r7, #72]
 196:App/STM32F4-Discovery/printf_my.c ****     for (idx=0; idx < dec_digits; idx++)
 226              		.loc 1 196 0 discriminator 2
 227 0090 7B6C     		ldr	r3, [r7, #68]
 228 0092 0133     		adds	r3, r3, #1
 229 0094 7B64     		str	r3, [r7, #68]
 230              	.L13:
 196:App/STM32F4-Discovery/printf_my.c ****     for (idx=0; idx < dec_digits; idx++)
 231              		.loc 1 196 0 is_stmt 0 discriminator 1
 232 0096 7A6C     		ldr	r2, [r7, #68]
 233 0098 3B6E     		ldr	r3, [r7, #96]
 234 009a 9A42     		cmp	r2, r3
 235 009c F2D3     		bcc	.L14
 198:App/STM32F4-Discovery/printf_my.c **** 
 199:App/STM32F4-Discovery/printf_my.c ****     // printf("mult=%u\n", mult) ;
 200:App/STM32F4-Discovery/printf_my.c ****     uint wholeNum = (uint) flt_or_dbl ;
 236              		.loc 1 200 0 is_stmt 1
 237 009e D7E90001 		ldrd	r0, [r7]
 238 00a2 FFF7FEFF 		bl	__aeabi_d2uiz
 239 00a6 0346     		mov	r3, r0
 240 00a8 3B64     		str	r3, [r7, #64]
 201:App/STM32F4-Discovery/printf_my.c ****     uint decimalNum = (uint) ((flt_or_dbl - wholeNum) * mult);
 241              		.loc 1 201 0
 242 00aa 386C     		ldr	r0, [r7, #64]
 243 00ac FFF7FEFF 		bl	__aeabi_ui2d
 244 00b0 0246     		mov	r2, r0
 245 00b2 0B46     		mov	r3, r1
 246 00b4 D7E90001 		ldrd	r0, [r7]
 247 00b8 FFF7FEFF 		bl	__aeabi_dsub
 248 00bc 0246     		mov	r2, r0
 249 00be 0B46     		mov	r3, r1
 250 00c0 1446     		mov	r4, r2
 251 00c2 1D46     		mov	r5, r3
 252 00c4 B86C     		ldr	r0, [r7, #72]
 253 00c6 FFF7FEFF 		bl	__aeabi_ui2d
 254 00ca 0246     		mov	r2, r0
 255 00cc 0B46     		mov	r3, r1
 256 00ce 2046     		mov	r0, r4
 257 00d0 2946     		mov	r1, r5
 258 00d2 FFF7FEFF 		bl	__aeabi_dmul
 259 00d6 0246     		mov	r2, r0
 260 00d8 0B46     		mov	r3, r1
 261 00da 1046     		mov	r0, r2
 262 00dc 1946     		mov	r1, r3
 263 00de FFF7FEFF 		bl	__aeabi_d2uiz
 264 00e2 0346     		mov	r3, r0
 265 00e4 FB63     		str	r3, [r7, #60]
 202:App/STM32F4-Discovery/printf_my.c **** 
 203:App/STM32F4-Discovery/printf_my.c ****     //*******************************************
 204:App/STM32F4-Discovery/printf_my.c ****     //  convert integer portion
 205:App/STM32F4-Discovery/printf_my.c ****     //*******************************************
 206:App/STM32F4-Discovery/printf_my.c ****     char tbfr[40] ;
 207:App/STM32F4-Discovery/printf_my.c ****     idx = 0 ;
 266              		.loc 1 207 0
 267 00e6 0023     		movs	r3, #0
 268 00e8 7B64     		str	r3, [r7, #68]
 208:App/STM32F4-Discovery/printf_my.c ****     while (wholeNum != 0) {
 269              		.loc 1 208 0
 270 00ea 1AE0     		b	.L15
 271              	.L16:
 209:App/STM32F4-Discovery/printf_my.c ****         tbfr[idx++] = '0' + (wholeNum % 10) ;
 272              		.loc 1 209 0
 273 00ec 796C     		ldr	r1, [r7, #68]
 274 00ee 4B1C     		adds	r3, r1, #1
 275 00f0 7B64     		str	r3, [r7, #68]
 276 00f2 386C     		ldr	r0, [r7, #64]
 277 00f4 4E4B     		ldr	r3, .L34+8
 278 00f6 A3FB0023 		umull	r2, r3, r3, r0
 279 00fa DA08     		lsrs	r2, r3, #3
 280 00fc 1346     		mov	r3, r2
 281 00fe 9B00     		lsls	r3, r3, #2
 282 0100 1344     		add	r3, r3, r2
 283 0102 5B00     		lsls	r3, r3, #1
 284 0104 C21A     		subs	r2, r0, r3
 285 0106 D3B2     		uxtb	r3, r2
 286 0108 3033     		adds	r3, r3, #48
 287 010a DAB2     		uxtb	r2, r3
 288 010c 07F15003 		add	r3, r7, #80
 289 0110 0B44     		add	r3, r3, r1
 290 0112 03F83C2C 		strb	r2, [r3, #-60]
 210:App/STM32F4-Discovery/printf_my.c ****         wholeNum /= 10 ;
 291              		.loc 1 210 0
 292 0116 3A6C     		ldr	r2, [r7, #64]
 293 0118 454B     		ldr	r3, .L34+8
 294 011a A3FB0213 		umull	r1, r3, r3, r2
 295 011e DB08     		lsrs	r3, r3, #3
 296 0120 3B64     		str	r3, [r7, #64]
 297              	.L15:
 208:App/STM32F4-Discovery/printf_my.c ****     while (wholeNum != 0) {
 298              		.loc 1 208 0 discriminator 1
 299 0122 3B6C     		ldr	r3, [r7, #64]
 300 0124 002B     		cmp	r3, #0
 301 0126 E1D1     		bne	.L16
 211:App/STM32F4-Discovery/printf_my.c ****     }
 212:App/STM32F4-Discovery/printf_my.c ****     // printf("%.3f: whole=%s, dec=%d\n", dbl, tbfr, decimalNum) ;
 213:App/STM32F4-Discovery/printf_my.c ****     if (idx == 0) {
 302              		.loc 1 213 0
 303 0128 7B6C     		ldr	r3, [r7, #68]
 304 012a 002B     		cmp	r3, #0
 305 012c 05D1     		bne	.L17
 214:App/STM32F4-Discovery/printf_my.c ****         *output++ = '0' ;
 306              		.loc 1 214 0
 307 012e FB6C     		ldr	r3, [r7, #76]
 308 0130 5A1C     		adds	r2, r3, #1
 309 0132 FA64     		str	r2, [r7, #76]
 310 0134 3022     		movs	r2, #48
 311 0136 1A70     		strb	r2, [r3]
 312 0138 11E0     		b	.L18
 313              	.L17:
 215:App/STM32F4-Discovery/printf_my.c ****     } else {
 216:App/STM32F4-Discovery/printf_my.c ****         while (idx > 0) {
 314              		.loc 1 216 0
 315 013a 0DE0     		b	.L19
 316              	.L20:
 217:App/STM32F4-Discovery/printf_my.c ****             *output++ = tbfr[idx-1] ;  //lint !e771
 317              		.loc 1 217 0
 318 013c FB6C     		ldr	r3, [r7, #76]
 319 013e 5A1C     		adds	r2, r3, #1
 320 0140 FA64     		str	r2, [r7, #76]
 321 0142 7A6C     		ldr	r2, [r7, #68]
 322 0144 013A     		subs	r2, r2, #1
 323 0146 07F15001 		add	r1, r7, #80
 324 014a 0A44     		add	r2, r2, r1
 325 014c 12F83C2C 		ldrb	r2, [r2, #-60]	@ zero_extendqisi2
 326 0150 1A70     		strb	r2, [r3]
 218:App/STM32F4-Discovery/printf_my.c ****             idx-- ;
 327              		.loc 1 218 0
 328 0152 7B6C     		ldr	r3, [r7, #68]
 329 0154 013B     		subs	r3, r3, #1
 330 0156 7B64     		str	r3, [r7, #68]
 331              	.L19:
 216:App/STM32F4-Discovery/printf_my.c ****         while (idx > 0) {
 332              		.loc 1 216 0 discriminator 1
 333 0158 7B6C     		ldr	r3, [r7, #68]
 334 015a 002B     		cmp	r3, #0
 335 015c EED1     		bne	.L20
 336              	.L18:
 219:App/STM32F4-Discovery/printf_my.c ****         }
 220:App/STM32F4-Discovery/printf_my.c ****     }
 221:App/STM32F4-Discovery/printf_my.c ****     if (dec_digits > 0) {
 337              		.loc 1 221 0
 338 015e 3B6E     		ldr	r3, [r7, #96]
 339 0160 002B     		cmp	r3, #0
 340 0162 4ED0     		beq	.L21
 222:App/STM32F4-Discovery/printf_my.c ****         *output++ = '.' ;
 341              		.loc 1 222 0
 342 0164 FB6C     		ldr	r3, [r7, #76]
 343 0166 5A1C     		adds	r2, r3, #1
 344 0168 FA64     		str	r2, [r7, #76]
 345 016a 2E22     		movs	r2, #46
 346 016c 1A70     		strb	r2, [r3]
 223:App/STM32F4-Discovery/printf_my.c **** 
 224:App/STM32F4-Discovery/printf_my.c ****         //*******************************************
 225:App/STM32F4-Discovery/printf_my.c ****         //  convert fractional portion
 226:App/STM32F4-Discovery/printf_my.c ****         //*******************************************
 227:App/STM32F4-Discovery/printf_my.c ****         idx = 0 ;
 347              		.loc 1 227 0
 348 016e 0023     		movs	r3, #0
 349 0170 7B64     		str	r3, [r7, #68]
 228:App/STM32F4-Discovery/printf_my.c ****         while (decimalNum != 0) {
 350              		.loc 1 228 0
 351 0172 1AE0     		b	.L22
 352              	.L23:
 229:App/STM32F4-Discovery/printf_my.c ****             tbfr[idx++] = '0' + (decimalNum % 10) ;
 353              		.loc 1 229 0
 354 0174 796C     		ldr	r1, [r7, #68]
 355 0176 4B1C     		adds	r3, r1, #1
 356 0178 7B64     		str	r3, [r7, #68]
 357 017a F86B     		ldr	r0, [r7, #60]
 358 017c 2C4B     		ldr	r3, .L34+8
 359 017e A3FB0023 		umull	r2, r3, r3, r0
 360 0182 DA08     		lsrs	r2, r3, #3
 361 0184 1346     		mov	r3, r2
 362 0186 9B00     		lsls	r3, r3, #2
 363 0188 1344     		add	r3, r3, r2
 364 018a 5B00     		lsls	r3, r3, #1
 365 018c C21A     		subs	r2, r0, r3
 366 018e D3B2     		uxtb	r3, r2
 367 0190 3033     		adds	r3, r3, #48
 368 0192 DAB2     		uxtb	r2, r3
 369 0194 07F15003 		add	r3, r7, #80
 370 0198 0B44     		add	r3, r3, r1
 371 019a 03F83C2C 		strb	r2, [r3, #-60]
 230:App/STM32F4-Discovery/printf_my.c ****             decimalNum /= 10 ;
 372              		.loc 1 230 0
 373 019e FA6B     		ldr	r2, [r7, #60]
 374 01a0 234B     		ldr	r3, .L34+8
 375 01a2 A3FB0213 		umull	r1, r3, r3, r2
 376 01a6 DB08     		lsrs	r3, r3, #3
 377 01a8 FB63     		str	r3, [r7, #60]
 378              	.L22:
 228:App/STM32F4-Discovery/printf_my.c ****         while (decimalNum != 0) {
 379              		.loc 1 228 0 discriminator 1
 380 01aa FB6B     		ldr	r3, [r7, #60]
 381 01ac 002B     		cmp	r3, #0
 382 01ae E1D1     		bne	.L23
 231:App/STM32F4-Discovery/printf_my.c ****         }
 232:App/STM32F4-Discovery/printf_my.c ****         //  pad the decimal portion with 0s as necessary;
 233:App/STM32F4-Discovery/printf_my.c ****         //  We wouldn't want to report 3.093 as 3.93, would we??
 234:App/STM32F4-Discovery/printf_my.c ****         while (idx < dec_digits) {
 383              		.loc 1 234 0
 384 01b0 08E0     		b	.L24
 385              	.L25:
 235:App/STM32F4-Discovery/printf_my.c ****             tbfr[idx++] = '0' ;
 386              		.loc 1 235 0
 387 01b2 7B6C     		ldr	r3, [r7, #68]
 388 01b4 5A1C     		adds	r2, r3, #1
 389 01b6 7A64     		str	r2, [r7, #68]
 390 01b8 07F15002 		add	r2, r7, #80
 391 01bc 1344     		add	r3, r3, r2
 392 01be 3022     		movs	r2, #48
 393 01c0 03F83C2C 		strb	r2, [r3, #-60]
 394              	.L24:
 234:App/STM32F4-Discovery/printf_my.c ****         while (idx < dec_digits) {
 395              		.loc 1 234 0 discriminator 1
 396 01c4 7A6C     		ldr	r2, [r7, #68]
 397 01c6 3B6E     		ldr	r3, [r7, #96]
 398 01c8 9A42     		cmp	r2, r3
 399 01ca F2D3     		bcc	.L25
 236:App/STM32F4-Discovery/printf_my.c ****         }
 237:App/STM32F4-Discovery/printf_my.c ****         // printf("decimal=%s\n", tbfr) ;
 238:App/STM32F4-Discovery/printf_my.c ****         if (idx == 0) {
 400              		.loc 1 238 0
 401 01cc 7B6C     		ldr	r3, [r7, #68]
 402 01ce 002B     		cmp	r3, #0
 403 01d0 05D1     		bne	.L26
 239:App/STM32F4-Discovery/printf_my.c ****             *output++ = '0' ;
 404              		.loc 1 239 0
 405 01d2 FB6C     		ldr	r3, [r7, #76]
 406 01d4 5A1C     		adds	r2, r3, #1
 407 01d6 FA64     		str	r2, [r7, #76]
 408 01d8 3022     		movs	r2, #48
 409 01da 1A70     		strb	r2, [r3]
 410 01dc 11E0     		b	.L21
 411              	.L26:
 240:App/STM32F4-Discovery/printf_my.c ****         } else {
 241:App/STM32F4-Discovery/printf_my.c ****             while (idx > 0) {
 412              		.loc 1 241 0
 413 01de 0DE0     		b	.L27
 414              	.L28:
 242:App/STM32F4-Discovery/printf_my.c ****                 *output++ = tbfr[idx-1] ;
 415              		.loc 1 242 0
 416 01e0 FB6C     		ldr	r3, [r7, #76]
 417 01e2 5A1C     		adds	r2, r3, #1
 418 01e4 FA64     		str	r2, [r7, #76]
 419 01e6 7A6C     		ldr	r2, [r7, #68]
 420 01e8 013A     		subs	r2, r2, #1
 421 01ea 07F15001 		add	r1, r7, #80
 422 01ee 0A44     		add	r2, r2, r1
 423 01f0 12F83C2C 		ldrb	r2, [r2, #-60]	@ zero_extendqisi2
 424 01f4 1A70     		strb	r2, [r3]
 243:App/STM32F4-Discovery/printf_my.c ****                 idx-- ;
 425              		.loc 1 243 0
 426 01f6 7B6C     		ldr	r3, [r7, #68]
 427 01f8 013B     		subs	r3, r3, #1
 428 01fa 7B64     		str	r3, [r7, #68]
 429              	.L27:
 241:App/STM32F4-Discovery/printf_my.c ****             while (idx > 0) {
 430              		.loc 1 241 0 discriminator 1
 431 01fc 7B6C     		ldr	r3, [r7, #68]
 432 01fe 002B     		cmp	r3, #0
 433 0200 EED1     		bne	.L28
 434              	.L21:
 244:App/STM32F4-Discovery/printf_my.c ****             }
 245:App/STM32F4-Discovery/printf_my.c ****         }
 246:App/STM32F4-Discovery/printf_my.c ****     }
 247:App/STM32F4-Discovery/printf_my.c ****     *output = 0 ;
 435              		.loc 1 247 0
 436 0202 FB6C     		ldr	r3, [r7, #76]
 437 0204 0022     		movs	r2, #0
 438 0206 1A70     		strb	r2, [r3]
 248:App/STM32F4-Discovery/printf_my.c **** 
 249:App/STM32F4-Discovery/printf_my.c ****     //  prepare output
 250:App/STM32F4-Discovery/printf_my.c ****     output = (outbfr == 0) ? local_bfr : outbfr ;
 439              		.loc 1 250 0
 440 0208 FB68     		ldr	r3, [r7, #12]
 441 020a 002B     		cmp	r3, #0
 442 020c 01D0     		beq	.L29
 443              		.loc 1 250 0 is_stmt 0 discriminator 1
 444 020e FB68     		ldr	r3, [r7, #12]
 445 0210 00E0     		b	.L30
 446              	.L29:
 447              		.loc 1 250 0 discriminator 2
 448 0212 054B     		ldr	r3, .L34
 449              	.L30:
 450              		.loc 1 250 0 discriminator 3
 451 0214 FB64     		str	r3, [r7, #76]
 251:App/STM32F4-Discovery/printf_my.c **** 
 252:App/STM32F4-Discovery/printf_my.c ****     return strlen(output) ;
 452              		.loc 1 252 0 is_stmt 1 discriminator 3
 453 0216 F86C     		ldr	r0, [r7, #76]
 454 0218 FFF7FEFF 		bl	strlen
 455 021c 0346     		mov	r3, r0
 253:App/STM32F4-Discovery/printf_my.c **** }
 456              		.loc 1 253 0 discriminator 3
 457 021e 1846     		mov	r0, r3
 458 0220 5037     		adds	r7, r7, #80
 459 0222 BD46     		mov	sp, r7
 460              		@ sp needed
 461 0224 B0BD     		pop	{r4, r5, r7, pc}
 462              	.L35:
 463 0226 00BF     		.align	2
 464              	.L34:
 465 0228 00000000 		.word	local_bfr.4113
 466 022c 00000000 		.word	round_nums
 467 0230 CDCCCCCC 		.word	-858993459
 468              		.cfi_endproc
 469              	.LFE1:
 471              		.section	.text.prints,"ax",%progbits
 472              		.align	2
 473              		.thumb
 474              		.thumb_func
 476              	prints:
 477              	.LFB2:
 254:App/STM32F4-Discovery/printf_my.c **** 
 255:App/STM32F4-Discovery/printf_my.c **** //****************************************************************************
 256:App/STM32F4-Discovery/printf_my.c **** #define  PAD_RIGHT   1
 257:App/STM32F4-Discovery/printf_my.c **** #define  PAD_ZERO    2
 258:App/STM32F4-Discovery/printf_my.c **** 
 259:App/STM32F4-Discovery/printf_my.c **** static int prints (
 260:App/STM32F4-Discovery/printf_my.c ****                      #if USE_OSTREAM
 261:App/STM32F4-Discovery/printf_my.c ****                          pb_ostream_t *stream,
 262:App/STM32F4-Discovery/printf_my.c ****                      #else
 263:App/STM32F4-Discovery/printf_my.c ****                          char **out,
 264:App/STM32F4-Discovery/printf_my.c ****                      #endif
 265:App/STM32F4-Discovery/printf_my.c ****                      const char *string, int width, int pad,
 266:App/STM32F4-Discovery/printf_my.c ****                      unsigned int max_output_len, int *cur_output_char_p)
 267:App/STM32F4-Discovery/printf_my.c **** {
 478              		.loc 1 267 0
 479              		.cfi_startproc
 480              		@ args = 8, pretend = 0, frame = 40
 481              		@ frame_needed = 1, uses_anonymous_args = 0
 482 0000 B0B5     		push	{r4, r5, r7, lr}
 483              	.LCFI6:
 484              		.cfi_def_cfa_offset 16
 485              		.cfi_offset 4, -16
 486              		.cfi_offset 5, -12
 487              		.cfi_offset 7, -8
 488              		.cfi_offset 14, -4
 489 0002 8AB0     		sub	sp, sp, #40
 490              	.LCFI7:
 491              		.cfi_def_cfa_offset 56
 492 0004 00AF     		add	r7, sp, #0
 493              	.LCFI8:
 494              		.cfi_def_cfa_register 7
 495 0006 F860     		str	r0, [r7, #12]
 496 0008 B960     		str	r1, [r7, #8]
 497 000a 7A60     		str	r2, [r7, #4]
 498 000c 3B60     		str	r3, [r7]
 268:App/STM32F4-Discovery/printf_my.c ****     register int pc = 0, padchar = ' ';
 499              		.loc 1 268 0
 500 000e 0024     		movs	r4, #0
 501 0010 2025     		movs	r5, #32
 269:App/STM32F4-Discovery/printf_my.c ****     if (width > 0) {
 502              		.loc 1 269 0
 503 0012 7B68     		ldr	r3, [r7, #4]
 504 0014 002B     		cmp	r3, #0
 505 0016 1FDD     		ble	.L37
 506              	.LBB2:
 270:App/STM32F4-Discovery/printf_my.c ****         int len = 0;
 507              		.loc 1 270 0
 508 0018 0023     		movs	r3, #0
 509 001a 7B62     		str	r3, [r7, #36]
 271:App/STM32F4-Discovery/printf_my.c ****         const char *ptr;
 272:App/STM32F4-Discovery/printf_my.c ****         for (ptr = string; *ptr; ++ptr)
 510              		.loc 1 272 0
 511 001c BB68     		ldr	r3, [r7, #8]
 512 001e 3B62     		str	r3, [r7, #32]
 513 0020 05E0     		b	.L38
 514              	.L39:
 273:App/STM32F4-Discovery/printf_my.c ****             ++len;
 515              		.loc 1 273 0 discriminator 2
 516 0022 7B6A     		ldr	r3, [r7, #36]
 517 0024 0133     		adds	r3, r3, #1
 518 0026 7B62     		str	r3, [r7, #36]
 272:App/STM32F4-Discovery/printf_my.c ****         for (ptr = string; *ptr; ++ptr)
 519              		.loc 1 272 0 discriminator 2
 520 0028 3B6A     		ldr	r3, [r7, #32]
 521 002a 0133     		adds	r3, r3, #1
 522 002c 3B62     		str	r3, [r7, #32]
 523              	.L38:
 272:App/STM32F4-Discovery/printf_my.c ****         for (ptr = string; *ptr; ++ptr)
 524              		.loc 1 272 0 is_stmt 0 discriminator 1
 525 002e 3B6A     		ldr	r3, [r7, #32]
 526 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 527 0032 002B     		cmp	r3, #0
 528 0034 F5D1     		bne	.L39
 274:App/STM32F4-Discovery/printf_my.c ****         if (len >= width)
 529              		.loc 1 274 0 is_stmt 1
 530 0036 7A6A     		ldr	r2, [r7, #36]
 531 0038 7B68     		ldr	r3, [r7, #4]
 532 003a 9A42     		cmp	r2, r3
 533 003c 02DB     		blt	.L40
 275:App/STM32F4-Discovery/printf_my.c ****             width = 0;
 534              		.loc 1 275 0
 535 003e 0023     		movs	r3, #0
 536 0040 7B60     		str	r3, [r7, #4]
 537 0042 03E0     		b	.L41
 538              	.L40:
 276:App/STM32F4-Discovery/printf_my.c ****         else
 277:App/STM32F4-Discovery/printf_my.c ****             width -= len;
 539              		.loc 1 277 0
 540 0044 7A68     		ldr	r2, [r7, #4]
 541 0046 7B6A     		ldr	r3, [r7, #36]
 542 0048 D31A     		subs	r3, r2, r3
 543 004a 7B60     		str	r3, [r7, #4]
 544              	.L41:
 278:App/STM32F4-Discovery/printf_my.c ****         if (pad & PAD_ZERO)
 545              		.loc 1 278 0
 546 004c 3B68     		ldr	r3, [r7]
 547 004e 03F00203 		and	r3, r3, #2
 548 0052 002B     		cmp	r3, #0
 549 0054 00D0     		beq	.L37
 279:App/STM32F4-Discovery/printf_my.c ****             padchar = '0';
 550              		.loc 1 279 0
 551 0056 3025     		movs	r5, #48
 552              	.L37:
 553              	.LBE2:
 280:App/STM32F4-Discovery/printf_my.c ****     }
 281:App/STM32F4-Discovery/printf_my.c ****     if (!(pad & PAD_RIGHT)) {
 554              		.loc 1 281 0
 555 0058 3B68     		ldr	r3, [r7]
 556 005a 03F00103 		and	r3, r3, #1
 557 005e 002B     		cmp	r3, #0
 558 0060 13D1     		bne	.L42
 282:App/STM32F4-Discovery/printf_my.c ****         for (; width > 0; --width) {
 559              		.loc 1 282 0
 560 0062 0FE0     		b	.L43
 561              	.L46:
 562              	.LBB3:
 283:App/STM32F4-Discovery/printf_my.c ****             int result = printchar (
 563              		.loc 1 283 0
 564 0064 F868     		ldr	r0, [r7, #12]
 565 0066 2946     		mov	r1, r5
 566 0068 BA6B     		ldr	r2, [r7, #56]
 567 006a FB6B     		ldr	r3, [r7, #60]
 568 006c FFF7FEFF 		bl	printchar
 569 0070 F861     		str	r0, [r7, #28]
 284:App/STM32F4-Discovery/printf_my.c ****                        #if USE_OSTREAM
 285:App/STM32F4-Discovery/printf_my.c ****                            stream,
 286:App/STM32F4-Discovery/printf_my.c ****                        #else
 287:App/STM32F4-Discovery/printf_my.c ****                            out,
 288:App/STM32F4-Discovery/printf_my.c ****                        #endif
 289:App/STM32F4-Discovery/printf_my.c ****                        padchar, max_output_len, cur_output_char_p);
 290:App/STM32F4-Discovery/printf_my.c ****             if (result <0) return result;
 570              		.loc 1 290 0
 571 0072 FB69     		ldr	r3, [r7, #28]
 572 0074 002B     		cmp	r3, #0
 573 0076 01DA     		bge	.L44
 574              		.loc 1 290 0 is_stmt 0 discriminator 1
 575 0078 FB69     		ldr	r3, [r7, #28]
 576 007a 32E0     		b	.L45
 577              	.L44:
 291:App/STM32F4-Discovery/printf_my.c ****             ++pc;
 578              		.loc 1 291 0 is_stmt 1
 579 007c 0134     		adds	r4, r4, #1
 580              	.LBE3:
 282:App/STM32F4-Discovery/printf_my.c ****         for (; width > 0; --width) {
 581              		.loc 1 282 0
 582 007e 7B68     		ldr	r3, [r7, #4]
 583 0080 013B     		subs	r3, r3, #1
 584 0082 7B60     		str	r3, [r7, #4]
 585              	.L43:
 282:App/STM32F4-Discovery/printf_my.c ****         for (; width > 0; --width) {
 586              		.loc 1 282 0 is_stmt 0 discriminator 1
 587 0084 7B68     		ldr	r3, [r7, #4]
 588 0086 002B     		cmp	r3, #0
 589 0088 ECDC     		bgt	.L46
 590              	.L42:
 292:App/STM32F4-Discovery/printf_my.c ****         }
 293:App/STM32F4-Discovery/printf_my.c ****     }
 294:App/STM32F4-Discovery/printf_my.c ****     for (; *string; ++string) {
 591              		.loc 1 294 0 is_stmt 1
 592 008a 11E0     		b	.L47
 593              	.L49:
 594              	.LBB4:
 295:App/STM32F4-Discovery/printf_my.c ****         int result = printchar (
 296:App/STM32F4-Discovery/printf_my.c ****                    #if USE_OSTREAM
 297:App/STM32F4-Discovery/printf_my.c ****                        stream,
 298:App/STM32F4-Discovery/printf_my.c ****                    #else
 299:App/STM32F4-Discovery/printf_my.c ****                        out,
 300:App/STM32F4-Discovery/printf_my.c ****                    #endif
 301:App/STM32F4-Discovery/printf_my.c ****                    *string, max_output_len, cur_output_char_p);
 595              		.loc 1 301 0
 596 008c BB68     		ldr	r3, [r7, #8]
 597 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 295:App/STM32F4-Discovery/printf_my.c ****         int result = printchar (
 598              		.loc 1 295 0
 599 0090 F868     		ldr	r0, [r7, #12]
 600 0092 1946     		mov	r1, r3
 601 0094 BA6B     		ldr	r2, [r7, #56]
 602 0096 FB6B     		ldr	r3, [r7, #60]
 603 0098 FFF7FEFF 		bl	printchar
 604 009c B861     		str	r0, [r7, #24]
 302:App/STM32F4-Discovery/printf_my.c ****         if (result < 0) return result;
 605              		.loc 1 302 0
 606 009e BB69     		ldr	r3, [r7, #24]
 607 00a0 002B     		cmp	r3, #0
 608 00a2 01DA     		bge	.L48
 609              		.loc 1 302 0 is_stmt 0 discriminator 1
 610 00a4 BB69     		ldr	r3, [r7, #24]
 611 00a6 1CE0     		b	.L45
 612              	.L48:
 303:App/STM32F4-Discovery/printf_my.c ****         ++pc;
 613              		.loc 1 303 0 is_stmt 1
 614 00a8 0134     		adds	r4, r4, #1
 615              	.LBE4:
 294:App/STM32F4-Discovery/printf_my.c ****     for (; *string; ++string) {
 616              		.loc 1 294 0
 617 00aa BB68     		ldr	r3, [r7, #8]
 618 00ac 0133     		adds	r3, r3, #1
 619 00ae BB60     		str	r3, [r7, #8]
 620              	.L47:
 294:App/STM32F4-Discovery/printf_my.c ****     for (; *string; ++string) {
 621              		.loc 1 294 0 is_stmt 0 discriminator 1
 622 00b0 BB68     		ldr	r3, [r7, #8]
 623 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 624 00b4 002B     		cmp	r3, #0
 625 00b6 E9D1     		bne	.L49
 304:App/STM32F4-Discovery/printf_my.c ****     }
 305:App/STM32F4-Discovery/printf_my.c ****     for (; width > 0; --width) {
 626              		.loc 1 305 0 is_stmt 1
 627 00b8 0FE0     		b	.L50
 628              	.L52:
 629              	.LBB5:
 306:App/STM32F4-Discovery/printf_my.c ****         int result = printchar (
 630              		.loc 1 306 0
 631 00ba F868     		ldr	r0, [r7, #12]
 632 00bc 2946     		mov	r1, r5
 633 00be BA6B     		ldr	r2, [r7, #56]
 634 00c0 FB6B     		ldr	r3, [r7, #60]
 635 00c2 FFF7FEFF 		bl	printchar
 636 00c6 7861     		str	r0, [r7, #20]
 307:App/STM32F4-Discovery/printf_my.c ****                    #if USE_OSTREAM
 308:App/STM32F4-Discovery/printf_my.c ****                        stream,
 309:App/STM32F4-Discovery/printf_my.c ****                    #else
 310:App/STM32F4-Discovery/printf_my.c ****                        out,
 311:App/STM32F4-Discovery/printf_my.c ****                    #endif
 312:App/STM32F4-Discovery/printf_my.c ****                    padchar, max_output_len,cur_output_char_p);
 313:App/STM32F4-Discovery/printf_my.c ****         if (result < 0) return result;
 637              		.loc 1 313 0
 638 00c8 7B69     		ldr	r3, [r7, #20]
 639 00ca 002B     		cmp	r3, #0
 640 00cc 01DA     		bge	.L51
 641              		.loc 1 313 0 is_stmt 0 discriminator 1
 642 00ce 7B69     		ldr	r3, [r7, #20]
 643 00d0 07E0     		b	.L45
 644              	.L51:
 314:App/STM32F4-Discovery/printf_my.c ****         ++pc;
 645              		.loc 1 314 0 is_stmt 1
 646 00d2 0134     		adds	r4, r4, #1
 647              	.LBE5:
 305:App/STM32F4-Discovery/printf_my.c ****     for (; width > 0; --width) {
 648              		.loc 1 305 0
 649 00d4 7B68     		ldr	r3, [r7, #4]
 650 00d6 013B     		subs	r3, r3, #1
 651 00d8 7B60     		str	r3, [r7, #4]
 652              	.L50:
 305:App/STM32F4-Discovery/printf_my.c ****     for (; width > 0; --width) {
 653              		.loc 1 305 0 is_stmt 0 discriminator 1
 654 00da 7B68     		ldr	r3, [r7, #4]
 655 00dc 002B     		cmp	r3, #0
 656 00de ECDC     		bgt	.L52
 315:App/STM32F4-Discovery/printf_my.c ****     }
 316:App/STM32F4-Discovery/printf_my.c ****     return pc;
 657              		.loc 1 316 0 is_stmt 1
 658 00e0 2346     		mov	r3, r4
 659              	.L45:
 317:App/STM32F4-Discovery/printf_my.c **** }
 660              		.loc 1 317 0
 661 00e2 1846     		mov	r0, r3
 662 00e4 2837     		adds	r7, r7, #40
 663 00e6 BD46     		mov	sp, r7
 664              		@ sp needed
 665 00e8 B0BD     		pop	{r4, r5, r7, pc}
 666              		.cfi_endproc
 667              	.LFE2:
 669 00ea 00BF     		.section	.text.printi,"ax",%progbits
 670              		.align	2
 671              		.thumb
 672              		.thumb_func
 674              	printi:
 675              	.LFB3:
 318:App/STM32F4-Discovery/printf_my.c **** 
 319:App/STM32F4-Discovery/printf_my.c **** //****************************************************************************
 320:App/STM32F4-Discovery/printf_my.c **** /* the following should be enough for 32 bit int */
 321:App/STM32F4-Discovery/printf_my.c **** #define PRINT_BUF_LEN 12
 322:App/STM32F4-Discovery/printf_my.c **** static int printi (
 323:App/STM32F4-Discovery/printf_my.c ****                      #if USE_OSTREAM
 324:App/STM32F4-Discovery/printf_my.c ****                          pb_ostream_t *stream,
 325:App/STM32F4-Discovery/printf_my.c ****                      #else
 326:App/STM32F4-Discovery/printf_my.c ****                          char **out,
 327:App/STM32F4-Discovery/printf_my.c ****                      #endif
 328:App/STM32F4-Discovery/printf_my.c ****                      int i, uint base, int sign, int width, int pad,
 329:App/STM32F4-Discovery/printf_my.c ****                      int letbase, unsigned int max_output_len,
 330:App/STM32F4-Discovery/printf_my.c ****                      int *cur_output_char_p, int use_leading_plus)
 331:App/STM32F4-Discovery/printf_my.c **** {
 676              		.loc 1 331 0
 677              		.cfi_startproc
 678              		@ args = 24, pretend = 0, frame = 56
 679              		@ frame_needed = 1, uses_anonymous_args = 0
 680 0000 80B5     		push	{r7, lr}
 681              	.LCFI9:
 682              		.cfi_def_cfa_offset 8
 683              		.cfi_offset 7, -8
 684              		.cfi_offset 14, -4
 685 0002 90B0     		sub	sp, sp, #64
 686              	.LCFI10:
 687              		.cfi_def_cfa_offset 72
 688 0004 02AF     		add	r7, sp, #8
 689              	.LCFI11:
 690              		.cfi_def_cfa 7, 64
 691 0006 F860     		str	r0, [r7, #12]
 692 0008 B960     		str	r1, [r7, #8]
 693 000a 7A60     		str	r2, [r7, #4]
 694 000c 3B60     		str	r3, [r7]
 332:App/STM32F4-Discovery/printf_my.c ****     char print_buf[PRINT_BUF_LEN];
 333:App/STM32F4-Discovery/printf_my.c ****     char *s;
 334:App/STM32F4-Discovery/printf_my.c ****     int t, neg = 0, pc = 0;
 695              		.loc 1 334 0
 696 000e 0023     		movs	r3, #0
 697 0010 FB62     		str	r3, [r7, #44]
 698 0012 0023     		movs	r3, #0
 699 0014 BB62     		str	r3, [r7, #40]
 335:App/STM32F4-Discovery/printf_my.c ****     unsigned u = (unsigned) i;
 700              		.loc 1 335 0
 701 0016 BB68     		ldr	r3, [r7, #8]
 702 0018 7B62     		str	r3, [r7, #36]
 336:App/STM32F4-Discovery/printf_my.c ****     if (i == 0) {
 703              		.loc 1 336 0
 704 001a BB68     		ldr	r3, [r7, #8]
 705 001c 002B     		cmp	r3, #0
 706 001e 11D1     		bne	.L54
 337:App/STM32F4-Discovery/printf_my.c ****         print_buf[0] = '0';
 707              		.loc 1 337 0
 708 0020 3023     		movs	r3, #48
 709 0022 3B74     		strb	r3, [r7, #16]
 338:App/STM32F4-Discovery/printf_my.c ****         print_buf[1] = '\0';
 710              		.loc 1 338 0
 711 0024 0023     		movs	r3, #0
 712 0026 7B74     		strb	r3, [r7, #17]
 339:App/STM32F4-Discovery/printf_my.c ****         return prints (
 713              		.loc 1 339 0
 714 0028 07F11003 		add	r3, r7, #16
 715 002c FA6C     		ldr	r2, [r7, #76]
 716 002e 0092     		str	r2, [sp]
 717 0030 3A6D     		ldr	r2, [r7, #80]
 718 0032 0192     		str	r2, [sp, #4]
 719 0034 F868     		ldr	r0, [r7, #12]
 720 0036 1946     		mov	r1, r3
 721 0038 3A6C     		ldr	r2, [r7, #64]
 722 003a 7B6C     		ldr	r3, [r7, #68]
 723 003c FFF7FEFF 		bl	prints
 724 0040 0346     		mov	r3, r0
 725 0042 79E0     		b	.L66
 726              	.L54:
 340:App/STM32F4-Discovery/printf_my.c ****                         #if USE_OSTREAM
 341:App/STM32F4-Discovery/printf_my.c ****                             stream,
 342:App/STM32F4-Discovery/printf_my.c ****                         #else
 343:App/STM32F4-Discovery/printf_my.c ****                             out,
 344:App/STM32F4-Discovery/printf_my.c ****                         #endif
 345:App/STM32F4-Discovery/printf_my.c ****                         print_buf, width, pad, max_output_len, cur_output_char_p);
 346:App/STM32F4-Discovery/printf_my.c ****     }
 347:App/STM32F4-Discovery/printf_my.c ****     if (sign && base == 10 && i < 0) {
 727              		.loc 1 347 0
 728 0044 3B68     		ldr	r3, [r7]
 729 0046 002B     		cmp	r3, #0
 730 0048 0AD0     		beq	.L56
 731              		.loc 1 347 0 is_stmt 0 discriminator 1
 732 004a 7B68     		ldr	r3, [r7, #4]
 733 004c 0A2B     		cmp	r3, #10
 734 004e 07D1     		bne	.L56
 735 0050 BB68     		ldr	r3, [r7, #8]
 736 0052 002B     		cmp	r3, #0
 737 0054 04DA     		bge	.L56
 348:App/STM32F4-Discovery/printf_my.c ****         neg = 1;
 738              		.loc 1 348 0 is_stmt 1
 739 0056 0123     		movs	r3, #1
 740 0058 FB62     		str	r3, [r7, #44]
 349:App/STM32F4-Discovery/printf_my.c ****         u = (unsigned) -i;
 741              		.loc 1 349 0
 742 005a BB68     		ldr	r3, [r7, #8]
 743 005c 5B42     		negs	r3, r3
 744 005e 7B62     		str	r3, [r7, #36]
 745              	.L56:
 350:App/STM32F4-Discovery/printf_my.c ****     }
 351:App/STM32F4-Discovery/printf_my.c ****     //  make sure print_buf is NULL-term
 352:App/STM32F4-Discovery/printf_my.c ****     s = print_buf + PRINT_BUF_LEN - 1;
 746              		.loc 1 352 0
 747 0060 07F11003 		add	r3, r7, #16
 748 0064 0B33     		adds	r3, r3, #11
 749 0066 7B63     		str	r3, [r7, #52]
 353:App/STM32F4-Discovery/printf_my.c ****     *s = '\0';
 750              		.loc 1 353 0
 751 0068 7B6B     		ldr	r3, [r7, #52]
 752 006a 0022     		movs	r2, #0
 753 006c 1A70     		strb	r2, [r3]
 354:App/STM32F4-Discovery/printf_my.c **** 
 355:App/STM32F4-Discovery/printf_my.c ****     while (u) {
 754              		.loc 1 355 0
 755 006e 1EE0     		b	.L57
 756              	.L59:
 356:App/STM32F4-Discovery/printf_my.c ****         t = u % base;  //lint !e573 !e737 !e713 Warning 573: Signed-unsigned mix with divide
 757              		.loc 1 356 0
 758 0070 7B6A     		ldr	r3, [r7, #36]
 759 0072 7A68     		ldr	r2, [r7, #4]
 760 0074 B3FBF2F2 		udiv	r2, r3, r2
 761 0078 7968     		ldr	r1, [r7, #4]
 762 007a 01FB02F2 		mul	r2, r1, r2
 763 007e 9B1A     		subs	r3, r3, r2
 764 0080 3B63     		str	r3, [r7, #48]
 357:App/STM32F4-Discovery/printf_my.c ****         if (t >= 10)
 765              		.loc 1 357 0
 766 0082 3B6B     		ldr	r3, [r7, #48]
 767 0084 092B     		cmp	r3, #9
 768 0086 04DD     		ble	.L58
 358:App/STM32F4-Discovery/printf_my.c ****             t += letbase - '0' - 10;
 769              		.loc 1 358 0
 770 0088 BB6C     		ldr	r3, [r7, #72]
 771 008a 3A3B     		subs	r3, r3, #58
 772 008c 3A6B     		ldr	r2, [r7, #48]
 773 008e 1344     		add	r3, r3, r2
 774 0090 3B63     		str	r3, [r7, #48]
 775              	.L58:
 359:App/STM32F4-Discovery/printf_my.c ****         *--s = (char) t + '0';
 776              		.loc 1 359 0
 777 0092 7B6B     		ldr	r3, [r7, #52]
 778 0094 013B     		subs	r3, r3, #1
 779 0096 7B63     		str	r3, [r7, #52]
 780 0098 3B6B     		ldr	r3, [r7, #48]
 781 009a DBB2     		uxtb	r3, r3
 782 009c 3033     		adds	r3, r3, #48
 783 009e DAB2     		uxtb	r2, r3
 784 00a0 7B6B     		ldr	r3, [r7, #52]
 785 00a2 1A70     		strb	r2, [r3]
 360:App/STM32F4-Discovery/printf_my.c ****         u /= base;  //lint !e573 !e737  Signed-unsigned mix with divide
 786              		.loc 1 360 0
 787 00a4 7A6A     		ldr	r2, [r7, #36]
 788 00a6 7B68     		ldr	r3, [r7, #4]
 789 00a8 B2FBF3F3 		udiv	r3, r2, r3
 790 00ac 7B62     		str	r3, [r7, #36]
 791              	.L57:
 355:App/STM32F4-Discovery/printf_my.c ****     while (u) {
 792              		.loc 1 355 0 discriminator 1
 793 00ae 7B6A     		ldr	r3, [r7, #36]
 794 00b0 002B     		cmp	r3, #0
 795 00b2 DDD1     		bne	.L59
 361:App/STM32F4-Discovery/printf_my.c ****     }
 362:App/STM32F4-Discovery/printf_my.c ****     if (neg) {
 796              		.loc 1 362 0
 797 00b4 FB6A     		ldr	r3, [r7, #44]
 798 00b6 002B     		cmp	r3, #0
 799 00b8 22D0     		beq	.L60
 363:App/STM32F4-Discovery/printf_my.c ****         if (width && (pad & PAD_ZERO)) {
 800              		.loc 1 363 0
 801 00ba 3B6C     		ldr	r3, [r7, #64]
 802 00bc 002B     		cmp	r3, #0
 803 00be 18D0     		beq	.L61
 804              		.loc 1 363 0 is_stmt 0 discriminator 1
 805 00c0 7B6C     		ldr	r3, [r7, #68]
 806 00c2 03F00203 		and	r3, r3, #2
 807 00c6 002B     		cmp	r3, #0
 808 00c8 13D0     		beq	.L61
 809              	.LBB6:
 364:App/STM32F4-Discovery/printf_my.c ****             int result = printchar (
 810              		.loc 1 364 0 is_stmt 1
 811 00ca F868     		ldr	r0, [r7, #12]
 812 00cc 2D21     		movs	r1, #45
 813 00ce FA6C     		ldr	r2, [r7, #76]
 814 00d0 3B6D     		ldr	r3, [r7, #80]
 815 00d2 FFF7FEFF 		bl	printchar
 816 00d6 3862     		str	r0, [r7, #32]
 365:App/STM32F4-Discovery/printf_my.c ****                        #if USE_OSTREAM
 366:App/STM32F4-Discovery/printf_my.c ****                            stream,
 367:App/STM32F4-Discovery/printf_my.c ****                        #else
 368:App/STM32F4-Discovery/printf_my.c ****                            out,
 369:App/STM32F4-Discovery/printf_my.c ****                        #endif
 370:App/STM32F4-Discovery/printf_my.c ****                        '-', max_output_len, cur_output_char_p);
 371:App/STM32F4-Discovery/printf_my.c ****             if (result < 0) return result;
 817              		.loc 1 371 0
 818 00d8 3B6A     		ldr	r3, [r7, #32]
 819 00da 002B     		cmp	r3, #0
 820 00dc 01DA     		bge	.L62
 821              		.loc 1 371 0 is_stmt 0 discriminator 1
 822 00de 3B6A     		ldr	r3, [r7, #32]
 823 00e0 2AE0     		b	.L66
 824              	.L62:
 372:App/STM32F4-Discovery/printf_my.c ****             ++pc;
 825              		.loc 1 372 0 is_stmt 1
 826 00e2 BB6A     		ldr	r3, [r7, #40]
 827 00e4 0133     		adds	r3, r3, #1
 828 00e6 BB62     		str	r3, [r7, #40]
 373:App/STM32F4-Discovery/printf_my.c ****             --width;
 829              		.loc 1 373 0
 830 00e8 3B6C     		ldr	r3, [r7, #64]
 831 00ea 013B     		subs	r3, r3, #1
 832 00ec 3B64     		str	r3, [r7, #64]
 833              	.LBE6:
 363:App/STM32F4-Discovery/printf_my.c ****         if (width && (pad & PAD_ZERO)) {
 834              		.loc 1 363 0
 835 00ee 00BF     		nop
 836 00f0 0FE0     		b	.L64
 837              	.L61:
 374:App/STM32F4-Discovery/printf_my.c ****         }
 375:App/STM32F4-Discovery/printf_my.c ****         else {
 376:App/STM32F4-Discovery/printf_my.c ****             *--s = '-';
 838              		.loc 1 376 0
 839 00f2 7B6B     		ldr	r3, [r7, #52]
 840 00f4 013B     		subs	r3, r3, #1
 841 00f6 7B63     		str	r3, [r7, #52]
 842 00f8 7B6B     		ldr	r3, [r7, #52]
 843 00fa 2D22     		movs	r2, #45
 844 00fc 1A70     		strb	r2, [r3]
 845 00fe 08E0     		b	.L64
 846              	.L60:
 377:App/STM32F4-Discovery/printf_my.c ****         }
 378:App/STM32F4-Discovery/printf_my.c ****     } else {
 379:App/STM32F4-Discovery/printf_my.c ****         if (use_leading_plus) {
 847              		.loc 1 379 0
 848 0100 7B6D     		ldr	r3, [r7, #84]
 849 0102 002B     		cmp	r3, #0
 850 0104 05D0     		beq	.L64
 380:App/STM32F4-Discovery/printf_my.c ****             *--s = '+';
 851              		.loc 1 380 0
 852 0106 7B6B     		ldr	r3, [r7, #52]
 853 0108 013B     		subs	r3, r3, #1
 854 010a 7B63     		str	r3, [r7, #52]
 855 010c 7B6B     		ldr	r3, [r7, #52]
 856 010e 2B22     		movs	r2, #43
 857 0110 1A70     		strb	r2, [r3]
 858              	.L64:
 381:App/STM32F4-Discovery/printf_my.c ****         }
 382:App/STM32F4-Discovery/printf_my.c ****     }
 383:App/STM32F4-Discovery/printf_my.c ****     int result = prints (
 859              		.loc 1 383 0
 860 0112 FB6C     		ldr	r3, [r7, #76]
 861 0114 0093     		str	r3, [sp]
 862 0116 3B6D     		ldr	r3, [r7, #80]
 863 0118 0193     		str	r3, [sp, #4]
 864 011a F868     		ldr	r0, [r7, #12]
 865 011c 796B     		ldr	r1, [r7, #52]
 866 011e 3A6C     		ldr	r2, [r7, #64]
 867 0120 7B6C     		ldr	r3, [r7, #68]
 868 0122 FFF7FEFF 		bl	prints
 869 0126 F861     		str	r0, [r7, #28]
 384:App/STM32F4-Discovery/printf_my.c ****                          #if USE_OSTREAM
 385:App/STM32F4-Discovery/printf_my.c ****                              stream,
 386:App/STM32F4-Discovery/printf_my.c ****                          #else
 387:App/STM32F4-Discovery/printf_my.c ****                              out,
 388:App/STM32F4-Discovery/printf_my.c ****                          #endif
 389:App/STM32F4-Discovery/printf_my.c ****                          s, width, pad, max_output_len, cur_output_char_p);
 390:App/STM32F4-Discovery/printf_my.c ****     if (result <0) {
 870              		.loc 1 390 0
 871 0128 FB69     		ldr	r3, [r7, #28]
 872 012a 002B     		cmp	r3, #0
 873 012c 01DA     		bge	.L65
 391:App/STM32F4-Discovery/printf_my.c ****         return result;
 874              		.loc 1 391 0
 875 012e FB69     		ldr	r3, [r7, #28]
 876 0130 02E0     		b	.L66
 877              	.L65:
 392:App/STM32F4-Discovery/printf_my.c ****     } else {
 393:App/STM32F4-Discovery/printf_my.c ****         return pc + result;
 878              		.loc 1 393 0
 879 0132 BA6A     		ldr	r2, [r7, #40]
 880 0134 FB69     		ldr	r3, [r7, #28]
 881 0136 1344     		add	r3, r3, r2
 882              	.L66:
 394:App/STM32F4-Discovery/printf_my.c ****     }
 395:App/STM32F4-Discovery/printf_my.c **** }
 883              		.loc 1 395 0
 884 0138 1846     		mov	r0, r3
 885 013a 3837     		adds	r7, r7, #56
 886 013c BD46     		mov	sp, r7
 887              		@ sp needed
 888 013e 80BD     		pop	{r7, pc}
 889              		.cfi_endproc
 890              	.LFE3:
 892              		.section	.rodata
 893              		.align	2
 894              	.LC0:
 895 0000 286E756C 		.ascii	"(null)\000"
 895      6C2900
 896 0007 00       		.section	.text.print,"ax",%progbits
 897              		.align	2
 898              		.thumb
 899              		.thumb_func
 901              	print:
 902              	.LFB4:
 396:App/STM32F4-Discovery/printf_my.c **** 
 397:App/STM32F4-Discovery/printf_my.c **** //****************************************************************************
 398:App/STM32F4-Discovery/printf_my.c **** static int print (
 399:App/STM32F4-Discovery/printf_my.c ****     #if USE_OSTREAM
 400:App/STM32F4-Discovery/printf_my.c ****         pb_ostream_t *stream,
 401:App/STM32F4-Discovery/printf_my.c ****     #else
 402:App/STM32F4-Discovery/printf_my.c ****         char **out,
 403:App/STM32F4-Discovery/printf_my.c ****     #endif
 404:App/STM32F4-Discovery/printf_my.c ****     unsigned int flags,
 405:App/STM32F4-Discovery/printf_my.c ****     unsigned int max_output_len,
 406:App/STM32F4-Discovery/printf_my.c ****     const char *format,
 407:App/STM32F4-Discovery/printf_my.c ****     va_list vargs)
 408:App/STM32F4-Discovery/printf_my.c **** {
 903              		.loc 1 408 0
 904              		.cfi_startproc
 905              		@ args = 4, pretend = 0, frame = 192
 906              		@ frame_needed = 1, uses_anonymous_args = 0
 907 0000 80B5     		push	{r7, lr}
 908              	.LCFI12:
 909              		.cfi_def_cfa_offset 8
 910              		.cfi_offset 7, -8
 911              		.cfi_offset 14, -4
 912 0002 B6B0     		sub	sp, sp, #216
 913              	.LCFI13:
 914              		.cfi_def_cfa_offset 224
 915 0004 06AF     		add	r7, sp, #24
 916              	.LCFI14:
 917              		.cfi_def_cfa 7, 200
 918 0006 F860     		str	r0, [r7, #12]
 919 0008 B960     		str	r1, [r7, #8]
 920 000a 7A60     		str	r2, [r7, #4]
 921 000c 3B60     		str	r3, [r7]
 409:App/STM32F4-Discovery/printf_my.c ****     int post_decimal ;
 410:App/STM32F4-Discovery/printf_my.c ****     int width, pad ;
 411:App/STM32F4-Discovery/printf_my.c ****     unsigned dec_width = 6 ;
 922              		.loc 1 411 0
 923 000e 0623     		movs	r3, #6
 924 0010 C7F8B030 		str	r3, [r7, #176]
 412:App/STM32F4-Discovery/printf_my.c ****     int pc = 0;
 925              		.loc 1 412 0
 926 0014 0023     		movs	r3, #0
 927 0016 C7F8AC30 		str	r3, [r7, #172]
 413:App/STM32F4-Discovery/printf_my.c ****     char scr[2];
 414:App/STM32F4-Discovery/printf_my.c ****     int cur_output_char = 0;
 928              		.loc 1 414 0
 929 001a 0023     		movs	r3, #0
 930 001c 7B66     		str	r3, [r7, #100]
 415:App/STM32F4-Discovery/printf_my.c ****     int *cur_output_char_p = &cur_output_char;
 931              		.loc 1 415 0
 932 001e 07F16403 		add	r3, r7, #100
 933 0022 C7F8A430 		str	r3, [r7, #164]
 416:App/STM32F4-Discovery/printf_my.c ****     int use_leading_plus = 0 ;  //  start out with this clear
 934              		.loc 1 416 0
 935 0026 0023     		movs	r3, #0
 936 0028 C7F8A830 		str	r3, [r7, #168]
 417:App/STM32F4-Discovery/printf_my.c **** 
 418:App/STM32F4-Discovery/printf_my.c ****     max_output_len--; // make room for a trailing '\0'
 937              		.loc 1 418 0
 938 002c 7B68     		ldr	r3, [r7, #4]
 939 002e 013B     		subs	r3, r3, #1
 940 0030 7B60     		str	r3, [r7, #4]
 419:App/STM32F4-Discovery/printf_my.c ****     for (; *format != 0; ++format) {
 941              		.loc 1 419 0
 942 0032 88E2     		b	.L68
 943              	.L109:
 420:App/STM32F4-Discovery/printf_my.c ****         if (*format == '%') {
 944              		.loc 1 420 0
 945 0034 3B68     		ldr	r3, [r7]
 946 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 947 0038 252B     		cmp	r3, #37
 948 003a 40F06D82 		bne	.L69
 421:App/STM32F4-Discovery/printf_my.c ****             dec_width = 6 ;
 949              		.loc 1 421 0
 950 003e 0623     		movs	r3, #6
 951 0040 C7F8B030 		str	r3, [r7, #176]
 422:App/STM32F4-Discovery/printf_my.c ****             ++format;
 952              		.loc 1 422 0
 953 0044 3B68     		ldr	r3, [r7]
 954 0046 0133     		adds	r3, r3, #1
 955 0048 3B60     		str	r3, [r7]
 423:App/STM32F4-Discovery/printf_my.c ****             width = pad = 0;
 956              		.loc 1 423 0
 957 004a 0023     		movs	r3, #0
 958 004c C7F8B430 		str	r3, [r7, #180]
 959 0050 D7F8B430 		ldr	r3, [r7, #180]
 960 0054 C7F8B830 		str	r3, [r7, #184]
 424:App/STM32F4-Discovery/printf_my.c ****             if (*format == '\0')
 961              		.loc 1 424 0
 962 0058 3B68     		ldr	r3, [r7]
 963 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 964 005c 002B     		cmp	r3, #0
 965 005e 00D1     		bne	.L70
 425:App/STM32F4-Discovery/printf_my.c ****                 break;
 966              		.loc 1 425 0
 967 0060 76E2     		b	.L71
 968              	.L70:
 426:App/STM32F4-Discovery/printf_my.c ****             if (*format == '%')
 969              		.loc 1 426 0
 970 0062 3B68     		ldr	r3, [r7]
 971 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 972 0066 252B     		cmp	r3, #37
 973 0068 00D1     		bne	.L72
 427:App/STM32F4-Discovery/printf_my.c ****                 goto out_lbl;
 974              		.loc 1 427 0
 975 006a 55E2     		b	.L69
 976              	.L72:
 428:App/STM32F4-Discovery/printf_my.c ****             if (*format == '-') {
 977              		.loc 1 428 0
 978 006c 3B68     		ldr	r3, [r7]
 979 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 980 0070 2D2B     		cmp	r3, #45
 981 0072 05D1     		bne	.L73
 429:App/STM32F4-Discovery/printf_my.c ****                 ++format;
 982              		.loc 1 429 0
 983 0074 3B68     		ldr	r3, [r7]
 984 0076 0133     		adds	r3, r3, #1
 985 0078 3B60     		str	r3, [r7]
 430:App/STM32F4-Discovery/printf_my.c ****                 pad = PAD_RIGHT;
 986              		.loc 1 430 0
 987 007a 0123     		movs	r3, #1
 988 007c C7F8B430 		str	r3, [r7, #180]
 989              	.L73:
 431:App/STM32F4-Discovery/printf_my.c ****             }
 432:App/STM32F4-Discovery/printf_my.c ****             if (*format == '+') {
 990              		.loc 1 432 0
 991 0080 3B68     		ldr	r3, [r7]
 992 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 993 0084 2B2B     		cmp	r3, #43
 994 0086 06D1     		bne	.L74
 433:App/STM32F4-Discovery/printf_my.c ****                 ++format;
 995              		.loc 1 433 0
 996 0088 3B68     		ldr	r3, [r7]
 997 008a 0133     		adds	r3, r3, #1
 998 008c 3B60     		str	r3, [r7]
 434:App/STM32F4-Discovery/printf_my.c ****                 use_leading_plus = 1 ;
 999              		.loc 1 434 0
 1000 008e 0123     		movs	r3, #1
 1001 0090 C7F8A830 		str	r3, [r7, #168]
 435:App/STM32F4-Discovery/printf_my.c ****             }
 436:App/STM32F4-Discovery/printf_my.c ****             while (*format == '0') {
 1002              		.loc 1 436 0
 1003 0094 09E0     		b	.L75
 1004              	.L74:
 1005 0096 08E0     		b	.L75
 1006              	.L76:
 437:App/STM32F4-Discovery/printf_my.c ****                 ++format;
 1007              		.loc 1 437 0
 1008 0098 3B68     		ldr	r3, [r7]
 1009 009a 0133     		adds	r3, r3, #1
 1010 009c 3B60     		str	r3, [r7]
 438:App/STM32F4-Discovery/printf_my.c ****                 pad |= PAD_ZERO;
 1011              		.loc 1 438 0
 1012 009e D7F8B430 		ldr	r3, [r7, #180]
 1013 00a2 43F00203 		orr	r3, r3, #2
 1014 00a6 C7F8B430 		str	r3, [r7, #180]
 1015              	.L75:
 436:App/STM32F4-Discovery/printf_my.c ****             while (*format == '0') {
 1016              		.loc 1 436 0 discriminator 1
 1017 00aa 3B68     		ldr	r3, [r7]
 1018 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1019 00ae 302B     		cmp	r3, #48
 1020 00b0 F2D0     		beq	.L76
 439:App/STM32F4-Discovery/printf_my.c ****             }
 440:App/STM32F4-Discovery/printf_my.c ****             post_decimal = 0 ;
 1021              		.loc 1 440 0
 1022 00b2 0023     		movs	r3, #0
 1023 00b4 C7F8BC30 		str	r3, [r7, #188]
 441:App/STM32F4-Discovery/printf_my.c ****             if (*format == '.'  ||
 1024              		.loc 1 441 0
 1025 00b8 3B68     		ldr	r3, [r7]
 1026 00ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1027 00bc 2E2B     		cmp	r3, #46
 1028 00be 07D0     		beq	.L77
 442:App/STM32F4-Discovery/printf_my.c ****                     (*format >= '0' &&  *format <= '9')) {
 1029              		.loc 1 442 0 discriminator 1
 1030 00c0 3B68     		ldr	r3, [r7]
 1031 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 441:App/STM32F4-Discovery/printf_my.c ****             if (*format == '.'  ||
 1032              		.loc 1 441 0 discriminator 1
 1033 00c4 2F2B     		cmp	r3, #47
 1034 00c6 43D9     		bls	.L78
 1035              		.loc 1 442 0
 1036 00c8 3B68     		ldr	r3, [r7]
 1037 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1038 00cc 392B     		cmp	r3, #57
 1039 00ce 3FD8     		bhi	.L78
 1040              	.L77:
 443:App/STM32F4-Discovery/printf_my.c **** 
 444:App/STM32F4-Discovery/printf_my.c ****                 while (1) {
 445:App/STM32F4-Discovery/printf_my.c ****                     if (*format == '.') {
 1041              		.loc 1 445 0
 1042 00d0 3B68     		ldr	r3, [r7]
 1043 00d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1044 00d4 2E2B     		cmp	r3, #46
 1045 00d6 09D1     		bne	.L79
 446:App/STM32F4-Discovery/printf_my.c ****                         post_decimal = 1 ;
 1046              		.loc 1 446 0
 1047 00d8 0123     		movs	r3, #1
 1048 00da C7F8BC30 		str	r3, [r7, #188]
 447:App/STM32F4-Discovery/printf_my.c ****                         dec_width = 0 ;
 1049              		.loc 1 447 0
 1050 00de 0023     		movs	r3, #0
 1051 00e0 C7F8B030 		str	r3, [r7, #176]
 448:App/STM32F4-Discovery/printf_my.c ****                         format++ ;
 1052              		.loc 1 448 0
 1053 00e4 3B68     		ldr	r3, [r7]
 1054 00e6 0133     		adds	r3, r3, #1
 1055 00e8 3B60     		str	r3, [r7]
 449:App/STM32F4-Discovery/printf_my.c ****                     } else if ((*format >= '0' &&  *format <= '9')) {
 450:App/STM32F4-Discovery/printf_my.c ****                         if (post_decimal) {
 451:App/STM32F4-Discovery/printf_my.c ****                             dec_width *= 10;
 452:App/STM32F4-Discovery/printf_my.c ****                             dec_width += (uint) (u8) (*format - '0');
 453:App/STM32F4-Discovery/printf_my.c ****                         } else {
 454:App/STM32F4-Discovery/printf_my.c ****                             width *= 10;
 455:App/STM32F4-Discovery/printf_my.c ****                             width += *format - '0';
 456:App/STM32F4-Discovery/printf_my.c ****                         }
 457:App/STM32F4-Discovery/printf_my.c ****                         format++ ;
 458:App/STM32F4-Discovery/printf_my.c ****                     } else {
 459:App/STM32F4-Discovery/printf_my.c ****                         break;
 460:App/STM32F4-Discovery/printf_my.c ****                     }
 461:App/STM32F4-Discovery/printf_my.c ****                 }
 1056              		.loc 1 461 0
 1057 00ea F1E7     		b	.L77
 1058              	.L79:
 449:App/STM32F4-Discovery/printf_my.c ****                     } else if ((*format >= '0' &&  *format <= '9')) {
 1059              		.loc 1 449 0
 1060 00ec 3B68     		ldr	r3, [r7]
 1061 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1062 00f0 2F2B     		cmp	r3, #47
 1063 00f2 2DD9     		bls	.L78
 449:App/STM32F4-Discovery/printf_my.c ****                     } else if ((*format >= '0' &&  *format <= '9')) {
 1064              		.loc 1 449 0 is_stmt 0 discriminator 1
 1065 00f4 3B68     		ldr	r3, [r7]
 1066 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1067 00f8 392B     		cmp	r3, #57
 1068 00fa 29D8     		bhi	.L78
 450:App/STM32F4-Discovery/printf_my.c ****                         if (post_decimal) {
 1069              		.loc 1 450 0 is_stmt 1
 1070 00fc D7F8BC30 		ldr	r3, [r7, #188]
 1071 0100 002B     		cmp	r3, #0
 1072 0102 11D0     		beq	.L81
 451:App/STM32F4-Discovery/printf_my.c ****                             dec_width *= 10;
 1073              		.loc 1 451 0
 1074 0104 D7F8B020 		ldr	r2, [r7, #176]
 1075 0108 1346     		mov	r3, r2
 1076 010a 9B00     		lsls	r3, r3, #2
 1077 010c 1344     		add	r3, r3, r2
 1078 010e 5B00     		lsls	r3, r3, #1
 1079 0110 C7F8B030 		str	r3, [r7, #176]
 452:App/STM32F4-Discovery/printf_my.c ****                             dec_width += (uint) (u8) (*format - '0');
 1080              		.loc 1 452 0
 1081 0114 3B68     		ldr	r3, [r7]
 1082 0116 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1083 0118 303B     		subs	r3, r3, #48
 1084 011a DBB2     		uxtb	r3, r3
 1085 011c D7F8B020 		ldr	r2, [r7, #176]
 1086 0120 1344     		add	r3, r3, r2
 1087 0122 C7F8B030 		str	r3, [r7, #176]
 1088 0126 0FE0     		b	.L82
 1089              	.L81:
 454:App/STM32F4-Discovery/printf_my.c ****                             width *= 10;
 1090              		.loc 1 454 0
 1091 0128 D7F8B820 		ldr	r2, [r7, #184]
 1092 012c 1346     		mov	r3, r2
 1093 012e 9B00     		lsls	r3, r3, #2
 1094 0130 1344     		add	r3, r3, r2
 1095 0132 5B00     		lsls	r3, r3, #1
 1096 0134 C7F8B830 		str	r3, [r7, #184]
 455:App/STM32F4-Discovery/printf_my.c ****                             width += *format - '0';
 1097              		.loc 1 455 0
 1098 0138 3B68     		ldr	r3, [r7]
 1099 013a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1100 013c 303B     		subs	r3, r3, #48
 1101 013e D7F8B820 		ldr	r2, [r7, #184]
 1102 0142 1344     		add	r3, r3, r2
 1103 0144 C7F8B830 		str	r3, [r7, #184]
 1104              	.L82:
 457:App/STM32F4-Discovery/printf_my.c ****                         format++ ;
 1105              		.loc 1 457 0
 1106 0148 3B68     		ldr	r3, [r7]
 1107 014a 0133     		adds	r3, r3, #1
 1108 014c 3B60     		str	r3, [r7]
 1109              		.loc 1 461 0
 1110 014e BFE7     		b	.L77
 1111              	.L78:
 462:App/STM32F4-Discovery/printf_my.c ****             }
 463:App/STM32F4-Discovery/printf_my.c ****             if (*format == 'l')
 1112              		.loc 1 463 0
 1113 0150 3B68     		ldr	r3, [r7]
 1114 0152 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1115 0154 6C2B     		cmp	r3, #108
 1116 0156 02D1     		bne	.L83
 464:App/STM32F4-Discovery/printf_my.c ****                 ++format;
 1117              		.loc 1 464 0
 1118 0158 3B68     		ldr	r3, [r7]
 1119 015a 0133     		adds	r3, r3, #1
 1120 015c 3B60     		str	r3, [r7]
 1121              	.L83:
 465:App/STM32F4-Discovery/printf_my.c ****             if (*format == 'h')
 1122              		.loc 1 465 0
 1123 015e 3B68     		ldr	r3, [r7]
 1124 0160 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1125 0162 682B     		cmp	r3, #104
 1126 0164 02D1     		bne	.L84
 466:App/STM32F4-Discovery/printf_my.c ****                 ++format;
 1127              		.loc 1 466 0
 1128 0166 3B68     		ldr	r3, [r7]
 1129 0168 0133     		adds	r3, r3, #1
 1130 016a 3B60     		str	r3, [r7]
 1131              	.L84:
 467:App/STM32F4-Discovery/printf_my.c ****             switch (*format) {
 1132              		.loc 1 467 0
 1133 016c 3B68     		ldr	r3, [r7]
 1134 016e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1135 0170 583B     		subs	r3, r3, #88
 1136 0172 202B     		cmp	r3, #32
 1137 0174 00F2A381 		bhi	.L85
 1138 0178 01A2     		adr	r2, .L87
 1139 017a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1140 017e 00BF     		.p2align 2
 1141              	.L87:
 1142 0180 27030000 		.word	.L86+1
 1143 0184 BF040000 		.word	.L85+1
 1144 0188 BF040000 		.word	.L85+1
 1145 018c BF040000 		.word	.L85+1
 1146 0190 BF040000 		.word	.L85+1
 1147 0194 BF040000 		.word	.L85+1
 1148 0198 BF040000 		.word	.L85+1
 1149 019c BF040000 		.word	.L85+1
 1150 01a0 BF040000 		.word	.L85+1
 1151 01a4 BF040000 		.word	.L85+1
 1152 01a8 BF040000 		.word	.L85+1
 1153 01ac E7030000 		.word	.L88+1
 1154 01b0 67020000 		.word	.L89+1
 1155 01b4 BF040000 		.word	.L85+1
 1156 01b8 45040000 		.word	.L90+1
 1157 01bc BF040000 		.word	.L85+1
 1158 01c0 BF040000 		.word	.L85+1
 1159 01c4 BF040000 		.word	.L85+1
 1160 01c8 BF040000 		.word	.L85+1
 1161 01cc BF040000 		.word	.L85+1
 1162 01d0 BF040000 		.word	.L85+1
 1163 01d4 BF040000 		.word	.L85+1
 1164 01d8 BF040000 		.word	.L85+1
 1165 01dc BF040000 		.word	.L85+1
 1166 01e0 87030000 		.word	.L91+1
 1167 01e4 BF040000 		.word	.L85+1
 1168 01e8 BF040000 		.word	.L85+1
 1169 01ec 05020000 		.word	.L92+1
 1170 01f0 BF040000 		.word	.L85+1
 1171 01f4 87030000 		.word	.L91+1
 1172 01f8 BF040000 		.word	.L85+1
 1173 01fc BF040000 		.word	.L85+1
 1174 0200 C7020000 		.word	.L93+1
 1175              		.p2align 1
 1176              	.L92:
 1177              	.LBB7:
 468:App/STM32F4-Discovery/printf_my.c ****             case 's':
 469:App/STM32F4-Discovery/printf_my.c ****             {
 470:App/STM32F4-Discovery/printf_my.c ****                 char *s = va_arg(vargs, char*);
 1178              		.loc 1 470 0
 1179 0204 D7F8C830 		ldr	r3, [r7, #200]
 1180 0208 1A1D     		adds	r2, r3, #4
 1181 020a C7F8C820 		str	r2, [r7, #200]
 1182 020e 1B68     		ldr	r3, [r3]
 1183 0210 C7F8A030 		str	r3, [r7, #160]
 471:App/STM32F4-Discovery/printf_my.c ****                 int result = prints (
 1184              		.loc 1 471 0
 1185 0214 D7F8A030 		ldr	r3, [r7, #160]
 1186 0218 002B     		cmp	r3, #0
 1187 021a 02D0     		beq	.L94
 1188              		.loc 1 471 0 is_stmt 0 discriminator 1
 1189 021c D7F8A030 		ldr	r3, [r7, #160]
 1190 0220 00E0     		b	.L95
 1191              	.L94:
 1192              		.loc 1 471 0 discriminator 2
 1193 0222 BC4B     		ldr	r3, .L113
 1194              	.L95:
 1195              		.loc 1 471 0 discriminator 3
 1196 0224 7A68     		ldr	r2, [r7, #4]
 1197 0226 0092     		str	r2, [sp]
 1198 0228 D7F8A420 		ldr	r2, [r7, #164]
 1199 022c 0192     		str	r2, [sp, #4]
 1200 022e F868     		ldr	r0, [r7, #12]
 1201 0230 1946     		mov	r1, r3
 1202 0232 D7F8B820 		ldr	r2, [r7, #184]
 1203 0236 D7F8B430 		ldr	r3, [r7, #180]
 1204 023a FFF7FEFF 		bl	prints
 1205 023e C7F89C00 		str	r0, [r7, #156]
 472:App/STM32F4-Discovery/printf_my.c ****                     #if USE_OSTREAM
 473:App/STM32F4-Discovery/printf_my.c ****                         stream,
 474:App/STM32F4-Discovery/printf_my.c ****                     #else
 475:App/STM32F4-Discovery/printf_my.c ****                         out,
 476:App/STM32F4-Discovery/printf_my.c ****                     #endif
 477:App/STM32F4-Discovery/printf_my.c ****                     s ? s : "(null)", width, pad, max_output_len, cur_output_char_p);
 478:App/STM32F4-Discovery/printf_my.c ****                 if (result<0) return result;
 1206              		.loc 1 478 0 is_stmt 1 discriminator 3
 1207 0242 D7F89C30 		ldr	r3, [r7, #156]
 1208 0246 002B     		cmp	r3, #0
 1209 0248 02DA     		bge	.L96
 1210              		.loc 1 478 0 is_stmt 0 discriminator 1
 1211 024a D7F89C30 		ldr	r3, [r7, #156]
 1212 024e 94E1     		b	.L112
 1213              	.L96:
 479:App/STM32F4-Discovery/printf_my.c ****                 pc += result;
 1214              		.loc 1 479 0 is_stmt 1
 1215 0250 D7F8AC20 		ldr	r2, [r7, #172]
 1216 0254 D7F89C30 		ldr	r3, [r7, #156]
 1217 0258 1344     		add	r3, r3, r2
 1218 025a C7F8AC30 		str	r3, [r7, #172]
 480:App/STM32F4-Discovery/printf_my.c ****                 use_leading_plus = 0 ;  //  reset this flag after printing one value
 1219              		.loc 1 480 0
 1220 025e 0023     		movs	r3, #0
 1221 0260 C7F8A830 		str	r3, [r7, #168]
 1222              	.LBE7:
 481:App/STM32F4-Discovery/printf_my.c ****             }
 482:App/STM32F4-Discovery/printf_my.c ****             break;
 1223              		.loc 1 482 0
 1224 0264 55E1     		b	.L98
 1225              	.L89:
 1226              	.LBB8:
 483:App/STM32F4-Discovery/printf_my.c ****             case 'd':
 484:App/STM32F4-Discovery/printf_my.c ****             {
 485:App/STM32F4-Discovery/printf_my.c ****                 int result = printi (
 1227              		.loc 1 485 0
 1228 0266 D7F8C830 		ldr	r3, [r7, #200]
 1229 026a 1A1D     		adds	r2, r3, #4
 1230 026c C7F8C820 		str	r2, [r7, #200]
 1231 0270 1B68     		ldr	r3, [r3]
 1232 0272 D7F8B820 		ldr	r2, [r7, #184]
 1233 0276 0092     		str	r2, [sp]
 1234 0278 D7F8B420 		ldr	r2, [r7, #180]
 1235 027c 0192     		str	r2, [sp, #4]
 1236 027e 6122     		movs	r2, #97
 1237 0280 0292     		str	r2, [sp, #8]
 1238 0282 7A68     		ldr	r2, [r7, #4]
 1239 0284 0392     		str	r2, [sp, #12]
 1240 0286 D7F8A420 		ldr	r2, [r7, #164]
 1241 028a 0492     		str	r2, [sp, #16]
 1242 028c D7F8A820 		ldr	r2, [r7, #168]
 1243 0290 0592     		str	r2, [sp, #20]
 1244 0292 F868     		ldr	r0, [r7, #12]
 1245 0294 1946     		mov	r1, r3
 1246 0296 0A22     		movs	r2, #10
 1247 0298 0123     		movs	r3, #1
 1248 029a FFF7FEFF 		bl	printi
 1249 029e C7F89800 		str	r0, [r7, #152]
 486:App/STM32F4-Discovery/printf_my.c ****                         #if USE_OSTREAM
 487:App/STM32F4-Discovery/printf_my.c ****                             stream,
 488:App/STM32F4-Discovery/printf_my.c ****                         #else
 489:App/STM32F4-Discovery/printf_my.c ****                             out,
 490:App/STM32F4-Discovery/printf_my.c ****                         #endif
 491:App/STM32F4-Discovery/printf_my.c ****                         va_arg(vargs, int), 10, 1, width, pad, 'a', max_output_len, cur_output_char
 492:App/STM32F4-Discovery/printf_my.c ****                 if (result<0) return result;
 1250              		.loc 1 492 0
 1251 02a2 D7F89830 		ldr	r3, [r7, #152]
 1252 02a6 002B     		cmp	r3, #0
 1253 02a8 02DA     		bge	.L99
 1254              		.loc 1 492 0 is_stmt 0 discriminator 1
 1255 02aa D7F89830 		ldr	r3, [r7, #152]
 1256 02ae 64E1     		b	.L112
 1257              	.L99:
 493:App/STM32F4-Discovery/printf_my.c ****                 pc += result;
 1258              		.loc 1 493 0 is_stmt 1
 1259 02b0 D7F8AC20 		ldr	r2, [r7, #172]
 1260 02b4 D7F89830 		ldr	r3, [r7, #152]
 1261 02b8 1344     		add	r3, r3, r2
 1262 02ba C7F8AC30 		str	r3, [r7, #172]
 494:App/STM32F4-Discovery/printf_my.c **** 
 495:App/STM32F4-Discovery/printf_my.c ****                 use_leading_plus = 0 ;  //  reset this flag after printing one value
 1263              		.loc 1 495 0
 1264 02be 0023     		movs	r3, #0
 1265 02c0 C7F8A830 		str	r3, [r7, #168]
 1266              	.LBE8:
 496:App/STM32F4-Discovery/printf_my.c ****             }
 497:App/STM32F4-Discovery/printf_my.c ****             break;
 1267              		.loc 1 497 0
 1268 02c4 25E1     		b	.L98
 1269              	.L93:
 1270              	.LBB9:
 498:App/STM32F4-Discovery/printf_my.c ****             case 'x':
 499:App/STM32F4-Discovery/printf_my.c ****             {
 500:App/STM32F4-Discovery/printf_my.c ****                 int result = printi (
 1271              		.loc 1 500 0
 1272 02c6 D7F8C830 		ldr	r3, [r7, #200]
 1273 02ca 1A1D     		adds	r2, r3, #4
 1274 02cc C7F8C820 		str	r2, [r7, #200]
 1275 02d0 1B68     		ldr	r3, [r3]
 1276 02d2 D7F8B820 		ldr	r2, [r7, #184]
 1277 02d6 0092     		str	r2, [sp]
 1278 02d8 D7F8B420 		ldr	r2, [r7, #180]
 1279 02dc 0192     		str	r2, [sp, #4]
 1280 02de 6122     		movs	r2, #97
 1281 02e0 0292     		str	r2, [sp, #8]
 1282 02e2 7A68     		ldr	r2, [r7, #4]
 1283 02e4 0392     		str	r2, [sp, #12]
 1284 02e6 D7F8A420 		ldr	r2, [r7, #164]
 1285 02ea 0492     		str	r2, [sp, #16]
 1286 02ec D7F8A820 		ldr	r2, [r7, #168]
 1287 02f0 0592     		str	r2, [sp, #20]
 1288 02f2 F868     		ldr	r0, [r7, #12]
 1289 02f4 1946     		mov	r1, r3
 1290 02f6 1022     		movs	r2, #16
 1291 02f8 0023     		movs	r3, #0
 1292 02fa FFF7FEFF 		bl	printi
 1293 02fe C7F89400 		str	r0, [r7, #148]
 501:App/STM32F4-Discovery/printf_my.c ****                         #if USE_OSTREAM
 502:App/STM32F4-Discovery/printf_my.c ****                             stream,
 503:App/STM32F4-Discovery/printf_my.c ****                         #else
 504:App/STM32F4-Discovery/printf_my.c ****                             out,
 505:App/STM32F4-Discovery/printf_my.c ****                         #endif
 506:App/STM32F4-Discovery/printf_my.c ****                         va_arg(vargs, int), 16, 0, width, pad, 'a', max_output_len, cur_output_char
 507:App/STM32F4-Discovery/printf_my.c ****                 if (result<0) return result;
 1294              		.loc 1 507 0
 1295 0302 D7F89430 		ldr	r3, [r7, #148]
 1296 0306 002B     		cmp	r3, #0
 1297 0308 02DA     		bge	.L100
 1298              		.loc 1 507 0 is_stmt 0 discriminator 1
 1299 030a D7F89430 		ldr	r3, [r7, #148]
 1300 030e 34E1     		b	.L112
 1301              	.L100:
 508:App/STM32F4-Discovery/printf_my.c ****                 pc += result;
 1302              		.loc 1 508 0 is_stmt 1
 1303 0310 D7F8AC20 		ldr	r2, [r7, #172]
 1304 0314 D7F89430 		ldr	r3, [r7, #148]
 1305 0318 1344     		add	r3, r3, r2
 1306 031a C7F8AC30 		str	r3, [r7, #172]
 509:App/STM32F4-Discovery/printf_my.c ****                 use_leading_plus = 0 ;  //  reset this flag after printing one value
 1307              		.loc 1 509 0
 1308 031e 0023     		movs	r3, #0
 1309 0320 C7F8A830 		str	r3, [r7, #168]
 1310              	.LBE9:
 510:App/STM32F4-Discovery/printf_my.c ****             }
 511:App/STM32F4-Discovery/printf_my.c ****             break;
 1311              		.loc 1 511 0
 1312 0324 F5E0     		b	.L98
 1313              	.L86:
 1314              	.LBB10:
 512:App/STM32F4-Discovery/printf_my.c ****             case 'X':
 513:App/STM32F4-Discovery/printf_my.c ****             {
 514:App/STM32F4-Discovery/printf_my.c ****                 int result = printi (
 1315              		.loc 1 514 0
 1316 0326 D7F8C830 		ldr	r3, [r7, #200]
 1317 032a 1A1D     		adds	r2, r3, #4
 1318 032c C7F8C820 		str	r2, [r7, #200]
 1319 0330 1B68     		ldr	r3, [r3]
 1320 0332 D7F8B820 		ldr	r2, [r7, #184]
 1321 0336 0092     		str	r2, [sp]
 1322 0338 D7F8B420 		ldr	r2, [r7, #180]
 1323 033c 0192     		str	r2, [sp, #4]
 1324 033e 4122     		movs	r2, #65
 1325 0340 0292     		str	r2, [sp, #8]
 1326 0342 7A68     		ldr	r2, [r7, #4]
 1327 0344 0392     		str	r2, [sp, #12]
 1328 0346 D7F8A420 		ldr	r2, [r7, #164]
 1329 034a 0492     		str	r2, [sp, #16]
 1330 034c D7F8A820 		ldr	r2, [r7, #168]
 1331 0350 0592     		str	r2, [sp, #20]
 1332 0352 F868     		ldr	r0, [r7, #12]
 1333 0354 1946     		mov	r1, r3
 1334 0356 1022     		movs	r2, #16
 1335 0358 0023     		movs	r3, #0
 1336 035a FFF7FEFF 		bl	printi
 1337 035e C7F89000 		str	r0, [r7, #144]
 515:App/STM32F4-Discovery/printf_my.c ****                         #if USE_OSTREAM
 516:App/STM32F4-Discovery/printf_my.c ****                             stream,
 517:App/STM32F4-Discovery/printf_my.c ****                         #else
 518:App/STM32F4-Discovery/printf_my.c ****                             out,
 519:App/STM32F4-Discovery/printf_my.c ****                         #endif
 520:App/STM32F4-Discovery/printf_my.c ****                         va_arg(vargs, int), 16, 0, width, pad, 'A', max_output_len, cur_output_char
 521:App/STM32F4-Discovery/printf_my.c ****                 if (result<0) return result;
 1338              		.loc 1 521 0
 1339 0362 D7F89030 		ldr	r3, [r7, #144]
 1340 0366 002B     		cmp	r3, #0
 1341 0368 02DA     		bge	.L101
 1342              		.loc 1 521 0 is_stmt 0 discriminator 1
 1343 036a D7F89030 		ldr	r3, [r7, #144]
 1344 036e 04E1     		b	.L112
 1345              	.L101:
 522:App/STM32F4-Discovery/printf_my.c ****                 pc += result;
 1346              		.loc 1 522 0 is_stmt 1
 1347 0370 D7F8AC20 		ldr	r2, [r7, #172]
 1348 0374 D7F89030 		ldr	r3, [r7, #144]
 1349 0378 1344     		add	r3, r3, r2
 1350 037a C7F8AC30 		str	r3, [r7, #172]
 523:App/STM32F4-Discovery/printf_my.c ****                 use_leading_plus = 0 ;  //  reset this flag after printing one value
 1351              		.loc 1 523 0
 1352 037e 0023     		movs	r3, #0
 1353 0380 C7F8A830 		str	r3, [r7, #168]
 1354              	.LBE10:
 524:App/STM32F4-Discovery/printf_my.c ****             }
 525:App/STM32F4-Discovery/printf_my.c ****             break;
 1355              		.loc 1 525 0
 1356 0384 C5E0     		b	.L98
 1357              	.L91:
 1358              	.LBB11:
 526:App/STM32F4-Discovery/printf_my.c ****             case 'p':
 527:App/STM32F4-Discovery/printf_my.c ****             case 'u':
 528:App/STM32F4-Discovery/printf_my.c ****             {
 529:App/STM32F4-Discovery/printf_my.c ****                 int result = printi (
 1359              		.loc 1 529 0
 1360 0386 D7F8C830 		ldr	r3, [r7, #200]
 1361 038a 1A1D     		adds	r2, r3, #4
 1362 038c C7F8C820 		str	r2, [r7, #200]
 1363 0390 1B68     		ldr	r3, [r3]
 1364 0392 D7F8B820 		ldr	r2, [r7, #184]
 1365 0396 0092     		str	r2, [sp]
 1366 0398 D7F8B420 		ldr	r2, [r7, #180]
 1367 039c 0192     		str	r2, [sp, #4]
 1368 039e 6122     		movs	r2, #97
 1369 03a0 0292     		str	r2, [sp, #8]
 1370 03a2 7A68     		ldr	r2, [r7, #4]
 1371 03a4 0392     		str	r2, [sp, #12]
 1372 03a6 D7F8A420 		ldr	r2, [r7, #164]
 1373 03aa 0492     		str	r2, [sp, #16]
 1374 03ac D7F8A820 		ldr	r2, [r7, #168]
 1375 03b0 0592     		str	r2, [sp, #20]
 1376 03b2 F868     		ldr	r0, [r7, #12]
 1377 03b4 1946     		mov	r1, r3
 1378 03b6 0A22     		movs	r2, #10
 1379 03b8 0023     		movs	r3, #0
 1380 03ba FFF7FEFF 		bl	printi
 1381 03be C7F88C00 		str	r0, [r7, #140]
 530:App/STM32F4-Discovery/printf_my.c ****                               #if USE_OSTREAM
 531:App/STM32F4-Discovery/printf_my.c ****                                   stream,
 532:App/STM32F4-Discovery/printf_my.c ****                               #else
 533:App/STM32F4-Discovery/printf_my.c ****                                   out,
 534:App/STM32F4-Discovery/printf_my.c ****                               #endif
 535:App/STM32F4-Discovery/printf_my.c ****                               va_arg(vargs, int), 10, 0, width, pad, 'a', max_output_len, cur_outpu
 536:App/STM32F4-Discovery/printf_my.c ****                 use_leading_plus = 0 ;  //  reset this flag after printing one value
 1382              		.loc 1 536 0
 1383 03c2 0023     		movs	r3, #0
 1384 03c4 C7F8A830 		str	r3, [r7, #168]
 537:App/STM32F4-Discovery/printf_my.c ****                 if (result<0) return result;
 1385              		.loc 1 537 0
 1386 03c8 D7F88C30 		ldr	r3, [r7, #140]
 1387 03cc 002B     		cmp	r3, #0
 1388 03ce 02DA     		bge	.L102
 1389              		.loc 1 537 0 is_stmt 0 discriminator 1
 1390 03d0 D7F88C30 		ldr	r3, [r7, #140]
 1391 03d4 D1E0     		b	.L112
 1392              	.L102:
 538:App/STM32F4-Discovery/printf_my.c ****                 pc += result;
 1393              		.loc 1 538 0 is_stmt 1
 1394 03d6 D7F8AC20 		ldr	r2, [r7, #172]
 1395 03da D7F88C30 		ldr	r3, [r7, #140]
 1396 03de 1344     		add	r3, r3, r2
 1397 03e0 C7F8AC30 		str	r3, [r7, #172]
 1398              	.LBE11:
 539:App/STM32F4-Discovery/printf_my.c ****             }
 540:App/STM32F4-Discovery/printf_my.c ****             break;
 1399              		.loc 1 540 0
 1400 03e4 95E0     		b	.L98
 1401              	.L88:
 1402              	.LBB12:
 541:App/STM32F4-Discovery/printf_my.c ****             case 'c':
 542:App/STM32F4-Discovery/printf_my.c ****             {
 543:App/STM32F4-Discovery/printf_my.c ****                 /* char are converted to int then pushed on the stack */
 544:App/STM32F4-Discovery/printf_my.c ****                 scr[0] = (char)va_arg(vargs,int);
 1403              		.loc 1 544 0
 1404 03e6 D7F8C830 		ldr	r3, [r7, #200]
 1405 03ea 1A1D     		adds	r2, r3, #4
 1406 03ec C7F8C820 		str	r2, [r7, #200]
 1407 03f0 1B68     		ldr	r3, [r3]
 1408 03f2 DBB2     		uxtb	r3, r3
 1409 03f4 87F86830 		strb	r3, [r7, #104]
 545:App/STM32F4-Discovery/printf_my.c ****                 scr[1] = '\0';
 1410              		.loc 1 545 0
 1411 03f8 0023     		movs	r3, #0
 1412 03fa 87F86930 		strb	r3, [r7, #105]
 546:App/STM32F4-Discovery/printf_my.c ****                 int result = prints (
 1413              		.loc 1 546 0
 1414 03fe 07F16803 		add	r3, r7, #104
 1415 0402 7A68     		ldr	r2, [r7, #4]
 1416 0404 0092     		str	r2, [sp]
 1417 0406 D7F8A420 		ldr	r2, [r7, #164]
 1418 040a 0192     		str	r2, [sp, #4]
 1419 040c F868     		ldr	r0, [r7, #12]
 1420 040e 1946     		mov	r1, r3
 1421 0410 D7F8B820 		ldr	r2, [r7, #184]
 1422 0414 D7F8B430 		ldr	r3, [r7, #180]
 1423 0418 FFF7FEFF 		bl	prints
 1424 041c C7F88800 		str	r0, [r7, #136]
 547:App/STM32F4-Discovery/printf_my.c ****                               #if USE_OSTREAM
 548:App/STM32F4-Discovery/printf_my.c ****                                   stream,
 549:App/STM32F4-Discovery/printf_my.c ****                               #else
 550:App/STM32F4-Discovery/printf_my.c ****                                   out,
 551:App/STM32F4-Discovery/printf_my.c ****                               #endif
 552:App/STM32F4-Discovery/printf_my.c ****                               scr, width, pad, max_output_len, cur_output_char_p);
 553:App/STM32F4-Discovery/printf_my.c ****                 if (result<0) return result;
 1425              		.loc 1 553 0
 1426 0420 D7F88830 		ldr	r3, [r7, #136]
 1427 0424 002B     		cmp	r3, #0
 1428 0426 02DA     		bge	.L103
 1429              		.loc 1 553 0 is_stmt 0 discriminator 1
 1430 0428 D7F88830 		ldr	r3, [r7, #136]
 1431 042c A5E0     		b	.L112
 1432              	.L103:
 554:App/STM32F4-Discovery/printf_my.c ****                 pc += result;
 1433              		.loc 1 554 0 is_stmt 1
 1434 042e D7F8AC20 		ldr	r2, [r7, #172]
 1435 0432 D7F88830 		ldr	r3, [r7, #136]
 1436 0436 1344     		add	r3, r3, r2
 1437 0438 C7F8AC30 		str	r3, [r7, #172]
 555:App/STM32F4-Discovery/printf_my.c ****                 use_leading_plus = 0 ;  //  reset this flag after printing one value
 1438              		.loc 1 555 0
 1439 043c 0023     		movs	r3, #0
 1440 043e C7F8A830 		str	r3, [r7, #168]
 1441              	.LBE12:
 556:App/STM32F4-Discovery/printf_my.c ****             }
 557:App/STM32F4-Discovery/printf_my.c ****             break;
 1442              		.loc 1 557 0
 1443 0442 66E0     		b	.L98
 1444              	.L90:
 1445              	.LBB13:
 558:App/STM32F4-Discovery/printf_my.c **** 
 559:App/STM32F4-Discovery/printf_my.c ****             case 'f':
 560:App/STM32F4-Discovery/printf_my.c ****             {
 561:App/STM32F4-Discovery/printf_my.c ****                 double d = va_arg(vargs,double);
 1446              		.loc 1 561 0
 1447 0444 D7F8C830 		ldr	r3, [r7, #200]
 1448 0448 0733     		adds	r3, r3, #7
 1449 044a 23F00703 		bic	r3, r3, #7
 1450 044e 03F10802 		add	r2, r3, #8
 1451 0452 C7F8C820 		str	r2, [r7, #200]
 1452 0456 D3E90023 		ldrd	r2, [r3]
 1453 045a C7E92023 		strd	r2, [r7, #128]
 562:App/STM32F4-Discovery/printf_my.c ****                 FLOAT_OR_DOUBLE flt_or_dbl = d;
 1454              		.loc 1 562 0
 1455 045e D7E92023 		ldrd	r2, [r7, #128]
 1456 0462 C7E91E23 		strd	r2, [r7, #120]
 563:App/STM32F4-Discovery/printf_my.c ****                 char bfr[81];
 564:App/STM32F4-Discovery/printf_my.c ****                 fltordbl2stri(bfr, flt_or_dbl, dec_width, use_leading_plus);
 1457              		.loc 1 564 0
 1458 0466 07F11003 		add	r3, r7, #16
 1459 046a D7F8B020 		ldr	r2, [r7, #176]
 1460 046e 0092     		str	r2, [sp]
 1461 0470 D7F8A820 		ldr	r2, [r7, #168]
 1462 0474 0192     		str	r2, [sp, #4]
 1463 0476 1846     		mov	r0, r3
 1464 0478 D7E91E23 		ldrd	r2, [r7, #120]
 1465 047c FFF7FEFF 		bl	fltordbl2stri
 565:App/STM32F4-Discovery/printf_my.c ****                 int result = prints (
 1466              		.loc 1 565 0
 1467 0480 07F11003 		add	r3, r7, #16
 1468 0484 7A68     		ldr	r2, [r7, #4]
 1469 0486 0092     		str	r2, [sp]
 1470 0488 D7F8A420 		ldr	r2, [r7, #164]
 1471 048c 0192     		str	r2, [sp, #4]
 1472 048e F868     		ldr	r0, [r7, #12]
 1473 0490 1946     		mov	r1, r3
 1474 0492 D7F8B820 		ldr	r2, [r7, #184]
 1475 0496 D7F8B430 		ldr	r3, [r7, #180]
 1476 049a FFF7FEFF 		bl	prints
 1477 049e 7867     		str	r0, [r7, #116]
 566:App/STM32F4-Discovery/printf_my.c ****                               #if USE_OSTREAM
 567:App/STM32F4-Discovery/printf_my.c ****                                   stream,
 568:App/STM32F4-Discovery/printf_my.c ****                               #else
 569:App/STM32F4-Discovery/printf_my.c ****                                   out,
 570:App/STM32F4-Discovery/printf_my.c ****                               #endif
 571:App/STM32F4-Discovery/printf_my.c ****                               bfr, width, pad, max_output_len, cur_output_char_p);
 572:App/STM32F4-Discovery/printf_my.c ****                 if (result<0) return result;
 1478              		.loc 1 572 0
 1479 04a0 7B6F     		ldr	r3, [r7, #116]
 1480 04a2 002B     		cmp	r3, #0
 1481 04a4 01DA     		bge	.L104
 1482              		.loc 1 572 0 is_stmt 0 discriminator 1
 1483 04a6 7B6F     		ldr	r3, [r7, #116]
 1484 04a8 67E0     		b	.L112
 1485              	.L104:
 573:App/STM32F4-Discovery/printf_my.c ****                 pc += result;
 1486              		.loc 1 573 0 is_stmt 1
 1487 04aa D7F8AC20 		ldr	r2, [r7, #172]
 1488 04ae 7B6F     		ldr	r3, [r7, #116]
 1489 04b0 1344     		add	r3, r3, r2
 1490 04b2 C7F8AC30 		str	r3, [r7, #172]
 574:App/STM32F4-Discovery/printf_my.c ****                 use_leading_plus = 0 ;  //  reset this flag after printing one value
 1491              		.loc 1 574 0
 1492 04b6 0023     		movs	r3, #0
 1493 04b8 C7F8A830 		str	r3, [r7, #168]
 1494              	.LBE13:
 575:App/STM32F4-Discovery/printf_my.c ****             }
 576:App/STM32F4-Discovery/printf_my.c ****             break;
 1495              		.loc 1 576 0
 1496 04bc 29E0     		b	.L98
 1497              	.L85:
 1498              	.LBB14:
 577:App/STM32F4-Discovery/printf_my.c **** 
 578:App/STM32F4-Discovery/printf_my.c ****             default: {
 579:App/STM32F4-Discovery/printf_my.c ****                 int result = printchar (
 1499              		.loc 1 579 0
 1500 04be F868     		ldr	r0, [r7, #12]
 1501 04c0 2521     		movs	r1, #37
 1502 04c2 7A68     		ldr	r2, [r7, #4]
 1503 04c4 D7F8A430 		ldr	r3, [r7, #164]
 1504 04c8 FFF7FEFF 		bl	printchar
 1505 04cc 3867     		str	r0, [r7, #112]
 580:App/STM32F4-Discovery/printf_my.c ****                            #if USE_OSTREAM
 581:App/STM32F4-Discovery/printf_my.c ****                                stream,
 582:App/STM32F4-Discovery/printf_my.c ****                            #else
 583:App/STM32F4-Discovery/printf_my.c ****                                out,
 584:App/STM32F4-Discovery/printf_my.c ****                            #endif
 585:App/STM32F4-Discovery/printf_my.c ****                            '%', max_output_len, cur_output_char_p);
 586:App/STM32F4-Discovery/printf_my.c ****                 if (result<0) return result;
 1506              		.loc 1 586 0
 1507 04ce 3B6F     		ldr	r3, [r7, #112]
 1508 04d0 002B     		cmp	r3, #0
 1509 04d2 01DA     		bge	.L105
 1510              		.loc 1 586 0 is_stmt 0 discriminator 1
 1511 04d4 3B6F     		ldr	r3, [r7, #112]
 1512 04d6 50E0     		b	.L112
 1513              	.L105:
 587:App/STM32F4-Discovery/printf_my.c ****                 ++pc;
 1514              		.loc 1 587 0 is_stmt 1
 1515 04d8 D7F8AC30 		ldr	r3, [r7, #172]
 1516 04dc 0133     		adds	r3, r3, #1
 1517 04de C7F8AC30 		str	r3, [r7, #172]
 588:App/STM32F4-Discovery/printf_my.c **** 
 589:App/STM32F4-Discovery/printf_my.c ****                 result = printchar (
 590:App/STM32F4-Discovery/printf_my.c ****                            #if USE_OSTREAM
 591:App/STM32F4-Discovery/printf_my.c ****                                stream,
 592:App/STM32F4-Discovery/printf_my.c ****                            #else
 593:App/STM32F4-Discovery/printf_my.c ****                                out,
 594:App/STM32F4-Discovery/printf_my.c ****                            #endif
 595:App/STM32F4-Discovery/printf_my.c ****                            *format, max_output_len, cur_output_char_p);
 1518              		.loc 1 595 0
 1519 04e2 3B68     		ldr	r3, [r7]
 1520 04e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 589:App/STM32F4-Discovery/printf_my.c ****                 result = printchar (
 1521              		.loc 1 589 0
 1522 04e6 F868     		ldr	r0, [r7, #12]
 1523 04e8 1946     		mov	r1, r3
 1524 04ea 7A68     		ldr	r2, [r7, #4]
 1525 04ec D7F8A430 		ldr	r3, [r7, #164]
 1526 04f0 FFF7FEFF 		bl	printchar
 1527 04f4 3867     		str	r0, [r7, #112]
 596:App/STM32F4-Discovery/printf_my.c ****                 if (result<0) return result;
 1528              		.loc 1 596 0
 1529 04f6 3B6F     		ldr	r3, [r7, #112]
 1530 04f8 002B     		cmp	r3, #0
 1531 04fa 01DA     		bge	.L106
 1532              		.loc 1 596 0 is_stmt 0 discriminator 1
 1533 04fc 3B6F     		ldr	r3, [r7, #112]
 1534 04fe 3CE0     		b	.L112
 1535              	.L106:
 597:App/STM32F4-Discovery/printf_my.c ****                 ++pc;
 1536              		.loc 1 597 0 is_stmt 1
 1537 0500 D7F8AC30 		ldr	r3, [r7, #172]
 1538 0504 0133     		adds	r3, r3, #1
 1539 0506 C7F8AC30 		str	r3, [r7, #172]
 598:App/STM32F4-Discovery/printf_my.c **** 
 599:App/STM32F4-Discovery/printf_my.c ****                 use_leading_plus = 0 ;  //  reset this flag after printing one value
 1540              		.loc 1 599 0
 1541 050a 0023     		movs	r3, #0
 1542 050c C7F8A830 		str	r3, [r7, #168]
 1543              	.LBE14:
 600:App/STM32F4-Discovery/printf_my.c ****             }
 601:App/STM32F4-Discovery/printf_my.c ****                 break;
 1544              		.loc 1 601 0
 1545 0510 00BF     		nop
 1546              	.L98:
 1547 0512 15E0     		b	.L107
 1548              	.L114:
 1549              		.align	2
 1550              	.L113:
 1551 0514 00000000 		.word	.LC0
 1552              	.L69:
 1553              	.LBB15:
 602:App/STM32F4-Discovery/printf_my.c ****             }
 603:App/STM32F4-Discovery/printf_my.c ****         } else {
 604:App/STM32F4-Discovery/printf_my.c ****             out_lbl: {
 605:App/STM32F4-Discovery/printf_my.c ****                 int result = printchar (
 606:App/STM32F4-Discovery/printf_my.c ****                            #if USE_OSTREAM
 607:App/STM32F4-Discovery/printf_my.c ****                                stream,
 608:App/STM32F4-Discovery/printf_my.c ****                            #else
 609:App/STM32F4-Discovery/printf_my.c ****                                out,
 610:App/STM32F4-Discovery/printf_my.c ****                            #endif
 611:App/STM32F4-Discovery/printf_my.c ****                            *format, max_output_len, cur_output_char_p);
 1554              		.loc 1 611 0
 1555 0518 3B68     		ldr	r3, [r7]
 1556 051a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 605:App/STM32F4-Discovery/printf_my.c ****                 int result = printchar (
 1557              		.loc 1 605 0
 1558 051c F868     		ldr	r0, [r7, #12]
 1559 051e 1946     		mov	r1, r3
 1560 0520 7A68     		ldr	r2, [r7, #4]
 1561 0522 D7F8A430 		ldr	r3, [r7, #164]
 1562 0526 FFF7FEFF 		bl	printchar
 1563 052a F866     		str	r0, [r7, #108]
 612:App/STM32F4-Discovery/printf_my.c ****                 if (result<0) return result;
 1564              		.loc 1 612 0
 1565 052c FB6E     		ldr	r3, [r7, #108]
 1566 052e 002B     		cmp	r3, #0
 1567 0530 01DA     		bge	.L108
 1568              		.loc 1 612 0 is_stmt 0 discriminator 1
 1569 0532 FB6E     		ldr	r3, [r7, #108]
 1570 0534 21E0     		b	.L112
 1571              	.L108:
 613:App/STM32F4-Discovery/printf_my.c ****                 ++pc;
 1572              		.loc 1 613 0 is_stmt 1
 1573 0536 D7F8AC30 		ldr	r3, [r7, #172]
 1574 053a 0133     		adds	r3, r3, #1
 1575 053c C7F8AC30 		str	r3, [r7, #172]
 1576              	.L107:
 1577              	.LBE15:
 419:App/STM32F4-Discovery/printf_my.c ****     for (; *format != 0; ++format) {
 1578              		.loc 1 419 0
 1579 0540 3B68     		ldr	r3, [r7]
 1580 0542 0133     		adds	r3, r3, #1
 1581 0544 3B60     		str	r3, [r7]
 1582              	.L68:
 419:App/STM32F4-Discovery/printf_my.c ****     for (; *format != 0; ++format) {
 1583              		.loc 1 419 0 is_stmt 0 discriminator 1
 1584 0546 3B68     		ldr	r3, [r7]
 1585 0548 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1586 054a 002B     		cmp	r3, #0
 1587 054c 7FF472AD 		bne	.L109
 1588              	.L71:
 614:App/STM32F4-Discovery/printf_my.c ****             }
 615:App/STM32F4-Discovery/printf_my.c ****         }
 616:App/STM32F4-Discovery/printf_my.c ****     }  //  for each char in format string
 617:App/STM32F4-Discovery/printf_my.c **** 
 618:App/STM32F4-Discovery/printf_my.c ****     max_output_len++; // make room for a trailing '\0'
 1589              		.loc 1 618 0 is_stmt 1
 1590 0550 7B68     		ldr	r3, [r7, #4]
 1591 0552 0133     		adds	r3, r3, #1
 1592 0554 7B60     		str	r3, [r7, #4]
 619:App/STM32F4-Discovery/printf_my.c **** 
 620:App/STM32F4-Discovery/printf_my.c ****     if (!(flags & PRINTF2_FLAGS_NO_TRAILING_NULL)) {
 1593              		.loc 1 620 0
 1594 0556 BB68     		ldr	r3, [r7, #8]
 1595 0558 03F00103 		and	r3, r3, #1
 1596 055c 002B     		cmp	r3, #0
 1597 055e 0AD1     		bne	.L110
 621:App/STM32F4-Discovery/printf_my.c ****         #if USE_OSTREAM
 622:App/STM32F4-Discovery/printf_my.c ****             int result = printchar (stream, '\0', max_output_len, cur_output_char_p);
 623:App/STM32F4-Discovery/printf_my.c ****             if (result<0) return result;
 624:App/STM32F4-Discovery/printf_my.c ****         #else
 625:App/STM32F4-Discovery/printf_my.c ****             if (out) //lint !e850
 1598              		.loc 1 625 0
 1599 0560 FB68     		ldr	r3, [r7, #12]
 1600 0562 002B     		cmp	r3, #0
 1601 0564 04D0     		beq	.L111
 626:App/STM32F4-Discovery/printf_my.c ****                 **out = '\0';
 1602              		.loc 1 626 0
 1603 0566 FB68     		ldr	r3, [r7, #12]
 1604 0568 1B68     		ldr	r3, [r3]
 1605 056a 0022     		movs	r2, #0
 1606 056c 1A70     		strb	r2, [r3]
 1607 056e 02E0     		b	.L110
 1608              	.L111:
 627:App/STM32F4-Discovery/printf_my.c ****             else
 628:App/STM32F4-Discovery/printf_my.c ****                 return PRINTF2_NULL_PTR;
 1609              		.loc 1 628 0
 1610 0570 6FF00103 		mvn	r3, #1
 1611 0574 01E0     		b	.L112
 1612              	.L110:
 629:App/STM32F4-Discovery/printf_my.c ****         #endif
 630:App/STM32F4-Discovery/printf_my.c ****     }
 631:App/STM32F4-Discovery/printf_my.c **** 
 632:App/STM32F4-Discovery/printf_my.c ****     return pc;
 1613              		.loc 1 632 0
 1614 0576 D7F8AC30 		ldr	r3, [r7, #172]
 1615              	.L112:
 633:App/STM32F4-Discovery/printf_my.c **** }
 1616              		.loc 1 633 0
 1617 057a 1846     		mov	r0, r3
 1618 057c C037     		adds	r7, r7, #192
 1619 057e BD46     		mov	sp, r7
 1620              		@ sp needed
 1621 0580 80BD     		pop	{r7, pc}
 1622              		.cfi_endproc
 1623              	.LFE4:
 1625 0582 00BF     		.section	.text.stringff,"ax",%progbits
 1626              		.align	2
 1627              		.global	stringff
 1628              		.thumb
 1629              		.thumb_func
 1631              	stringff:
 1632              	.LFB5:
 634:App/STM32F4-Discovery/printf_my.c **** 
 635:App/STM32F4-Discovery/printf_my.c **** //****************************************************************************
 636:App/STM32F4-Discovery/printf_my.c **** //  assuming sizeof(void *) == sizeof(int)
 637:App/STM32F4-Discovery/printf_my.c **** //  This function is not valid in embedded projects which don't
 638:App/STM32F4-Discovery/printf_my.c **** //  have a meaningful stdout device.
 639:App/STM32F4-Discovery/printf_my.c **** //****************************************************************************
 640:App/STM32F4-Discovery/printf_my.c **** #ifdef TEST_PRINTF
 641:App/STM32F4-Discovery/printf_my.c **** #ifdef TEST_EXPECTED_OUTPUT
 642:App/STM32F4-Discovery/printf_my.c **** #define termf(format, ...) printf( format, ##__VA_ARGS__ )
 643:App/STM32F4-Discovery/printf_my.c **** #elif defined TEST_EMBEDDED
 644:App/STM32F4-Discovery/printf_my.c **** int termf (const char *format, ...)
 645:App/STM32F4-Discovery/printf_my.c **** {
 646:App/STM32F4-Discovery/printf_my.c ****     const int MAX_LENGTH = 200;
 647:App/STM32F4-Discovery/printf_my.c ****     char s[MAX_LENGTH];
 648:App/STM32F4-Discovery/printf_my.c ****     va_list vargs;
 649:App/STM32F4-Discovery/printf_my.c ****     va_start(vargs,format);
 650:App/STM32F4-Discovery/printf_my.c ****     int result = stringfnv (s, MAX_LENGTH, format, vargs);
 651:App/STM32F4-Discovery/printf_my.c ****     va_end(vargs);
 652:App/STM32F4-Discovery/printf_my.c ****     LOG_STRING(s);
 653:App/STM32F4-Discovery/printf_my.c ****     return result;
 654:App/STM32F4-Discovery/printf_my.c **** }
 655:App/STM32F4-Discovery/printf_my.c **** #else
 656:App/STM32F4-Discovery/printf_my.c **** int termf (const char *format, ...)
 657:App/STM32F4-Discovery/printf_my.c **** {
 658:App/STM32F4-Discovery/printf_my.c ****     va_list vargs;
 659:App/STM32F4-Discovery/printf_my.c ****     va_start(vargs,format);
 660:App/STM32F4-Discovery/printf_my.c ****     int result = print (0, PRINTF2_FLAGS_NONE, UINT_MAX, format, vargs);
 661:App/STM32F4-Discovery/printf_my.c ****     va_end(vargs);
 662:App/STM32F4-Discovery/printf_my.c ****     return result;
 663:App/STM32F4-Discovery/printf_my.c **** }  //lint !e715
 664:App/STM32F4-Discovery/printf_my.c **** #endif
 665:App/STM32F4-Discovery/printf_my.c **** #endif
 666:App/STM32F4-Discovery/printf_my.c **** 
 667:App/STM32F4-Discovery/printf_my.c **** //****************************************************************************
 668:App/STM32F4-Discovery/printf_my.c **** //  assuming sizeof(void *) == sizeof(int)
 669:App/STM32F4-Discovery/printf_my.c **** //  This function is not valid in embedded projects which don't
 670:App/STM32F4-Discovery/printf_my.c **** //  have a meaningful stdout device.
 671:App/STM32F4-Discovery/printf_my.c **** //****************************************************************************
 672:App/STM32F4-Discovery/printf_my.c **** #ifdef TEST_PRINTF
 673:App/STM32F4-Discovery/printf_my.c **** #ifdef TEST_EXPECTED_OUTPUT
 674:App/STM32F4-Discovery/printf_my.c **** #define termfn(max_len, format, ...) \
 675:App/STM32F4-Discovery/printf_my.c ****   { \
 676:App/STM32F4-Discovery/printf_my.c ****     const int MAX_LENGTH = 200; \
 677:App/STM32F4-Discovery/printf_my.c ****     char s[MAX_LENGTH]; \
 678:App/STM32F4-Discovery/printf_my.c ****     assert(max_len<MAX_LENGTH); \
 679:App/STM32F4-Discovery/printf_my.c ****     snprintf(s, max_len, format, ##__VA_ARGS__ ); \
 680:App/STM32F4-Discovery/printf_my.c ****     printf( "%s", s ); \
 681:App/STM32F4-Discovery/printf_my.c ****   } 
 682:App/STM32F4-Discovery/printf_my.c **** #elif defined TEST_EMBEDDED
 683:App/STM32F4-Discovery/printf_my.c **** int termfn (uint max_len, const char *format, ...)
 684:App/STM32F4-Discovery/printf_my.c **** {
 685:App/STM32F4-Discovery/printf_my.c ****     const int MAX_LENGTH = 200;
 686:App/STM32F4-Discovery/printf_my.c ****     char s[MAX_LENGTH];
 687:App/STM32F4-Discovery/printf_my.c ****     assert(max_len<MAX_LENGTH);
 688:App/STM32F4-Discovery/printf_my.c ****     va_list vargs;
 689:App/STM32F4-Discovery/printf_my.c ****     va_start(vargs,format);
 690:App/STM32F4-Discovery/printf_my.c ****     int result = stringfnv (s, max_len, format, vargs);
 691:App/STM32F4-Discovery/printf_my.c ****     va_end(vargs);
 692:App/STM32F4-Discovery/printf_my.c ****     LOG_STRING(s);
 693:App/STM32F4-Discovery/printf_my.c ****     return result;
 694:App/STM32F4-Discovery/printf_my.c **** }
 695:App/STM32F4-Discovery/printf_my.c **** #else
 696:App/STM32F4-Discovery/printf_my.c **** int termfn(uint max_len, const char *format, ...)
 697:App/STM32F4-Discovery/printf_my.c **** {
 698:App/STM32F4-Discovery/printf_my.c ****     va_list vargs;
 699:App/STM32F4-Discovery/printf_my.c ****     va_start(vargs,format);
 700:App/STM32F4-Discovery/printf_my.c ****     int result = print (0, PRINTF2_FLAGS_NONE, max_len, format, vargs);
 701:App/STM32F4-Discovery/printf_my.c ****     va_end(vargs);
 702:App/STM32F4-Discovery/printf_my.c ****     return result;
 703:App/STM32F4-Discovery/printf_my.c **** }  //lint !e715
 704:App/STM32F4-Discovery/printf_my.c **** #endif
 705:App/STM32F4-Discovery/printf_my.c **** #endif
 706:App/STM32F4-Discovery/printf_my.c **** 
 707:App/STM32F4-Discovery/printf_my.c **** //****************************************************************************
 708:App/STM32F4-Discovery/printf_my.c **** int stringff (char *out, unsigned int flags, const char *format, ...)
 709:App/STM32F4-Discovery/printf_my.c **** {
 1633              		.loc 1 709 0
 1634              		.cfi_startproc
 1635              		@ args = 4, pretend = 8, frame = 16
 1636              		@ frame_needed = 1, uses_anonymous_args = 1
 1637 0000 0CB4     		push	{r2, r3}
 1638              	.LCFI15:
 1639              		.cfi_def_cfa_offset 8
 1640              		.cfi_offset 2, -8
 1641              		.cfi_offset 3, -4
 1642 0002 80B5     		push	{r7, lr}
 1643              	.LCFI16:
 1644              		.cfi_def_cfa_offset 16
 1645              		.cfi_offset 7, -16
 1646              		.cfi_offset 14, -12
 1647 0004 86B0     		sub	sp, sp, #24
 1648              	.LCFI17:
 1649              		.cfi_def_cfa_offset 40
 1650 0006 02AF     		add	r7, sp, #8
 1651              	.LCFI18:
 1652              		.cfi_def_cfa 7, 32
 1653 0008 7860     		str	r0, [r7, #4]
 1654 000a 3960     		str	r1, [r7]
 710:App/STM32F4-Discovery/printf_my.c ****     #if USE_OSTREAM
 711:App/STM32F4-Discovery/printf_my.c ****         pb_ostream_t oStream = pb_ostream_from_buffer((uint8_t *)out, UINT_MAX);
 712:App/STM32F4-Discovery/printf_my.c ****     #endif
 713:App/STM32F4-Discovery/printf_my.c **** 
 714:App/STM32F4-Discovery/printf_my.c ****     va_list vargs;
 715:App/STM32F4-Discovery/printf_my.c ****     va_start(vargs,format);
 1655              		.loc 1 715 0
 1656 000c 07F11C03 		add	r3, r7, #28
 1657 0010 BB60     		str	r3, [r7, #8]
 716:App/STM32F4-Discovery/printf_my.c ****     int result = print (
 1658              		.loc 1 716 0
 1659 0012 3B1D     		adds	r3, r7, #4
 1660 0014 BA68     		ldr	r2, [r7, #8]
 1661 0016 0092     		str	r2, [sp]
 1662 0018 1846     		mov	r0, r3
 1663 001a 3968     		ldr	r1, [r7]
 1664 001c 4FF0FF32 		mov	r2, #-1
 1665 0020 BB69     		ldr	r3, [r7, #24]
 1666 0022 FFF7FEFF 		bl	print
 1667 0026 F860     		str	r0, [r7, #12]
 717:App/STM32F4-Discovery/printf_my.c ****                         #if USE_OSTREAM
 718:App/STM32F4-Discovery/printf_my.c ****                             &oStream,
 719:App/STM32F4-Discovery/printf_my.c ****                         #else
 720:App/STM32F4-Discovery/printf_my.c ****                             &out,
 721:App/STM32F4-Discovery/printf_my.c ****                         #endif
 722:App/STM32F4-Discovery/printf_my.c ****                         flags,
 723:App/STM32F4-Discovery/printf_my.c ****                         UINT_MAX, format, vargs);
 724:App/STM32F4-Discovery/printf_my.c ****     va_end(vargs);
 725:App/STM32F4-Discovery/printf_my.c ****     return result;
 1668              		.loc 1 725 0
 1669 0028 FB68     		ldr	r3, [r7, #12]
 726:App/STM32F4-Discovery/printf_my.c **** }
 1670              		.loc 1 726 0
 1671 002a 1846     		mov	r0, r3
 1672 002c 1037     		adds	r7, r7, #16
 1673 002e BD46     		mov	sp, r7
 1674              		@ sp needed
 1675 0030 BDE88040 		pop	{r7, lr}
 1676 0034 02B0     		add	sp, sp, #8
 1677 0036 7047     		bx	lr
 1678              		.cfi_endproc
 1679              	.LFE5:
 1681              		.section	.text.stringf,"ax",%progbits
 1682              		.align	2
 1683              		.global	stringf
 1684              		.thumb
 1685              		.thumb_func
 1687              	stringf:
 1688              	.LFB6:
 727:App/STM32F4-Discovery/printf_my.c **** 
 728:App/STM32F4-Discovery/printf_my.c **** 
 729:App/STM32F4-Discovery/printf_my.c **** //****************************************************************************
 730:App/STM32F4-Discovery/printf_my.c **** int stringf (char *out, const char *format, ...)
 731:App/STM32F4-Discovery/printf_my.c **** {
 1689              		.loc 1 731 0
 1690              		.cfi_startproc
 1691              		@ args = 4, pretend = 12, frame = 16
 1692              		@ frame_needed = 1, uses_anonymous_args = 1
 1693 0000 0EB4     		push	{r1, r2, r3}
 1694              	.LCFI19:
 1695              		.cfi_def_cfa_offset 12
 1696              		.cfi_offset 1, -12
 1697              		.cfi_offset 2, -8
 1698              		.cfi_offset 3, -4
 1699 0002 80B5     		push	{r7, lr}
 1700              	.LCFI20:
 1701              		.cfi_def_cfa_offset 20
 1702              		.cfi_offset 7, -20
 1703              		.cfi_offset 14, -16
 1704 0004 87B0     		sub	sp, sp, #28
 1705              	.LCFI21:
 1706              		.cfi_def_cfa_offset 48
 1707 0006 02AF     		add	r7, sp, #8
 1708              	.LCFI22:
 1709              		.cfi_def_cfa 7, 40
 1710 0008 7860     		str	r0, [r7, #4]
 732:App/STM32F4-Discovery/printf_my.c ****     #if USE_OSTREAM
 733:App/STM32F4-Discovery/printf_my.c ****         pb_ostream_t oStream = pb_ostream_from_buffer((uint8_t *)out, UINT_MAX);
 734:App/STM32F4-Discovery/printf_my.c ****     #endif
 735:App/STM32F4-Discovery/printf_my.c **** 
 736:App/STM32F4-Discovery/printf_my.c ****     va_list vargs;
 737:App/STM32F4-Discovery/printf_my.c ****     va_start(vargs,format);
 1711              		.loc 1 737 0
 1712 000a 07F12003 		add	r3, r7, #32
 1713 000e BB60     		str	r3, [r7, #8]
 738:App/STM32F4-Discovery/printf_my.c ****     int result = print (
 1714              		.loc 1 738 0
 1715 0010 3B1D     		adds	r3, r7, #4
 1716 0012 BA68     		ldr	r2, [r7, #8]
 1717 0014 0092     		str	r2, [sp]
 1718 0016 1846     		mov	r0, r3
 1719 0018 0021     		movs	r1, #0
 1720 001a 4FF0FF32 		mov	r2, #-1
 1721 001e FB69     		ldr	r3, [r7, #28]
 1722 0020 FFF7FEFF 		bl	print
 1723 0024 F860     		str	r0, [r7, #12]
 739:App/STM32F4-Discovery/printf_my.c ****                         #if USE_OSTREAM
 740:App/STM32F4-Discovery/printf_my.c ****                             &oStream,
 741:App/STM32F4-Discovery/printf_my.c ****                         #else
 742:App/STM32F4-Discovery/printf_my.c ****                             &out,
 743:App/STM32F4-Discovery/printf_my.c ****                         #endif
 744:App/STM32F4-Discovery/printf_my.c ****                         PRINTF2_FLAGS_NONE,
 745:App/STM32F4-Discovery/printf_my.c ****                         UINT_MAX, format, vargs);
 746:App/STM32F4-Discovery/printf_my.c ****     va_end(vargs);
 747:App/STM32F4-Discovery/printf_my.c ****     return result;
 1724              		.loc 1 747 0
 1725 0026 FB68     		ldr	r3, [r7, #12]
 748:App/STM32F4-Discovery/printf_my.c **** }
 1726              		.loc 1 748 0
 1727 0028 1846     		mov	r0, r3
 1728 002a 1437     		adds	r7, r7, #20
 1729 002c BD46     		mov	sp, r7
 1730              		@ sp needed
 1731 002e BDE88040 		pop	{r7, lr}
 1732 0032 03B0     		add	sp, sp, #12
 1733 0034 7047     		bx	lr
 1734              		.cfi_endproc
 1735              	.LFE6:
 1737 0036 00BF     		.section	.text.stringffn,"ax",%progbits
 1738              		.align	2
 1739              		.global	stringffn
 1740              		.thumb
 1741              		.thumb_func
 1743              	stringffn:
 1744              	.LFB7:
 749:App/STM32F4-Discovery/printf_my.c **** 
 750:App/STM32F4-Discovery/printf_my.c **** 
 751:App/STM32F4-Discovery/printf_my.c **** #if USE_OSTREAM
 752:App/STM32F4-Discovery/printf_my.c **** //****************************************************************************
 753:App/STM32F4-Discovery/printf_my.c **** int stringffs (pb_ostream_t *stream, unsigned int flags, const char *format, ...)
 754:App/STM32F4-Discovery/printf_my.c **** {
 755:App/STM32F4-Discovery/printf_my.c ****     va_list vargs;
 756:App/STM32F4-Discovery/printf_my.c ****     va_start(vargs,format);
 757:App/STM32F4-Discovery/printf_my.c ****     int result = print (
 758:App/STM32F4-Discovery/printf_my.c ****                         stream,
 759:App/STM32F4-Discovery/printf_my.c ****                         flags,
 760:App/STM32F4-Discovery/printf_my.c ****                         stream->max_size, format, vargs);
 761:App/STM32F4-Discovery/printf_my.c ****     va_end(vargs);
 762:App/STM32F4-Discovery/printf_my.c ****     return result;
 763:App/STM32F4-Discovery/printf_my.c **** }
 764:App/STM32F4-Discovery/printf_my.c **** 
 765:App/STM32F4-Discovery/printf_my.c **** //****************************************************************************
 766:App/STM32F4-Discovery/printf_my.c **** int stringfs (pb_ostream_t *stream, const char *format, ...)
 767:App/STM32F4-Discovery/printf_my.c **** {
 768:App/STM32F4-Discovery/printf_my.c ****     va_list vargs;
 769:App/STM32F4-Discovery/printf_my.c ****     va_start(vargs,format);
 770:App/STM32F4-Discovery/printf_my.c ****     int result = print (
 771:App/STM32F4-Discovery/printf_my.c ****                         stream,
 772:App/STM32F4-Discovery/printf_my.c ****                         PRINTF2_FLAGS_NONE,
 773:App/STM32F4-Discovery/printf_my.c ****                         stream->max_size, format, vargs);
 774:App/STM32F4-Discovery/printf_my.c ****     va_end(vargs);
 775:App/STM32F4-Discovery/printf_my.c ****     return result;
 776:App/STM32F4-Discovery/printf_my.c **** }
 777:App/STM32F4-Discovery/printf_my.c **** #endif
 778:App/STM32F4-Discovery/printf_my.c **** 
 779:App/STM32F4-Discovery/printf_my.c **** 
 780:App/STM32F4-Discovery/printf_my.c **** //****************************************************************************
 781:App/STM32F4-Discovery/printf_my.c **** int stringffn(char *out,  unsigned int flags, unsigned int max_len, const char *format, ...)
 782:App/STM32F4-Discovery/printf_my.c **** {
 1745              		.loc 1 782 0
 1746              		.cfi_startproc
 1747              		@ args = 4, pretend = 4, frame = 24
 1748              		@ frame_needed = 1, uses_anonymous_args = 1
 1749 0000 08B4     		push	{r3}
 1750              	.LCFI23:
 1751              		.cfi_def_cfa_offset 4
 1752              		.cfi_offset 3, -4
 1753 0002 80B5     		push	{r7, lr}
 1754              	.LCFI24:
 1755              		.cfi_def_cfa_offset 12
 1756              		.cfi_offset 7, -12
 1757              		.cfi_offset 14, -8
 1758 0004 89B0     		sub	sp, sp, #36
 1759              	.LCFI25:
 1760              		.cfi_def_cfa_offset 48
 1761 0006 02AF     		add	r7, sp, #8
 1762              	.LCFI26:
 1763              		.cfi_def_cfa 7, 40
 1764 0008 F860     		str	r0, [r7, #12]
 1765 000a B960     		str	r1, [r7, #8]
 1766 000c 7A60     		str	r2, [r7, #4]
 783:App/STM32F4-Discovery/printf_my.c ****     #if USE_OSTREAM
 784:App/STM32F4-Discovery/printf_my.c ****         pb_ostream_t oStream = pb_ostream_from_buffer((uint8_t *)out, max_len);
 785:App/STM32F4-Discovery/printf_my.c ****     #endif
 786:App/STM32F4-Discovery/printf_my.c **** 
 787:App/STM32F4-Discovery/printf_my.c ****     va_list vargs;
 788:App/STM32F4-Discovery/printf_my.c ****     va_start(vargs,format);
 1767              		.loc 1 788 0
 1768 000e 07F12803 		add	r3, r7, #40
 1769 0012 3B61     		str	r3, [r7, #16]
 789:App/STM32F4-Discovery/printf_my.c ****     int result = print (
 1770              		.loc 1 789 0
 1771 0014 07F10C03 		add	r3, r7, #12
 1772 0018 3A69     		ldr	r2, [r7, #16]
 1773 001a 0092     		str	r2, [sp]
 1774 001c 1846     		mov	r0, r3
 1775 001e B968     		ldr	r1, [r7, #8]
 1776 0020 7A68     		ldr	r2, [r7, #4]
 1777 0022 7B6A     		ldr	r3, [r7, #36]
 1778 0024 FFF7FEFF 		bl	print
 1779 0028 7861     		str	r0, [r7, #20]
 790:App/STM32F4-Discovery/printf_my.c ****                         #if USE_OSTREAM
 791:App/STM32F4-Discovery/printf_my.c ****                             &oStream,
 792:App/STM32F4-Discovery/printf_my.c ****                         #else
 793:App/STM32F4-Discovery/printf_my.c ****                             &out,
 794:App/STM32F4-Discovery/printf_my.c ****                         #endif
 795:App/STM32F4-Discovery/printf_my.c ****                         flags,
 796:App/STM32F4-Discovery/printf_my.c ****                         max_len, format, vargs);
 797:App/STM32F4-Discovery/printf_my.c ****     va_end(vargs);
 798:App/STM32F4-Discovery/printf_my.c ****     return result;
 1780              		.loc 1 798 0
 1781 002a 7B69     		ldr	r3, [r7, #20]
 799:App/STM32F4-Discovery/printf_my.c **** }
 1782              		.loc 1 799 0
 1783 002c 1846     		mov	r0, r3
 1784 002e 1C37     		adds	r7, r7, #28
 1785 0030 BD46     		mov	sp, r7
 1786              		@ sp needed
 1787 0032 BDE88040 		pop	{r7, lr}
 1788 0036 01B0     		add	sp, sp, #4
 1789 0038 7047     		bx	lr
 1790              		.cfi_endproc
 1791              	.LFE7:
 1793 003a 00BF     		.section	.text.stringfn,"ax",%progbits
 1794              		.align	2
 1795              		.global	stringfn
 1796              		.thumb
 1797              		.thumb_func
 1799              	stringfn:
 1800              	.LFB8:
 800:App/STM32F4-Discovery/printf_my.c **** 
 801:App/STM32F4-Discovery/printf_my.c **** 
 802:App/STM32F4-Discovery/printf_my.c **** //****************************************************************************
 803:App/STM32F4-Discovery/printf_my.c **** //lint -esym(714, stringfn)
 804:App/STM32F4-Discovery/printf_my.c **** //lint -esym(759, stringfn)
 805:App/STM32F4-Discovery/printf_my.c **** //lint -esym(765, stringfn)
 806:App/STM32F4-Discovery/printf_my.c **** int stringfn(char *out, unsigned int max_len, const char *format, ...)
 807:App/STM32F4-Discovery/printf_my.c **** {
 1801              		.loc 1 807 0
 1802              		.cfi_startproc
 1803              		@ args = 4, pretend = 8, frame = 16
 1804              		@ frame_needed = 1, uses_anonymous_args = 1
 1805 0000 0CB4     		push	{r2, r3}
 1806              	.LCFI27:
 1807              		.cfi_def_cfa_offset 8
 1808              		.cfi_offset 2, -8
 1809              		.cfi_offset 3, -4
 1810 0002 80B5     		push	{r7, lr}
 1811              	.LCFI28:
 1812              		.cfi_def_cfa_offset 16
 1813              		.cfi_offset 7, -16
 1814              		.cfi_offset 14, -12
 1815 0004 86B0     		sub	sp, sp, #24
 1816              	.LCFI29:
 1817              		.cfi_def_cfa_offset 40
 1818 0006 02AF     		add	r7, sp, #8
 1819              	.LCFI30:
 1820              		.cfi_def_cfa 7, 32
 1821 0008 7860     		str	r0, [r7, #4]
 1822 000a 3960     		str	r1, [r7]
 808:App/STM32F4-Discovery/printf_my.c ****     #if USE_OSTREAM
 809:App/STM32F4-Discovery/printf_my.c ****         pb_ostream_t oStream = pb_ostream_from_buffer((uint8_t *)out, max_len);
 810:App/STM32F4-Discovery/printf_my.c ****     #endif
 811:App/STM32F4-Discovery/printf_my.c **** 
 812:App/STM32F4-Discovery/printf_my.c ****     va_list vargs;
 813:App/STM32F4-Discovery/printf_my.c ****     va_start(vargs,format);
 1823              		.loc 1 813 0
 1824 000c 07F11C03 		add	r3, r7, #28
 1825 0010 BB60     		str	r3, [r7, #8]
 814:App/STM32F4-Discovery/printf_my.c ****     int result = print (
 1826              		.loc 1 814 0
 1827 0012 3B1D     		adds	r3, r7, #4
 1828 0014 BA68     		ldr	r2, [r7, #8]
 1829 0016 0092     		str	r2, [sp]
 1830 0018 1846     		mov	r0, r3
 1831 001a 0021     		movs	r1, #0
 1832 001c 3A68     		ldr	r2, [r7]
 1833 001e BB69     		ldr	r3, [r7, #24]
 1834 0020 FFF7FEFF 		bl	print
 1835 0024 F860     		str	r0, [r7, #12]
 815:App/STM32F4-Discovery/printf_my.c ****                         #if USE_OSTREAM
 816:App/STM32F4-Discovery/printf_my.c ****                             &oStream,
 817:App/STM32F4-Discovery/printf_my.c ****                         #else
 818:App/STM32F4-Discovery/printf_my.c ****                             &out,
 819:App/STM32F4-Discovery/printf_my.c ****                         #endif
 820:App/STM32F4-Discovery/printf_my.c ****                         PRINTF2_FLAGS_NONE,
 821:App/STM32F4-Discovery/printf_my.c ****                         max_len, format, vargs);
 822:App/STM32F4-Discovery/printf_my.c ****     va_end(vargs);
 823:App/STM32F4-Discovery/printf_my.c ****     return result;
 1836              		.loc 1 823 0
 1837 0026 FB68     		ldr	r3, [r7, #12]
 824:App/STM32F4-Discovery/printf_my.c **** }
 1838              		.loc 1 824 0
 1839 0028 1846     		mov	r0, r3
 1840 002a 1037     		adds	r7, r7, #16
 1841 002c BD46     		mov	sp, r7
 1842              		@ sp needed
 1843 002e BDE88040 		pop	{r7, lr}
 1844 0032 02B0     		add	sp, sp, #8
 1845 0034 7047     		bx	lr
 1846              		.cfi_endproc
 1847              	.LFE8:
 1849 0036 00BF     		.section	.text.stringffnv,"ax",%progbits
 1850              		.align	2
 1851              		.global	stringffnv
 1852              		.thumb
 1853              		.thumb_func
 1855              	stringffnv:
 1856              	.LFB9:
 825:App/STM32F4-Discovery/printf_my.c **** 
 826:App/STM32F4-Discovery/printf_my.c **** #if USE_OSTREAM
 827:App/STM32F4-Discovery/printf_my.c **** //****************************************************************************
 828:App/STM32F4-Discovery/printf_my.c **** int stringffns(pb_ostream_t *stream, unsigned int flags, unsigned int max_len, const char *format, 
 829:App/STM32F4-Discovery/printf_my.c **** {
 830:App/STM32F4-Discovery/printf_my.c ****     va_list vargs;
 831:App/STM32F4-Discovery/printf_my.c ****     va_start(vargs,format);
 832:App/STM32F4-Discovery/printf_my.c ****     int result = print (
 833:App/STM32F4-Discovery/printf_my.c ****                         stream,
 834:App/STM32F4-Discovery/printf_my.c ****                         flags,
 835:App/STM32F4-Discovery/printf_my.c ****                         max_len, format, vargs);
 836:App/STM32F4-Discovery/printf_my.c ****     va_end(vargs);
 837:App/STM32F4-Discovery/printf_my.c ****     return result;
 838:App/STM32F4-Discovery/printf_my.c **** }
 839:App/STM32F4-Discovery/printf_my.c **** 
 840:App/STM32F4-Discovery/printf_my.c **** //****************************************************************************
 841:App/STM32F4-Discovery/printf_my.c **** int stringfns(pb_ostream_t *stream, unsigned int max_len, const char *format, ...)
 842:App/STM32F4-Discovery/printf_my.c **** {
 843:App/STM32F4-Discovery/printf_my.c ****     va_list vargs;
 844:App/STM32F4-Discovery/printf_my.c ****     va_start(vargs,format);
 845:App/STM32F4-Discovery/printf_my.c ****     int result = print (
 846:App/STM32F4-Discovery/printf_my.c ****                         stream,
 847:App/STM32F4-Discovery/printf_my.c ****                         PRINTF2_FLAGS_NONE,
 848:App/STM32F4-Discovery/printf_my.c ****                         max_len, format, vargs);
 849:App/STM32F4-Discovery/printf_my.c ****     va_end(vargs);
 850:App/STM32F4-Discovery/printf_my.c ****     return result;
 851:App/STM32F4-Discovery/printf_my.c **** }
 852:App/STM32F4-Discovery/printf_my.c **** #endif
 853:App/STM32F4-Discovery/printf_my.c **** 
 854:App/STM32F4-Discovery/printf_my.c **** //****************************************************************************
 855:App/STM32F4-Discovery/printf_my.c **** int stringffnv(char *out, unsigned int flags, unsigned int max_len, const char *format, va_list var
 856:App/STM32F4-Discovery/printf_my.c **** {
 1857              		.loc 1 856 0
 1858              		.cfi_startproc
 1859              		@ args = 4, pretend = 0, frame = 16
 1860              		@ frame_needed = 1, uses_anonymous_args = 0
 1861 0000 80B5     		push	{r7, lr}
 1862              	.LCFI31:
 1863              		.cfi_def_cfa_offset 8
 1864              		.cfi_offset 7, -8
 1865              		.cfi_offset 14, -4
 1866 0002 86B0     		sub	sp, sp, #24
 1867              	.LCFI32:
 1868              		.cfi_def_cfa_offset 32
 1869 0004 02AF     		add	r7, sp, #8
 1870              	.LCFI33:
 1871              		.cfi_def_cfa 7, 24
 1872 0006 F860     		str	r0, [r7, #12]
 1873 0008 B960     		str	r1, [r7, #8]
 1874 000a 7A60     		str	r2, [r7, #4]
 1875 000c 3B60     		str	r3, [r7]
 857:App/STM32F4-Discovery/printf_my.c ****     #if USE_OSTREAM
 858:App/STM32F4-Discovery/printf_my.c ****         pb_ostream_t oStream = pb_ostream_from_buffer((uint8_t *)out, max_len);
 859:App/STM32F4-Discovery/printf_my.c ****     #endif
 860:App/STM32F4-Discovery/printf_my.c **** 
 861:App/STM32F4-Discovery/printf_my.c ****     return print (
 1876              		.loc 1 861 0
 1877 000e 07F10C03 		add	r3, r7, #12
 1878 0012 BA69     		ldr	r2, [r7, #24]
 1879 0014 0092     		str	r2, [sp]
 1880 0016 1846     		mov	r0, r3
 1881 0018 B968     		ldr	r1, [r7, #8]
 1882 001a 7A68     		ldr	r2, [r7, #4]
 1883 001c 3B68     		ldr	r3, [r7]
 1884 001e FFF7FEFF 		bl	print
 1885 0022 0346     		mov	r3, r0
 862:App/STM32F4-Discovery/printf_my.c ****                    #if USE_OSTREAM
 863:App/STM32F4-Discovery/printf_my.c ****                        &oStream,
 864:App/STM32F4-Discovery/printf_my.c ****                    #else
 865:App/STM32F4-Discovery/printf_my.c ****                        &out,
 866:App/STM32F4-Discovery/printf_my.c ****                    #endif
 867:App/STM32F4-Discovery/printf_my.c ****                    flags,
 868:App/STM32F4-Discovery/printf_my.c ****                    max_len, format, vargs);
 869:App/STM32F4-Discovery/printf_my.c **** }
 1886              		.loc 1 869 0
 1887 0024 1846     		mov	r0, r3
 1888 0026 1037     		adds	r7, r7, #16
 1889 0028 BD46     		mov	sp, r7
 1890              		@ sp needed
 1891 002a 80BD     		pop	{r7, pc}
 1892              		.cfi_endproc
 1893              	.LFE9:
 1895              		.section	.text.stringfnv,"ax",%progbits
 1896              		.align	2
 1897              		.global	stringfnv
 1898              		.thumb
 1899              		.thumb_func
 1901              	stringfnv:
 1902              	.LFB10:
 870:App/STM32F4-Discovery/printf_my.c **** 
 871:App/STM32F4-Discovery/printf_my.c **** //****************************************************************************
 872:App/STM32F4-Discovery/printf_my.c **** int stringfnv(char *out, unsigned int max_len, const char *format, va_list vargs)
 873:App/STM32F4-Discovery/printf_my.c **** {
 1903              		.loc 1 873 0
 1904              		.cfi_startproc
 1905              		@ args = 0, pretend = 0, frame = 16
 1906              		@ frame_needed = 1, uses_anonymous_args = 0
 1907 0000 80B5     		push	{r7, lr}
 1908              	.LCFI34:
 1909              		.cfi_def_cfa_offset 8
 1910              		.cfi_offset 7, -8
 1911              		.cfi_offset 14, -4
 1912 0002 86B0     		sub	sp, sp, #24
 1913              	.LCFI35:
 1914              		.cfi_def_cfa_offset 32
 1915 0004 02AF     		add	r7, sp, #8
 1916              	.LCFI36:
 1917              		.cfi_def_cfa 7, 24
 1918 0006 F860     		str	r0, [r7, #12]
 1919 0008 B960     		str	r1, [r7, #8]
 1920 000a 7A60     		str	r2, [r7, #4]
 1921 000c 3B60     		str	r3, [r7]
 874:App/STM32F4-Discovery/printf_my.c ****     return stringffnv(out, PRINTF2_FLAGS_NONE, max_len, format, vargs);
 1922              		.loc 1 874 0
 1923 000e 3B68     		ldr	r3, [r7]
 1924 0010 0093     		str	r3, [sp]
 1925 0012 F868     		ldr	r0, [r7, #12]
 1926 0014 0021     		movs	r1, #0
 1927 0016 BA68     		ldr	r2, [r7, #8]
 1928 0018 7B68     		ldr	r3, [r7, #4]
 1929 001a FFF7FEFF 		bl	stringffnv
 1930 001e 0346     		mov	r3, r0
 875:App/STM32F4-Discovery/printf_my.c **** }
 1931              		.loc 1 875 0
 1932 0020 1846     		mov	r0, r3
 1933 0022 1037     		adds	r7, r7, #16
 1934 0024 BD46     		mov	sp, r7
 1935              		@ sp needed
 1936 0026 80BD     		pop	{r7, pc}
 1937              		.cfi_endproc
 1938              	.LFE10:
 1940              		.section	.bss.local_bfr.4113,"aw",%nobits
 1941              		.align	2
 1944              	local_bfr.4113:
 1945 0000 00000000 		.space	128
 1945      00000000 
 1945      00000000 
 1945      00000000 
 1945      00000000 
 1946              		.text
 1947              	.Letext0:
 1948              		.file 2 "/Users/maticknap/ARM/gcc-arm-none-eabi-4_8-2014q2/lib/gcc/arm-none-eabi/4.8.4/include/std
 1949              		.file 3 "App/STM32F4-Discovery/printf_my.h"
 1950              		.file 4 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 printf_my.c
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:20     .text.printchar:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:24     .text.printchar:0000000000000000 printchar
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:97     .rodata.round_nums:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:100    .rodata.round_nums:0000000000000000 round_nums
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:124    .text.fltordbl2stri:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:128    .text.fltordbl2stri:0000000000000000 fltordbl2stri
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:465    .text.fltordbl2stri:0000000000000228 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:1944   .bss.local_bfr.4113:0000000000000000 local_bfr.4113
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:472    .text.prints:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:476    .text.prints:0000000000000000 prints
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:670    .text.printi:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:674    .text.printi:0000000000000000 printi
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:893    .rodata:0000000000000000 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:897    .text.print:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:901    .text.print:0000000000000000 print
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:1142   .text.print:0000000000000180 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:1175   .text.print:0000000000000204 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:1551   .text.print:0000000000000514 $d
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:1555   .text.print:0000000000000518 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:1626   .text.stringff:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:1631   .text.stringff:0000000000000000 stringff
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:1682   .text.stringf:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:1687   .text.stringf:0000000000000000 stringf
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:1738   .text.stringffn:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:1743   .text.stringffn:0000000000000000 stringffn
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:1794   .text.stringfn:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:1799   .text.stringfn:0000000000000000 stringfn
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:1850   .text.stringffnv:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:1855   .text.stringffnv:0000000000000000 stringffnv
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:1896   .text.stringfnv:0000000000000000 $t
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:1901   .text.stringfnv:0000000000000000 stringfnv
/var/folders/hq/s45830mn6w17j2ybbkgkrjk00000gn/T//ccDSR0kK.s:1941   .bss.local_bfr.4113:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
__aeabi_dcmplt
__aeabi_dadd
__aeabi_d2uiz
__aeabi_ui2d
__aeabi_dsub
__aeabi_dmul
strlen
